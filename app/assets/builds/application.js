// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x) {
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"aucuq":[function(require,module,exports) {
var Refresh = require('react-refresh/runtime');
Refresh.injectIntoGlobalHook(window);
window.$RefreshReg$ = function() {
};
window.$RefreshSig$ = function() {
    return function(type) {
        return type;
    };
};

},{"react-refresh/runtime":"7RKXB"}],"7RKXB":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react-refresh-runtime.development.js');

},{"./cjs/react-refresh-runtime.development.js":"lk2S5"}],"lk2S5":[function(require,module,exports) {
/** @license React v0.9.0
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 60103;
    var REACT_PORTAL_TYPE = 60106;
    var REACT_FRAGMENT_TYPE = 60107;
    var REACT_STRICT_MODE_TYPE = 60108;
    var REACT_PROFILER_TYPE = 60114;
    var REACT_PROVIDER_TYPE = 60109;
    var REACT_CONTEXT_TYPE = 60110;
    var REACT_FORWARD_REF_TYPE = 60112;
    var REACT_SUSPENSE_TYPE = 60113;
    var REACT_SUSPENSE_LIST_TYPE = 60120;
    var REACT_MEMO_TYPE = 60115;
    var REACT_LAZY_TYPE = 60116;
    var REACT_BLOCK_TYPE = 60121;
    var REACT_SERVER_BLOCK_TYPE = 60122;
    var REACT_FUNDAMENTAL_TYPE = 60117;
    var REACT_SCOPE_TYPE = 60119;
    var REACT_OPAQUE_ID_TYPE = 60128;
    var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
    var REACT_OFFSCREEN_TYPE = 60130;
    var REACT_LEGACY_HIDDEN_TYPE = 60131;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor('react.element');
        REACT_PORTAL_TYPE = symbolFor('react.portal');
        REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
        REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
        REACT_PROFILER_TYPE = symbolFor('react.profiler');
        REACT_PROVIDER_TYPE = symbolFor('react.provider');
        REACT_CONTEXT_TYPE = symbolFor('react.context');
        REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
        REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
        REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
        REACT_MEMO_TYPE = symbolFor('react.memo');
        REACT_LAZY_TYPE = symbolFor('react.lazy');
        REACT_BLOCK_TYPE = symbolFor('react.block');
        REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
        REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
        REACT_SCOPE_TYPE = symbolFor('react.scope');
        REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
        REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
        REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map; // We never remove these associations.
    // It's OK to reference families, but use WeakMap/Set for types.
    var allFamiliesByID = new Map();
    var allFamiliesByType = new PossiblyWeakMap();
    var allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families
    // that have actually been edited here. This keeps checks fast.
    // $FlowIssue
    var updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.
    // It is an array of [Family, NextType] tuples.
    var pendingUpdates = []; // This is injected by the renderer via DevTools global hook.
    var helpersByRendererID = new Map();
    var helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.
    var mountedRoots = new Set(); // If a root captures an error, we remember it so we can retry on edit.
    var failedRoots = new Set(); // In environments that support WeakMap, we also remember the last element for every root.
    // It needs to be weak because we do this even for roots that failed to mount.
    // If there is no WeakMap, we won't attempt to do retrying.
    // $FlowIssue
    var rootElements = typeof WeakMap === 'function' ? new WeakMap() : null;
    var isPerformingRefresh = false;
    function computeFullKey(signature) {
        if (signature.fullKey !== null) return signature.fullKey;
        var fullKey = signature.ownKey;
        var hooks;
        try {
            hooks = signature.getCustomHooks();
        } catch (err) {
            // This can happen in an edge case, e.g. if expression like Foo.useSomething
            // depends on Foo which is lazily initialized during rendering.
            // In that case just assume we'll have to remount.
            signature.forceReset = true;
            signature.fullKey = fullKey;
            return fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if (typeof hook !== 'function') {
                // Something's wrong. Assume we need to remount.
                signature.forceReset = true;
                signature.fullKey = fullKey;
                return fullKey;
            }
            var nestedHookSignature = allSignaturesByType.get(hook);
            if (nestedHookSignature === undefined) continue;
            var nestedHookKey = computeFullKey(nestedHookSignature);
            if (nestedHookSignature.forceReset) signature.forceReset = true;
            fullKey += '\n---\n' + nestedHookKey;
        }
        signature.fullKey = fullKey;
        return fullKey;
    }
    function haveEqualSignatures(prevType, nextType) {
        var prevSignature = allSignaturesByType.get(prevType);
        var nextSignature = allSignaturesByType.get(nextType);
        if (prevSignature === undefined && nextSignature === undefined) return true;
        if (prevSignature === undefined || nextSignature === undefined) return false;
        if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) return false;
        if (nextSignature.forceReset) return false;
        return true;
    }
    function isReactClass(type) {
        return type.prototype && type.prototype.isReactComponent;
    }
    function canPreserveStateBetween(prevType, nextType) {
        if (isReactClass(prevType) || isReactClass(nextType)) return false;
        if (haveEqualSignatures(prevType, nextType)) return true;
        return false;
    }
    function resolveFamily(type) {
        // Only check updated types to keep lookups fast.
        return updatedFamiliesByType.get(type);
    } // If we didn't care about IE11, we could use new Map/Set(iterable).
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function performReactRefresh() {
        if (pendingUpdates.length === 0) return null;
        if (isPerformingRefresh) return null;
        isPerformingRefresh = true;
        try {
            var staleFamilies = new Set();
            var updatedFamilies = new Set();
            var updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0], nextType = _ref[1];
                // Now that we got a real edit, we can create associations
                // that will be read by the React reconciler.
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(nextType, family);
                family.current = nextType; // Determine whether this should be a re-render or a re-mount.
                if (canPreserveStateBetween(prevType, nextType)) updatedFamilies.add(family);
                else staleFamilies.add(family);
            }); // TODO: rename these fields to something more meaningful.
            var update = {
                updatedFamilies: updatedFamilies,
                // Families that will re-render preserving state
                staleFamilies: staleFamilies // Families that will be remounted
            };
            helpersByRendererID.forEach(function(helpers) {
                // Even if there are no roots, set the handler on first update.
                // This ensures that if *new* roots are mounted, they'll use the resolve handler.
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = false;
            var firstError = null; // We snapshot maps and sets that are mutated during commits.
            // If we don't do this, there is a risk they will be mutated while
            // we iterate over them. For example, trying to recover a failed root
            // may cause another root to be added to the failed list -- an infinite loop.
            var failedRootsSnapshot = cloneSet(failedRoots);
            var mountedRootsSnapshot = cloneSet(mountedRoots);
            var helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
                failedRoots.has(root);
                if (rootElements === null) return;
                if (!rootElements.has(root)) return;
                var element = rootElements.get(root);
                try {
                    helpers.scheduleRoot(root, element);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = false;
        }
    }
    function register(type, id) {
        if (type === null) return;
        if (typeof type !== 'function' && typeof type !== 'object') return;
         // This can happen in an edge case, e.g. if we register
        // return value of a HOC but it returns a cached component.
        // Ignore anything but the first registration for each type.
        if (allFamiliesByType.has(type)) return;
         // Create family or remember to update it.
        // None of this bookkeeping affects reconciliation
        // until the first performReactRefresh() call above.
        var family = allFamiliesByID.get(id);
        if (family === undefined) {
            family = {
                current: type
            };
            allFamiliesByID.set(id, family);
        } else pendingUpdates.push([
            family,
            type
        ]);
        allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.
        if (typeof type === 'object' && type !== null) switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                register(type.render, id + '$render');
                break;
            case REACT_MEMO_TYPE:
                register(type.type, id + '$type');
                break;
        }
    }
    function setSignature(type, key) {
        var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;
        allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
    } // This is lazily called during first render for a type.
    // It captures Hook list at that time so inline requires don't break comparisons.
    function collectCustomHooksForSignature(type) {
        var signature = allSignaturesByType.get(type);
        if (signature !== undefined) computeFullKey(signature);
    }
    function getFamilyByID(id) {
        return allFamiliesByID.get(id);
    }
    function getFamilyByType(type) {
        return allFamiliesByType.get(type);
    }
    function findAffectedHostInstances(families) {
        var affectedInstances = new Set();
        mountedRoots.forEach(function(root) {
            var helpers = helpersByRoot.get(root);
            if (helpers === undefined) throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
            var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);
            instancesForRoot.forEach(function(inst) {
                affectedInstances.add(inst);
            });
        });
        return affectedInstances;
    }
    function injectIntoGlobalHook(globalObject) {
        // For React Native, the global hook will be set up by require('react-devtools-core').
        // That code will run before us. So we need to monkeypatch functions on existing hook.
        // For React Web, the global hook will be set up by the extension.
        // This will also run before us.
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook === undefined) {
            // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.
            // Note that in this case it's important that renderer code runs *after* this method call.
            // Otherwise, the renderer will think that there is no global hook, and won't do the injection.
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: true,
                inject: function(injected) {
                    return nextID++;
                },
                onScheduleFiberRoot: function(id, root, children) {
                },
                onCommitFiberRoot: function(id, root, maybePriorityLevel, didError) {
                },
                onCommitFiberUnmount: function() {
                }
            };
        } // Here, we just want to get a reference to scheduleRefresh.
        var oldInject = hook.inject;
        hook.inject = function(injected) {
            var id = oldInject.apply(this, arguments);
            if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
            return id;
        }; // Do the same for any already injected roots.
        // This is useful if ReactDOM has already been initialized.
        // https://github.com/facebook/react/issues/17626
        hook.renderers.forEach(function(injected, id) {
            if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
        }); // We also want to track currently mounted roots.
        var oldOnCommitFiberRoot = hook.onCommitFiberRoot;
        var oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {
        };
        hook.onScheduleFiberRoot = function(id, root, children) {
            if (!isPerformingRefresh) {
                // If it was intentionally scheduled, don't attempt to restore.
                // This includes intentionally scheduled unmounts.
                failedRoots.delete(root);
                if (rootElements !== null) rootElements.set(root, children);
            }
            return oldOnScheduleFiberRoot.apply(this, arguments);
        };
        hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
            var helpers = helpersByRendererID.get(id);
            if (helpers === undefined) return;
            helpersByRoot.set(root, helpers);
            var current = root.current;
            var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.
            // This logic is copy-pasted from similar logic in the DevTools backend.
            // If this breaks with some refactoring, you'll want to update DevTools too.
            if (alternate !== null) {
                var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null;
                var isMounted = current.memoizedState != null && current.memoizedState.element != null;
                if (!wasMounted && isMounted) {
                    // Mount a new root.
                    mountedRoots.add(root);
                    failedRoots.delete(root);
                } else if (wasMounted && isMounted) ;
                else if (wasMounted && !isMounted) {
                    // Unmount an existing root.
                    mountedRoots.delete(root);
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                    else helpersByRoot.delete(root);
                } else if (!wasMounted && !isMounted) {
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                }
            } else // Mount a new root.
            mountedRoots.add(root);
            return oldOnCommitFiberRoot.apply(this, arguments);
        };
    }
    function hasUnrecoverableErrors() {
        // TODO: delete this after removing dependency in RN.
        return false;
    } // Exposed for testing.
    function _getMountedRootCount() {
        return mountedRoots.size;
    } // This is a wrapper over more primitive functions for setting signature.
    // Signatures let us decide whether the Hook order has changed on refresh.
    //
    // This function is intended to be used as a transform target, e.g.:
    // var _s = createSignatureFunctionForTransform()
    //
    // function Hello() {
    //   const [foo, setFoo] = useState(0);
    //   const value = useCustomHook();
    //   _s(); /* Second call triggers collecting the custom Hook list.
    //          * This doesn't happen during the module evaluation because we
    //          * don't want to change the module order with inline requires.
    //          * Next calls are noops. */
    //   return <h1>Hi</h1>;
    // }
    //
    // /* First call specifies the signature: */
    // _s(
    //   Hello,
    //   'useState{[foo, setFoo]}(0)',
    //   () => [useCustomHook], /* Lazy to avoid triggering inline requires */
    // );
    function createSignatureFunctionForTransform() {
        // We'll fill in the signature in two steps.
        // First, we'll know the signature itself. This happens outside the component.
        // Then, we'll know the references to custom Hooks. This happens inside the component.
        // After that, the returned function will be a fast path no-op.
        var status = 'needsSignature';
        var savedType;
        var hasCustomHooks;
        return function(type, key, forceReset, getCustomHooks) {
            switch(status){
                case 'needsSignature':
                    if (type !== undefined) {
                        // If we received an argument, this is the initial registration call.
                        savedType = type;
                        hasCustomHooks = typeof getCustomHooks === 'function';
                        setSignature(type, key, forceReset, getCustomHooks); // The next call we expect is from inside a function, to fill in the custom Hooks.
                        status = 'needsCustomHooks';
                    }
                    break;
                case 'needsCustomHooks':
                    if (hasCustomHooks) collectCustomHooksForSignature(savedType);
                    status = 'resolved';
                    break;
            }
            return type;
        };
    }
    function isLikelyComponentType(type) {
        switch(typeof type){
            case 'function':
                // First, deal with classes.
                if (type.prototype != null) {
                    if (type.prototype.isReactComponent) // React class.
                    return true;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (ownNames.length > 1 || ownNames[0] !== 'constructor') // This looks like a class.
                    return false;
                     // eslint-disable-next-line no-proto
                    if (type.prototype.__proto__ !== Object.prototype) // It has a superclass.
                    return false;
                     // Pass through.
                // This looks like a regular function with empty prototype.
                } // For plain functions and arrows, use name as a heuristic.
                var name = type.name || type.displayName;
                return typeof name === 'string' && /^[A-Z]/.test(name);
            case 'object':
                if (type != null) switch(type.$$typeof){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        // Definitely React components.
                        return true;
                    default:
                        return false;
                }
                return false;
            default:
                return false;
        }
    }
    exports._getMountedRootCount = _getMountedRootCount;
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = createSignatureFunctionForTransform;
    exports.findAffectedHostInstances = findAffectedHostInstances;
    exports.getFamilyByID = getFamilyByID;
    exports.getFamilyByType = getFamilyByType;
    exports.hasUnrecoverableErrors = hasUnrecoverableErrors;
    exports.injectIntoGlobalHook = injectIntoGlobalHook;
    exports.isLikelyComponentType = isLikelyComponentType;
    exports.performReactRefresh = performReactRefresh;
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"53L52":[function(require,module,exports) {
var HMR_HOST = null;
var HMR_PORT = 1235;
var HMR_SECURE = false;
var HMR_ENV_HASH = "1293bae57ac04db4";
module.bundle.HMR_BUNDLE_ID = "db6468e5839db933";
"use strict";
function _createForOfIteratorHelper(o, allowArrayLike) {
    var it;
    if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i = 0;
            var F = function F() {
            };
            return {
                s: F,
                n: function n() {
                    if (i >= o.length) return {
                        done: true
                    };
                    return {
                        done: false,
                        value: o[i++]
                    };
                },
                e: function e(_e) {
                    throw _e;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {
        s: function s() {
            it = o[Symbol.iterator]();
        },
        n: function n() {
            var step = it.next();
            normalCompletion = step.done;
            return step;
        },
        e: function e(_e2) {
            didErr = true;
            err = _e2;
        },
        f: function f() {
            try {
                if (!normalCompletion && it.return != null) it.return();
            } finally{
                if (didErr) throw err;
            }
        }
    };
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: mixed;
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData,
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function accept(fn) {
            this._acceptCallbacks.push(fn || function() {
            });
        },
        dispose: function dispose(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, acceptedAssets, assetsToAccept;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || location.port;
} // eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';
    var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe
    ws.onmessage = function(event) {
        checkedAssets = {
        };
        acceptedAssets = {
        };
        assetsToAccept = [];
        var data = JSON.parse(event.data);
        if (data.type === 'update') {
            // Remove error overlay if there is one
            if (typeof document !== 'undefined') removeErrorOverlay();
            var assets = data.assets.filter(function(asset) {
                return asset.envHash === HMR_ENV_HASH;
            }); // Handle HMR Update
            var handled = assets.every(function(asset) {
                return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                assets.forEach(function(asset) {
                    hmrApply(module.bundle.root, asset);
                });
                for(var i = 0; i < assetsToAccept.length; i++){
                    var id = assetsToAccept[i][1];
                    if (!acceptedAssets[id]) hmrAcceptRun(assetsToAccept[i][0], id);
                }
            } else window.location.reload();
        }
        if (data.type === 'error') {
            // Log parcel errors to console
            var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi), _step;
            try {
                for(_iterator.s(); !(_step = _iterator.n()).done;){
                    var ansiDiagnostic = _step.value;
                    var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                    console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
                }
            } catch (err) {
                _iterator.e(err);
            } finally{
                _iterator.f();
            }
            if (typeof document !== 'undefined') {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    ws.onerror = function(e) {
        console.error(e.message);
    };
    ws.onclose = function() {
        console.warn('[parcel] 🚨 Connection to the HMR server was lost');
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log('[parcel] ✨ Error resolved');
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    var errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    var _iterator2 = _createForOfIteratorHelper(diagnostics), _step2;
    try {
        for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
            var diagnostic = _step2.value;
            var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;
            errorHTML += "\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          \uD83D\uDEA8 ".concat(diagnostic.message, "\n        </div>\n        <pre>").concat(stack, "</pre>\n        <div>\n          ").concat(diagnostic.hints.map(function(hint) {
                return '<div>💡 ' + hint + '</div>';
            }).join(''), "\n        </div>\n        ").concat(diagnostic.documentation ? "<div>\uD83D\uDCDD <a style=\"color: violet\" href=\"".concat(diagnostic.documentation, "\" target=\"_blank\">Learn more</a></div>") : '', "\n      </div>\n    ");
        }
    } catch (err) {
        _iterator2.e(err);
    } finally{
        _iterator2.f();
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrApply(bundle, asset) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') reloadCSS();
    else if (asset.type === 'js') {
        var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            var fn = new Function('require', 'module', 'exports', asset.output);
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrAcceptCheck(bundle, id, depsByBundle) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToAccept.push([
        bundle,
        id
    ]);
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) return true;
    var parents = getParents(module.bundle.root, id); // If no parents, the asset is new. Prevent reloading the page.
    if (!parents.length) return true;
    return parents.some(function(v) {
        return hmrAcceptCheck(v[0], v[1], null);
    });
}
function hmrAcceptRun(bundle, id) {
    var cached = bundle.cache[id];
    bundle.hotData = {
    };
    if (cached && cached.hot) cached.hot.data = bundle.hotData;
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData);
    });
    delete bundle.cache[id];
    bundle(id);
    cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) // $FlowFixMe[method-unbinding]
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
    });
    acceptedAssets[id] = true;
}

},{}],"6QvhU":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$b3e2 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$b3e2.prelude(module);

try {
var _jsxRuntime = require("react/jsx-runtime");
var _reactDom = require("react-dom");
var _inertiaReact = require("@inertiajs/inertia-react");
var _ = require(".././Pages/*");
var _stylesCss = require("@shopify/polaris/build/esm/styles.css");
_inertiaReact.createInertiaApp({
    resolve: (name)=>_[`${name}.js`]
    ,
    setup ({ el , App , props  }) {
        _reactDom.render(/*#__PURE__*/ _jsxRuntime.jsx(App, {
            ...props,
            __source: {
                fileName: "app/javascript/application.js",
                lineNumber: 10,
                columnNumber: 12
            },
            __self: this
        }), el);
    }
});

  $parcel$ReactRefreshHelpers$b3e2.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react-dom":"jVjHr","@inertiajs/inertia-react":"fMyel","react/jsx-runtime":"bWSzr","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7Hnvg",".././Pages/*":"9mZXK","@shopify/polaris/build/esm/styles.css":"i5ZKj"}],"jVjHr":[function(require,module,exports) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require('./cjs/react-dom.development.js');

},{"./cjs/react-dom.development.js":"7rIdH"}],"7rIdH":[function(require,module,exports) {
/** @license React v17.0.2
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    var React = require('react');
    var _assign = require('object-assign');
    var Scheduler = require('scheduler');
    var tracing = require('scheduler/tracing');
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        printWarning('warn', format, args);
    }
    function error1(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning('error', format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        }
        var argsWithFormat = args.map(function(item) {
            return '' + item;
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    if (!React) throw Error("ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.");
    var FunctionComponent = 0;
    var ClassComponent = 1;
    var IndeterminateComponent = 2; // Before we know whether it is function or class
    var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
    var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
    var HostComponent = 5;
    var HostText = 6;
    var Fragment = 7;
    var Mode = 8;
    var ContextConsumer = 9;
    var ContextProvider = 10;
    var ForwardRef = 11;
    var Profiler = 12;
    var SuspenseComponent = 13;
    var MemoComponent = 14;
    var SimpleMemoComponent = 15;
    var LazyComponent = 16;
    var IncompleteClassComponent = 17;
    var DehydratedFragment = 18;
    var SuspenseListComponent = 19;
    var FundamentalComponent = 20;
    var ScopeComponent = 21;
    var Block = 22;
    var OffscreenComponent = 23;
    var LegacyHiddenComponent = 24;
    // Filter certain DOM attributes (e.g. src, href) if their values are empty strings.
    var enableProfilerTimer = true; // Record durations for commit and passive effects phases.
    var enableFundamentalAPI = false; // Experimental Scope support.
    var enableNewReconciler = false; // Errors that are thrown while unmounting (or after in the case of passive effects)
    var warnAboutStringRefs = false;
    var allNativeEvents = new Set();
    /**
 * Mapping from registration name to event name
 */ var registrationNameDependencies1 = {
    };
    /**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */ var possibleRegistrationNames1 = {
    }; // Trust the developer to only use possibleRegistrationNames in true
    function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies);
        registerDirectEvent(registrationName + 'Capture', dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
        if (registrationNameDependencies1[registrationName]) error1("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
        registrationNameDependencies1[registrationName] = dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames1[lowerCasedName] = registrationName;
        if (registrationName === 'onDoubleClick') possibleRegistrationNames1.ondblclick = registrationName;
        for(var i = 0; i < dependencies.length; i++)allNativeEvents.add(dependencies[i]);
    }
    var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');
    // A reserved attribute.
    // It is handled by React separately and shouldn't be written to the DOM.
    var RESERVED = 0; // A simple string attribute.
    // Attributes that aren't in the filter are presumed to have this type.
    var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
    // "enumerated" attributes with "true" and "false" as possible values.
    // When true, it should be set to a "true" string.
    // When false, it should be set to a "false" string.
    var BOOLEANISH_STRING = 2; // A real boolean attribute.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    // For any other value, should be present with that value.
    var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
    // When falsy, it should be removed.
    var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
    // When falsy, it should be removed.
    var POSITIVE_NUMERIC = 6;
    /* eslint-disable max-len */ var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    /* eslint-enable max-len */ var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var illegalAttributeNameCache = {
    };
    var validatedAttributeNameCache = {
    };
    function isAttributeNameSafe(attributeName) {
        if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) return true;
        if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return false;
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
        }
        illegalAttributeNameCache[attributeName] = true;
        error1('Invalid attribute name: `%s`', attributeName);
        return false;
    }
    function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null) return propertyInfo.type === RESERVED;
        if (isCustomComponentTag) return false;
        if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) return true;
        return false;
    }
    function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED) return false;
        switch(typeof value){
            case 'function':
            case 'symbol':
                // eslint-disable-line
                return true;
            case 'boolean':
                if (isCustomComponentTag) return false;
                if (propertyInfo !== null) return !propertyInfo.acceptsBooleans;
                else {
                    var prefix = name.toLowerCase().slice(0, 5);
                    return prefix !== 'data-' && prefix !== 'aria-';
                }
            default:
                return false;
        }
    }
    function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
        if (value === null || typeof value === 'undefined') return true;
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) return true;
        if (isCustomComponentTag) return false;
        if (propertyInfo !== null) switch(propertyInfo.type){
            case BOOLEAN:
                return !value;
            case OVERLOADED_BOOLEAN:
                return value === false;
            case NUMERIC:
                return isNaN(value);
            case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
        }
        return false;
    }
    function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
    }
    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
        this.attributeName = attributeName;
        this.attributeNamespace = attributeNamespace;
        this.mustUseProperty = mustUseProperty;
        this.propertyName = name;
        this.type = type;
        this.sanitizeURL = sanitizeURL;
        this.removeEmptyString = removeEmptyString;
    } // When adding attributes to this list, be sure to also add them to
    // the `possibleStandardNames` module to ensure casing and incorrect
    // name warnings.
    var properties = {
    }; // These props are reserved by React. They shouldn't be written to the DOM.
    var reservedProps = [
        'children',
        'dangerouslySetInnerHTML',
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        'defaultValue',
        'defaultChecked',
        'innerHTML',
        'suppressContentEditableWarning',
        'suppressHydrationWarning',
        'style'
    ];
    reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
    }); // A few React string attributes have a different name.
    // This is a mapping from React prop names to the attribute names.
    [
        [
            'acceptCharset',
            'accept-charset'
        ],
        [
            'className',
            'class'
        ],
        [
            'htmlFor',
            'for'
        ],
        [
            'httpEquiv',
            'http-equiv'
        ]
    ].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // These are "enumerated" HTML attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    [
        'contentEditable',
        'draggable',
        'spellCheck',
        'value'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
    }); // These are "enumerated" SVG attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    // Since these are SVG attributes, their attribute names are case-sensitive.
    [
        'autoReverse',
        'externalResourcesRequired',
        'focusable',
        'preserveAlpha'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
    }); // These are HTML boolean attributes.
    [
        'allowFullScreen',
        'async',
        // on the client side because the browsers are inconsistent. Instead we call focus().
        'autoFocus',
        'autoPlay',
        'controls',
        'default',
        'defer',
        'disabled',
        'disablePictureInPicture',
        'disableRemotePlayback',
        'formNoValidate',
        'hidden',
        'loop',
        'noModule',
        'noValidate',
        'open',
        'playsInline',
        'readOnly',
        'required',
        'reversed',
        'scoped',
        'seamless',
        'itemScope'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
    }); // These are the few React props that we set as DOM properties
    // rather than attributes. These are all booleans.
    [
        'checked',
        // disabled with `removeAttribute`. We have special logic for handling this.
        'multiple',
        'muted',
        'selected' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
    }); // These are HTML attributes that are "overloaded booleans": they behave like
    // booleans, but can also accept a string value.
    [
        'capture',
        'download' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
    }); // These are HTML attributes that must be positive numbers.
    [
        'cols',
        'rows',
        'size',
        'span' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
    }); // These are HTML attributes that must be numbers.
    [
        'rowSpan',
        'start'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
    });
    var CAMELIZE = /[\-\:]([a-z])/g;
    var capitalize = function(token) {
        return token[1].toUpperCase();
    }; // This is a list of all SVG attributes that need special casing, namespacing,
    // or boolean value assignment. Regular attributes that just accept strings
    // and have the same names are omitted, just like in the HTML attribute filter.
    // Some of these attributes can be hard to find. This list was created by
    // scraping the MDN documentation.
    [
        'accent-height',
        'alignment-baseline',
        'arabic-form',
        'baseline-shift',
        'cap-height',
        'clip-path',
        'clip-rule',
        'color-interpolation',
        'color-interpolation-filters',
        'color-profile',
        'color-rendering',
        'dominant-baseline',
        'enable-background',
        'fill-opacity',
        'fill-rule',
        'flood-color',
        'flood-opacity',
        'font-family',
        'font-size',
        'font-size-adjust',
        'font-stretch',
        'font-style',
        'font-variant',
        'font-weight',
        'glyph-name',
        'glyph-orientation-horizontal',
        'glyph-orientation-vertical',
        'horiz-adv-x',
        'horiz-origin-x',
        'image-rendering',
        'letter-spacing',
        'lighting-color',
        'marker-end',
        'marker-mid',
        'marker-start',
        'overline-position',
        'overline-thickness',
        'paint-order',
        'panose-1',
        'pointer-events',
        'rendering-intent',
        'shape-rendering',
        'stop-color',
        'stop-opacity',
        'strikethrough-position',
        'strikethrough-thickness',
        'stroke-dasharray',
        'stroke-dashoffset',
        'stroke-linecap',
        'stroke-linejoin',
        'stroke-miterlimit',
        'stroke-opacity',
        'stroke-width',
        'text-anchor',
        'text-decoration',
        'text-rendering',
        'underline-position',
        'underline-thickness',
        'unicode-bidi',
        'unicode-range',
        'units-per-em',
        'v-alphabetic',
        'v-hanging',
        'v-ideographic',
        'v-mathematical',
        'vector-effect',
        'vert-adv-y',
        'vert-origin-x',
        'vert-origin-y',
        'word-spacing',
        'writing-mode',
        'xmlns:xlink',
        'x-height' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // String SVG attributes with the xlink namespace.
    [
        'xlink:actuate',
        'xlink:arcrole',
        'xlink:role',
        'xlink:show',
        'xlink:title',
        'xlink:type' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, 'http://www.w3.org/1999/xlink', false, false);
    }); // String SVG attributes with the xml namespace.
    [
        'xml:base',
        'xml:lang',
        'xml:space' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, 'http://www.w3.org/XML/1998/namespace', false, false);
    }); // These attribute exists both in HTML and SVG.
    // The attribute name is case-sensitive in SVG so we can't just use
    // the React name like we do for attributes that exist only in HTML.
    [
        'tabIndex',
        'crossOrigin'
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
    }); // These attributes accept URLs. These must not allow javascript: URLS.
    // These will also need to accept Trusted Types object in the future.
    var xlinkHref = 'xlinkHref';
    properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, 'xlink:href', 'http://www.w3.org/1999/xlink', true, false);
    [
        'src',
        'href',
        'action',
        'formAction'
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
    });
    // and any newline or tab are filtered out as if they're not part of the URL.
    // https://url.spec.whatwg.org/#url-parsing
    // Tab or newline are defined as \r\n\t:
    // https://infra.spec.whatwg.org/#ascii-tab-or-newline
    // A C0 control is a code point in the range \u0000 NULL to \u001F
    // INFORMATION SEPARATOR ONE, inclusive:
    // https://infra.spec.whatwg.org/#c0-control-or-space
    /* eslint-disable max-len */ var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
    var didWarn = false;
    function sanitizeURL1(url) {
        if (!didWarn && isJavaScriptProtocol.test(url)) {
            didWarn = true;
            error1("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
        }
    }
    /**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */ function getValueForProperty(node, name, expected, propertyInfo) {
        if (propertyInfo.mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            return node[propertyName];
        } else {
            if (propertyInfo.sanitizeURL) // If we haven't fully disabled javascript: URLs, and if
            // the hydration is successful of a javascript: URL, we
            // still want to warn on the client.
            sanitizeURL1('' + expected);
            var attributeName = propertyInfo.attributeName;
            var stringValue = null;
            if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                    var value = node.getAttribute(attributeName);
                    if (value === '') return true;
                    if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return value;
                    if (value === '' + expected) return expected;
                    return value;
                }
            } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) // We had an attribute but shouldn't have had one, so read it
                // for the error message.
                return node.getAttribute(attributeName);
                if (propertyInfo.type === BOOLEAN) // If this was a boolean, it doesn't matter what the value is
                // the fact that we have it is the same as the expected.
                return expected;
                 // Even if this property uses a namespace we use getAttribute
                // because we assume its namespaced name is the same as our config.
                // To use getAttributeNS we need the local name which we don't have
                // in our config atm.
                stringValue = node.getAttribute(attributeName);
            }
            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return stringValue === null ? expected : stringValue;
            else if (stringValue === '' + expected) return expected;
            else return stringValue;
        }
    }
    /**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */ function getValueForAttribute(node, name, expected) {
        if (!isAttributeNameSafe(name)) return;
         // If the object is an opaque reference ID, it's expected that
        // the next prop is different than the server value, so just return
        // expected
        if (isOpaqueHydratingObject(expected)) return expected;
        if (!node.hasAttribute(name)) return expected === undefined ? undefined : null;
        var value = node.getAttribute(name);
        if (value === '' + expected) return expected;
        return value;
    }
    /**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */ function setValueForProperty(node, name, value, isCustomComponentTag) {
        var propertyInfo = getPropertyInfo(name);
        if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) return;
        if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) value = null;
         // If the prop isn't in the special list, treat it as a simple attribute.
        if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
                var _attributeName = name;
                if (value === null) node.removeAttribute(_attributeName);
                else node.setAttribute(_attributeName, '' + value);
            }
            return;
        }
        var mustUseProperty = propertyInfo.mustUseProperty;
        if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
                var type = propertyInfo.type;
                node[propertyName] = type === BOOLEAN ? false : '';
            } else // Contrary to `setAttribute`, object properties are properly
            // `toString`ed by IE8/9.
            node[propertyName] = value;
            return;
        } // The rest are treated as attributes with special cases.
        var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
        if (value === null) node.removeAttribute(attributeName);
        else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) // If attribute type is boolean, we know for sure it won't be an execution sink
            // and we won't require Trusted Type here.
            attributeValue = '';
            else {
                attributeValue = '' + value;
                if (propertyInfo.sanitizeURL) sanitizeURL1(attributeValue.toString());
            }
            if (attributeNamespace) node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            else node.setAttribute(attributeName, attributeValue);
        }
    }
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 60103;
    var REACT_PORTAL_TYPE = 60106;
    var REACT_FRAGMENT_TYPE = 60107;
    var REACT_STRICT_MODE_TYPE = 60108;
    var REACT_PROFILER_TYPE = 60114;
    var REACT_PROVIDER_TYPE = 60109;
    var REACT_CONTEXT_TYPE = 60110;
    var REACT_FORWARD_REF_TYPE = 60112;
    var REACT_SUSPENSE_TYPE = 60113;
    var REACT_SUSPENSE_LIST_TYPE = 60120;
    var REACT_MEMO_TYPE = 60115;
    var REACT_LAZY_TYPE = 60116;
    var REACT_BLOCK_TYPE = 60121;
    var REACT_SERVER_BLOCK_TYPE = 60122;
    var REACT_FUNDAMENTAL_TYPE = 60117;
    var REACT_SCOPE_TYPE = 60119;
    var REACT_OPAQUE_ID_TYPE = 60128;
    var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
    var REACT_OFFSCREEN_TYPE = 60130;
    var REACT_LEGACY_HIDDEN_TYPE = 60131;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor('react.element');
        REACT_PORTAL_TYPE = symbolFor('react.portal');
        REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
        REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
        REACT_PROFILER_TYPE = symbolFor('react.profiler');
        REACT_PROVIDER_TYPE = symbolFor('react.provider');
        REACT_CONTEXT_TYPE = symbolFor('react.context');
        REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
        REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
        REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
        REACT_MEMO_TYPE = symbolFor('react.memo');
        REACT_LAZY_TYPE = symbolFor('react.lazy');
        REACT_BLOCK_TYPE = symbolFor('react.block');
        REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
        REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
        REACT_SCOPE_TYPE = symbolFor('react.scope');
        REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
        REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
        REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }
    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {
    }
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: _assign({
                }, props, {
                    value: prevLog
                }),
                info: _assign({
                }, props, {
                    value: prevInfo
                }),
                warn: _assign({
                }, props, {
                    value: prevWarn
                }),
                error: _assign({
                }, props, {
                    value: prevError
                }),
                group: _assign({
                }, props, {
                    value: prevGroup
                }),
                groupCollapsed: _assign({
                }, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: _assign({
                }, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error1("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher1 = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix1;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix1 === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix1 = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix1 + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher1.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher1.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0)
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher1.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, true);
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_BLOCK_TYPE:
                return describeFunctionComponentFrame(type._render);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
        }
        return '';
    }
    function describeFiber(fiber) {
        var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
        var source = fiber._debugSource;
        switch(fiber.tag){
            case HostComponent:
                return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
                return describeBuiltInComponentFrame('Lazy');
            case SuspenseComponent:
                return describeBuiltInComponentFrame('Suspense');
            case SuspenseListComponent:
                return describeBuiltInComponentFrame('SuspenseList');
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
                return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
                return describeFunctionComponentFrame(fiber.type.render);
            case Block:
                return describeFunctionComponentFrame(fiber.type._render);
            case ClassComponent:
                return describeClassComponentFrame(fiber.type);
            default:
                return '';
        }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
        try {
            var info = '';
            var node = workInProgress;
            do {
                info += describeFiber(node);
                node = node.return;
            }while (node)
            return info;
        } catch (x) {
            return '\nError generating stack: ' + x.message + '\n' + x.stack;
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || '';
        return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }
    function getContextName(type) {
        return type.displayName || 'Context';
    }
    function getComponentName(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error1("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                return getComponentName(type.type);
            case REACT_BLOCK_TYPE:
                return getComponentName(type._render);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentName(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var ReactDebugCurrentFrame1 = ReactSharedInternals.ReactDebugCurrentFrame;
    var current1 = null;
    var isRendering = false;
    function getCurrentFiberOwnerNameInDevOrNull() {
        if (current1 === null) return null;
        var owner = current1._debugOwner;
        if (owner !== null && typeof owner !== 'undefined') return getComponentName(owner.type);
        return null;
    }
    function getCurrentFiberStackInDev() {
        if (current1 === null) return '';
         // Safe because if current fiber exists, we are reconciling,
        // and it is guaranteed to be the work-in-progress version.
        return getStackByFiberInDevAndProd(current1);
    }
    function resetCurrentFiber() {
        ReactDebugCurrentFrame1.getCurrentStack = null;
        current1 = null;
        isRendering = false;
    }
    function setCurrentFiber(fiber) {
        ReactDebugCurrentFrame1.getCurrentStack = getCurrentFiberStackInDev;
        current1 = fiber;
        isRendering = false;
    }
    function setIsRendering(rendering) {
        isRendering = rendering;
    }
    function getIsRendering() {
        return isRendering;
    }
    // Flow does not allow string concatenation of most non-string types. To work
    // around this limitation, we use an opaque type that can only be obtained by
    // passing the value through getToStringValue first.
    function toString(value) {
        return '' + value;
    }
    function getToStringValue(value) {
        switch(typeof value){
            case 'boolean':
            case 'number':
            case 'object':
            case 'string':
            case 'undefined':
                return value;
            default:
                // function, symbol are assigned as empty strings
                return '';
        }
    }
    var hasReadOnlyValue = {
        button: true,
        checkbox: true,
        image: true,
        hidden: true,
        radio: true,
        reset: true,
        submit: true
    };
    function checkControlledValueProps(tagName, props) {
        if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) error1("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
        if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) error1("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function isCheckable(elem) {
        var type = elem.type;
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
    }
    function getTracker(node) {
        return node._valueTracker;
    }
    function detachTracker(node) {
        node._valueTracker = null;
    }
    function getValueFromNode(node) {
        var value = '';
        if (!node) return value;
        if (isCheckable(node)) value = node.checked ? 'true' : 'false';
        else value = node.value;
        return value;
    }
    function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? 'checked' : 'value';
        var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
        // and don't track value will cause over reporting of changes,
        // but it's better then a hard failure
        // (needed for certain tests that spyOn input values and Safari)
        if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') return;
        var get = descriptor.get, set = descriptor.set;
        Object.defineProperty(node, valueField, {
            configurable: true,
            get: function() {
                return get.call(this);
            },
            set: function(value) {
                currentValue = '' + value;
                set.call(this, value);
            }
        }); // We could've passed this the first time
        // but it triggers a bug in IE11 and Edge 14/15.
        // Calling defineProperty() again should be equivalent.
        // https://github.com/facebook/react/issues/11768
        Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
        });
        var tracker = {
            getValue: function() {
                return currentValue;
            },
            setValue: function(value) {
                currentValue = '' + value;
            },
            stopTracking: function() {
                detachTracker(node);
                delete node[valueField];
            }
        };
        return tracker;
    }
    function track(node) {
        if (getTracker(node)) return;
         // TODO: Once it's just Fiber we can move this to node._wrapperState
        node._valueTracker = trackValueOnNode(node);
    }
    function updateValueIfChanged(node) {
        if (!node) return false;
        var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
        // that trying again will succeed
        if (!tracker) return true;
        var lastValue = tracker.getValue();
        var nextValue = getValueFromNode(node);
        if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
        }
        return false;
    }
    function getActiveElement(doc) {
        doc = doc || (typeof document !== 'undefined' ? document : undefined);
        if (typeof doc === 'undefined') return null;
        try {
            return doc.activeElement || doc.body;
        } catch (e) {
            return doc.body;
        }
    }
    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;
    function isControlled(props) {
        var usesChecked = props.type === 'checkbox' || props.type === 'radio';
        return usesChecked ? props.checked != null : props.value != null;
    }
    /**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */ function getHostProps(element, props) {
        var node = element;
        var checked = props.checked;
        var hostProps = _assign({
        }, props, {
            defaultChecked: undefined,
            defaultValue: undefined,
            value: undefined,
            checked: checked != null ? checked : node._wrapperState.initialChecked
        });
        return hostProps;
    }
    function initWrapperState(element, props) {
        checkControlledValueProps('input', props);
        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
            error1("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
            didWarnCheckedDefaultChecked = true;
        }
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
            error1("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
            didWarnValueDefaultValue = true;
        }
        var node = element;
        var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
        node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
        };
    }
    function updateChecked(element, props) {
        var node = element;
        var checked = props.checked;
        if (checked != null) setValueForProperty(node, 'checked', checked, false);
    }
    function updateWrapper(element, props) {
        var node = element;
        var controlled = isControlled(props);
        if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
            error1("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnUncontrolledToControlled = true;
        }
        if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
            error1("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnControlledToUncontrolled = true;
        }
        updateChecked(element, props);
        var value = getToStringValue(props.value);
        var type = props.type;
        if (value != null) {
            if (type === 'number') {
                if (value === 0 && node.value === '' || // eslint-disable-next-line
                node.value != value) node.value = toString(value);
            } else if (node.value !== toString(value)) node.value = toString(value);
        } else if (type === 'submit' || type === 'reset') {
            // Submit/reset inputs need the attribute removed completely to avoid
            // blank-text buttons.
            node.removeAttribute('value');
            return;
        }
        // When syncing the value attribute, the value comes from a cascade of
        // properties:
        //  1. The value React property
        //  2. The defaultValue React property
        //  3. Otherwise there should be no change
        if (props.hasOwnProperty('value')) setDefaultValue(node, props.type, value);
        else if (props.hasOwnProperty('defaultValue')) setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        // When syncing the checked attribute, it only changes when it needs
        // to be removed, such as transitioning from a checkbox into a text input
        if (props.checked == null && props.defaultChecked != null) node.defaultChecked = !!props.defaultChecked;
    }
    function postMountWrapper(element, props, isHydrating) {
        var node = element; // Do not assign value if it is already set. This prevents user text input
        // from being lost during SSR hydration.
        if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
            var type = props.type;
            var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
            // default value provided by the browser. See: #12872
            if (isButton && (props.value === undefined || props.value === null)) return;
            var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
            // from being lost during SSR hydration.
            if (!isHydrating) // When syncing the value attribute, the value property should use
            // the wrapperState._initialValue property. This uses:
            //
            //   1. The value React property when present
            //   2. The defaultValue React property when present
            //   3. An empty string
            {
                if (initialValue !== node.value) node.value = initialValue;
            }
            // Otherwise, the value attribute is synchronized to the property,
            // so we assign defaultValue to the same thing as the value property
            // assignment step above.
            node.defaultValue = initialValue;
        } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
        // this is needed to work around a chrome bug where setting defaultChecked
        // will sometimes influence the value of checked (even after detachment).
        // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
        // We need to temporarily unset name to avoid disrupting radio button groups.
        var name = node.name;
        if (name !== '') node.name = '';
        // When syncing the checked attribute, both the checked property and
        // attribute are assigned at the same time using defaultChecked. This uses:
        //
        //   1. The checked React property when present
        //   2. The defaultChecked React property when present
        //   3. Otherwise, false
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !!node._wrapperState.initialChecked;
        if (name !== '') node.name = name;
    }
    function restoreControlledState(element, props) {
        var node = element;
        updateWrapper(node, props);
        updateNamedCousins(node, props);
    }
    function updateNamedCousins(rootNode, props) {
        var name = props.name;
        if (props.type === 'radio' && name != null) {
            var queryRoot = rootNode;
            while(queryRoot.parentNode)queryRoot = queryRoot.parentNode;
             // If `rootNode.form` was non-null, then we could try `form.elements`,
            // but that sometimes behaves strangely in IE8. We could also try using
            // `form.getElementsByName`, but that will only return direct children
            // and won't include inputs that use the HTML5 `form=` attribute. Since
            // the input might not even be in a form. It might not even be in the
            // document. Let's just use the local `querySelectorAll` to ensure we don't
            // miss anything.
            var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
            for(var i = 0; i < group.length; i++){
                var otherNode = group[i];
                if (otherNode === rootNode || otherNode.form !== rootNode.form) continue;
                 // This will throw if radio buttons rendered by different copies of React
                // and the same name are rendered into the same form (same as #1939).
                // That's probably okay; we don't support it just as we don't support
                // mixing React radio buttons with non-React ones.
                var otherProps = getFiberCurrentPropsFromNode(otherNode);
                if (!otherProps) throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                 // We need update the tracked value on the named cousin since the value
                // was changed but the input saw no event or value set
                updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
                // was previously checked to update will cause it to be come re-checked
                // as appropriate.
                updateWrapper(otherNode, otherProps);
            }
        }
    } // In Chrome, assigning defaultValue to certain input types triggers input validation.
    // For number inputs, the display value loses trailing decimal points. For email inputs,
    // Chrome raises "The specified value <x> is not a valid email address".
    //
    // Here we check to see if the defaultValue has actually changed, avoiding these problems
    // when the user is inputting text
    //
    // https://github.com/facebook/react/issues/7253
    function setDefaultValue(node, type, value) {
        if (type !== 'number' || getActiveElement(node.ownerDocument) !== node) {
            if (value == null) node.defaultValue = toString(node._wrapperState.initialValue);
            else if (node.defaultValue !== toString(value)) node.defaultValue = toString(value);
        }
    }
    var didWarnSelectedSetOnOption = false;
    var didWarnInvalidChild = false;
    function flattenChildren(children) {
        var content = ''; // Flatten children. We'll warn if they are invalid
        // during validateProps() which runs for hydration too.
        // Note that this would throw on non-element objects.
        // Elements are stringified (which is normally irrelevant
        // but matters for <fbt>).
        React.Children.forEach(children, function(child) {
            if (child == null) return;
            content += child; // Note: we don't warn about invalid children here.
        // Instead, this is done separately below so that
        // it happens during the hydration code path too.
        });
        return content;
    }
    /**
 * Implements an <option> host component that warns when `selected` is set.
 */ function validateProps(element, props) {
        // This mirrors the code path above, but runs for hydration too.
        // Warn about invalid children here so that client and hydration are consistent.
        // TODO: this seems like it could cause a DEV-only throw for hydration
        // if children contains a non-element object. We should try to avoid that.
        if (typeof props.children === 'object' && props.children !== null) React.Children.forEach(props.children, function(child) {
            if (child == null) return;
            if (typeof child === 'string' || typeof child === 'number') return;
            if (typeof child.type !== 'string') return;
            if (!didWarnInvalidChild) {
                didWarnInvalidChild = true;
                error1('Only strings and numbers are supported as <option> children.');
            }
        });
         // TODO: Remove support for `selected` in <option>.
        if (props.selected != null && !didWarnSelectedSetOnOption) {
            error1("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
            didWarnSelectedSetOnOption = true;
        }
    }
    function postMountWrapper$1(element, props) {
        // value="" should make a value attribute (#6219)
        if (props.value != null) element.setAttribute('value', toString(getToStringValue(props.value)));
    }
    function getHostProps$1(element, props) {
        var hostProps = _assign({
            children: undefined
        }, props);
        var content = flattenChildren(props.children);
        if (content) hostProps.children = content;
        return hostProps;
    }
    var didWarnValueDefaultValue$1;
    didWarnValueDefaultValue$1 = false;
    function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        if (ownerName) return '\n\nCheck the render method of `' + ownerName + '`.';
        return '';
    }
    var valuePropNames = [
        'value',
        'defaultValue'
    ];
    /**
 * Validation function for `value` and `defaultValue`.
 */ function checkSelectPropTypes(props) {
        checkControlledValueProps('select', props);
        for(var i = 0; i < valuePropNames.length; i++){
            var propName = valuePropNames[i];
            if (props[propName] == null) continue;
            var isArray = Array.isArray(props[propName]);
            if (props.multiple && !isArray) error1("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
            else if (!props.multiple && isArray) error1("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
        }
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
        var options = node.options;
        if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {
            };
            for(var i = 0; i < selectedValues.length; i++)// Prefix to avoid chaos with special keys.
            selectedValue['$' + selectedValues[i]] = true;
            for(var _i = 0; _i < options.length; _i++){
                var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
                if (options[_i].selected !== selected) options[_i].selected = selected;
                if (selected && setDefaultSelected) options[_i].defaultSelected = true;
            }
        } else {
            // Do not set `select.value` as exact behavior isn't consistent across all
            // browsers for all cases.
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for(var _i2 = 0; _i2 < options.length; _i2++){
                if (options[_i2].value === _selectedValue) {
                    options[_i2].selected = true;
                    if (setDefaultSelected) options[_i2].defaultSelected = true;
                    return;
                }
                if (defaultSelected === null && !options[_i2].disabled) defaultSelected = options[_i2];
            }
            if (defaultSelected !== null) defaultSelected.selected = true;
        }
    }
    /**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */ function getHostProps$2(element, props) {
        return _assign({
        }, props, {
            value: undefined
        });
    }
    function initWrapperState$1(element, props) {
        var node = element;
        checkSelectPropTypes(props);
        node._wrapperState = {
            wasMultiple: !!props.multiple
        };
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
            error1("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
            didWarnValueDefaultValue$1 = true;
        }
    }
    function postMountWrapper$2(element, props) {
        var node = element;
        node.multiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
    }
    function postUpdateWrapper(element, props) {
        var node = element;
        var wasMultiple = node._wrapperState.wasMultiple;
        node._wrapperState.wasMultiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (wasMultiple !== !!props.multiple) {
            // For simplicity, reapply `defaultValue` if `multiple` is toggled.
            if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
            else // Revert the select back to its default unselected state.
            updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
        }
    }
    function restoreControlledState$1(element, props) {
        var node = element;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
    }
    var didWarnValDefaultVal = false;
    /**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */ function getHostProps$3(element, props) {
        var node = element;
        if (!(props.dangerouslySetInnerHTML == null)) throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
         // Always set children to the same thing. In IE9, the selection range will
        // get reset if `textContent` is mutated.  We could add a check in setTextContent
        // to only set the value if/when the value differs from the node value (which would
        // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
        // solution. The value can be a boolean or object so that's why it's forced
        // to be a string.
        var hostProps = _assign({
        }, props, {
            value: undefined,
            defaultValue: undefined,
            children: toString(node._wrapperState.initialValue)
        });
        return hostProps;
    }
    function initWrapperState$2(element, props) {
        var node = element;
        checkControlledValueProps('textarea', props);
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
            error1("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component');
            didWarnValDefaultVal = true;
        }
        var initialValue = props.value; // Only bother fetching default value if we're going to use it
        if (initialValue == null) {
            var children = props.children, defaultValue = props.defaultValue;
            if (children != null) {
                error1("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
                if (!(defaultValue == null)) throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                if (Array.isArray(children)) {
                    if (!(children.length <= 1)) throw Error("<textarea> can only have at most one child.");
                    children = children[0];
                }
                defaultValue = children;
            }
            if (defaultValue == null) defaultValue = '';
            initialValue = defaultValue;
        }
        node._wrapperState = {
            initialValue: getToStringValue(initialValue)
        };
    }
    function updateWrapper$1(element, props) {
        var node = element;
        var value = getToStringValue(props.value);
        var defaultValue = getToStringValue(props.defaultValue);
        if (value != null) {
            // Cast `value` to a string to ensure the value is set correctly. While
            // browsers typically do this as necessary, jsdom doesn't.
            var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed
            if (newValue !== node.value) node.value = newValue;
            if (props.defaultValue == null && node.defaultValue !== newValue) node.defaultValue = newValue;
        }
        if (defaultValue != null) node.defaultValue = toString(defaultValue);
    }
    function postMountWrapper$3(element, props) {
        var node = element; // This is in postMount because we need access to the DOM node, which is not
        // available until after the component has mounted.
        var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
        // initial value. In IE10/IE11 there is a bug where the placeholder attribute
        // will populate textContent as well.
        // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
        if (textContent === node._wrapperState.initialValue) {
            if (textContent !== '' && textContent !== null) node.value = textContent;
        }
    }
    function restoreControlledState$2(element, props) {
        // DOM component is still mounted; update
        updateWrapper$1(element, props);
    }
    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
    var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
    var Namespaces = {
        html: HTML_NAMESPACE,
        mathml: MATH_NAMESPACE,
        svg: SVG_NAMESPACE
    }; // Assumes there is no parent namespace.
    function getIntrinsicNamespace(type) {
        switch(type){
            case 'svg':
                return SVG_NAMESPACE;
            case 'math':
                return MATH_NAMESPACE;
            default:
                return HTML_NAMESPACE;
        }
    }
    function getChildNamespace(parentNamespace, type) {
        if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) // No (or default) parent namespace: potential entry point.
        return getIntrinsicNamespace(type);
        if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') // We're leaving SVG.
        return HTML_NAMESPACE;
         // By default, pass namespace below.
        return parentNamespace;
    }
    /* globals MSApp */ /**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */ var createMicrosoftUnsafeLocalFunction = function(func) {
        if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) return function(arg0, arg1, arg2, arg3) {
            MSApp.execUnsafeLocalFunction(function() {
                return func(arg0, arg1, arg2, arg3);
            });
        };
        else return func;
    };
    var reusableSVGContainer;
    /**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */ var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
        if (node.namespaceURI === Namespaces.svg) {
            if (!('innerHTML' in node)) {
                // IE does not have innerHTML for SVG nodes, so instead we inject the
                // new markup in a temp node and then move the child nodes across into
                // the target node
                reusableSVGContainer = reusableSVGContainer || document.createElement('div');
                reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
                var svgNode = reusableSVGContainer.firstChild;
                while(node.firstChild)node.removeChild(node.firstChild);
                while(svgNode.firstChild)node.appendChild(svgNode.firstChild);
                return;
            }
        }
        node.innerHTML = html;
    });
    /**
 * HTML nodeType values that represent the type of the node
 */ var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    var DOCUMENT_NODE = 9;
    var DOCUMENT_FRAGMENT_NODE = 11;
    /**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */ var setTextContent = function(node, text) {
        if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
                firstChild.nodeValue = text;
                return;
            }
        }
        node.textContent = text;
    };
    // List derived from Gecko source code:
    // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
    var shorthandToLonghand = {
        animation: [
            'animationDelay',
            'animationDirection',
            'animationDuration',
            'animationFillMode',
            'animationIterationCount',
            'animationName',
            'animationPlayState',
            'animationTimingFunction'
        ],
        background: [
            'backgroundAttachment',
            'backgroundClip',
            'backgroundColor',
            'backgroundImage',
            'backgroundOrigin',
            'backgroundPositionX',
            'backgroundPositionY',
            'backgroundRepeat',
            'backgroundSize'
        ],
        backgroundPosition: [
            'backgroundPositionX',
            'backgroundPositionY'
        ],
        border: [
            'borderBottomColor',
            'borderBottomStyle',
            'borderBottomWidth',
            'borderImageOutset',
            'borderImageRepeat',
            'borderImageSlice',
            'borderImageSource',
            'borderImageWidth',
            'borderLeftColor',
            'borderLeftStyle',
            'borderLeftWidth',
            'borderRightColor',
            'borderRightStyle',
            'borderRightWidth',
            'borderTopColor',
            'borderTopStyle',
            'borderTopWidth'
        ],
        borderBlockEnd: [
            'borderBlockEndColor',
            'borderBlockEndStyle',
            'borderBlockEndWidth'
        ],
        borderBlockStart: [
            'borderBlockStartColor',
            'borderBlockStartStyle',
            'borderBlockStartWidth'
        ],
        borderBottom: [
            'borderBottomColor',
            'borderBottomStyle',
            'borderBottomWidth'
        ],
        borderColor: [
            'borderBottomColor',
            'borderLeftColor',
            'borderRightColor',
            'borderTopColor'
        ],
        borderImage: [
            'borderImageOutset',
            'borderImageRepeat',
            'borderImageSlice',
            'borderImageSource',
            'borderImageWidth'
        ],
        borderInlineEnd: [
            'borderInlineEndColor',
            'borderInlineEndStyle',
            'borderInlineEndWidth'
        ],
        borderInlineStart: [
            'borderInlineStartColor',
            'borderInlineStartStyle',
            'borderInlineStartWidth'
        ],
        borderLeft: [
            'borderLeftColor',
            'borderLeftStyle',
            'borderLeftWidth'
        ],
        borderRadius: [
            'borderBottomLeftRadius',
            'borderBottomRightRadius',
            'borderTopLeftRadius',
            'borderTopRightRadius'
        ],
        borderRight: [
            'borderRightColor',
            'borderRightStyle',
            'borderRightWidth'
        ],
        borderStyle: [
            'borderBottomStyle',
            'borderLeftStyle',
            'borderRightStyle',
            'borderTopStyle'
        ],
        borderTop: [
            'borderTopColor',
            'borderTopStyle',
            'borderTopWidth'
        ],
        borderWidth: [
            'borderBottomWidth',
            'borderLeftWidth',
            'borderRightWidth',
            'borderTopWidth'
        ],
        columnRule: [
            'columnRuleColor',
            'columnRuleStyle',
            'columnRuleWidth'
        ],
        columns: [
            'columnCount',
            'columnWidth'
        ],
        flex: [
            'flexBasis',
            'flexGrow',
            'flexShrink'
        ],
        flexFlow: [
            'flexDirection',
            'flexWrap'
        ],
        font: [
            'fontFamily',
            'fontFeatureSettings',
            'fontKerning',
            'fontLanguageOverride',
            'fontSize',
            'fontSizeAdjust',
            'fontStretch',
            'fontStyle',
            'fontVariant',
            'fontVariantAlternates',
            'fontVariantCaps',
            'fontVariantEastAsian',
            'fontVariantLigatures',
            'fontVariantNumeric',
            'fontVariantPosition',
            'fontWeight',
            'lineHeight'
        ],
        fontVariant: [
            'fontVariantAlternates',
            'fontVariantCaps',
            'fontVariantEastAsian',
            'fontVariantLigatures',
            'fontVariantNumeric',
            'fontVariantPosition'
        ],
        gap: [
            'columnGap',
            'rowGap'
        ],
        grid: [
            'gridAutoColumns',
            'gridAutoFlow',
            'gridAutoRows',
            'gridTemplateAreas',
            'gridTemplateColumns',
            'gridTemplateRows'
        ],
        gridArea: [
            'gridColumnEnd',
            'gridColumnStart',
            'gridRowEnd',
            'gridRowStart'
        ],
        gridColumn: [
            'gridColumnEnd',
            'gridColumnStart'
        ],
        gridColumnGap: [
            'columnGap'
        ],
        gridGap: [
            'columnGap',
            'rowGap'
        ],
        gridRow: [
            'gridRowEnd',
            'gridRowStart'
        ],
        gridRowGap: [
            'rowGap'
        ],
        gridTemplate: [
            'gridTemplateAreas',
            'gridTemplateColumns',
            'gridTemplateRows'
        ],
        listStyle: [
            'listStyleImage',
            'listStylePosition',
            'listStyleType'
        ],
        margin: [
            'marginBottom',
            'marginLeft',
            'marginRight',
            'marginTop'
        ],
        marker: [
            'markerEnd',
            'markerMid',
            'markerStart'
        ],
        mask: [
            'maskClip',
            'maskComposite',
            'maskImage',
            'maskMode',
            'maskOrigin',
            'maskPositionX',
            'maskPositionY',
            'maskRepeat',
            'maskSize'
        ],
        maskPosition: [
            'maskPositionX',
            'maskPositionY'
        ],
        outline: [
            'outlineColor',
            'outlineStyle',
            'outlineWidth'
        ],
        overflow: [
            'overflowX',
            'overflowY'
        ],
        padding: [
            'paddingBottom',
            'paddingLeft',
            'paddingRight',
            'paddingTop'
        ],
        placeContent: [
            'alignContent',
            'justifyContent'
        ],
        placeItems: [
            'alignItems',
            'justifyItems'
        ],
        placeSelf: [
            'alignSelf',
            'justifySelf'
        ],
        textDecoration: [
            'textDecorationColor',
            'textDecorationLine',
            'textDecorationStyle'
        ],
        textEmphasis: [
            'textEmphasisColor',
            'textEmphasisStyle'
        ],
        transition: [
            'transitionDelay',
            'transitionDuration',
            'transitionProperty',
            'transitionTimingFunction'
        ],
        wordWrap: [
            'overflowWrap'
        ]
    };
    /**
 * CSS properties which accept numbers but are not in units of "px".
 */ var isUnitlessNumber = {
        animationIterationCount: true,
        borderImageOutset: true,
        borderImageSlice: true,
        borderImageWidth: true,
        boxFlex: true,
        boxFlexGroup: true,
        boxOrdinalGroup: true,
        columnCount: true,
        columns: true,
        flex: true,
        flexGrow: true,
        flexPositive: true,
        flexShrink: true,
        flexNegative: true,
        flexOrder: true,
        gridArea: true,
        gridRow: true,
        gridRowEnd: true,
        gridRowSpan: true,
        gridRowStart: true,
        gridColumn: true,
        gridColumnEnd: true,
        gridColumnSpan: true,
        gridColumnStart: true,
        fontWeight: true,
        lineClamp: true,
        lineHeight: true,
        opacity: true,
        order: true,
        orphans: true,
        tabSize: true,
        widows: true,
        zIndex: true,
        zoom: true,
        // SVG-related properties
        fillOpacity: true,
        floodOpacity: true,
        stopOpacity: true,
        strokeDasharray: true,
        strokeDashoffset: true,
        strokeMiterlimit: true,
        strokeOpacity: true,
        strokeWidth: true
    };
    /**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */ function prefixKey(prefix, key) {
        return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    /**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */ var prefixes1 = [
        'Webkit',
        'ms',
        'Moz',
        'O'
    ]; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
    // infinite loop, because it iterates over the newly added props too.
    Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes1.forEach(function(prefix) {
            isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
        });
    });
    /**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */ function dangerousStyleValue(name, value, isCustomProperty) {
        // Note that we've removed escapeTextForBrowser() calls here since the
        // whole string will be escaped when the attribute is injected into
        // the markup. If you provide unsafe user data here they can inject
        // arbitrary CSS which may be problematic (I couldn't repro this):
        // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
        // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
        // This is not an XSS hole but instead a potential CSS injection issue
        // which has lead to a greater discussion about how we're going to
        // trust URLs moving forward. See #2115901
        var isEmpty = value == null || typeof value === 'boolean' || value === '';
        if (isEmpty) return '';
        if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
        return ('' + value).trim();
    }
    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    /**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */ function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
    }
    var warnValidStyle = function() {
    };
    // 'msTransform' is correct, but the other prefixes should be capitalized
    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
    var msPattern$1 = /^-ms-/;
    var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon
    var badStyleValueWithSemicolonPattern = /;\s*$/;
    var warnedStyleNames = {
    };
    var warnedStyleValues = {
    };
    var warnedForNaNValue = false;
    var warnedForInfinityValue = false;
    var camelize = function(string) {
        return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
        });
    };
    var warnHyphenatedStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error1('Unsupported style property %s. Did you mean %s?', name, // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
        // is converted to lowercase `ms`.
        camelize(name.replace(msPattern$1, 'ms-')));
    };
    var warnBadVendoredStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error1('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
    };
    var warnStyleValueWithSemicolon = function(name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) return;
        warnedStyleValues[value] = true;
        error1("Style property values shouldn't contain a semicolon. Try \"%s: %s\" instead.", name, value.replace(badStyleValueWithSemicolonPattern, ''));
    };
    var warnStyleValueIsNaN = function(name, value) {
        if (warnedForNaNValue) return;
        warnedForNaNValue = true;
        error1('`NaN` is an invalid value for the `%s` css style property.', name);
    };
    var warnStyleValueIsInfinity = function(name, value) {
        if (warnedForInfinityValue) return;
        warnedForInfinityValue = true;
        error1('`Infinity` is an invalid value for the `%s` css style property.', name);
    };
    warnValidStyle = function(name, value) {
        if (name.indexOf('-') > -1) warnHyphenatedStyleName(name);
        else if (badVendoredStyleNamePattern.test(name)) warnBadVendoredStyleName(name);
        else if (badStyleValueWithSemicolonPattern.test(value)) warnStyleValueWithSemicolon(name, value);
        if (typeof value === 'number') {
            if (isNaN(value)) warnStyleValueIsNaN(name, value);
            else if (!isFinite(value)) warnStyleValueIsInfinity(name, value);
        }
    };
    var warnValidStyle$1 = warnValidStyle;
    /**
 * Operations for dealing with CSS properties.
 */ /**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */ function createDangerousStringForStyles(styles) {
        var serialized = '';
        var delimiter = '';
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var styleValue = styles[styleName];
            if (styleValue != null) {
                var isCustomProperty = styleName.indexOf('--') === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ';';
            }
        }
        return serialized || null;
    }
    /**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */ function setValueForStyles(node, styles) {
        var style = node.style;
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var isCustomProperty = styleName.indexOf('--') === 0;
            if (!isCustomProperty) warnValidStyle$1(styleName, styles[styleName]);
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            if (styleName === 'float') styleName = 'cssFloat';
            if (isCustomProperty) style.setProperty(styleName, styleValue);
            else style[styleName] = styleValue;
        }
    }
    function isValueEmpty(value) {
        return value == null || typeof value === 'boolean' || value === '';
    }
    /**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */ function expandShorthandMap(styles) {
        var expanded = {
        };
        for(var key in styles){
            var longhands = shorthandToLonghand[key] || [
                key
            ];
            for(var i = 0; i < longhands.length; i++)expanded[longhands[i]] = key;
        }
        return expanded;
    }
    /**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */ function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
        if (!nextStyles) return;
        var expandedUpdates = expandShorthandMap(styleUpdates);
        var expandedStyles = expandShorthandMap(nextStyles);
        var warnedAbout = {
        };
        for(var key in expandedUpdates){
            var originalKey = expandedUpdates[key];
            var correctOriginalKey = expandedStyles[key];
            if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + ',' + correctOriginalKey;
                if (warnedAbout[warningKey]) continue;
                warnedAbout[warningKey] = true;
                error1("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
            }
        }
    }
    // For HTML, certain tags should omit their close tag. We keep a list for
    // those special-case tags.
    var omittedCloseTags = {
        area: true,
        base: true,
        br: true,
        col: true,
        embed: true,
        hr: true,
        img: true,
        input: true,
        keygen: true,
        link: true,
        meta: true,
        param: true,
        source: true,
        track: true,
        wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.
    };
    // `omittedCloseTags` except that `menuitem` should still have its closing tag.
    var voidElementTags = _assign({
        menuitem: true
    }, omittedCloseTags);
    var HTML = '__html';
    function assertValidProps(tag, props) {
        if (!props) return;
         // Note the use of `==` which checks for null or undefined.
        if (voidElementTags[tag]) {
            if (!(props.children == null && props.dangerouslySetInnerHTML == null)) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
        }
        if (props.dangerouslySetInnerHTML != null) {
            if (!(props.children == null)) throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            if (!(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML)) throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) error1("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
        if (!(props.style == null || typeof props.style === 'object')) throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
    }
    function isCustomComponent(tagName, props) {
        if (tagName.indexOf('-') === -1) return typeof props.is === 'string';
        switch(tagName){
            // These are reserved SVG and MathML elements.
            // We don't mind this list too much because we expect it to never grow.
            // The alternative is to track the namespace in a few places which is convoluted.
            // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph':
                return false;
            default:
                return true;
        }
    }
    // When adding attributes to the HTML or SVG allowed attribute list, be sure to
    // also add them to this module to ensure casing and incorrect name
    // warnings.
    var possibleStandardNames = {
        // HTML
        accept: 'accept',
        acceptcharset: 'acceptCharset',
        'accept-charset': 'acceptCharset',
        accesskey: 'accessKey',
        action: 'action',
        allowfullscreen: 'allowFullScreen',
        alt: 'alt',
        as: 'as',
        async: 'async',
        autocapitalize: 'autoCapitalize',
        autocomplete: 'autoComplete',
        autocorrect: 'autoCorrect',
        autofocus: 'autoFocus',
        autoplay: 'autoPlay',
        autosave: 'autoSave',
        capture: 'capture',
        cellpadding: 'cellPadding',
        cellspacing: 'cellSpacing',
        challenge: 'challenge',
        charset: 'charSet',
        checked: 'checked',
        children: 'children',
        cite: 'cite',
        class: 'className',
        classid: 'classID',
        classname: 'className',
        cols: 'cols',
        colspan: 'colSpan',
        content: 'content',
        contenteditable: 'contentEditable',
        contextmenu: 'contextMenu',
        controls: 'controls',
        controlslist: 'controlsList',
        coords: 'coords',
        crossorigin: 'crossOrigin',
        dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
        data: 'data',
        datetime: 'dateTime',
        default: 'default',
        defaultchecked: 'defaultChecked',
        defaultvalue: 'defaultValue',
        defer: 'defer',
        dir: 'dir',
        disabled: 'disabled',
        disablepictureinpicture: 'disablePictureInPicture',
        disableremoteplayback: 'disableRemotePlayback',
        download: 'download',
        draggable: 'draggable',
        enctype: 'encType',
        enterkeyhint: 'enterKeyHint',
        for: 'htmlFor',
        form: 'form',
        formmethod: 'formMethod',
        formaction: 'formAction',
        formenctype: 'formEncType',
        formnovalidate: 'formNoValidate',
        formtarget: 'formTarget',
        frameborder: 'frameBorder',
        headers: 'headers',
        height: 'height',
        hidden: 'hidden',
        high: 'high',
        href: 'href',
        hreflang: 'hrefLang',
        htmlfor: 'htmlFor',
        httpequiv: 'httpEquiv',
        'http-equiv': 'httpEquiv',
        icon: 'icon',
        id: 'id',
        innerhtml: 'innerHTML',
        inputmode: 'inputMode',
        integrity: 'integrity',
        is: 'is',
        itemid: 'itemID',
        itemprop: 'itemProp',
        itemref: 'itemRef',
        itemscope: 'itemScope',
        itemtype: 'itemType',
        keyparams: 'keyParams',
        keytype: 'keyType',
        kind: 'kind',
        label: 'label',
        lang: 'lang',
        list: 'list',
        loop: 'loop',
        low: 'low',
        manifest: 'manifest',
        marginwidth: 'marginWidth',
        marginheight: 'marginHeight',
        max: 'max',
        maxlength: 'maxLength',
        media: 'media',
        mediagroup: 'mediaGroup',
        method: 'method',
        min: 'min',
        minlength: 'minLength',
        multiple: 'multiple',
        muted: 'muted',
        name: 'name',
        nomodule: 'noModule',
        nonce: 'nonce',
        novalidate: 'noValidate',
        open: 'open',
        optimum: 'optimum',
        pattern: 'pattern',
        placeholder: 'placeholder',
        playsinline: 'playsInline',
        poster: 'poster',
        preload: 'preload',
        profile: 'profile',
        radiogroup: 'radioGroup',
        readonly: 'readOnly',
        referrerpolicy: 'referrerPolicy',
        rel: 'rel',
        required: 'required',
        reversed: 'reversed',
        role: 'role',
        rows: 'rows',
        rowspan: 'rowSpan',
        sandbox: 'sandbox',
        scope: 'scope',
        scoped: 'scoped',
        scrolling: 'scrolling',
        seamless: 'seamless',
        selected: 'selected',
        shape: 'shape',
        size: 'size',
        sizes: 'sizes',
        span: 'span',
        spellcheck: 'spellCheck',
        src: 'src',
        srcdoc: 'srcDoc',
        srclang: 'srcLang',
        srcset: 'srcSet',
        start: 'start',
        step: 'step',
        style: 'style',
        summary: 'summary',
        tabindex: 'tabIndex',
        target: 'target',
        title: 'title',
        type: 'type',
        usemap: 'useMap',
        value: 'value',
        width: 'width',
        wmode: 'wmode',
        wrap: 'wrap',
        // SVG
        about: 'about',
        accentheight: 'accentHeight',
        'accent-height': 'accentHeight',
        accumulate: 'accumulate',
        additive: 'additive',
        alignmentbaseline: 'alignmentBaseline',
        'alignment-baseline': 'alignmentBaseline',
        allowreorder: 'allowReorder',
        alphabetic: 'alphabetic',
        amplitude: 'amplitude',
        arabicform: 'arabicForm',
        'arabic-form': 'arabicForm',
        ascent: 'ascent',
        attributename: 'attributeName',
        attributetype: 'attributeType',
        autoreverse: 'autoReverse',
        azimuth: 'azimuth',
        basefrequency: 'baseFrequency',
        baselineshift: 'baselineShift',
        'baseline-shift': 'baselineShift',
        baseprofile: 'baseProfile',
        bbox: 'bbox',
        begin: 'begin',
        bias: 'bias',
        by: 'by',
        calcmode: 'calcMode',
        capheight: 'capHeight',
        'cap-height': 'capHeight',
        clip: 'clip',
        clippath: 'clipPath',
        'clip-path': 'clipPath',
        clippathunits: 'clipPathUnits',
        cliprule: 'clipRule',
        'clip-rule': 'clipRule',
        color: 'color',
        colorinterpolation: 'colorInterpolation',
        'color-interpolation': 'colorInterpolation',
        colorinterpolationfilters: 'colorInterpolationFilters',
        'color-interpolation-filters': 'colorInterpolationFilters',
        colorprofile: 'colorProfile',
        'color-profile': 'colorProfile',
        colorrendering: 'colorRendering',
        'color-rendering': 'colorRendering',
        contentscripttype: 'contentScriptType',
        contentstyletype: 'contentStyleType',
        cursor: 'cursor',
        cx: 'cx',
        cy: 'cy',
        d: 'd',
        datatype: 'datatype',
        decelerate: 'decelerate',
        descent: 'descent',
        diffuseconstant: 'diffuseConstant',
        direction: 'direction',
        display: 'display',
        divisor: 'divisor',
        dominantbaseline: 'dominantBaseline',
        'dominant-baseline': 'dominantBaseline',
        dur: 'dur',
        dx: 'dx',
        dy: 'dy',
        edgemode: 'edgeMode',
        elevation: 'elevation',
        enablebackground: 'enableBackground',
        'enable-background': 'enableBackground',
        end: 'end',
        exponent: 'exponent',
        externalresourcesrequired: 'externalResourcesRequired',
        fill: 'fill',
        fillopacity: 'fillOpacity',
        'fill-opacity': 'fillOpacity',
        fillrule: 'fillRule',
        'fill-rule': 'fillRule',
        filter: 'filter',
        filterres: 'filterRes',
        filterunits: 'filterUnits',
        floodopacity: 'floodOpacity',
        'flood-opacity': 'floodOpacity',
        floodcolor: 'floodColor',
        'flood-color': 'floodColor',
        focusable: 'focusable',
        fontfamily: 'fontFamily',
        'font-family': 'fontFamily',
        fontsize: 'fontSize',
        'font-size': 'fontSize',
        fontsizeadjust: 'fontSizeAdjust',
        'font-size-adjust': 'fontSizeAdjust',
        fontstretch: 'fontStretch',
        'font-stretch': 'fontStretch',
        fontstyle: 'fontStyle',
        'font-style': 'fontStyle',
        fontvariant: 'fontVariant',
        'font-variant': 'fontVariant',
        fontweight: 'fontWeight',
        'font-weight': 'fontWeight',
        format: 'format',
        from: 'from',
        fx: 'fx',
        fy: 'fy',
        g1: 'g1',
        g2: 'g2',
        glyphname: 'glyphName',
        'glyph-name': 'glyphName',
        glyphorientationhorizontal: 'glyphOrientationHorizontal',
        'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
        glyphorientationvertical: 'glyphOrientationVertical',
        'glyph-orientation-vertical': 'glyphOrientationVertical',
        glyphref: 'glyphRef',
        gradienttransform: 'gradientTransform',
        gradientunits: 'gradientUnits',
        hanging: 'hanging',
        horizadvx: 'horizAdvX',
        'horiz-adv-x': 'horizAdvX',
        horizoriginx: 'horizOriginX',
        'horiz-origin-x': 'horizOriginX',
        ideographic: 'ideographic',
        imagerendering: 'imageRendering',
        'image-rendering': 'imageRendering',
        in2: 'in2',
        in: 'in',
        inlist: 'inlist',
        intercept: 'intercept',
        k1: 'k1',
        k2: 'k2',
        k3: 'k3',
        k4: 'k4',
        k: 'k',
        kernelmatrix: 'kernelMatrix',
        kernelunitlength: 'kernelUnitLength',
        kerning: 'kerning',
        keypoints: 'keyPoints',
        keysplines: 'keySplines',
        keytimes: 'keyTimes',
        lengthadjust: 'lengthAdjust',
        letterspacing: 'letterSpacing',
        'letter-spacing': 'letterSpacing',
        lightingcolor: 'lightingColor',
        'lighting-color': 'lightingColor',
        limitingconeangle: 'limitingConeAngle',
        local: 'local',
        markerend: 'markerEnd',
        'marker-end': 'markerEnd',
        markerheight: 'markerHeight',
        markermid: 'markerMid',
        'marker-mid': 'markerMid',
        markerstart: 'markerStart',
        'marker-start': 'markerStart',
        markerunits: 'markerUnits',
        markerwidth: 'markerWidth',
        mask: 'mask',
        maskcontentunits: 'maskContentUnits',
        maskunits: 'maskUnits',
        mathematical: 'mathematical',
        mode: 'mode',
        numoctaves: 'numOctaves',
        offset: 'offset',
        opacity: 'opacity',
        operator: 'operator',
        order: 'order',
        orient: 'orient',
        orientation: 'orientation',
        origin: 'origin',
        overflow: 'overflow',
        overlineposition: 'overlinePosition',
        'overline-position': 'overlinePosition',
        overlinethickness: 'overlineThickness',
        'overline-thickness': 'overlineThickness',
        paintorder: 'paintOrder',
        'paint-order': 'paintOrder',
        panose1: 'panose1',
        'panose-1': 'panose1',
        pathlength: 'pathLength',
        patterncontentunits: 'patternContentUnits',
        patterntransform: 'patternTransform',
        patternunits: 'patternUnits',
        pointerevents: 'pointerEvents',
        'pointer-events': 'pointerEvents',
        points: 'points',
        pointsatx: 'pointsAtX',
        pointsaty: 'pointsAtY',
        pointsatz: 'pointsAtZ',
        prefix: 'prefix',
        preservealpha: 'preserveAlpha',
        preserveaspectratio: 'preserveAspectRatio',
        primitiveunits: 'primitiveUnits',
        property: 'property',
        r: 'r',
        radius: 'radius',
        refx: 'refX',
        refy: 'refY',
        renderingintent: 'renderingIntent',
        'rendering-intent': 'renderingIntent',
        repeatcount: 'repeatCount',
        repeatdur: 'repeatDur',
        requiredextensions: 'requiredExtensions',
        requiredfeatures: 'requiredFeatures',
        resource: 'resource',
        restart: 'restart',
        result: 'result',
        results: 'results',
        rotate: 'rotate',
        rx: 'rx',
        ry: 'ry',
        scale: 'scale',
        security: 'security',
        seed: 'seed',
        shaperendering: 'shapeRendering',
        'shape-rendering': 'shapeRendering',
        slope: 'slope',
        spacing: 'spacing',
        specularconstant: 'specularConstant',
        specularexponent: 'specularExponent',
        speed: 'speed',
        spreadmethod: 'spreadMethod',
        startoffset: 'startOffset',
        stddeviation: 'stdDeviation',
        stemh: 'stemh',
        stemv: 'stemv',
        stitchtiles: 'stitchTiles',
        stopcolor: 'stopColor',
        'stop-color': 'stopColor',
        stopopacity: 'stopOpacity',
        'stop-opacity': 'stopOpacity',
        strikethroughposition: 'strikethroughPosition',
        'strikethrough-position': 'strikethroughPosition',
        strikethroughthickness: 'strikethroughThickness',
        'strikethrough-thickness': 'strikethroughThickness',
        string: 'string',
        stroke: 'stroke',
        strokedasharray: 'strokeDasharray',
        'stroke-dasharray': 'strokeDasharray',
        strokedashoffset: 'strokeDashoffset',
        'stroke-dashoffset': 'strokeDashoffset',
        strokelinecap: 'strokeLinecap',
        'stroke-linecap': 'strokeLinecap',
        strokelinejoin: 'strokeLinejoin',
        'stroke-linejoin': 'strokeLinejoin',
        strokemiterlimit: 'strokeMiterlimit',
        'stroke-miterlimit': 'strokeMiterlimit',
        strokewidth: 'strokeWidth',
        'stroke-width': 'strokeWidth',
        strokeopacity: 'strokeOpacity',
        'stroke-opacity': 'strokeOpacity',
        suppresscontenteditablewarning: 'suppressContentEditableWarning',
        suppresshydrationwarning: 'suppressHydrationWarning',
        surfacescale: 'surfaceScale',
        systemlanguage: 'systemLanguage',
        tablevalues: 'tableValues',
        targetx: 'targetX',
        targety: 'targetY',
        textanchor: 'textAnchor',
        'text-anchor': 'textAnchor',
        textdecoration: 'textDecoration',
        'text-decoration': 'textDecoration',
        textlength: 'textLength',
        textrendering: 'textRendering',
        'text-rendering': 'textRendering',
        to: 'to',
        transform: 'transform',
        typeof: 'typeof',
        u1: 'u1',
        u2: 'u2',
        underlineposition: 'underlinePosition',
        'underline-position': 'underlinePosition',
        underlinethickness: 'underlineThickness',
        'underline-thickness': 'underlineThickness',
        unicode: 'unicode',
        unicodebidi: 'unicodeBidi',
        'unicode-bidi': 'unicodeBidi',
        unicoderange: 'unicodeRange',
        'unicode-range': 'unicodeRange',
        unitsperem: 'unitsPerEm',
        'units-per-em': 'unitsPerEm',
        unselectable: 'unselectable',
        valphabetic: 'vAlphabetic',
        'v-alphabetic': 'vAlphabetic',
        values: 'values',
        vectoreffect: 'vectorEffect',
        'vector-effect': 'vectorEffect',
        version: 'version',
        vertadvy: 'vertAdvY',
        'vert-adv-y': 'vertAdvY',
        vertoriginx: 'vertOriginX',
        'vert-origin-x': 'vertOriginX',
        vertoriginy: 'vertOriginY',
        'vert-origin-y': 'vertOriginY',
        vhanging: 'vHanging',
        'v-hanging': 'vHanging',
        videographic: 'vIdeographic',
        'v-ideographic': 'vIdeographic',
        viewbox: 'viewBox',
        viewtarget: 'viewTarget',
        visibility: 'visibility',
        vmathematical: 'vMathematical',
        'v-mathematical': 'vMathematical',
        vocab: 'vocab',
        widths: 'widths',
        wordspacing: 'wordSpacing',
        'word-spacing': 'wordSpacing',
        writingmode: 'writingMode',
        'writing-mode': 'writingMode',
        x1: 'x1',
        x2: 'x2',
        x: 'x',
        xchannelselector: 'xChannelSelector',
        xheight: 'xHeight',
        'x-height': 'xHeight',
        xlinkactuate: 'xlinkActuate',
        'xlink:actuate': 'xlinkActuate',
        xlinkarcrole: 'xlinkArcrole',
        'xlink:arcrole': 'xlinkArcrole',
        xlinkhref: 'xlinkHref',
        'xlink:href': 'xlinkHref',
        xlinkrole: 'xlinkRole',
        'xlink:role': 'xlinkRole',
        xlinkshow: 'xlinkShow',
        'xlink:show': 'xlinkShow',
        xlinktitle: 'xlinkTitle',
        'xlink:title': 'xlinkTitle',
        xlinktype: 'xlinkType',
        'xlink:type': 'xlinkType',
        xmlbase: 'xmlBase',
        'xml:base': 'xmlBase',
        xmllang: 'xmlLang',
        'xml:lang': 'xmlLang',
        xmlns: 'xmlns',
        'xml:space': 'xmlSpace',
        xmlnsxlink: 'xmlnsXlink',
        'xmlns:xlink': 'xmlnsXlink',
        xmlspace: 'xmlSpace',
        y1: 'y1',
        y2: 'y2',
        y: 'y',
        ychannelselector: 'yChannelSelector',
        z: 'z',
        zoomandpan: 'zoomAndPan'
    };
    var ariaProperties = {
        'aria-current': 0,
        // state
        'aria-details': 0,
        'aria-disabled': 0,
        // state
        'aria-hidden': 0,
        // state
        'aria-invalid': 0,
        // state
        'aria-keyshortcuts': 0,
        'aria-label': 0,
        'aria-roledescription': 0,
        // Widget Attributes
        'aria-autocomplete': 0,
        'aria-checked': 0,
        'aria-expanded': 0,
        'aria-haspopup': 0,
        'aria-level': 0,
        'aria-modal': 0,
        'aria-multiline': 0,
        'aria-multiselectable': 0,
        'aria-orientation': 0,
        'aria-placeholder': 0,
        'aria-pressed': 0,
        'aria-readonly': 0,
        'aria-required': 0,
        'aria-selected': 0,
        'aria-sort': 0,
        'aria-valuemax': 0,
        'aria-valuemin': 0,
        'aria-valuenow': 0,
        'aria-valuetext': 0,
        // Live Region Attributes
        'aria-atomic': 0,
        'aria-busy': 0,
        'aria-live': 0,
        'aria-relevant': 0,
        // Drag-and-Drop Attributes
        'aria-dropeffect': 0,
        'aria-grabbed': 0,
        // Relationship Attributes
        'aria-activedescendant': 0,
        'aria-colcount': 0,
        'aria-colindex': 0,
        'aria-colspan': 0,
        'aria-controls': 0,
        'aria-describedby': 0,
        'aria-errormessage': 0,
        'aria-flowto': 0,
        'aria-labelledby': 0,
        'aria-owns': 0,
        'aria-posinset': 0,
        'aria-rowcount': 0,
        'aria-rowindex': 0,
        'aria-rowspan': 0,
        'aria-setsize': 0
    };
    var warnedProperties = {
    };
    var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
    function validateProperty(tagName, name) {
        if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) return true;
        if (rARIACamel.test(name)) {
            var ariaName = 'aria-' + name.slice(4).toLowerCase();
            var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (correctName == null) {
                error1('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
                warnedProperties[name] = true;
                return true;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== correctName) {
                error1('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
                warnedProperties[name] = true;
                return true;
            }
        }
        if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase();
            var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (standardName == null) {
                warnedProperties[name] = true;
                return false;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== standardName) {
                error1('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
                warnedProperties[name] = true;
                return true;
            }
        }
        return true;
    }
    function warnInvalidARIAProps(type, props) {
        var invalidProps = [];
        for(var key in props){
            var isValid = validateProperty(type, key);
            if (!isValid) invalidProps.push(key);
        }
        var unknownPropString = invalidProps.map(function(prop) {
            return '`' + prop + '`';
        }).join(', ');
        if (invalidProps.length === 1) error1("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        else if (invalidProps.length > 1) error1("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
    }
    function validateProperties(type, props) {
        if (isCustomComponent(type, props)) return;
        warnInvalidARIAProps(type, props);
    }
    var didWarnValueNull = false;
    function validateProperties$1(type, props) {
        if (type !== 'input' && type !== 'textarea' && type !== 'select') return;
        if (props != null && props.value === null && !didWarnValueNull) {
            didWarnValueNull = true;
            if (type === 'select' && props.multiple) error1("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
            else error1("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
        }
    }
    var validateProperty$1 = function() {
    };
    var warnedProperties$1 = {
    };
    var _hasOwnProperty = Object.prototype.hasOwnProperty;
    var EVENT_NAME_REGEX = /^on./;
    var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
    var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    validateProperty$1 = function(tagName, name, value, eventRegistry) {
        if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) return true;
        var lowerCasedName = name.toLowerCase();
        if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
            error1("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
            warnedProperties$1[name] = true;
            return true;
        } // We can't rely on the event system being injected on the server.
        if (eventRegistry != null) {
            var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies.hasOwnProperty(name)) return true;
            var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
            if (registrationName != null) {
                error1('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
                warnedProperties$1[name] = true;
                return true;
            }
            if (EVENT_NAME_REGEX.test(name)) {
                error1('Unknown event handler property `%s`. It will be ignored.', name);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (EVENT_NAME_REGEX.test(name)) {
            // If no event plugins have been injected, we are in a server environment.
            // So we can't tell if the event name is correct for sure, but we can filter
            // out known bad ones like `onclick`. We can't suggest a specific replacement though.
            if (INVALID_EVENT_NAME_REGEX.test(name)) error1("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
            warnedProperties$1[name] = true;
            return true;
        } // Let the ARIA attribute hook validate ARIA attributes
        if (rARIA$1.test(name) || rARIACamel$1.test(name)) return true;
        if (lowerCasedName === 'innerhtml') {
            error1("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === 'aria') {
            error1("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
            error1("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === 'number' && isNaN(value)) {
            error1("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
            warnedProperties$1[name] = true;
            return true;
        }
        var propertyInfo = getPropertyInfo(name);
        var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.
        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name) {
                error1('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (!isReserved && name !== lowerCasedName) {
            // Unknown attributes should have lowercase casing since that's how they
            // will be cased anyway with server rendering.
            error1("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            if (value) error1("Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()}.", value, name, name, value, name);
            else error1("Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", value, name, name, value, name, name, name);
            warnedProperties$1[name] = true;
            return true;
        } // Now that we've validated casing, do not validate
        // data types for reserved props
        if (isReserved) return true;
         // Warn when a known attribute is a bad type
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            warnedProperties$1[name] = true;
            return false;
        } // Warn when passing the strings 'false' or 'true' into a boolean prop
        if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
            error1("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
            warnedProperties$1[name] = true;
            return true;
        }
        return true;
    };
    var warnUnknownProperties = function(type, props, eventRegistry) {
        var unknownProps = [];
        for(var key in props){
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            if (!isValid) unknownProps.push(key);
        }
        var unknownPropString = unknownProps.map(function(prop) {
            return '`' + prop + '`';
        }).join(', ');
        if (unknownProps.length === 1) error1("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        else if (unknownProps.length > 1) error1("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
    };
    function validateProperties$2(type, props, eventRegistry) {
        if (isCustomComponent(type, props)) return;
        warnUnknownProperties(type, props, eventRegistry);
    }
    var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
    var IS_NON_DELEGATED = 2;
    var IS_CAPTURE_PHASE = 4;
    var IS_REPLAYED = 16;
    // set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
    // we call willDeferLaterForLegacyFBSupport, thus not bailing out
    // will result in endless cycles like an infinite loop.
    // We also don't want to defer during event replaying.
    var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
    /**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */ function getEventTarget(nativeEvent) {
        // Fallback to nativeEvent.srcElement for IE9
        // https://github.com/facebook/react/issues/12506
        var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963
        if (target.correspondingUseElement) target = target.correspondingUseElement;
         // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
        // @see http://www.quirksmode.org/js/events_properties.html
        return target.nodeType === TEXT_NODE ? target.parentNode : target;
    }
    var restoreImpl = null;
    var restoreTarget = null;
    var restoreQueue = null;
    function restoreStateOfTarget(target) {
        // We perform this translation at the end of the event loop so that we
        // always receive the correct fiber here
        var internalInstance = getInstanceFromNode(target);
        if (!internalInstance) // Unmounted
        return;
        if (!(typeof restoreImpl === 'function')) throw Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.
        if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
        }
    }
    function setRestoreImplementation(impl) {
        restoreImpl = impl;
    }
    function enqueueStateRestore(target) {
        if (restoreTarget) {
            if (restoreQueue) restoreQueue.push(target);
            else restoreQueue = [
                target
            ];
        } else restoreTarget = target;
    }
    function needsStateRestore() {
        return restoreTarget !== null || restoreQueue !== null;
    }
    function restoreStateIfNeeded() {
        if (!restoreTarget) return;
        var target = restoreTarget;
        var queuedTargets = restoreQueue;
        restoreTarget = null;
        restoreQueue = null;
        restoreStateOfTarget(target);
        if (queuedTargets) for(var i = 0; i < queuedTargets.length; i++)restoreStateOfTarget(queuedTargets[i]);
    }
    // the renderer. Such as when we're dispatching events or if third party
    // libraries need to call batchedUpdates. Eventually, this API will go away when
    // everything is batched by default. We'll then have a similar API to opt-out of
    // scheduled work and instead do synchronous work.
    // Defaults
    var batchedUpdatesImpl = function(fn, bookkeeping) {
        return fn(bookkeeping);
    };
    var discreteUpdatesImpl = function(fn, a, b, c, d) {
        return fn(a, b, c, d);
    };
    var flushDiscreteUpdatesImpl = function() {
    };
    var batchedEventUpdatesImpl = batchedUpdatesImpl;
    var isInsideEventHandler = false;
    var isBatchingEventUpdates = false;
    function finishEventHandler() {
        // Here we wait until all updates have propagated, which is important
        // when using controlled components within layers:
        // https://github.com/facebook/react/issues/1698
        // Then we restore state of any controlled component.
        var controlledComponentsHavePendingUpdates = needsStateRestore();
        if (controlledComponentsHavePendingUpdates) {
            // If a controlled event was fired, we may need to restore the state of
            // the DOM node back to the controlled value. This is necessary when React
            // bails out of the update without touching the DOM.
            flushDiscreteUpdatesImpl();
            restoreStateIfNeeded();
        }
    }
    function batchedUpdates(fn, bookkeeping) {
        if (isInsideEventHandler) // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(bookkeeping);
        isInsideEventHandler = true;
        try {
            return batchedUpdatesImpl(fn, bookkeeping);
        } finally{
            isInsideEventHandler = false;
            finishEventHandler();
        }
    }
    function batchedEventUpdates(fn, a, b) {
        if (isBatchingEventUpdates) // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(a, b);
        isBatchingEventUpdates = true;
        try {
            return batchedEventUpdatesImpl(fn, a, b);
        } finally{
            isBatchingEventUpdates = false;
            finishEventHandler();
        }
    }
    function discreteUpdates(fn, a, b, c, d) {
        var prevIsInsideEventHandler = isInsideEventHandler;
        isInsideEventHandler = true;
        try {
            return discreteUpdatesImpl(fn, a, b, c, d);
        } finally{
            isInsideEventHandler = prevIsInsideEventHandler;
            if (!isInsideEventHandler) finishEventHandler();
        }
    }
    function flushDiscreteUpdatesIfNeeded(timeStamp) {
        if (!isInsideEventHandler) flushDiscreteUpdatesImpl();
    }
    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
        batchedUpdatesImpl = _batchedUpdatesImpl;
        discreteUpdatesImpl = _discreteUpdatesImpl;
        flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
        batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
    }
    function isInteractive(tag) {
        return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }
    function shouldPreventMouseEvent(name, type, props) {
        switch(name){
            case 'onClick':
            case 'onClickCapture':
            case 'onDoubleClick':
            case 'onDoubleClickCapture':
            case 'onMouseDown':
            case 'onMouseDownCapture':
            case 'onMouseMove':
            case 'onMouseMoveCapture':
            case 'onMouseUp':
            case 'onMouseUpCapture':
            case 'onMouseEnter':
                return !!(props.disabled && isInteractive(type));
            default:
                return false;
        }
    }
    /**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */ function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (stateNode === null) // Work in progress (ex: onload events in incremental mode).
        return null;
        var props = getFiberCurrentPropsFromNode(stateNode);
        if (props === null) // Work in progress.
        return null;
        var listener = props[registrationName];
        if (shouldPreventMouseEvent(registrationName, inst.type, props)) return null;
        if (!(!listener || typeof listener === 'function')) throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
        return listener;
    }
    var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
    if (canUseDOM) try {
        var options1 = {
        }; // $FlowFixMe: Ignore Flow complaining about needing a value
        Object.defineProperty(options1, 'passive', {
            get: function() {
                passiveBrowserEventsSupported = true;
            }
        });
        window.addEventListener('test', options1, options1);
        window.removeEventListener('test', options1, options1);
    } catch (e1) {
        passiveBrowserEventsSupported = false;
    }
    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
        var funcArgs = Array.prototype.slice.call(arguments, 3);
        try {
            func.apply(context, funcArgs);
        } catch (error) {
            this.onError(error);
        }
    }
    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
    // In DEV mode, we swap out invokeGuardedCallback for a special version
    // that plays more nicely with the browser's DevTools. The idea is to preserve
    // "Pause on exceptions" behavior. Because React wraps all user-provided
    // functions in invokeGuardedCallback, and the production version of
    // invokeGuardedCallback uses a try-catch, all user exceptions are treated
    // like caught exceptions, and the DevTools won't pause unless the developer
    // takes the extra step of enabling pause on caught exceptions. This is
    // unintuitive, though, because even though React has caught the error, from
    // the developer's perspective, the error is uncaught.
    //
    // To preserve the expected "Pause on exceptions" behavior, we don't use a
    // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
    // DOM node, and call the user-provided callback from inside an event handler
    // for that fake event. If the callback throws, the error is "captured" using
    // a global event handler. But because the error happens in a different
    // event loop context, it does not interrupt the normal program flow.
    // Effectively, this gives us try-catch behavior without actually using
    // try-catch. Neat!
    // Check that the browser supports the APIs we need to implement our special
    // DEV version of invokeGuardedCallback
    if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');
        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
            // If document doesn't exist we know for sure we will crash in this method
            // when we call document.createEvent(). However this can cause confusing
            // errors: https://github.com/facebookincubator/create-react-app/issues/3482
            // So we preemptively throw with a better message instead.
            if (!(typeof document !== 'undefined')) throw Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
            var evt = document.createEvent('Event');
            var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
            // set this to true at the beginning, then set it to false right after
            // calling the function. If the function errors, `didError` will never be
            // set to false. This strategy works even if the browser is flaky and
            // fails to call our global error handler, because it doesn't rely on
            // the error event at all.
            var didError = true; // Keeps track of the value of window.event so that we can reset it
            // during the callback to let user code access window.event in the
            // browsers that support it.
            var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
            // dispatching: https://github.com/facebook/react/issues/13688
            var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');
            function restoreAfterDispatch() {
                // We immediately remove the callback from event listeners so that
                // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
                // nested call would trigger the fake event handlers of any call higher
                // in the stack.
                fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
                // window.event assignment in both IE <= 10 as they throw an error
                // "Member not found" in strict mode, and in Firefox which does not
                // support window.event.
                if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) window.event = windowEvent;
            } // Create an event handler for our fake event. We will synchronously
            // dispatch our fake event using `dispatchEvent`. Inside the handler, we
            // call the user-provided callback.
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            function callCallback() {
                didCall = true;
                restoreAfterDispatch();
                func.apply(context, funcArgs);
                didError = false;
            } // Create a global error event handler. We use this to capture the value
            // that was thrown. It's possible that this error handler will fire more
            // than once; for example, if non-React code also calls `dispatchEvent`
            // and a handler for that event throws. We should be resilient to most of
            // those cases. Even if our error event handler fires more than once, the
            // last error event is always used. If the callback actually does error,
            // we know that the last error event is the correct one, because it's not
            // possible for anything else to have happened in between our callback
            // erroring and the code that follows the `dispatchEvent` call below. If
            // the callback doesn't error, but the error event was fired, we know to
            // ignore it because `didError` will be false, as described above.
            var error; // Use this to track whether the error event is ever called.
            var didSetError = false;
            var isCrossOriginError = false;
            function handleWindowError(event) {
                error = event.error;
                didSetError = true;
                if (error === null && event.colno === 0 && event.lineno === 0) isCrossOriginError = true;
                if (event.defaultPrevented) {
                    // Some other error handler has prevented default.
                    // Browsers silence the error report if this happens.
                    // We'll remember this to later decide whether to log it or not.
                    if (error != null && typeof error === 'object') try {
                        error._suppressLogging = true;
                    } catch (inner) {
                    }
                }
            } // Create a fake event type.
            var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers
            window.addEventListener('error', handleWindowError);
            fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
            // errors, it will trigger our global error handler.
            evt.initEvent(evtType, false, false);
            fakeNode.dispatchEvent(evt);
            if (windowEventDescriptor) Object.defineProperty(window, 'event', windowEventDescriptor);
            if (didCall && didError) {
                if (!didSetError) // The callback errored, but the error event never fired.
                error = new Error("An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the \"Pause on exceptions\" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.");
                else if (isCrossOriginError) error = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                this.onError(error);
            } // Remove our event listeners
            window.removeEventListener('error', handleWindowError);
            if (!didCall) {
                // Something went really wrong, and our event was not dispatched.
                // https://github.com/facebook/react/issues/16734
                // https://github.com/facebook/react/issues/16585
                // Fall back to the production implementation.
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
            }
        };
    }
    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
    var hasError = false;
    var caughtError = null; // Used by event system to capture/rethrow the first error.
    var hasRethrowError = false;
    var rethrowError = null;
    var reporter = {
        onError: function(error) {
            hasError = true;
            caughtError = error;
        }
    };
    /**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        hasError = false;
        caughtError = null;
        invokeGuardedCallbackImpl$1.apply(reporter, arguments);
    }
    /**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        invokeGuardedCallback.apply(this, arguments);
        if (hasError) {
            var error = clearCaughtError();
            if (!hasRethrowError) {
                hasRethrowError = true;
                rethrowError = error;
            }
        }
    }
    /**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */ function rethrowCaughtError() {
        if (hasRethrowError) {
            var error = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error;
        }
    }
    function hasCaughtError() {
        return hasError;
    }
    function clearCaughtError() {
        if (hasError) {
            var error = caughtError;
            hasError = false;
            caughtError = null;
            return error;
        } else throw Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    /**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */ function get1(key) {
        return key._reactInternals;
    }
    function has1(key) {
        return key._reactInternals !== undefined;
    }
    function set1(key, value) {
        key._reactInternals = value;
    }
    // Don't change these two values. They're used by React Dev Tools.
    var NoFlags = /*                      */ 0;
    var PerformedWork = /*                */ 1; // You can change the rest (and add more).
    var Placement = /*                    */ 2;
    var Update = /*                       */ 4;
    var PlacementAndUpdate = /*           */ 6;
    var Deletion = /*                     */ 8;
    var ContentReset = /*                 */ 16;
    var Callback = /*                     */ 32;
    var DidCapture = /*                   */ 64;
    var Ref = /*                          */ 128;
    var Snapshot = /*                     */ 256;
    var Passive = /*                      */ 512; // TODO (effects) Remove this bit once the new reconciler is synced to the old.
    var PassiveUnmountPendingDev = /*     */ 8192;
    var Hydrating = /*                    */ 1024;
    var HydratingAndUpdate = /*           */ 1028; // Passive & Update & Callback & Ref & Snapshot
    var LifecycleEffectMask = /*          */ 932; // Union of all host effects
    var HostEffectMask = /*               */ 2047; // These are not really side effects, but we still reuse this field.
    var Incomplete = /*                   */ 2048;
    var ShouldCapture = /*                */ 4096;
    var ForceUpdateForLegacySuspense = /* */ 16384; // Static tags describe aspects of a fiber that are not specific to a render,
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    function getNearestMountedFiber(fiber) {
        var node = fiber;
        var nearestMounted = fiber;
        if (!fiber.alternate) {
            // If there is no alternate, this might be a new tree that isn't inserted
            // yet. If it is, then it will have a pending insertion effect on it.
            var nextNode = node;
            do {
                node = nextNode;
                if ((node.flags & (Placement | Hydrating)) !== NoFlags) // This is an insertion or in-progress hydration. The nearest possible
                // mounted fiber is the parent but we need to continue to figure out
                // if that one is still mounted.
                nearestMounted = node.return;
                nextNode = node.return;
            }while (nextNode)
        } else while(node.return)node = node.return;
        if (node.tag === HostRoot) // TODO: Check if this was a nested HostRoot when used with
        // renderContainerIntoSubtree.
        return nearestMounted;
         // If we didn't hit the root, that means that we're in an disconnected tree
        // that has been unmounted.
        return null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
        if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
                var current = fiber.alternate;
                if (current !== null) suspenseState = current.memoizedState;
            }
            if (suspenseState !== null) return suspenseState.dehydrated;
        }
        return null;
    }
    function getContainerFromFiber(fiber) {
        return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
    }
    function isFiberMounted(fiber) {
        return getNearestMountedFiber(fiber) === fiber;
    }
    function isMounted(component) {
        var owner = ReactCurrentOwner.current;
        if (owner !== null && owner.tag === ClassComponent) {
            var ownerFiber = owner;
            var instance = ownerFiber.stateNode;
            if (!instance._warnedAboutRefsInRender) error1("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentName(ownerFiber.type) || 'A component');
            instance._warnedAboutRefsInRender = true;
        }
        var fiber = get1(component);
        if (!fiber) return false;
        return getNearestMountedFiber(fiber) === fiber;
    }
    function assertIsMounted(fiber) {
        if (!(getNearestMountedFiber(fiber) === fiber)) throw Error("Unable to find node on an unmounted component.");
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            // If there is no alternate, then we only need to check if it is mounted.
            var nearestMounted = getNearestMountedFiber(fiber);
            if (!(nearestMounted !== null)) throw Error("Unable to find node on an unmounted component.");
            if (nearestMounted !== fiber) return null;
            return fiber;
        } // If we have two possible branches, we'll walk backwards up to the root
        // to see what path the root points to. On the way we may hit one of the
        // special cases and we'll deal with them.
        var a = fiber;
        var b = alternate;
        while(true){
            var parentA = a.return;
            if (parentA === null) break;
            var parentB = parentA.alternate;
            if (parentB === null) {
                // There is no alternate. This is an unusual case. Currently, it only
                // happens when a Suspense component is hidden. An extra fragment fiber
                // is inserted in between the Suspense fiber and its children. Skip
                // over this extra fragment fiber and proceed to the next parent.
                var nextParent = parentA.return;
                if (nextParent !== null) {
                    a = b = nextParent;
                    continue;
                } // If there's no parent, we're at the root.
                break;
            } // If both copies of the parent fiber point to the same child, we can
            // assume that the child is current. This happens when we bailout on low
            // priority: the bailed out fiber's child reuses the current child.
            if (parentA.child === parentB.child) {
                var child = parentA.child;
                while(child){
                    if (child === a) {
                        // We've determined that A is the current branch.
                        assertIsMounted(parentA);
                        return fiber;
                    }
                    if (child === b) {
                        // We've determined that B is the current branch.
                        assertIsMounted(parentA);
                        return alternate;
                    }
                    child = child.sibling;
                } // We should never have an alternate for any mounting node. So the only
                throw Error("Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) {
                // The return pointer of A and the return pointer of B point to different
                // fibers. We assume that return pointers never criss-cross, so A must
                // belong to the child set of A.return, and B must belong to the child
                // set of B.return.
                a = parentA;
                b = parentB;
            } else {
                // The return pointers point to the same fiber. We'll have to use the
                // default, slow path: scan the child sets of each parent alternate to see
                // which child belongs to which set.
                //
                // Search parent A's child set
                var didFindChild = false;
                var _child = parentA.child;
                while(_child){
                    if (_child === a) {
                        didFindChild = true;
                        a = parentA;
                        b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = true;
                        b = parentA;
                        a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    // Search parent B's child set
                    _child = parentB.child;
                    while(_child){
                        if (_child === a) {
                            didFindChild = true;
                            a = parentB;
                            b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = true;
                            b = parentB;
                            a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    if (!didFindChild) throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
            }
            if (!(a.alternate === b)) throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        } // If the root is not a host container, we're in a disconnected tree. I.e.
        // unmounted.
        if (!(a.tag === HostRoot)) throw Error("Unable to find node on an unmounted component.");
        if (a.stateNode.current === a) // We've determined that A is the current branch.
        return fiber;
         // Otherwise B has to be current branch.
        return alternate;
    }
    function findCurrentHostFiber(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        if (!currentParent) return null;
         // Next we'll drill down this component to find the first HostComponent/Text.
        var node = currentParent;
        while(true){
            if (node.tag === HostComponent || node.tag === HostText) return node;
            else if (node.child) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === currentParent) return null;
            while(!node.sibling){
                if (!node.return || node.return === currentParent) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        } // Flow needs the return null here, but ESLint complains about it.
        // eslint-disable-next-line no-unreachable
        return null;
    }
    function findCurrentHostFiberWithNoPortals(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        if (!currentParent) return null;
         // Next we'll drill down this component to find the first HostComponent/Text.
        var node = currentParent;
        while(true){
            if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI) return node;
            else if (node.child && node.tag !== HostPortal) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === currentParent) return null;
            while(!node.sibling){
                if (!node.return || node.return === currentParent) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        } // Flow needs the return null here, but ESLint complains about it.
        // eslint-disable-next-line no-unreachable
        return null;
    }
    function doesFiberContain(parentFiber, childFiber) {
        var node = childFiber;
        var parentFiberAlternate = parentFiber.alternate;
        while(node !== null){
            if (node === parentFiber || node === parentFiberAlternate) return true;
            node = node.return;
        }
        return false;
    }
    var attemptUserBlockingHydration;
    function setAttemptUserBlockingHydration(fn) {
        attemptUserBlockingHydration = fn;
    }
    var attemptContinuousHydration;
    function setAttemptContinuousHydration(fn) {
        attemptContinuousHydration = fn;
    }
    var attemptHydrationAtCurrentPriority;
    function setAttemptHydrationAtCurrentPriority(fn) {
        attemptHydrationAtCurrentPriority = fn;
    }
    var attemptHydrationAtPriority;
    function setAttemptHydrationAtPriority(fn) {
        attemptHydrationAtPriority = fn;
    } // TODO: Upgrade this definition once we're on a newer version of Flow that
    var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.
    var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
    // if the last target was dehydrated.
    var queuedFocus = null;
    var queuedDrag = null;
    var queuedMouse = null; // For pointer events there can be one latest event per pointerId.
    var queuedPointers = new Map();
    var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.
    var queuedExplicitHydrationTargets = [];
    function hasQueuedDiscreteEvents() {
        return queuedDiscreteEvents.length > 0;
    }
    var discreteReplayableEvents = [
        'mousedown',
        'mouseup',
        'touchcancel',
        'touchend',
        'touchstart',
        'auxclick',
        'dblclick',
        'pointercancel',
        'pointerdown',
        'pointerup',
        'dragend',
        'dragstart',
        'drop',
        'compositionend',
        'compositionstart',
        'keydown',
        'keypress',
        'keyup',
        'input',
        'textInput',
        'copy',
        'cut',
        'paste',
        'click',
        'change',
        'contextmenu',
        'reset',
        'submit'
    ];
    function isReplayableDiscreteEvent(eventType) {
        return discreteReplayableEvents.indexOf(eventType) > -1;
    }
    function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        return {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags | IS_REPLAYED,
            nativeEvent: nativeEvent,
            targetContainers: [
                targetContainer
            ]
        };
    }
    function queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
        queuedDiscreteEvents.push(queuedEvent);
    } // Resets the replaying for this type of continuous event to no event.
    function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch(domEventName){
            case 'focusin':
            case 'focusout':
                queuedFocus = null;
                break;
            case 'dragenter':
            case 'dragleave':
                queuedDrag = null;
                break;
            case 'mouseover':
            case 'mouseout':
                queuedMouse = null;
                break;
            case 'pointerover':
            case 'pointerout':
                var pointerId = nativeEvent.pointerId;
                queuedPointers.delete(pointerId);
                break;
            case 'gotpointercapture':
            case 'lostpointercapture':
                var _pointerId = nativeEvent.pointerId;
                queuedPointerCaptures.delete(_pointerId);
                break;
        }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
                var _fiber2 = getInstanceFromNode(blockedOn);
                if (_fiber2 !== null) // Attempt to increase the priority of this target.
                attemptContinuousHydration(_fiber2);
            }
            return queuedEvent;
        } // If we have already queued this exact event, then it's because
        // the different event systems have different DOM event listeners.
        // We can accumulate the flags, and the targetContainers, and
        // store a single event to be replayed.
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        var targetContainers = existingQueuedEvent.targetContainers;
        if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) targetContainers.push(targetContainer);
        return existingQueuedEvent;
    }
    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // These set relatedTarget to null because the replayed event will be treated as if we
        // moved from outside the window (no target) onto the target once it hydrates.
        // Instead of mutating we could clone the event.
        switch(domEventName){
            case 'focusin':
                var focusEvent = nativeEvent;
                queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
                return true;
            case 'dragenter':
                var dragEvent = nativeEvent;
                queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
                return true;
            case 'mouseover':
                var mouseEvent = nativeEvent;
                queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
                return true;
            case 'pointerover':
                var pointerEvent = nativeEvent;
                var pointerId = pointerEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
                return true;
            case 'gotpointercapture':
                var _pointerEvent = nativeEvent;
                var _pointerId2 = _pointerEvent.pointerId;
                queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
                return true;
        }
        return false;
    } // Check if this target is unblocked. Returns true if it's unblocked.
    function attemptExplicitHydrationTarget(queuedTarget) {
        // TODO: This function shares a lot of logic with attemptToDispatchEvent.
        // Try to unify them. It's a bit tricky since it would require two return
        // values.
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) {
                        // We're blocked on hydrating this boundary.
                        // Increase its priority.
                        queuedTarget.blockedOn = instance;
                        attemptHydrationAtPriority(queuedTarget.lanePriority, function() {
                            Scheduler.unstable_runWithPriority(queuedTarget.priority, function() {
                                attemptHydrationAtCurrentPriority(nearestMounted);
                            });
                        });
                        return;
                    }
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (root.hydrate) {
                        queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
                        // a root other than sync.
                        return;
                    }
                }
            }
        }
        queuedTarget.blockedOn = null;
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (queuedEvent.blockedOn !== null) return false;
        var targetContainers = queuedEvent.targetContainers;
        while(targetContainers.length > 0){
            var targetContainer = targetContainers[0];
            var nextBlockedOn = attemptToDispatchEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn !== null) {
                // We're still blocked. Try again later.
                var _fiber3 = getInstanceFromNode(nextBlockedOn);
                if (_fiber3 !== null) attemptContinuousHydration(_fiber3);
                queuedEvent.blockedOn = nextBlockedOn;
                return false;
            } // This target container was successfully dispatched. Try the next.
            targetContainers.shift();
        }
        return true;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        if (attemptReplayContinuousQueuedEvent(queuedEvent)) map.delete(key);
    }
    function replayUnblockedEvents() {
        hasScheduledReplayAttempt = false; // First replay discrete events.
        while(queuedDiscreteEvents.length > 0){
            var nextDiscreteEvent = queuedDiscreteEvents[0];
            if (nextDiscreteEvent.blockedOn !== null) {
                // We're still blocked.
                // Increase the priority of this boundary to unblock
                // the next discrete event.
                var _fiber4 = getInstanceFromNode(nextDiscreteEvent.blockedOn);
                if (_fiber4 !== null) attemptUserBlockingHydration(_fiber4);
                break;
            }
            var targetContainers = nextDiscreteEvent.targetContainers;
            while(targetContainers.length > 0){
                var targetContainer = targetContainers[0];
                var nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.domEventName, nextDiscreteEvent.eventSystemFlags, targetContainer, nextDiscreteEvent.nativeEvent);
                if (nextBlockedOn !== null) {
                    // We're still blocked. Try again later.
                    nextDiscreteEvent.blockedOn = nextBlockedOn;
                    break;
                } // This target container was successfully dispatched. Try the next.
                targetContainers.shift();
            }
            if (nextDiscreteEvent.blockedOn === null) // We've successfully replayed the first event. Let's try the next one.
            queuedDiscreteEvents.shift();
        } // Next replay any continuous events.
        if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) queuedFocus = null;
        if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) queuedDrag = null;
        if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) queuedMouse = null;
        queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
        queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
                hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
                // now unblocked. This first might not actually be unblocked yet.
                // We could check it early to avoid scheduling an unnecessary callback.
                Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
            }
        }
    }
    function retryIfBlockedOn(unblocked) {
        // Mark anything that was blocked on this as no longer blocked
        // and eligible for a replay.
        if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
            // worth it because we expect very few discrete events to queue up and once
            // we are actually fully unblocked it will be fast to replay them.
            for(var i = 1; i < queuedDiscreteEvents.length; i++){
                var queuedEvent = queuedDiscreteEvents[i];
                if (queuedEvent.blockedOn === unblocked) queuedEvent.blockedOn = null;
            }
        }
        if (queuedFocus !== null) scheduleCallbackIfUnblocked(queuedFocus, unblocked);
        if (queuedDrag !== null) scheduleCallbackIfUnblocked(queuedDrag, unblocked);
        if (queuedMouse !== null) scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        var unblock = function(queuedEvent) {
            return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
        };
        queuedPointers.forEach(unblock);
        queuedPointerCaptures.forEach(unblock);
        for(var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++){
            var queuedTarget = queuedExplicitHydrationTargets[_i];
            if (queuedTarget.blockedOn === unblocked) queuedTarget.blockedOn = null;
        }
        while(queuedExplicitHydrationTargets.length > 0){
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) break;
            else {
                attemptExplicitHydrationTarget(nextExplicitTarget);
                if (nextExplicitTarget.blockedOn === null) // We're unblocked.
                queuedExplicitHydrationTargets.shift();
            }
        }
    }
    var DiscreteEvent = 0;
    var UserBlockingEvent = 1;
    var ContinuousEvent = 2;
    /**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */ function makePrefixMap(styleProp, eventName) {
        var prefixes = {
        };
        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes['Webkit' + styleProp] = 'webkit' + eventName;
        prefixes['Moz' + styleProp] = 'moz' + eventName;
        return prefixes;
    }
    /**
 * A list of event names to a configurable list of vendor prefixes.
 */ var vendorPrefixes = {
        animationend: makePrefixMap('Animation', 'AnimationEnd'),
        animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
        animationstart: makePrefixMap('Animation', 'AnimationStart'),
        transitionend: makePrefixMap('Transition', 'TransitionEnd')
    };
    /**
 * Event names that have already been detected and prefixed (if applicable).
 */ var prefixedEventNames = {
    };
    /**
 * Element to check for prefixes on.
 */ var style1 = {
    };
    /**
 * Bootstrap if a DOM exists.
 */ if (canUseDOM) {
        style1 = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
        // the un-prefixed "animation" and "transition" properties are defined on the
        // style object but the events that fire will still be prefixed, so we need
        // to check if the un-prefixed events are usable, and if not remove them from the map.
        if (!('AnimationEvent' in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
        } // Same as above
        if (!('TransitionEvent' in window)) delete vendorPrefixes.transitionend.transition;
    }
    /**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */ function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
        else if (!vendorPrefixes[eventName]) return eventName;
        var prefixMap = vendorPrefixes[eventName];
        for(var styleProp in prefixMap){
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style1) return prefixedEventNames[eventName] = prefixMap[styleProp];
        }
        return eventName;
    }
    var ANIMATION_END = getVendorPrefixedEventName('animationend');
    var ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');
    var ANIMATION_START = getVendorPrefixedEventName('animationstart');
    var TRANSITION_END = getVendorPrefixedEventName('transitionend');
    var topLevelEventsToReactNames = new Map();
    var eventPriorities = new Map(); // We store most of the events in this module in pairs of two strings so we can re-use
    // the code required to apply the same logic for event prioritization and that of the
    // SimpleEventPlugin. This complicates things slightly, but the aim is to reduce code
    // duplication (for which there would be quite a bit). For the events that are not needed
    // for the SimpleEventPlugin (otherDiscreteEvents) we process them separately as an
    // array of top level events.
    // Lastly, we ignore prettier so we can keep the formatting sane.
    // prettier-ignore
    var discreteEventPairsForSimpleEventPlugin = [
        'cancel',
        'cancel',
        'click',
        'click',
        'close',
        'close',
        'contextmenu',
        'contextMenu',
        'copy',
        'copy',
        'cut',
        'cut',
        'auxclick',
        'auxClick',
        'dblclick',
        'doubleClick',
        'dragend',
        'dragEnd',
        'dragstart',
        'dragStart',
        'drop',
        'drop',
        'focusin',
        'focus',
        'focusout',
        'blur',
        'input',
        'input',
        'invalid',
        'invalid',
        'keydown',
        'keyDown',
        'keypress',
        'keyPress',
        'keyup',
        'keyUp',
        'mousedown',
        'mouseDown',
        'mouseup',
        'mouseUp',
        'paste',
        'paste',
        'pause',
        'pause',
        'play',
        'play',
        'pointercancel',
        'pointerCancel',
        'pointerdown',
        'pointerDown',
        'pointerup',
        'pointerUp',
        'ratechange',
        'rateChange',
        'reset',
        'reset',
        'seeked',
        'seeked',
        'submit',
        'submit',
        'touchcancel',
        'touchCancel',
        'touchend',
        'touchEnd',
        'touchstart',
        'touchStart',
        'volumechange',
        'volumeChange'
    ];
    var otherDiscreteEvents = [
        'change',
        'selectionchange',
        'textInput',
        'compositionstart',
        'compositionend',
        'compositionupdate'
    ];
    var userBlockingPairsForSimpleEventPlugin = [
        'drag',
        'drag',
        'dragenter',
        'dragEnter',
        'dragexit',
        'dragExit',
        'dragleave',
        'dragLeave',
        'dragover',
        'dragOver',
        'mousemove',
        'mouseMove',
        'mouseout',
        'mouseOut',
        'mouseover',
        'mouseOver',
        'pointermove',
        'pointerMove',
        'pointerout',
        'pointerOut',
        'pointerover',
        'pointerOver',
        'scroll',
        'scroll',
        'toggle',
        'toggle',
        'touchmove',
        'touchMove',
        'wheel',
        'wheel'
    ]; // prettier-ignore
    var continuousPairsForSimpleEventPlugin = [
        'abort',
        'abort',
        ANIMATION_END,
        'animationEnd',
        ANIMATION_ITERATION,
        'animationIteration',
        ANIMATION_START,
        'animationStart',
        'canplay',
        'canPlay',
        'canplaythrough',
        'canPlayThrough',
        'durationchange',
        'durationChange',
        'emptied',
        'emptied',
        'encrypted',
        'encrypted',
        'ended',
        'ended',
        'error',
        'error',
        'gotpointercapture',
        'gotPointerCapture',
        'load',
        'load',
        'loadeddata',
        'loadedData',
        'loadedmetadata',
        'loadedMetadata',
        'loadstart',
        'loadStart',
        'lostpointercapture',
        'lostPointerCapture',
        'playing',
        'playing',
        'progress',
        'progress',
        'seeking',
        'seeking',
        'stalled',
        'stalled',
        'suspend',
        'suspend',
        'timeupdate',
        'timeUpdate',
        TRANSITION_END,
        'transitionEnd',
        'waiting',
        'waiting'
    ];
    /**
 * Turns
 * ['abort', ...]
 *
 * into
 *
 * topLevelEventsToReactNames = new Map([
 *   ['abort', 'onAbort'],
 * ]);
 *
 * and registers them.
 */ function registerSimplePluginEventsAndSetTheirPriorities(eventTypes, priority) {
        // As the event types are in pairs of two, we need to iterate
        // through in twos. The events are in pairs of two to save code
        // and improve init perf of processing this array, as it will
        // result in far fewer object allocations and property accesses
        // if we only use three arrays to process all the categories of
        // instead of tuples.
        for(var i = 0; i < eventTypes.length; i += 2){
            var topEvent = eventTypes[i];
            var event = eventTypes[i + 1];
            var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
            var reactName = 'on' + capitalizedEvent;
            eventPriorities.set(topEvent, priority);
            topLevelEventsToReactNames.set(topEvent, reactName);
            registerTwoPhaseEvent(reactName, [
                topEvent
            ]);
        }
    }
    function setEventPriorities(eventTypes, priority) {
        for(var i = 0; i < eventTypes.length; i++)eventPriorities.set(eventTypes[i], priority);
    }
    function getEventPriorityForPluginSystem(domEventName) {
        var priority = eventPriorities.get(domEventName); // Default to a ContinuousEvent. Note: we might
        // want to warn if we can't detect the priority
        // for the event.
        return priority === undefined ? ContinuousEvent : priority;
    }
    function registerSimpleEvents() {
        registerSimplePluginEventsAndSetTheirPriorities(discreteEventPairsForSimpleEventPlugin, DiscreteEvent);
        registerSimplePluginEventsAndSetTheirPriorities(userBlockingPairsForSimpleEventPlugin, UserBlockingEvent);
        registerSimplePluginEventsAndSetTheirPriorities(continuousPairsForSimpleEventPlugin, ContinuousEvent);
        setEventPriorities(otherDiscreteEvents, DiscreteEvent);
    }
    var Scheduler_now = Scheduler.unstable_now;
    // Provide explicit error message when production+profiling bundle of e.g.
    // react-dom is used with production (non-profiling) bundle of
    // scheduler/tracing
    if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
    // ascending numbers so we can compare them like numbers. They start at 90 to
    // avoid clashing with Scheduler's priorities.
    var ImmediatePriority = 99;
    var UserBlockingPriority = 98;
    var NormalPriority = 97;
    var LowPriority = 96;
    var IdlePriority = 95; // NoPriority is the absence of priority. Also React-only.
    var NoPriority = 90;
    var initialTimeMs = Scheduler_now(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.
    var SyncLanePriority = 15;
    var SyncBatchedLanePriority = 14;
    var InputDiscreteHydrationLanePriority = 13;
    var InputDiscreteLanePriority = 12;
    var InputContinuousHydrationLanePriority = 11;
    var InputContinuousLanePriority = 10;
    var DefaultHydrationLanePriority = 9;
    var DefaultLanePriority = 8;
    var TransitionHydrationPriority = 7;
    var TransitionPriority = 6;
    var RetryLanePriority = 5;
    var SelectiveHydrationLanePriority = 4;
    var IdleHydrationLanePriority = 3;
    var IdleLanePriority = 2;
    var OffscreenLanePriority = 1;
    var NoLanePriority = 0;
    var TotalLanes = 31;
    var NoLanes = /*                        */ 0;
    var NoLane = /*                          */ 0;
    var SyncLane = /*                        */ 1;
    var SyncBatchedLane = /*                 */ 2;
    var InputDiscreteHydrationLane = /*      */ 4;
    var InputDiscreteLanes = /*                    */ 24;
    var InputContinuousHydrationLane = /*           */ 32;
    var InputContinuousLanes = /*                  */ 192;
    var DefaultHydrationLane = /*            */ 256;
    var DefaultLanes = /*                   */ 3584;
    var TransitionHydrationLane = /*                */ 4096;
    var TransitionLanes = /*                       */ 4186112;
    var RetryLanes = /*                            */ 62914560;
    var SomeRetryLane = /*                  */ 33554432;
    var SelectiveHydrationLane = /*          */ 67108864;
    var NonIdleLanes = /*                                 */ 134217727;
    var IdleHydrationLane = /*               */ 134217728;
    var IdleLanes = /*                             */ 805306368;
    var OffscreenLane = /*                   */ 1073741824;
    var NoTimestamp = -1;
    function setCurrentUpdateLanePriority(newLanePriority) {
    } // "Registers" used to "return" multiple values
    // Used by getHighestPriorityLanes and getNextLanes:
    var return_highestLanePriority = DefaultLanePriority;
    function getHighestPriorityLanes(lanes) {
        if ((SyncLane & lanes) !== NoLanes) {
            return_highestLanePriority = SyncLanePriority;
            return SyncLane;
        }
        if ((SyncBatchedLane & lanes) !== NoLanes) {
            return_highestLanePriority = SyncBatchedLanePriority;
            return SyncBatchedLane;
        }
        if ((InputDiscreteHydrationLane & lanes) !== NoLanes) {
            return_highestLanePriority = InputDiscreteHydrationLanePriority;
            return InputDiscreteHydrationLane;
        }
        var inputDiscreteLanes = InputDiscreteLanes & lanes;
        if (inputDiscreteLanes !== NoLanes) {
            return_highestLanePriority = InputDiscreteLanePriority;
            return inputDiscreteLanes;
        }
        if ((lanes & InputContinuousHydrationLane) !== NoLanes) {
            return_highestLanePriority = InputContinuousHydrationLanePriority;
            return InputContinuousHydrationLane;
        }
        var inputContinuousLanes = InputContinuousLanes & lanes;
        if (inputContinuousLanes !== NoLanes) {
            return_highestLanePriority = InputContinuousLanePriority;
            return inputContinuousLanes;
        }
        if ((lanes & DefaultHydrationLane) !== NoLanes) {
            return_highestLanePriority = DefaultHydrationLanePriority;
            return DefaultHydrationLane;
        }
        var defaultLanes = DefaultLanes & lanes;
        if (defaultLanes !== NoLanes) {
            return_highestLanePriority = DefaultLanePriority;
            return defaultLanes;
        }
        if ((lanes & TransitionHydrationLane) !== NoLanes) {
            return_highestLanePriority = TransitionHydrationPriority;
            return TransitionHydrationLane;
        }
        var transitionLanes = TransitionLanes & lanes;
        if (transitionLanes !== NoLanes) {
            return_highestLanePriority = TransitionPriority;
            return transitionLanes;
        }
        var retryLanes = RetryLanes & lanes;
        if (retryLanes !== NoLanes) {
            return_highestLanePriority = RetryLanePriority;
            return retryLanes;
        }
        if (lanes & SelectiveHydrationLane) {
            return_highestLanePriority = SelectiveHydrationLanePriority;
            return SelectiveHydrationLane;
        }
        if ((lanes & IdleHydrationLane) !== NoLanes) {
            return_highestLanePriority = IdleHydrationLanePriority;
            return IdleHydrationLane;
        }
        var idleLanes = IdleLanes & lanes;
        if (idleLanes !== NoLanes) {
            return_highestLanePriority = IdleLanePriority;
            return idleLanes;
        }
        if ((OffscreenLane & lanes) !== NoLanes) {
            return_highestLanePriority = OffscreenLanePriority;
            return OffscreenLane;
        }
        error1('Should have found matching lanes. This is a bug in React.');
        return_highestLanePriority = DefaultLanePriority;
        return lanes;
    }
    function schedulerPriorityToLanePriority(schedulerPriorityLevel) {
        switch(schedulerPriorityLevel){
            case ImmediatePriority:
                return SyncLanePriority;
            case UserBlockingPriority:
                return InputContinuousLanePriority;
            case NormalPriority:
            case LowPriority:
                // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
                return DefaultLanePriority;
            case IdlePriority:
                return IdleLanePriority;
            default:
                return NoLanePriority;
        }
    }
    function lanePriorityToSchedulerPriority(lanePriority) {
        switch(lanePriority){
            case SyncLanePriority:
            case SyncBatchedLanePriority:
                return ImmediatePriority;
            case InputDiscreteHydrationLanePriority:
            case InputDiscreteLanePriority:
            case InputContinuousHydrationLanePriority:
            case InputContinuousLanePriority:
                return UserBlockingPriority;
            case DefaultHydrationLanePriority:
            case DefaultLanePriority:
            case TransitionHydrationPriority:
            case TransitionPriority:
            case SelectiveHydrationLanePriority:
            case RetryLanePriority:
                return NormalPriority;
            case IdleHydrationLanePriority:
            case IdleLanePriority:
            case OffscreenLanePriority:
                return IdlePriority;
            case NoLanePriority:
                return NoPriority;
            default:
                throw Error("Invalid update priority: " + lanePriority + ". This is a bug in React.");
        }
    }
    function getNextLanes(root, wipLanes) {
        // Early bailout if there's no pending work left.
        var pendingLanes = root.pendingLanes;
        if (pendingLanes === NoLanes) {
            return_highestLanePriority = NoLanePriority;
            return NoLanes;
        }
        var nextLanes = NoLanes;
        var nextLanePriority = NoLanePriority;
        var expiredLanes = root.expiredLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes; // Check if any work has expired.
        if (expiredLanes !== NoLanes) {
            nextLanes = expiredLanes;
            nextLanePriority = return_highestLanePriority = SyncLanePriority;
        } else {
            // Do not work on any idle work until all the non-idle work has finished,
            // even if the work is suspended.
            var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
            if (nonIdlePendingLanes !== NoLanes) {
                var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
                if (nonIdleUnblockedLanes !== NoLanes) {
                    nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
                    nextLanePriority = return_highestLanePriority;
                } else {
                    var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                    if (nonIdlePingedLanes !== NoLanes) {
                        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
                        nextLanePriority = return_highestLanePriority;
                    }
                }
            } else {
                // The only remaining work is Idle.
                var unblockedLanes = pendingLanes & ~suspendedLanes;
                if (unblockedLanes !== NoLanes) {
                    nextLanes = getHighestPriorityLanes(unblockedLanes);
                    nextLanePriority = return_highestLanePriority;
                } else if (pingedLanes !== NoLanes) {
                    nextLanes = getHighestPriorityLanes(pingedLanes);
                    nextLanePriority = return_highestLanePriority;
                }
            }
        }
        if (nextLanes === NoLanes) // This should only be reachable if we're suspended
        // TODO: Consider warning in this path if a fallback timer is not scheduled.
        return NoLanes;
         // If there are higher priority lanes, we'll include them even if they
        // are suspended.
        nextLanes = pendingLanes & getEqualOrHigherPriorityLanes(nextLanes); // If we're already in the middle of a render, switching lanes will interrupt
        // it and we'll lose our progress. We should only do this if the new lanes are
        // higher priority.
        if (wipLanes !== NoLanes && wipLanes !== nextLanes && // bother waiting until the root is complete.
        (wipLanes & suspendedLanes) === NoLanes) {
            getHighestPriorityLanes(wipLanes);
            var wipLanePriority = return_highestLanePriority;
            if (nextLanePriority <= wipLanePriority) return wipLanes;
            else return_highestLanePriority = nextLanePriority;
        } // Check for entangled lanes and add them to the batch.
        //
        // A lane is said to be entangled with another when it's not allowed to render
        // in a batch that does not also include the other lane. Typically we do this
        // when multiple updates have the same source, and we only want to respond to
        // the most recent event from that source.
        //
        // Note that we apply entanglements *after* checking for partial work above.
        // This means that if a lane is entangled during an interleaved event while
        // it's already rendering, we won't interrupt it. This is intentional, since
        // entanglement is usually "best effort": we'll try our best to render the
        // lanes in the same batch, but it's not worth throwing out partially
        // completed work in order to do it.
        //
        // For those exceptions where entanglement is semantically important, like
        // useMutableSource, we should ensure that there is no partial work at the
        // time we apply the entanglement.
        var entangledLanes = root.entangledLanes;
        if (entangledLanes !== NoLanes) {
            var entanglements = root.entanglements;
            var lanes = nextLanes & entangledLanes;
            while(lanes > 0){
                var index = pickArbitraryLaneIndex(lanes);
                var lane = 1 << index;
                nextLanes |= entanglements[index];
                lanes &= ~lane;
            }
        }
        return nextLanes;
    }
    function getMostRecentEventTime(root, lanes) {
        var eventTimes = root.eventTimes;
        var mostRecentEventTime = NoTimestamp;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var eventTime = eventTimes[index];
            if (eventTime > mostRecentEventTime) mostRecentEventTime = eventTime;
            lanes &= ~lane;
        }
        return mostRecentEventTime;
    }
    function computeExpirationTime(lane, currentTime) {
        // TODO: Expiration heuristic is constant per lane, so could use a map.
        getHighestPriorityLanes(lane);
        var priority = return_highestLanePriority;
        if (priority >= InputContinuousLanePriority) // User interactions should expire slightly more quickly.
        //
        // NOTE: This is set to the corresponding constant as in Scheduler.js. When
        // we made it larger, a product metric in www regressed, suggesting there's
        // a user interaction that's being starved by a series of synchronous
        // updates. If that theory is correct, the proper solution is to fix the
        // starvation. However, this scenario supports the idea that expiration
        // times are an important safeguard when starvation does happen.
        //
        // Also note that, in the case of user input specifically, this will soon no
        // longer be an issue because we plan to make user input synchronous by
        // default (until you enter `startTransition`, of course.)
        //
        // If weren't planning to make these updates synchronous soon anyway, I
        // would probably make this number a configurable parameter.
        return currentTime + 250;
        else if (priority >= TransitionPriority) return currentTime + 5000;
        else // Anything idle priority or lower should never expire.
        return NoTimestamp;
    }
    function markStarvedLanesAsExpired(root, currentTime) {
        // TODO: This gets called every time we yield. We can optimize by storing
        // the earliest expiration time on the root. Then use that to quickly bail out
        // of this function.
        var pendingLanes = root.pendingLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes;
        var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
        // expiration time. If so, we'll assume the update is being starved and mark
        // it as expired to force it to finish.
        var lanes = pendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var expirationTime = expirationTimes[index];
            if (expirationTime === NoTimestamp) // Found a pending lane with no expiration time. If it's not suspended, or
            // if it's pinged, assume it's CPU-bound. Compute a new expiration time
            // using the current time.
            {
                if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) // Assumes timestamps are monotonically increasing.
                expirationTimes[index] = computeExpirationTime(lane, currentTime);
            } else if (expirationTime <= currentTime) // This lane expired
            root.expiredLanes |= lane;
            lanes &= ~lane;
        }
    } // This returns the highest priority pending lanes regardless of whether they
    function getLanesToRetrySynchronouslyOnError(root) {
        var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;
        if (everythingButOffscreen !== NoLanes) return everythingButOffscreen;
        if (everythingButOffscreen & OffscreenLane) return OffscreenLane;
        return NoLanes;
    }
    function returnNextLanesPriority() {
        return return_highestLanePriority;
    }
    function includesNonIdleWork(lanes) {
        return (lanes & NonIdleLanes) !== NoLanes;
    }
    function includesOnlyRetries(lanes) {
        return (lanes & RetryLanes) === lanes;
    }
    function includesOnlyTransitions(lanes) {
        return (lanes & TransitionLanes) === lanes;
    } // To ensure consistency across multiple updates in the same event, this should
    // be a pure function, so that it always returns the same lane for given inputs.
    function findUpdateLane(lanePriority, wipLanes) {
        switch(lanePriority){
            case NoLanePriority:
                break;
            case SyncLanePriority:
                return SyncLane;
            case SyncBatchedLanePriority:
                return SyncBatchedLane;
            case InputDiscreteLanePriority:
                var _lane = pickArbitraryLane(InputDiscreteLanes & ~wipLanes);
                if (_lane === NoLane) // Shift to the next priority level
                return findUpdateLane(InputContinuousLanePriority, wipLanes);
                return _lane;
            case InputContinuousLanePriority:
                var _lane2 = pickArbitraryLane(InputContinuousLanes & ~wipLanes);
                if (_lane2 === NoLane) // Shift to the next priority level
                return findUpdateLane(DefaultLanePriority, wipLanes);
                return _lane2;
            case DefaultLanePriority:
                var _lane3 = pickArbitraryLane(DefaultLanes & ~wipLanes);
                if (_lane3 === NoLane) {
                    // If all the default lanes are already being worked on, look for a
                    // lane in the transition range.
                    _lane3 = pickArbitraryLane(TransitionLanes & ~wipLanes);
                    if (_lane3 === NoLane) // All the transition lanes are taken, too. This should be very
                    // rare, but as a last resort, pick a default lane. This will have
                    // the effect of interrupting the current work-in-progress render.
                    _lane3 = pickArbitraryLane(DefaultLanes);
                }
                return _lane3;
            case TransitionPriority:
            case RetryLanePriority:
                break;
            case IdleLanePriority:
                var lane = pickArbitraryLane(IdleLanes & ~wipLanes);
                if (lane === NoLane) lane = pickArbitraryLane(IdleLanes);
                return lane;
        }
        throw Error("Invalid update priority: " + lanePriority + ". This is a bug in React.");
    } // To ensure consistency across multiple updates in the same event, this should
    // be pure function, so that it always returns the same lane for given inputs.
    function findTransitionLane(wipLanes, pendingLanes) {
        // First look for lanes that are completely unclaimed, i.e. have no
        // pending work.
        var lane = pickArbitraryLane(TransitionLanes & ~pendingLanes);
        if (lane === NoLane) {
            // If all lanes have pending work, look for a lane that isn't currently
            // being worked on.
            lane = pickArbitraryLane(TransitionLanes & ~wipLanes);
            if (lane === NoLane) // If everything is being worked on, pick any lane. This has the
            // effect of interrupting the current work-in-progress.
            lane = pickArbitraryLane(TransitionLanes);
        }
        return lane;
    } // To ensure consistency across multiple updates in the same event, this should
    // be pure function, so that it always returns the same lane for given inputs.
    function findRetryLane(wipLanes) {
        // This is a fork of `findUpdateLane` designed specifically for Suspense
        // "retries" — a special update that attempts to flip a Suspense boundary
        // from its placeholder state to its primary/resolved state.
        var lane = pickArbitraryLane(RetryLanes & ~wipLanes);
        if (lane === NoLane) lane = pickArbitraryLane(RetryLanes);
        return lane;
    }
    function getHighestPriorityLane(lanes) {
        return lanes & -lanes;
    }
    function getLowestPriorityLane(lanes) {
        // This finds the most significant non-zero bit.
        var index = 31 - clz32(lanes);
        return index < 0 ? NoLanes : 1 << index;
    }
    function getEqualOrHigherPriorityLanes(lanes) {
        return (getLowestPriorityLane(lanes) << 1) - 1;
    }
    function pickArbitraryLane(lanes) {
        // This wrapper function gets inlined. Only exists so to communicate that it
        // doesn't matter which bit is selected; you can pick any bit without
        // affecting the algorithms where its used. Here I'm using
        // getHighestPriorityLane because it requires the fewest operations.
        return getHighestPriorityLane(lanes);
    }
    function pickArbitraryLaneIndex(lanes) {
        return 31 - clz32(lanes);
    }
    function laneToIndex(lane) {
        return pickArbitraryLaneIndex(lane);
    }
    function includesSomeLane(a, b) {
        return (a & b) !== NoLanes;
    }
    function isSubsetOfLanes(set, subset) {
        return (set & subset) === subset;
    }
    function mergeLanes(a, b) {
        return a | b;
    }
    function removeLanes(set, subset) {
        return set & ~subset;
    } // Seems redundant, but it changes the type from a single lane (used for
    // updates) to a group of lanes (used for flushing work).
    function laneToLanes(lane) {
        return lane;
    }
    function higherPriorityLane(a, b) {
        // This works because the bit ranges decrease in priority as you go left.
        return a !== NoLane && a < b ? a : b;
    }
    function createLaneMap(initial) {
        // Intentionally pushing one by one.
        // https://v8.dev/blog/elements-kinds#avoid-creating-holes
        var laneMap = [];
        for(var i = 0; i < TotalLanes; i++)laneMap.push(initial);
        return laneMap;
    }
    function markRootUpdated(root, updateLane, eventTime) {
        root.pendingLanes |= updateLane; // TODO: Theoretically, any update to any lane can unblock any other lane. But
        // it's not practical to try every single possible combination. We need a
        // heuristic to decide which lanes to attempt to render, and in which batches.
        // For now, we use the same heuristic as in the old ExpirationTimes model:
        // retry any lane at equal or lower priority, but don't try updates at higher
        // priority without also including the lower priority updates. This works well
        // when considering updates across different priority levels, but isn't
        // sufficient for updates within the same priority, since we want to treat
        // those updates as parallel.
        // Unsuspend any update at equal or lower priority.
        var higherPriorityLanes = updateLane - 1; // Turns 0b1000 into 0b0111
        root.suspendedLanes &= higherPriorityLanes;
        root.pingedLanes &= higherPriorityLanes;
        var eventTimes = root.eventTimes;
        var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
        // recent event, and we assume time is monotonically increasing.
        eventTimes[index] = eventTime;
    }
    function markRootSuspended(root, suspendedLanes) {
        root.suspendedLanes |= suspendedLanes;
        root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.
        var expirationTimes = root.expirationTimes;
        var lanes = suspendedLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootPinged(root, pingedLanes, eventTime) {
        root.pingedLanes |= root.suspendedLanes & pingedLanes;
    }
    function markDiscreteUpdatesExpired(root) {
        root.expiredLanes |= InputDiscreteLanes & root.pendingLanes;
    }
    function hasDiscreteLanes(lanes) {
        return (lanes & InputDiscreteLanes) !== NoLanes;
    }
    function markRootMutableRead(root, updateLane) {
        root.mutableReadLanes |= updateLane & root.pendingLanes;
    }
    function markRootFinished(root, remainingLanes) {
        var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
        root.pendingLanes = remainingLanes; // Let's try everything again
        root.suspendedLanes = 0;
        root.pingedLanes = 0;
        root.expiredLanes &= remainingLanes;
        root.mutableReadLanes &= remainingLanes;
        root.entangledLanes &= remainingLanes;
        var entanglements = root.entanglements;
        var eventTimes = root.eventTimes;
        var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work
        var lanes = noLongerPendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            entanglements[index] = NoLanes;
            eventTimes[index] = NoTimestamp;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootEntangled(root, entangledLanes) {
        root.entangledLanes |= entangledLanes;
        var entanglements = root.entanglements;
        var lanes = entangledLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            entanglements[index] |= entangledLanes;
            lanes &= ~lane;
        }
    }
    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros. Only used on lanes, so assume input is an integer.
    // Based on:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
    var log = Math.log;
    var LN2 = Math.LN2;
    function clz32Fallback(lanes) {
        if (lanes === 0) return 32;
        return 31 - (log(lanes) / LN2 | 0) | 0;
    }
    // Intentionally not named imports because Rollup would use dynamic dispatch for
    var UserBlockingPriority$1 = Scheduler.unstable_UserBlockingPriority, runWithPriority = Scheduler.unstable_runWithPriority; // TODO: can we stop exporting these?
    var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
    // We'd like to remove this but it's not clear if this is safe.
    function setEnabled(enabled) {
        _enabled = !!enabled;
    }
    function isEnabled() {
        return _enabled;
    }
    function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
        var eventPriority = getEventPriorityForPluginSystem(domEventName);
        var listenerWrapper;
        switch(eventPriority){
            case DiscreteEvent:
                listenerWrapper = dispatchDiscreteEvent;
                break;
            case UserBlockingEvent:
                listenerWrapper = dispatchUserBlockingUpdate;
                break;
            case ContinuousEvent:
            default:
                listenerWrapper = dispatchEvent;
                break;
        }
        return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
    }
    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
        discreteUpdates(dispatchEvent, domEventName, eventSystemFlags, container, nativeEvent);
    }
    function dispatchUserBlockingUpdate(domEventName, eventSystemFlags, container, nativeEvent) {
        runWithPriority(UserBlockingPriority$1, dispatchEvent.bind(null, domEventName, eventSystemFlags, container, nativeEvent));
    }
    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (!_enabled) return;
        var allowReplay = true;
        // TODO: replaying capture phase events is currently broken
        // because we used to do it during top-level native bubble handlers
        // but now we use different bubble and capture handlers.
        // In eager mode, we attach capture listeners early, so we need
        // to filter them out until we fix the logic to handle them correctly.
        // This could've been outside the flag but I put it inside to reduce risk.
        allowReplay = (eventSystemFlags & IS_CAPTURE_PHASE) === 0;
        if (allowReplay && hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(domEventName)) {
            // If we already have a queue of discrete events, and this is another discrete
            // event, then we can't dispatch it regardless of its target, since they
            // need to dispatch in order.
            queueDiscreteEvent(null, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            return;
        }
        var blockedOn = attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
        if (blockedOn === null) {
            // We successfully dispatched this event.
            if (allowReplay) clearIfContinuousEvent(domEventName, nativeEvent);
            return;
        }
        if (allowReplay) {
            if (isReplayableDiscreteEvent(domEventName)) {
                // This this to be replayed later once the target is available.
                queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
                return;
            }
            if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) return;
             // We need to clear only if we didn't queue because
            // queueing is accummulative.
            clearIfContinuousEvent(domEventName, nativeEvent);
        } // This is not replayable so we'll invoke it but without a target,
        // in case the event system needs to trace it.
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
    } // Attempt dispatching an event. Returns a SuspenseInstance or Container if it's blocked.
    function attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // TODO: Warn if _enabled is false.
        var nativeEventTarget = getEventTarget(nativeEvent);
        var targetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) // This tree has been unmounted already. Dispatch without a target.
            targetInst = null;
            else {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) // Queue the event to be replayed later. Abort dispatching since we
                    // don't want this event dispatched twice through the event system.
                    // TODO: If this is the first discrete event in the queue. Schedule an increased
                    // priority for this boundary.
                    return instance;
                     // This shouldn't happen, something went wrong but to avoid blocking
                    // the whole system, dispatch the event without a target.
                    // TODO: Warn.
                    targetInst = null;
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (root.hydrate) // If this happens during a replay something went wrong and it might block
                    // the whole system.
                    return getContainerFromFiber(nearestMounted);
                    targetInst = null;
                } else if (nearestMounted !== targetInst) // If we get an event (ex: img onload) before committing that
                // component's mount, ignore it for now (that is, treat it as if it was an
                // event on a non-React tree). We might also consider queueing events and
                // dispatching them after the mount.
                targetInst = null;
            }
        }
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer); // We're not blocked on anything.
        return null;
    }
    function addEventBubbleListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, false);
        return listener;
    }
    function addEventCaptureListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, true);
        return listener;
    }
    function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            capture: true,
            passive: passive
        });
        return listener;
    }
    function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            passive: passive
        });
        return listener;
    }
    /**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */ var root1 = null;
    var startText = null;
    var fallbackText = null;
    function initialize(nativeEventTarget) {
        root1 = nativeEventTarget;
        startText = getText();
        return true;
    }
    function reset() {
        root1 = null;
        startText = null;
        fallbackText = null;
    }
    function getData() {
        if (fallbackText) return fallbackText;
        var start;
        var startValue = startText;
        var startLength = startValue.length;
        var end;
        var endValue = getText();
        var endLength = endValue.length;
        for(start = 0; start < startLength; start++){
            if (startValue[start] !== endValue[start]) break;
        }
        var minEnd = startLength - start;
        for(end = 1; end <= minEnd; end++){
            if (startValue[startLength - end] !== endValue[endLength - end]) break;
        }
        var sliceTail = end > 1 ? 1 - end : undefined;
        fallbackText = endValue.slice(start, sliceTail);
        return fallbackText;
    }
    function getText() {
        if ('value' in root1) return root1.value;
        return root1.textContent;
    }
    /**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */ function getEventCharCode(nativeEvent) {
        var charCode;
        var keyCode = nativeEvent.keyCode;
        if ('charCode' in nativeEvent) {
            charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.
            if (charCode === 0 && keyCode === 13) charCode = 13;
        } else // IE8 does not implement `charCode`, but `keyCode` has the correct value.
        charCode = keyCode;
         // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
        // report Enter as charCode 10 when ctrl is pressed.
        if (charCode === 10) charCode = 13;
         // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
        // Must not discard the (non-)printable Enter-key.
        if (charCode >= 32 || charCode === 13) return charCode;
        return 0;
    }
    function functionThatReturnsTrue() {
        return true;
    }
    function functionThatReturnsFalse() {
        return false;
    } // This is intentionally a factory so that we have different returned constructors.
    // If we had a single constructor, it would be megamorphic and engines would deopt.
    function createSyntheticEvent(Interface) {
        /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   */ function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for(var _propName in Interface){
                if (!Interface.hasOwnProperty(_propName)) continue;
                var normalize = Interface[_propName];
                if (normalize) this[_propName] = normalize(nativeEvent);
                else this[_propName] = nativeEvent[_propName];
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) this.isDefaultPrevented = functionThatReturnsTrue;
            else this.isDefaultPrevented = functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
        }
        _assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
                this.defaultPrevented = true;
                var event = this.nativeEvent;
                if (!event) return;
                if (event.preventDefault) event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.returnValue !== 'unknown') event.returnValue = false;
                this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
                var event = this.nativeEvent;
                if (!event) return;
                if (event.stopPropagation) event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.cancelBubble !== 'unknown') // The ChangeEventPlugin registers a "propertychange" event for
                // IE. This event does not support bubbling or cancelling, and
                // any references to cancelBubble throw "Member not found".  A
                // typeof check of "unknown" circumvents this issue (and is also
                // IE specific).
                event.cancelBubble = true;
                this.isPropagationStopped = functionThatReturnsTrue;
            },
            /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */ persist: function() {
            },
            /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */ isPersistent: functionThatReturnsTrue
        });
        return SyntheticBaseEvent;
    }
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
    };
    var SyntheticEvent = createSyntheticEvent(EventInterface);
    var UIEventInterface = _assign({
    }, EventInterface, {
        view: 0,
        detail: 0
    });
    var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
    var lastMovementX;
    var lastMovementY;
    var lastMouseEvent;
    function updateMouseMovementPolyfillState(event) {
        if (event !== lastMouseEvent) {
            if (lastMouseEvent && event.type === 'mousemove') {
                lastMovementX = event.screenX - lastMouseEvent.screenX;
                lastMovementY = event.screenY - lastMouseEvent.screenY;
            } else {
                lastMovementX = 0;
                lastMovementY = 0;
            }
            lastMouseEvent = event;
        }
    }
    /**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var MouseEventInterface = _assign({
    }, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
            if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
            return event.relatedTarget;
        },
        movementX: function(event) {
            if ('movementX' in event) return event.movementX;
            updateMouseMovementPolyfillState(event);
            return lastMovementX;
        },
        movementY: function(event) {
            if ('movementY' in event) return event.movementY;
             // Don't need to call updateMouseMovementPolyfillState() here
            // because it's guaranteed to have already run when movementX
            // was copied.
            return lastMovementY;
        }
    });
    var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
    /**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var DragEventInterface = _assign({
    }, MouseEventInterface, {
        dataTransfer: 0
    });
    var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
    /**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var FocusEventInterface = _assign({
    }, UIEventInterface, {
        relatedTarget: 0
    });
    var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */ var AnimationEventInterface = _assign({
    }, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */ var ClipboardEventInterface = _assign({
    }, EventInterface, {
        clipboardData: function(event) {
            return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
        }
    });
    var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */ var CompositionEventInterface = _assign({
    }, EventInterface, {
        data: 0
    });
    var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */ // Happens to share the same list for now.
    var SyntheticInputEvent = SyntheticCompositionEvent;
    /**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var normalizeKey = {
        Esc: 'Escape',
        Spacebar: ' ',
        Left: 'ArrowLeft',
        Up: 'ArrowUp',
        Right: 'ArrowRight',
        Down: 'ArrowDown',
        Del: 'Delete',
        Win: 'OS',
        Menu: 'ContextMenu',
        Apps: 'ContextMenu',
        Scroll: 'ScrollLock',
        MozPrintableKey: 'Unidentified'
    };
    /**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var translateToKey = {
        '8': 'Backspace',
        '9': 'Tab',
        '12': 'Clear',
        '13': 'Enter',
        '16': 'Shift',
        '17': 'Control',
        '18': 'Alt',
        '19': 'Pause',
        '20': 'CapsLock',
        '27': 'Escape',
        '32': ' ',
        '33': 'PageUp',
        '34': 'PageDown',
        '35': 'End',
        '36': 'Home',
        '37': 'ArrowLeft',
        '38': 'ArrowUp',
        '39': 'ArrowRight',
        '40': 'ArrowDown',
        '45': 'Insert',
        '46': 'Delete',
        '112': 'F1',
        '113': 'F2',
        '114': 'F3',
        '115': 'F4',
        '116': 'F5',
        '117': 'F6',
        '118': 'F7',
        '119': 'F8',
        '120': 'F9',
        '121': 'F10',
        '122': 'F11',
        '123': 'F12',
        '144': 'NumLock',
        '145': 'ScrollLock',
        '224': 'Meta'
    };
    /**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */ function getEventKey(nativeEvent) {
        if (nativeEvent.key) {
            // Normalize inconsistent values reported by browsers due to
            // implementations of a working draft specification.
            // FireFox implements `key` but returns `MozPrintableKey` for all
            // printable characters (normalized to `Unidentified`), ignore it.
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== 'Unidentified') return key;
        } // Browser does not implement `key`, polyfill as much of it as we can.
        if (nativeEvent.type === 'keypress') {
            var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
            // thus be captured by `keypress`, no other non-printable key should.
            return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
        }
        if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') // While user keyboard layout determines the actual meaning of each
        // `keyCode` value, almost all function keys have a universal value.
        return translateToKey[nativeEvent.keyCode] || 'Unidentified';
        return '';
    }
    /**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */ var modifierKeyToProp = {
        Alt: 'altKey',
        Control: 'ctrlKey',
        Meta: 'metaKey',
        Shift: 'shiftKey'
    }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
    // getModifierState. If getModifierState is not supported, we map it to a set of
    // modifier keys exposed by the event. In this case, Lock-keys are not supported.
    function modifierStateGetter(keyArg) {
        var syntheticEvent = this;
        var nativeEvent = syntheticEvent.nativeEvent;
        if (nativeEvent.getModifierState) return nativeEvent.getModifierState(keyArg);
        var keyProp = modifierKeyToProp[keyArg];
        return keyProp ? !!nativeEvent[keyProp] : false;
    }
    function getEventModifierState(nativeEvent) {
        return modifierStateGetter;
    }
    /**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var KeyboardEventInterface = _assign({
    }, UIEventInterface, {
        key: getEventKey,
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        // Legacy Interface
        charCode: function(event) {
            // `charCode` is the result of a KeyPress event and represents the value of
            // the actual printable character.
            // KeyPress is deprecated, but its replacement is not yet final and not
            // implemented in any major browser. Only KeyPress has charCode.
            if (event.type === 'keypress') return getEventCharCode(event);
            return 0;
        },
        keyCode: function(event) {
            // `keyCode` is the result of a KeyDown/Up event and represents the value of
            // physical keyboard key.
            // The actual meaning of the value depends on the users' keyboard layout
            // which cannot be detected. Assuming that it is a US keyboard layout
            // provides a surprisingly accurate mapping for US and European users.
            // Due to this, it is left to the user to implement at this time.
            if (event.type === 'keydown' || event.type === 'keyup') return event.keyCode;
            return 0;
        },
        which: function(event) {
            // `which` is an alias for either `keyCode` or `charCode` depending on the
            // type of the event.
            if (event.type === 'keypress') return getEventCharCode(event);
            if (event.type === 'keydown' || event.type === 'keyup') return event.keyCode;
            return 0;
        }
    });
    var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
    /**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */ var PointerEventInterface = _assign({
    }, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
    });
    var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
    /**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */ var TouchEventInterface = _assign({
    }, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
    });
    var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */ var TransitionEventInterface = _assign({
    }, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
    /**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var WheelEventInterface = _assign({
    }, MouseEventInterface, {
        deltaX: function(event) {
            return 'deltaX' in event ? event.deltaX : 'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
        },
        deltaY: function(event) {
            return 'deltaY' in event ? event.deltaY : 'wheelDeltaY' in event ? -event.wheelDeltaY : 'wheelDelta' in event ? -event.wheelDelta : 0;
        },
        deltaZ: 0,
        // Browsers without "deltaMode" is reporting in raw wheel delta where one
        // notch on the scroll is always +/- 120, roughly equivalent to pixels.
        // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
        // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
        deltaMode: 0
    });
    var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
    var END_KEYCODES = [
        9,
        13,
        27,
        32
    ]; // Tab, Return, Esc, Space
    var START_KEYCODE = 229;
    var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
    var documentMode = null;
    if (canUseDOM && 'documentMode' in document) documentMode = document.documentMode;
     // Webkit offers a very useful `textInput` event that can be used to
    // directly represent `beforeInput`. The IE `textinput` event is not as
    // useful, so we don't use it.
    var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
    // by the native compositionend event may be incorrect. Japanese ideographic
    // spaces, for instance (\u3000) are not recorded correctly.
    var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
    function registerEvents() {
        registerTwoPhaseEvent('onBeforeInput', [
            'compositionend',
            'keypress',
            'textInput',
            'paste'
        ]);
        registerTwoPhaseEvent('onCompositionEnd', [
            'compositionend',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
        registerTwoPhaseEvent('onCompositionStart', [
            'compositionstart',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
        registerTwoPhaseEvent('onCompositionUpdate', [
            'compositionupdate',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
    } // Track whether we've ever handled a keypress on the space key.
    var hasSpaceKeypress = false;
    /**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */ function isKeypressCommand(nativeEvent) {
        return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    /**
 * Translate native top level events into event types.
 */ function getCompositionEventType(domEventName) {
        switch(domEventName){
            case 'compositionstart':
                return 'onCompositionStart';
            case 'compositionend':
                return 'onCompositionEnd';
            case 'compositionupdate':
                return 'onCompositionUpdate';
        }
    }
    /**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 */ function isFallbackCompositionStart(domEventName, nativeEvent) {
        return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;
    }
    /**
 * Does our fallback mode think that this event is the end of composition?
 */ function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch(domEventName){
            case 'keyup':
                // Command keys insert or clear IME input.
                return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case 'keydown':
                // Expect IME keyCode on each keydown. If we get any other
                // code we must have exited earlier.
                return nativeEvent.keyCode !== START_KEYCODE;
            case 'keypress':
            case 'mousedown':
            case 'focusout':
                // Events are not possible without cancelling IME.
                return true;
            default:
                return false;
        }
    }
    /**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */ function getDataFromCustomEvent(nativeEvent) {
        var detail = nativeEvent.detail;
        if (typeof detail === 'object' && 'data' in detail) return detail.data;
        return null;
    }
    /**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */ function isUsingKoreanIME(nativeEvent) {
        return nativeEvent.locale === 'ko';
    } // Track the current IME composition status, if any.
    var isComposing = false;
    /**
 * @return {?object} A SyntheticCompositionEvent.
 */ function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var eventType;
        var fallbackData;
        if (canUseCompositionEvent) eventType = getCompositionEventType(domEventName);
        else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) eventType = 'onCompositionStart';
        } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) eventType = 'onCompositionEnd';
        if (!eventType) return null;
        if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            // The current composition is stored statically and must not be
            // overwritten while composition continues.
            if (!isComposing && eventType === 'onCompositionStart') isComposing = initialize(nativeEventTarget);
            else if (eventType === 'onCompositionEnd') {
                if (isComposing) fallbackData = getData();
            }
        }
        var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
        if (listeners.length > 0) {
            var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            if (fallbackData) // Inject data generated from fallback path into the synthetic event.
            // This matches the property of native CompositionEventInterface.
            event.data = fallbackData;
            else {
                var customData = getDataFromCustomEvent(nativeEvent);
                if (customData !== null) event.data = customData;
            }
        }
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch(domEventName){
            case 'compositionend':
                return getDataFromCustomEvent(nativeEvent);
            case 'keypress':
                /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */ var which = nativeEvent.which;
                if (which !== SPACEBAR_CODE) return null;
                hasSpaceKeypress = true;
                return SPACEBAR_CHAR;
            case 'textInput':
                // Record the characters to be added to the DOM.
                var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
                // it at the keypress level and bail immediately. Android Chrome
                // doesn't give us keycodes, so we need to ignore it.
                if (chars === SPACEBAR_CHAR && hasSpaceKeypress) return null;
                return chars;
            default:
                // For other native event types, do nothing.
                return null;
        }
    }
    /**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 */ function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        // If we are currently composing (IME) and using a fallback to do so,
        // try to extract the composed characters from the fallback object.
        // If composition event is available, we extract a string only at
        // compositionevent, otherwise extract it at fallback events.
        if (isComposing) {
            if (domEventName === 'compositionend' || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
                var chars = getData();
                reset();
                isComposing = false;
                return chars;
            }
            return null;
        }
        switch(domEventName){
            case 'paste':
                // If a paste event occurs after a keypress, throw out the input
                // chars. Paste events should not lead to BeforeInput events.
                return null;
            case 'keypress':
                /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */ if (!isKeypressCommand(nativeEvent)) {
                    // IE fires the `keypress` event when a user types an emoji via
                    // Touch keyboard of Windows.  In such a case, the `char` property
                    // holds an emoji character like `\uD83D\uDE0A`.  Because its length
                    // is 2, the property `which` does not represent an emoji correctly.
                    // In such a case, we directly return the `char` property instead of
                    // using `which`.
                    if (nativeEvent.char && nativeEvent.char.length > 1) return nativeEvent.char;
                    else if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
                }
                return null;
            case 'compositionend':
                return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
                return null;
        }
    }
    /**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */ function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var chars;
        if (canUseTextInputEvent) chars = getNativeBeforeInputChars(domEventName, nativeEvent);
        else chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
         // If no characters are being inserted, no BeforeInput event should
        // be fired.
        if (!chars) return null;
        var listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');
        if (listeners.length > 0) {
            var event = new SyntheticInputEvent('onBeforeInput', 'beforeinput', null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            event.data = chars;
        }
    }
    /**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */ function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    }
    /**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */ var supportedInputTypes = {
        color: true,
        date: true,
        datetime: true,
        'datetime-local': true,
        email: true,
        month: true,
        number: true,
        password: true,
        range: true,
        search: true,
        tel: true,
        text: true,
        time: true,
        url: true,
        week: true
    };
    function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        if (nodeName === 'input') return !!supportedInputTypes[elem.type];
        if (nodeName === 'textarea') return true;
        return false;
    }
    /**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */ function isEventSupported(eventNameSuffix) {
        if (!canUseDOM) return false;
        var eventName = 'on' + eventNameSuffix;
        var isSupported = eventName in document;
        if (!isSupported) {
            var element = document.createElement('div');
            element.setAttribute(eventName, 'return;');
            isSupported = typeof element[eventName] === 'function';
        }
        return isSupported;
    }
    function registerEvents$1() {
        registerTwoPhaseEvent('onChange', [
            'change',
            'click',
            'focusin',
            'focusout',
            'input',
            'keydown',
            'keyup',
            'selectionchange'
        ]);
    }
    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        // Flag this event loop as needing state restore.
        enqueueStateRestore(target);
        var listeners = accumulateTwoPhaseListeners(inst, 'onChange');
        if (listeners.length > 0) {
            var event = new SyntheticEvent('onChange', 'change', null, nativeEvent, target);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
        }
    }
    /**
 * For IE shims
 */ var activeElement = null;
    var activeElementInst = null;
    /**
 * SECTION: handle `change` event
 */ function shouldUseChangeEvent(elem) {
        var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }
    function manualDispatchChangeEvent(nativeEvent) {
        var dispatchQueue = [];
        createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
        // other events and have it go through ReactBrowserEventEmitter. Since it
        // doesn't, we manually listen for the events and so we have to enqueue and
        // process the abstract event manually.
        //
        // Batching is necessary here in order to ensure that all event handlers run
        // before the next rerender (including event handlers attached to ancestor
        // elements instead of directly on the input). Without this, controlled
        // components don't work properly in conjunction with event bubbling because
        // the component is rerendered and the value reverted before all the event
        // handlers can run. See https://github.com/facebook/react/issues/708.
        batchedUpdates(runEventInBatch, dispatchQueue);
    }
    function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
        if (domEventName === 'change') return targetInst;
    }
    /**
 * SECTION: handle `input` event
 */ var isInputEventSupported = false;
    if (canUseDOM) // IE9 claims to support the input event but fails to trigger it when
    // deleting text, so we ignore its input events.
    isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
    /**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */ function startWatchingForValueChange(target, targetInst) {
        activeElement = target;
        activeElementInst = targetInst;
        activeElement.attachEvent('onpropertychange', handlePropertyChange);
    }
    /**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */ function stopWatchingForValueChange() {
        if (!activeElement) return;
        activeElement.detachEvent('onpropertychange', handlePropertyChange);
        activeElement = null;
        activeElementInst = null;
    }
    /**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */ function handlePropertyChange(nativeEvent) {
        if (nativeEvent.propertyName !== 'value') return;
        if (getInstIfValueChanged(activeElementInst)) manualDispatchChangeEvent(nativeEvent);
    }
    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        if (domEventName === 'focusin') {
            // In IE9, propertychange fires for most input events but is buggy and
            // doesn't fire when text is deleted, but conveniently, selectionchange
            // appears to fire in all of the remaining cases so we catch those and
            // forward the event if the value has changed
            // In either case, we don't want to call the event handler if the value
            // is changed from JS so we redefine a setter for `.value` that updates
            // our activeElementValue variable, allowing us to ignore those changes
            //
            // stopWatching() should be a noop here but we call it just in case we
            // missed a blur event somehow.
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
        } else if (domEventName === 'focusout') stopWatchingForValueChange();
    } // For IE8 and IE9.
    function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
        if (domEventName === 'selectionchange' || domEventName === 'keyup' || domEventName === 'keydown') // On the selectionchange event, the target is just document which isn't
        // helpful for us so just check activeElement instead.
        //
        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
        // propertychange on the first input event after setting `value` from a
        // script and fires only keydown, keypress, keyup. Catching keyup usually
        // gets it and catching keydown lets us fire an event for the first
        // keystroke if user does a key repeat (it'll be a little delayed: right
        // before the second keystroke). Other input methods (e.g., paste) seem to
        // fire selectionchange normally.
        return getInstIfValueChanged(activeElementInst);
    }
    /**
 * SECTION: handle `click` event
 */ function shouldUseClickEvent(elem) {
        // Use the `click` event to detect changes to checkbox and radio inputs.
        // This approach works across all browsers, whereas `change` does not fire
        // until `blur` in IE8.
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
        if (domEventName === 'click') return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if (domEventName === 'input' || domEventName === 'change') return getInstIfValueChanged(targetInst);
    }
    function handleControlledInputBlur(node) {
        var state = node._wrapperState;
        if (!state || !state.controlled || node.type !== 'number') return;
        // If controlled, assign the value attribute to the current value on blur
        setDefaultValue(node, 'number', node.value);
    }
    /**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */ function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        var getTargetInstFunc, handleEventFunc;
        if (shouldUseChangeEvent(targetNode)) getTargetInstFunc = getTargetInstForChangeEvent;
        else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                handleEventFunc = handleEventsForInputEventPolyfill;
            }
        } else if (shouldUseClickEvent(targetNode)) getTargetInstFunc = getTargetInstForClickEvent;
        if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
                createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
                return;
            }
        }
        if (handleEventFunc) handleEventFunc(domEventName, targetNode, targetInst);
         // When blurring, set the value attribute for number inputs
        if (domEventName === 'focusout') handleControlledInputBlur(targetNode);
    }
    function registerEvents$2() {
        registerDirectEvent('onMouseEnter', [
            'mouseout',
            'mouseover'
        ]);
        registerDirectEvent('onMouseLeave', [
            'mouseout',
            'mouseover'
        ]);
        registerDirectEvent('onPointerEnter', [
            'pointerout',
            'pointerover'
        ]);
        registerDirectEvent('onPointerLeave', [
            'pointerout',
            'pointerover'
        ]);
    }
    /**
 * For almost every interaction we care about, there will be both a top-level
 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
 * we do not extract duplicate events. However, moving the mouse into the
 * browser from outside will not fire a `mouseout` event. In this case, we use
 * the `mouseover` top-level event.
 */ function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var isOverEvent = domEventName === 'mouseover' || domEventName === 'pointerover';
        var isOutEvent = domEventName === 'mouseout' || domEventName === 'pointerout';
        if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0) {
            // If this is an over event with a target, we might have already dispatched
            // the event in the out event of the other target. If this is replayed,
            // then it's because we couldn't dispatch against this target previously
            // so we have to do it now instead.
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
                // If the related node is managed by React, we can assume that we have
                // already dispatched the corresponding events during its mouseout.
                if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) return;
            }
        }
        if (!isOutEvent && !isOverEvent) // Must not be a mouse or pointer in or out - ignoring.
        return;
        var win; // TODO: why is this nullable in the types but we read from it?
        if (nativeEventTarget.window === nativeEventTarget) // `nativeEventTarget` is probably a window object.
        win = nativeEventTarget;
        else {
            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
            var doc = nativeEventTarget.ownerDocument;
            if (doc) win = doc.defaultView || doc.parentWindow;
            else win = window;
        }
        var from;
        var to;
        if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to = _related ? getClosestInstanceFromNode(_related) : null;
            if (to !== null) {
                var nearestMounted = getNearestMountedFiber(to);
                if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) to = null;
            }
        } else {
            // Moving to a node from outside the window.
            from = null;
            to = targetInst;
        }
        if (from === to) // Nothing pertains to our managed components.
        return;
        var SyntheticEventCtor = SyntheticMouseEvent;
        var leaveEventType = 'onMouseLeave';
        var enterEventType = 'onMouseEnter';
        var eventTypePrefix = 'mouse';
        if (domEventName === 'pointerout' || domEventName === 'pointerover') {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = 'onPointerLeave';
            enterEventType = 'onPointerEnter';
            eventTypePrefix = 'pointer';
        }
        var fromNode = from == null ? win : getNodeFromInstance(from);
        var toNode = to == null ? win : getNodeFromInstance(to);
        var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + 'leave', from, nativeEvent, nativeEventTarget);
        leave.target = fromNode;
        leave.relatedTarget = toNode;
        var enter = null; // We should only process this nativeEvent if we are processing
        // the first ancestor. Next time, we will ignore the event.
        var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + 'enter', to, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
        }
        accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
    }
    /**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */ function is(x, y) {
        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
        ;
    }
    var objectIs = typeof Object.is === 'function' ? Object.is : is;
    var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
    /**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */ function shallowEqual(objA, objB) {
        if (objectIs(objA, objB)) return true;
        if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) return false;
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return false;
         // Test for A's keys different from B.
        for(var i = 0; i < keysA.length; i++){
            if (!hasOwnProperty$2.call(objB, keysA[i]) || !objectIs(objA[keysA[i]], objB[keysA[i]])) return false;
        }
        return true;
    }
    /**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */ function getLeafNode(node) {
        while(node && node.firstChild)node = node.firstChild;
        return node;
    }
    /**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */ function getSiblingNode(node) {
        while(node){
            if (node.nextSibling) return node.nextSibling;
            node = node.parentNode;
        }
    }
    /**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */ function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        var nodeStart = 0;
        var nodeEnd = 0;
        while(node){
            if (node.nodeType === TEXT_NODE) {
                nodeEnd = nodeStart + node.textContent.length;
                if (nodeStart <= offset && nodeEnd >= offset) return {
                    node: node,
                    offset: offset - nodeStart
                };
                nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
        }
    }
    /**
 * @param {DOMElement} outerNode
 * @return {?object}
 */ function getOffsets(outerNode) {
        var ownerDocument = outerNode.ownerDocument;
        var win = ownerDocument && ownerDocument.defaultView || window;
        var selection = win.getSelection && win.getSelection();
        if (!selection || selection.rangeCount === 0) return null;
        var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
        // up/down buttons on an <input type="number">. Anonymous divs do not seem to
        // expose properties, triggering a "Permission denied error" if any of its
        // properties are accessed. The only seemingly possible way to avoid erroring
        // is to access a property that typically works for non-anonymous divs and
        // catch any error that may otherwise arise. See
        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
        try {
            /* eslint-disable no-unused-expressions */ anchorNode.nodeType;
            focusNode.nodeType;
        /* eslint-enable no-unused-expressions */ } catch (e) {
            return null;
        }
        return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
    }
    /**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */ function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
        var length = 0;
        var start = -1;
        var end = -1;
        var indexWithinAnchor = 0;
        var indexWithinFocus = 0;
        var node = outerNode;
        var parentNode = null;
        outer: while(true){
            var next = null;
            while(true){
                if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) start = length + anchorOffset;
                if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) end = length + focusOffset;
                if (node.nodeType === TEXT_NODE) length += node.nodeValue.length;
                if ((next = node.firstChild) === null) break;
                 // Moving from `node` to its first child `next`.
                parentNode = node;
                node = next;
            }
            while(true){
                if (node === outerNode) break outer;
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) start = length;
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) end = length;
                if ((next = node.nextSibling) !== null) break;
                node = parentNode;
                parentNode = node.parentNode;
            } // Moving from `node` to its next sibling `next`.
            node = next;
        }
        if (start === -1 || end === -1) // This should never happen. (Would happen if the anchor/focus nodes aren't
        // actually inside the passed-in node.)
        return null;
        return {
            start: start,
            end: end
        };
    }
    /**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */ function setOffsets(node, offsets) {
        var doc = node.ownerDocument || document;
        var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
        // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
        // fails when pasting 100+ items)
        if (!win.getSelection) return;
        var selection = win.getSelection();
        var length = node.textContent.length;
        var start = Math.min(offsets.start, length);
        var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
        // Flip backward selections, so we can set with a single range.
        if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
        }
        var startMarker = getNodeForCharacterOffset(node, start);
        var endMarker = getNodeForCharacterOffset(node, end);
        if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) return;
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start > end) {
                selection.addRange(range);
                selection.extend(endMarker.node, endMarker.offset);
            } else {
                range.setEnd(endMarker.node, endMarker.offset);
                selection.addRange(range);
            }
        }
    }
    function isTextNode(node) {
        return node && node.nodeType === TEXT_NODE;
    }
    function containsNode(outerNode, innerNode) {
        if (!outerNode || !innerNode) return false;
        else if (outerNode === innerNode) return true;
        else if (isTextNode(outerNode)) return false;
        else if (isTextNode(innerNode)) return containsNode(outerNode, innerNode.parentNode);
        else if ('contains' in outerNode) return outerNode.contains(innerNode);
        else if (outerNode.compareDocumentPosition) return !!(outerNode.compareDocumentPosition(innerNode) & 16);
        else return false;
    }
    function isInDocument(node) {
        return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
    }
    function isSameOriginFrame(iframe) {
        try {
            // Accessing the contentDocument of a HTMLIframeElement can cause the browser
            // to throw, e.g. if it has a cross-origin src attribute.
            // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
            // iframe.contentDocument.defaultView;
            // A safety way is to access one of the cross origin properties: Window or Location
            // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
            // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
            return typeof iframe.contentWindow.location.href === 'string';
        } catch (err) {
            return false;
        }
    }
    function getActiveElementDeep() {
        var win = window;
        var element = getActiveElement();
        while(element instanceof win.HTMLIFrameElement){
            if (isSameOriginFrame(element)) win = element.contentWindow;
            else return element;
            element = getActiveElement(win.document);
        }
        return element;
    }
    /**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */ /**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */ function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
    }
    function getSelectionInformation() {
        var focusedElem = getActiveElementDeep();
        return {
            focusedElem: focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
        };
    }
    /**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */ function restoreSelection(priorSelectionInformation) {
        var curFocusedElem = getActiveElementDeep();
        var priorFocusedElem = priorSelectionInformation.focusedElem;
        var priorSelectionRange = priorSelectionInformation.selectionRange;
        if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) setSelection(priorFocusedElem, priorSelectionRange);
             // Focusing a node can change the scroll position, which is undesirable
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while(ancestor = ancestor.parentNode)if (ancestor.nodeType === ELEMENT_NODE) ancestors.push({
                element: ancestor,
                left: ancestor.scrollLeft,
                top: ancestor.scrollTop
            });
            if (typeof priorFocusedElem.focus === 'function') priorFocusedElem.focus();
            for(var i = 0; i < ancestors.length; i++){
                var info = ancestors[i];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
            }
        }
    }
    /**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */ function getSelection(input) {
        var selection;
        if ('selectionStart' in input) // Modern browser with input or textarea.
        selection = {
            start: input.selectionStart,
            end: input.selectionEnd
        };
        else // Content editable or old IE textarea.
        selection = getOffsets(input);
        return selection || {
            start: 0,
            end: 0
        };
    }
    /**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */ function setSelection(input, offsets) {
        var start = offsets.start;
        var end = offsets.end;
        if (end === undefined) end = start;
        if ('selectionStart' in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
        } else setOffsets(input, offsets);
    }
    var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;
    function registerEvents$3() {
        registerTwoPhaseEvent('onSelect', [
            'focusout',
            'contextmenu',
            'dragend',
            'focusin',
            'keydown',
            'keyup',
            'mousedown',
            'mouseup',
            'selectionchange'
        ]);
    }
    var activeElement$1 = null;
    var activeElementInst$1 = null;
    var lastSelection = null;
    var mouseDown = false;
    /**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 */ function getSelection$1(node) {
        if ('selectionStart' in node && hasSelectionCapabilities(node)) return {
            start: node.selectionStart,
            end: node.selectionEnd
        };
        else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
                anchorNode: selection.anchorNode,
                anchorOffset: selection.anchorOffset,
                focusNode: selection.focusNode,
                focusOffset: selection.focusOffset
            };
        }
    }
    /**
 * Get document associated with the event target.
 */ function getEventTargetDocument(eventTarget) {
        return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
    }
    /**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */ function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        // Ensure we have the right element, and that the user is not dragging a
        // selection (this matches native `select` event behavior). In HTML5, select
        // fires only on input and textarea thus if there's no focused element we
        // won't dispatch.
        var doc = getEventTargetDocument(nativeEventTarget);
        if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) return;
         // Only fire when selection has actually changed.
        var currentSelection = getSelection$1(activeElement$1);
        if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, 'onSelect');
            if (listeners.length > 0) {
                var event = new SyntheticEvent('onSelect', 'select', null, nativeEvent, nativeEventTarget);
                dispatchQueue.push({
                    event: event,
                    listeners: listeners
                });
                event.target = activeElement$1;
            }
        }
    }
    /**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */ function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        switch(domEventName){
            // Track the input node that has focus.
            case 'focusin':
                if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
                    activeElement$1 = targetNode;
                    activeElementInst$1 = targetInst;
                    lastSelection = null;
                }
                break;
            case 'focusout':
                activeElement$1 = null;
                activeElementInst$1 = null;
                lastSelection = null;
                break;
            // Don't fire the event while the user is dragging. This matches the
            // semantics of the native select event.
            case 'mousedown':
                mouseDown = true;
                break;
            case 'contextmenu':
            case 'mouseup':
            case 'dragend':
                mouseDown = false;
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                break;
            // Chrome and IE fire non-standard event when selection is changed (and
            // sometimes when it hasn't). IE's event fires out of order with respect
            // to key and input events on deletion, so we discard it.
            //
            // Firefox doesn't support selectionchange, so check selection status
            // after each key entry. The selection changes after keydown and before
            // keyup, but we check on keydown as well in the case of holding down a
            // key, when multiple keydown events are fired but only one keyup is.
            // This is also our approach for IE handling, for the reason above.
            case 'selectionchange':
                if (skipSelectionChangeEvent) break;
            // falls through
            case 'keydown':
            case 'keyup':
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
        }
    }
    function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var reactName = topLevelEventsToReactNames.get(domEventName);
        if (reactName === undefined) return;
        var SyntheticEventCtor = SyntheticEvent;
        var reactEventType = domEventName;
        switch(domEventName){
            case 'keypress':
                // Firefox creates a keypress event for function keys too. This removes
                // the unwanted keypress events. Enter is however both printable and
                // non-printable. One would expect Tab to be as well (but it isn't).
                if (getEventCharCode(nativeEvent) === 0) return;
            /* falls through */ case 'keydown':
            case 'keyup':
                SyntheticEventCtor = SyntheticKeyboardEvent;
                break;
            case 'focusin':
                reactEventType = 'focus';
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'focusout':
                reactEventType = 'blur';
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'beforeblur':
            case 'afterblur':
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'click':
                // Firefox creates a click event on right mouse clicks. This removes the
                // unwanted click events.
                if (nativeEvent.button === 2) return;
            /* falls through */ case 'auxclick':
            case 'dblclick':
            case 'mousedown':
            case 'mousemove':
            case 'mouseup':
            /* falls through */ case 'mouseout':
            case 'mouseover':
            case 'contextmenu':
                SyntheticEventCtor = SyntheticMouseEvent;
                break;
            case 'drag':
            case 'dragend':
            case 'dragenter':
            case 'dragexit':
            case 'dragleave':
            case 'dragover':
            case 'dragstart':
            case 'drop':
                SyntheticEventCtor = SyntheticDragEvent;
                break;
            case 'touchcancel':
            case 'touchend':
            case 'touchmove':
            case 'touchstart':
                SyntheticEventCtor = SyntheticTouchEvent;
                break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
                SyntheticEventCtor = SyntheticAnimationEvent;
                break;
            case TRANSITION_END:
                SyntheticEventCtor = SyntheticTransitionEvent;
                break;
            case 'scroll':
                SyntheticEventCtor = SyntheticUIEvent;
                break;
            case 'wheel':
                SyntheticEventCtor = SyntheticWheelEvent;
                break;
            case 'copy':
            case 'cut':
            case 'paste':
                SyntheticEventCtor = SyntheticClipboardEvent;
                break;
            case 'gotpointercapture':
            case 'lostpointercapture':
            case 'pointercancel':
            case 'pointerdown':
            case 'pointermove':
            case 'pointerout':
            case 'pointerover':
            case 'pointerup':
                SyntheticEventCtor = SyntheticPointerEvent;
                break;
        }
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        // Some events don't bubble in the browser.
        // In the past, React has always bubbled them, but this can be surprising.
        // We're going to try aligning closer to the browser behavior by not bubbling
        // them in React either. We'll start by not bubbling onScroll, and then expand.
        var accumulateTargetOnly = !inCapturePhase && // nonDelegatedEvents list in DOMPluginEventSystem.
        // Then we can remove this special list.
        // This is a breaking change that can wait until React 18.
        domEventName === 'scroll';
        var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
        if (_listeners.length > 0) {
            // Intentionally create event lazily.
            var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: _event,
                listeners: _listeners
            });
        }
    }
    // TODO: remove top-level side effect.
    registerSimpleEvents();
    registerEvents$2();
    registerEvents$1();
    registerEvents$3();
    registerEvents();
    function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        // TODO: we should remove the concept of a "SimpleEventPlugin".
        // This is the basic functionality of the event system. All
        // the other plugins are essentially polyfills. So the plugin
        // should probably be inlined somewhere and have its logic
        // be core the to event system. This would potentially allow
        // us to ship builds of React without the polyfilled plugins below.
        extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
        // event's native "bubble" phase, which means that we're
        // not in the capture phase. That's because we emulate
        // the capture phase here still. This is a trade-off,
        // because in an ideal world we would not emulate and use
        // the phases properly, like we do with the SimpleEvent
        // plugin. However, the plugins below either expect
        // emulation (EnterLeave) or use state localized to that
        // plugin (BeforeInput, Change, Select). The state in
        // these modules complicates things, as you'll essentially
        // get the case where the capture phase event might change
        // state, only for the following bubble event to come in
        // later and not trigger anything as the state now
        // invalidates the heuristics of the event plugin. We
        // could alter all these plugins to work in such ways, but
        // that might cause other unknown side-effects that we
        // can't forsee right now.
        if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
    } // List of events that need to be individually attached to media elements.
    var mediaEventTypes = [
        'abort',
        'canplay',
        'canplaythrough',
        'durationchange',
        'emptied',
        'encrypted',
        'ended',
        'error',
        'loadeddata',
        'loadedmetadata',
        'loadstart',
        'pause',
        'play',
        'playing',
        'progress',
        'ratechange',
        'seeked',
        'seeking',
        'stalled',
        'suspend',
        'timeupdate',
        'volumechange',
        'waiting'
    ]; // We should not delegate these events to the container, but rather
    // set them on the actual target element itself. This is primarily
    // because these events do not consistently bubble in the DOM.
    var nonDelegatedEvents = new Set([
        'cancel',
        'close',
        'invalid',
        'load',
        'scroll',
        'toggle'
    ].concat(mediaEventTypes));
    function executeDispatch(event, listener, currentTarget) {
        var type = event.type || 'unknown-event';
        event.currentTarget = currentTarget;
        invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
        event.currentTarget = null;
    }
    function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
        var previousInstance;
        if (inCapturePhase) for(var i = dispatchListeners.length - 1; i >= 0; i--){
            var _dispatchListeners$i = dispatchListeners[i], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
            if (instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, listener, currentTarget);
            previousInstance = instance;
        }
        else for(var _i = 0; _i < dispatchListeners.length; _i++){
            var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
            if (_instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, _listener, _currentTarget);
            previousInstance = _instance;
        }
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        for(var i = 0; i < dispatchQueue.length; i++){
            var _dispatchQueue$i = dispatchQueue[i], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
        } // This would be a good time to rethrow if any of the event handlers threw.
        rethrowCaughtError();
    }
    function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var nativeEventTarget = getEventTarget(nativeEvent);
        var dispatchQueue = [];
        extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        processDispatchQueue(dispatchQueue, eventSystemFlags);
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
        var isCapturePhaseListener = false;
        var listenerSet = getEventListenerSet(targetElement);
        var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
        if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
        }
    }
    var listeningMarker = '_reactListening' + Math.random().toString(36).slice(2);
    function listenToAllSupportedEvents(rootContainerElement) {
        if (rootContainerElement[listeningMarker]) // Performance optimization: don't iterate through events
        // for the same portal container or root node more than once.
        // TODO: once we remove the flag, we may be able to also
        // remove some of the bookkeeping maps used for laziness.
        return;
        rootContainerElement[listeningMarker] = true;
        allNativeEvents.forEach(function(domEventName) {
            if (!nonDelegatedEvents.has(domEventName)) listenToNativeEvent(domEventName, false, rootContainerElement, null);
            listenToNativeEvent(domEventName, true, rootContainerElement, null);
        });
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, rootContainerElement, targetElement) {
        var eventSystemFlags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
        var target = rootContainerElement; // selectionchange needs to be attached to the document
        // otherwise it won't capture incoming events that are only
        // triggered on the document directly.
        if (domEventName === 'selectionchange' && rootContainerElement.nodeType !== DOCUMENT_NODE) target = rootContainerElement.ownerDocument;
         // If the event can be delegated (or is capture phase), we can
        // register it to the root container. Otherwise, we should
        // register the event to the target element and mark it as
        // a non-delegated event.
        if (targetElement !== null && !isCapturePhaseListener && nonDelegatedEvents.has(domEventName)) {
            // For all non-delegated events, apart from scroll, we attach
            // their event listeners to the respective elements that their
            // events fire on. That means we can skip this step, as event
            // listener has already been added previously. However, we
            // special case the scroll event because the reality is that any
            // element can scroll.
            // TODO: ideally, we'd eventually apply the same logic to all
            // events from the nonDelegatedEvents list. Then we can remove
            // this special case and use the same logic for all events.
            if (domEventName !== 'scroll') return;
            eventSystemFlags |= IS_NON_DELEGATED;
            target = targetElement;
        }
        var listenerSet = getEventListenerSet(target);
        var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener); // If the listener entry is empty or we should upgrade, then
        // we need to trap an event listener onto the target.
        if (!listenerSet.has(listenerSetKey)) {
            if (isCapturePhaseListener) eventSystemFlags |= IS_CAPTURE_PHASE;
            addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
        }
    }
    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
        var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
        // active and not passive.
        var isPassiveListener = undefined;
        if (passiveBrowserEventsSupported) // Browsers introduced an intervention, making these events
        // passive by default on document. React doesn't bind them
        // to document anymore, but changing this now would undo
        // the performance wins from the change. So we emulate
        // the existing behavior manually on the roots now.
        // https://github.com/facebook/react/issues/19651
        {
            if (domEventName === 'touchstart' || domEventName === 'touchmove' || domEventName === 'wheel') isPassiveListener = true;
        }
        var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we
        if (isCapturePhaseListener) {
            if (isPassiveListener !== undefined) unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            else unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
        } else if (isPassiveListener !== undefined) unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
        else unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
    }
    function isMatchingRootContainer(grandContainer, targetContainer) {
        return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
    }
    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var ancestorInst = targetInst;
        if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we
            if (targetInst !== null) {
                // The below logic attempts to work out if we need to change
                // the target fiber to a different ancestor. We had similar logic
                // in the legacy event system, except the big difference between
                // systems is that the modern event system now has an event listener
                // attached to each React Root and React Portal Root. Together,
                // the DOM nodes representing these roots are the "rootContainer".
                // To figure out which ancestor instance we should use, we traverse
                // up the fiber tree from the target instance and attempt to find
                // root boundaries that match that of our current "rootContainer".
                // If we find that "rootContainer", we find the parent fiber
                // sub-tree for that root and make that our ancestor instance.
                var node = targetInst;
                mainLoop: while(true){
                    if (node === null) return;
                    var nodeTag = node.tag;
                    if (nodeTag === HostRoot || nodeTag === HostPortal) {
                        var container = node.stateNode.containerInfo;
                        if (isMatchingRootContainer(container, targetContainerNode)) break;
                        if (nodeTag === HostPortal) {
                            // The target is a portal, but it's not the rootContainer we're looking for.
                            // Normally portals handle their own events all the way down to the root.
                            // So we should be able to stop now. However, we don't know if this portal
                            // was part of *our* root.
                            var grandNode = node.return;
                            while(grandNode !== null){
                                var grandTag = grandNode.tag;
                                if (grandTag === HostRoot || grandTag === HostPortal) {
                                    var grandContainer = grandNode.stateNode.containerInfo;
                                    if (isMatchingRootContainer(grandContainer, targetContainerNode)) // This is the rootContainer we're looking for and we found it as
                                    // a parent of the Portal. That means we can ignore it because the
                                    // Portal will bubble through to us.
                                    return;
                                }
                                grandNode = grandNode.return;
                            }
                        } // Now we need to find it's corresponding host fiber in the other
                        // tree. To do this we can use getClosestInstanceFromNode, but we
                        // need to validate that the fiber is a host instance, otherwise
                        // we need to traverse up through the DOM till we find the correct
                        // node that is from the other tree.
                        while(container !== null){
                            var parentNode = getClosestInstanceFromNode(container);
                            if (parentNode === null) return;
                            var parentTag = parentNode.tag;
                            if (parentTag === HostComponent || parentTag === HostText) {
                                node = ancestorInst = parentNode;
                                continue mainLoop;
                            }
                            container = container.parentNode;
                        }
                    }
                    node = node.return;
                }
            }
        }
        batchedEventUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
        });
    }
    function createDispatchListener(instance, listener, currentTarget) {
        return {
            instance: instance,
            listener: listener,
            currentTarget: currentTarget
        };
    }
    function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly) {
        var captureName = reactName !== null ? reactName + 'Capture' : null;
        var reactEventName = inCapturePhase ? captureName : reactName;
        var listeners = [];
        var instance = targetFiber;
        var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                lastHostComponent = stateNode; // createEventHandle listeners
                if (reactEventName !== null) {
                    var listener = getListener(instance, reactEventName);
                    if (listener != null) listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                }
            } // If we are only accumulating events for the target, then we don't
            // continue to propagate through the React fiber tree to find other
            // listeners.
            if (accumulateTargetOnly) break;
            instance = instance.return;
        }
        return listeners;
    } // We should only use this function for:
    // - BeforeInputEventPlugin
    // - ChangeEventPlugin
    // - SelectEventPlugin
    // This is because we only process these plugins
    // in the bubble phase, so we need to accumulate two
    // phase event listeners (via emulation).
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
        var captureName = reactName + 'Capture';
        var listeners = [];
        var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                var captureListener = getListener(instance, captureName);
                if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                var bubbleListener = getListener(instance, reactName);
                if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
            }
            instance = instance.return;
        }
        return listeners;
    }
    function getParent(inst) {
        if (inst === null) return null;
        do inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
        while (inst && inst.tag !== HostComponent)
        if (inst) return inst;
        return null;
    }
    /**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */ function getLowestCommonAncestor(instA, instB) {
        var nodeA = instA;
        var nodeB = instB;
        var depthA = 0;
        for(var tempA = nodeA; tempA; tempA = getParent(tempA))depthA++;
        var depthB = 0;
        for(var tempB = nodeB; tempB; tempB = getParent(tempB))depthB++;
         // If A is deeper, crawl up.
        while(depthA - depthB > 0){
            nodeA = getParent(nodeA);
            depthA--;
        } // If B is deeper, crawl up.
        while(depthB - depthA > 0){
            nodeB = getParent(nodeB);
            depthB--;
        } // Walk in lockstep until we find a match.
        var depth = depthA;
        while(depth--){
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) return nodeA;
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
        }
        return null;
    }
    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        var registrationName = event._reactName;
        var listeners = [];
        var instance = target;
        while(instance !== null){
            if (instance === common) break;
            var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) break;
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                if (inCapturePhase) {
                    var captureListener = getListener(instance, registrationName);
                    if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                } else if (!inCapturePhase) {
                    var bubbleListener = getListener(instance, registrationName);
                    if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
            }
            instance = instance.return;
        }
        if (listeners.length !== 0) dispatchQueue.push({
            event: event,
            listeners: listeners
        });
    } // We should only use this function for:
    // - EnterLeaveEventPlugin
    // This is because we only process this plugin
    // in the bubble phase, so we need to accumulate two
    // phase event listeners.
    function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
        var common = from && to ? getLowestCommonAncestor(from, to) : null;
        if (from !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
        if (to !== null && enterEvent !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
    }
    function getListenerSetKey(domEventName, capture) {
        return domEventName + "__" + (capture ? 'capture' : 'bubble');
    }
    var didWarnInvalidHydration = false;
    var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
    var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
    var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
    var AUTOFOCUS = 'autoFocus';
    var CHILDREN = 'children';
    var STYLE = 'style';
    var HTML$1 = '__html';
    var HTML_NAMESPACE$1 = Namespaces.html;
    var warnedUnknownTags;
    var suppressHydrationWarning;
    var validatePropertiesInDevelopment;
    var warnForTextDifference;
    var warnForPropDifference;
    var warnForExtraAttributes;
    var warnForInvalidEventListener;
    var canDiffStyleForHydrationWarning;
    var normalizeMarkupForTextOrAttribute;
    var normalizeHTML;
    warnedUnknownTags = {
        // There are working polyfills for <dialog>. Let people use it.
        dialog: true,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: true
    };
    validatePropertiesInDevelopment = function(type, props) {
        validateProperties(type, props);
        validateProperties$1(type, props);
        validateProperties$2(type, props, {
            registrationNameDependencies: registrationNameDependencies1,
            possibleRegistrationNames: possibleRegistrationNames1
        });
    }; // IE 11 parses & normalizes the style attribute as opposed to other
    // browsers. It adds spaces and sorts the properties in some
    // non-alphabetical order. Handling that would require sorting CSS
    // properties in the client & server versions or applying
    // `expectedStyle` to a temporary DOM node to read its `style` attribute
    // normalized. Since it only affects IE, we're skipping style warnings
    // in that browser completely in favor of doing all that work.
    // See https://github.com/facebook/react/issues/11807
    canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode; // HTML parsing normalizes CR and CRLF to LF.
    // It also can turn \u0000 into \uFFFD inside attributes.
    // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
    // If we have a mismatch, it might be caused by that.
    // We will still patch up in this case but not fire the warning.
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
    var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
    normalizeMarkupForTextOrAttribute = function(markup) {
        var markupString = typeof markup === 'string' ? markup : '' + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
    };
    warnForTextDifference = function(serverText, clientText) {
        if (didWarnInvalidHydration) return;
        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
        var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
        if (normalizedServerText === normalizedClientText) return;
        didWarnInvalidHydration = true;
        error1('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
    };
    warnForPropDifference = function(propName, serverValue, clientValue) {
        if (didWarnInvalidHydration) return;
        var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
        var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
        if (normalizedServerValue === normalizedClientValue) return;
        didWarnInvalidHydration = true;
        error1('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
    };
    warnForExtraAttributes = function(attributeNames) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        var names = [];
        attributeNames.forEach(function(name) {
            names.push(name);
        });
        error1('Extra attributes from the server: %s', names);
    };
    warnForInvalidEventListener = function(registrationName, listener) {
        if (listener === false) error1("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
        else error1('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }; // Parse the HTML and read it back to normalize the HTML string so that it
    // can be used for comparison.
    normalizeHTML = function(parent, html) {
        // We could have created a separate document here to avoid
        // re-initializing custom elements if they exist. But this breaks
        // how <noscript> is being handled. So we use the same document.
        // See the discussion in https://github.com/facebook/react/pull/11157.
        var testElement = parent.namespaceURI === HTML_NAMESPACE$1 ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        testElement.innerHTML = html;
        return testElement.innerHTML;
    };
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
    }
    function noop() {
    }
    function trapClickOnNonInteractiveElement(node) {
        // Mobile Safari does not fire properly bubble click events on
        // non-interactive elements, which means delegated click listeners do not
        // fire. The workaround for this bug involves attaching an empty click
        // listener on the target node.
        // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
        // Just set it using the onclick property so that we don't have to manage any
        // bookkeeping for it. Not sure if we need to clear it when the listener is
        // removed.
        // TODO: Only do this for the relevant Safaris maybe?
        node.onclick = noop;
    }
    function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
        for(var propKey in nextProps){
            if (!nextProps.hasOwnProperty(propKey)) continue;
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                if (nextHtml != null) setInnerHTML(domElement, nextHtml);
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === 'string') {
                    // Avoid setting initial textContent when the text is empty. In IE11 setting
                    // textContent on a <textarea> will cause the placeholder to not
                    // show within the <textarea> until it has been focused and blurred again.
                    // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                    var canSetTextContent = tag !== 'textarea' || nextProp !== '';
                    if (canSetTextContent) setTextContent(domElement, nextProp);
                } else if (typeof nextProp === 'number') setTextContent(domElement, '' + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies1.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
            } else if (nextProp != null) setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
        }
    }
    function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
        // TODO: Handle wasCustomComponentTag
        for(var i = 0; i < updatePayload.length; i += 2){
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) setValueForStyles(domElement, propValue);
            else if (propKey === DANGEROUSLY_SET_INNER_HTML) setInnerHTML(domElement, propValue);
            else if (propKey === CHILDREN) setTextContent(domElement, propValue);
            else setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
    }
    function createElement(type, props, rootContainerElement, parentNamespace) {
        var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
        // tags get no namespace.
        var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
        var domElement;
        var namespaceURI = parentNamespace;
        if (namespaceURI === HTML_NAMESPACE$1) namespaceURI = getIntrinsicNamespace(type);
        if (namespaceURI === HTML_NAMESPACE$1) {
            isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
            // allow <SVG> or <mATH>.
            if (!isCustomComponentTag && type !== type.toLowerCase()) error1("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
            if (type === 'script') {
                // Create the script via .innerHTML so its "parser-inserted" flag is
                // set to true and it does not execute
                var div = ownerDocument.createElement('div');
                div.innerHTML = "<script></script>"; // eslint-disable-line
                // This is guaranteed to yield a script element.
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
            } else if (typeof props.is === 'string') // $FlowIssue `createElement` should be updated for Web Components
            domElement = ownerDocument.createElement(type, {
                is: props.is
            });
            else {
                // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
                // See discussion in https://github.com/facebook/react/pull/6896
                // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
                // attributes on `select`s needs to be added before `option`s are inserted.
                // This prevents:
                // - a bug where the `select` does not scroll to the correct option because singular
                //  `select` elements automatically pick the first item #13222
                // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
                // See https://github.com/facebook/react/issues/13222
                // and https://github.com/facebook/react/issues/14239
                if (type === 'select') {
                    var node = domElement;
                    if (props.multiple) node.multiple = true;
                    else if (props.size) // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
                    // it is possible that no option is selected.
                    //
                    // This is only necessary when a select in "single selection mode".
                    node.size = props.size;
                }
            }
        } else domElement = ownerDocument.createElementNS(namespaceURI, type);
        if (namespaceURI === HTML_NAMESPACE$1) {
            if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                error1("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
            }
        }
        return domElement;
    }
    function createTextNode(text, rootContainerElement) {
        return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
    }
    function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
        var isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        var props;
        switch(tag){
            case 'dialog':
                listenToNonDelegatedEvent('cancel', domElement);
                listenToNonDelegatedEvent('close', domElement);
                props = rawProps;
                break;
            case 'iframe':
            case 'object':
            case 'embed':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent('load', domElement);
                props = rawProps;
                break;
            case 'video':
            case 'audio':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                props = rawProps;
                break;
            case 'source':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent('error', domElement);
                props = rawProps;
                break;
            case 'img':
            case 'image':
            case 'link':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent('error', domElement);
                listenToNonDelegatedEvent('load', domElement);
                props = rawProps;
                break;
            case 'details':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent('toggle', domElement);
                props = rawProps;
                break;
            case 'input':
                initWrapperState(domElement, rawProps);
                props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'option':
                validateProps(domElement, rawProps);
                props = getHostProps$1(domElement, rawProps);
                break;
            case 'select':
                initWrapperState$1(domElement, rawProps);
                props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'textarea':
                initWrapperState$2(domElement, rawProps);
                props = getHostProps$3(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            default:
                props = rawProps;
        }
        assertValidProps(tag, props);
        setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
        switch(tag){
            case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, false);
                break;
            case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case 'option':
                postMountWrapper$1(domElement, rawProps);
                break;
            case 'select':
                postMountWrapper$2(domElement, rawProps);
                break;
            default:
                if (typeof props.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
    } // Calculate the diff between the two objects.
    function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
        validatePropertiesInDevelopment(tag, nextRawProps);
        var updatePayload = null;
        var lastProps;
        var nextProps;
        switch(tag){
            case 'input':
                lastProps = getHostProps(domElement, lastRawProps);
                nextProps = getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
            case 'option':
                lastProps = getHostProps$1(domElement, lastRawProps);
                nextProps = getHostProps$1(domElement, nextRawProps);
                updatePayload = [];
                break;
            case 'select':
                lastProps = getHostProps$2(domElement, lastRawProps);
                nextProps = getHostProps$2(domElement, nextRawProps);
                updatePayload = [];
                break;
            case 'textarea':
                lastProps = getHostProps$3(domElement, lastRawProps);
                nextProps = getHostProps$3(domElement, nextRawProps);
                updatePayload = [];
                break;
            default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        assertValidProps(tag, nextProps);
        var propKey;
        var styleName;
        var styleUpdates = null;
        for(propKey in lastProps){
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) continue;
            if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for(styleName in lastStyle)if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) styleUpdates = {
                    };
                    styleUpdates[styleName] = '';
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies1.hasOwnProperty(propKey)) // This is a special case. If any listener updates we need to ensure
            // that the "current" fiber pointer gets updated so we need a commit
            // to update this element.
            {
                if (!updatePayload) updatePayload = [];
            } else // For all other deleted properties we add it to the queue. We use
            // the allowed property list in the commit phase instead.
            (updatePayload = updatePayload || []).push(propKey, null);
        }
        for(propKey in nextProps){
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : undefined;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) continue;
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                if (lastProp) {
                    // Unset styles on `lastProp` but not on `nextProp`.
                    for(styleName in lastProp)if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                        if (!styleUpdates) styleUpdates = {
                        };
                        styleUpdates[styleName] = '';
                    }
                     // Update styles that changed since `lastProp`.
                    for(styleName in nextProp)if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                        if (!styleUpdates) styleUpdates = {
                        };
                        styleUpdates[styleName] = nextProp[styleName];
                    }
                } else {
                    // Relies on `updateStylesByID` not mutating `styleUpdates`.
                    if (!styleUpdates) {
                        if (!updatePayload) updatePayload = [];
                        updatePayload.push(propKey, styleUpdates);
                    }
                    styleUpdates = nextProp;
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                var lastHtml = lastProp ? lastProp[HTML$1] : undefined;
                if (nextHtml != null) {
                    if (lastHtml !== nextHtml) (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === 'string' || typeof nextProp === 'number') (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (registrationNameDependencies1.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    // We eagerly listen to this even though we haven't committed yet.
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
                if (!updatePayload && lastProp !== nextProp) // This is a special case. If any listener updates we need to ensure
                // that the "current" props pointer gets updated so we need a commit
                // to update this element.
                updatePayload = [];
            } else if (typeof nextProp === 'object' && nextProp !== null && nextProp.$$typeof === REACT_OPAQUE_ID_TYPE) // If we encounter useOpaqueReference's opaque object, this means we are hydrating.
            // In this case, call the opaque object's toString function which generates a new client
            // ID so client and server IDs match and throws to rerender.
            nextProp.toString();
            else // For any other property we always add it to the queue and then we
            // filter it out using the allowed property list during the commit.
            (updatePayload = updatePayload || []).push(propKey, nextProp);
        }
        if (styleUpdates) {
            validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
        }
        return updatePayload;
    } // Apply the diff.
    function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
        // Update checked *before* name.
        // In the middle of an update, it is possible to have multiple checked.
        // When a checked radio tries to change name, browser makes another radio's checked false.
        if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) updateChecked(domElement, nextRawProps);
        var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
        var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.
        updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
        // changed.
        switch(tag){
            case 'input':
                // Update the wrapper around inputs *after* updating props. This has to
                // happen after `updateDOMProperties`. Otherwise HTML5 input validations
                // raise warnings and prevent the new value from being assigned.
                updateWrapper(domElement, nextRawProps);
                break;
            case 'textarea':
                updateWrapper$1(domElement, nextRawProps);
                break;
            case 'select':
                // <select> value update needs to occur after <option> children
                // reconciliation
                postUpdateWrapper(domElement, nextRawProps);
                break;
        }
    }
    function getPossibleStandardName(propName) {
        var lowerCasedName = propName.toLowerCase();
        if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) return null;
        return possibleStandardNames[lowerCasedName] || null;
    }
    function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
        var isCustomComponentTag;
        var extraAttributeNames;
        suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING] === true;
        isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        switch(tag){
            case 'dialog':
                listenToNonDelegatedEvent('cancel', domElement);
                listenToNonDelegatedEvent('close', domElement);
                break;
            case 'iframe':
            case 'object':
            case 'embed':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent('load', domElement);
                break;
            case 'video':
            case 'audio':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                break;
            case 'source':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent('error', domElement);
                break;
            case 'img':
            case 'image':
            case 'link':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent('error', domElement);
                listenToNonDelegatedEvent('load', domElement);
                break;
            case 'details':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent('toggle', domElement);
                break;
            case 'input':
                initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'option':
                validateProps(domElement, rawProps);
                break;
            case 'select':
                initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'textarea':
                initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
        }
        assertValidProps(tag, rawProps);
        extraAttributeNames = new Set();
        var attributes = domElement.attributes;
        for(var _i = 0; _i < attributes.length; _i++){
            var name = attributes[_i].name.toLowerCase();
            switch(name){
                // Built-in SSR attribute is allowed
                case 'data-reactroot':
                    break;
                // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                case 'value':
                    break;
                case 'checked':
                    break;
                case 'selected':
                    break;
                default:
                    // Intentionally use the original name.
                    // See discussion in https://github.com/facebook/react/pull/10676.
                    extraAttributeNames.add(attributes[_i].name);
            }
        }
        var updatePayload = null;
        for(var propKey in rawProps){
            if (!rawProps.hasOwnProperty(propKey)) continue;
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
                // For text content children we compare against textContent. This
                // might match additional HTML that is hidden when we read it using
                // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
                // satisfies our requirement. Our requirement is not to produce perfect
                // HTML and attributes. Ideally we should preserve structure but it's
                // ok not to if the visible content is still enough to indicate what
                // even listeners these nodes might be wired up to.
                // TODO: Warn if there is more than a single textNode as a child.
                // TODO: Should we use domElement.firstChild.nodeValue to compare?
                if (typeof nextProp === 'string') {
                    if (domElement.textContent !== nextProp) {
                        if (!suppressHydrationWarning) warnForTextDifference(domElement.textContent, nextProp);
                        updatePayload = [
                            CHILDREN,
                            nextProp
                        ];
                    }
                } else if (typeof nextProp === 'number') {
                    if (domElement.textContent !== '' + nextProp) {
                        if (!suppressHydrationWarning) warnForTextDifference(domElement.textContent, nextProp);
                        updatePayload = [
                            CHILDREN,
                            '' + nextProp
                        ];
                    }
                }
            } else if (registrationNameDependencies1.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
            } else if (typeof isCustomComponentTag === 'boolean') {
                // Validate that the properties correspond to their expected values.
                var serverValue = void 0;
                var propertyInfo = getPropertyInfo(propKey);
                if (suppressHydrationWarning) ;
                else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // TODO: Only ignore them on controlled tags.
                propKey === 'value' || propKey === 'checked' || propKey === 'selected') ;
                else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                    var serverHTML = domElement.innerHTML;
                    var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                    if (nextHtml != null) {
                        var expectedHTML = normalizeHTML(domElement, nextHtml);
                        if (expectedHTML !== serverHTML) warnForPropDifference(propKey, serverHTML, expectedHTML);
                    }
                } else if (propKey === STYLE) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey);
                    if (canDiffStyleForHydrationWarning) {
                        var expectedStyle = createDangerousStringForStyles(nextProp);
                        serverValue = domElement.getAttribute('style');
                        if (expectedStyle !== serverValue) warnForPropDifference(propKey, serverValue, expectedStyle);
                    }
                } else if (isCustomComponentTag) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey.toLowerCase());
                    serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    if (nextProp !== serverValue) warnForPropDifference(propKey, serverValue, nextProp);
                } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                    var isMismatchDueToBadCasing = false;
                    if (propertyInfo !== null) {
                        // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propertyInfo.attributeName);
                        serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                    } else {
                        var ownNamespace = parentNamespace;
                        if (ownNamespace === HTML_NAMESPACE$1) ownNamespace = getIntrinsicNamespace(tag);
                        if (ownNamespace === HTML_NAMESPACE$1) // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propKey.toLowerCase());
                        else {
                            var standardName = getPossibleStandardName(propKey);
                            if (standardName !== null && standardName !== propKey) {
                                // If an SVG prop is supplied with bad casing, it will
                                // be successfully parsed from HTML, but will produce a mismatch
                                // (and would be incorrectly rendered on the client).
                                // However, we already warn about bad casing elsewhere.
                                // So we'll skip the misleading extra mismatch warning in this case.
                                isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.
                                extraAttributeNames.delete(standardName);
                            } // $FlowFixMe - Should be inferred as not undefined.
                            extraAttributeNames.delete(propKey);
                        }
                        serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    }
                    if (nextProp !== serverValue && !isMismatchDueToBadCasing) warnForPropDifference(propKey, serverValue, nextProp);
                }
            }
        }
        // $FlowFixMe - Should be inferred as not undefined.
        if (extraAttributeNames.size > 0 && !suppressHydrationWarning) // $FlowFixMe - Should be inferred as not undefined.
        warnForExtraAttributes(extraAttributeNames);
        switch(tag){
            case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, true);
                break;
            case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case 'select':
            case 'option':
                break;
            default:
                if (typeof rawProps.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        return updatePayload;
    }
    function diffHydratedText(textNode, text) {
        var isDifferent = textNode.nodeValue !== text;
        return isDifferent;
    }
    function warnForUnmatchedText(textNode, text) {
        warnForTextDifference(textNode.nodeValue, text);
    }
    function warnForDeletedHydratableElement(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error1('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
    }
    function warnForDeletedHydratableText(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error1('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedElement(parentNode, tag, props) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error1('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedText(parentNode, text) {
        if (text === '') // We expect to insert empty text nodes since they're not represented in
        // the HTML.
        // TODO: Remove this special case if we can just avoid inserting empty
        // text nodes.
        return;
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error1('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
    }
    function restoreControlledState$3(domElement, tag, props) {
        switch(tag){
            case 'input':
                restoreControlledState(domElement, props);
                return;
            case 'textarea':
                restoreControlledState$2(domElement, props);
                return;
            case 'select':
                restoreControlledState$1(domElement, props);
                return;
        }
    }
    var validateDOMNesting = function() {
    };
    var updatedAncestorInfo = function() {
    };
    // This validation code was written based on the HTML5 parsing spec:
    // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    //
    // Note: this does not catch all invalid nesting, nor does it try to (as it's
    // not clear what practical benefit doing so provides); instead, we warn only
    // for cases where the parser will give a parse tree differing from what React
    // intended. For example, <b><div></div></b> is invalid but we don't warn
    // because it still parses correctly; we do warn for other cases like nested
    // <p> tags where the beginning of the second element implicitly closes the
    // first, causing a confusing mess.
    // https://html.spec.whatwg.org/multipage/syntax.html#special
    var specialTags = [
        'address',
        'applet',
        'area',
        'article',
        'aside',
        'base',
        'basefont',
        'bgsound',
        'blockquote',
        'body',
        'br',
        'button',
        'caption',
        'center',
        'col',
        'colgroup',
        'dd',
        'details',
        'dir',
        'div',
        'dl',
        'dt',
        'embed',
        'fieldset',
        'figcaption',
        'figure',
        'footer',
        'form',
        'frame',
        'frameset',
        'h1',
        'h2',
        'h3',
        'h4',
        'h5',
        'h6',
        'head',
        'header',
        'hgroup',
        'hr',
        'html',
        'iframe',
        'img',
        'input',
        'isindex',
        'li',
        'link',
        'listing',
        'main',
        'marquee',
        'menu',
        'menuitem',
        'meta',
        'nav',
        'noembed',
        'noframes',
        'noscript',
        'object',
        'ol',
        'p',
        'param',
        'plaintext',
        'pre',
        'script',
        'section',
        'select',
        'source',
        'style',
        'summary',
        'table',
        'tbody',
        'td',
        'template',
        'textarea',
        'tfoot',
        'th',
        'thead',
        'title',
        'tr',
        'track',
        'ul',
        'wbr',
        'xmp'
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    var inScopeTags = [
        'applet',
        'caption',
        'html',
        'table',
        'td',
        'th',
        'marquee',
        'object',
        'template',
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        'foreignObject',
        'desc',
        'title'
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
    var buttonScopeTags = inScopeTags.concat([
        'button'
    ]); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
    var impliedEndTags = [
        'dd',
        'dt',
        'li',
        'option',
        'optgroup',
        'p',
        'rp',
        'rt'
    ];
    var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
    };
    updatedAncestorInfo = function(oldInfo, tag) {
        var ancestorInfo = _assign({
        }, oldInfo || emptyAncestorInfo);
        var info = {
            tag: tag
        };
        if (inScopeTags.indexOf(tag) !== -1) {
            ancestorInfo.aTagInScope = null;
            ancestorInfo.buttonTagInScope = null;
            ancestorInfo.nobrTagInScope = null;
        }
        if (buttonScopeTags.indexOf(tag) !== -1) ancestorInfo.pTagInButtonScope = null;
         // See rules for 'li', 'dd', 'dt' start tags in
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
            ancestorInfo.listItemTagAutoclosing = null;
            ancestorInfo.dlItemTagAutoclosing = null;
        }
        ancestorInfo.current = info;
        if (tag === 'form') ancestorInfo.formTag = info;
        if (tag === 'a') ancestorInfo.aTagInScope = info;
        if (tag === 'button') ancestorInfo.buttonTagInScope = info;
        if (tag === 'nobr') ancestorInfo.nobrTagInScope = info;
        if (tag === 'p') ancestorInfo.pTagInButtonScope = info;
        if (tag === 'li') ancestorInfo.listItemTagAutoclosing = info;
        if (tag === 'dd' || tag === 'dt') ancestorInfo.dlItemTagAutoclosing = info;
        return ancestorInfo;
    };
    /**
   * Returns whether
   */ var isTagValidWithParent = function(tag, parentTag) {
        // First, let's check if we're in an unusual parsing mode...
        switch(parentTag){
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
            case 'select':
                return tag === 'option' || tag === 'optgroup' || tag === '#text';
            case 'optgroup':
                return tag === 'option' || tag === '#text';
            // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
            // but
            case 'option':
                return tag === '#text';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
            // No special behavior since these rules fall back to "in body" mode for
            // all except special table nodes which cause bad parsing behavior anyway.
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
            case 'tr':
                return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
            case 'tbody':
            case 'thead':
            case 'tfoot':
                return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
            case 'colgroup':
                return tag === 'col' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
            case 'table':
                return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
            case 'head':
                return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
            case 'html':
                return tag === 'head' || tag === 'body' || tag === 'frameset';
            case 'frameset':
                return tag === 'frame';
            case '#document':
                return tag === 'html';
        } // Probably in the "in body" parsing mode, so we outlaw only tag combos
        // where the parsing rules cause implicit opens or closes to be added.
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        switch(tag){
            case 'h1':
            case 'h2':
            case 'h3':
            case 'h4':
            case 'h5':
            case 'h6':
                return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
            case 'rp':
            case 'rt':
                return impliedEndTags.indexOf(parentTag) === -1;
            case 'body':
            case 'caption':
            case 'col':
            case 'colgroup':
            case 'frameset':
            case 'frame':
            case 'head':
            case 'html':
            case 'tbody':
            case 'td':
            case 'tfoot':
            case 'th':
            case 'thead':
            case 'tr':
                // These tags are only valid with a few parents that have special child
                // parsing rules -- if we're down here, then none of those matched and
                // so we allow it only if we don't know what the parent is, as all other
                // cases are invalid.
                return parentTag == null;
        }
        return true;
    };
    /**
   * Returns whether
   */ var findInvalidAncestorForTag = function(tag, ancestorInfo) {
        switch(tag){
            case 'address':
            case 'article':
            case 'aside':
            case 'blockquote':
            case 'center':
            case 'details':
            case 'dialog':
            case 'dir':
            case 'div':
            case 'dl':
            case 'fieldset':
            case 'figcaption':
            case 'figure':
            case 'footer':
            case 'header':
            case 'hgroup':
            case 'main':
            case 'menu':
            case 'nav':
            case 'ol':
            case 'p':
            case 'section':
            case 'summary':
            case 'ul':
            case 'pre':
            case 'listing':
            case 'table':
            case 'hr':
            case 'xmp':
            case 'h1':
            case 'h2':
            case 'h3':
            case 'h4':
            case 'h5':
            case 'h6':
                return ancestorInfo.pTagInButtonScope;
            case 'form':
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case 'li':
                return ancestorInfo.listItemTagAutoclosing;
            case 'dd':
            case 'dt':
                return ancestorInfo.dlItemTagAutoclosing;
            case 'button':
                return ancestorInfo.buttonTagInScope;
            case 'a':
                // Spec says something about storing a list of markers, but it sounds
                // equivalent to this check.
                return ancestorInfo.aTagInScope;
            case 'nobr':
                return ancestorInfo.nobrTagInScope;
        }
        return null;
    };
    var didWarn$1 = {
    };
    validateDOMNesting = function(childTag, childText, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        if (childText != null) {
            if (childTag != null) error1('validateDOMNesting: when childText is passed, childTag should be null');
            childTag = '#text';
        }
        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var invalidParentOrAncestor = invalidParent || invalidAncestor;
        if (!invalidParentOrAncestor) return;
        var ancestorTag = invalidParentOrAncestor.tag;
        var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;
        if (didWarn$1[warnKey]) return;
        didWarn$1[warnKey] = true;
        var tagDisplayName = childTag;
        var whitespaceInfo = '';
        if (childTag === '#text') {
            if (/\S/.test(childText)) tagDisplayName = 'Text nodes';
            else {
                tagDisplayName = 'Whitespace text nodes';
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
            }
        } else tagDisplayName = '<' + childTag + '>';
        if (invalidParent) {
            var info = '';
            if (ancestorTag === 'table' && childTag === 'tr') info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
            error1('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);
        } else error1("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
    };
    var SUPPRESS_HYDRATION_WARNING$1;
    SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
    var SUSPENSE_START_DATA = '$';
    var SUSPENSE_END_DATA = '/$';
    var SUSPENSE_PENDING_START_DATA = '$?';
    var SUSPENSE_FALLBACK_START_DATA = '$!';
    var STYLE$1 = 'style';
    var eventsEnabled = null;
    var selectionInformation = null;
    function shouldAutoFocusHostComponent(type, props) {
        switch(type){
            case 'button':
            case 'input':
            case 'select':
            case 'textarea':
                return !!props.autoFocus;
        }
        return false;
    }
    function getRootHostContext(rootContainerInstance) {
        var type;
        var namespace;
        var nodeType = rootContainerInstance.nodeType;
        switch(nodeType){
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE:
                type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
                var root = rootContainerInstance.documentElement;
                namespace = root ? root.namespaceURI : getChildNamespace(null, '');
                break;
            default:
                var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
                var ownNamespace = container.namespaceURI || null;
                type = container.tagName;
                namespace = getChildNamespace(ownNamespace, type);
                break;
        }
        var validatedTag = type.toLowerCase();
        var ancestorInfo = updatedAncestorInfo(null, validatedTag);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getChildHostContext(parentHostContext, type, rootContainerInstance) {
        var parentHostContextDev = parentHostContext;
        var namespace = getChildNamespace(parentHostContextDev.namespace, type);
        var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getPublicInstance(instance) {
        return instance;
    }
    function prepareForCommit(containerInfo) {
        eventsEnabled = isEnabled();
        selectionInformation = getSelectionInformation();
        var activeInstance = null;
        setEnabled(false);
        return activeInstance;
    }
    function resetAfterCommit(containerInfo) {
        restoreSelection(selectionInformation);
        setEnabled(eventsEnabled);
        eventsEnabled = null;
        selectionInformation = null;
    }
    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var parentNamespace;
        // TODO: take namespace into account when validating.
        var hostContextDev = hostContext;
        validateDOMNesting(type, null, hostContextDev.ancestorInfo);
        if (typeof props.children === 'string' || typeof props.children === 'number') {
            var string = '' + props.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        parentNamespace = hostContextDev.namespace;
        var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
        precacheFiberNode(internalInstanceHandle, domElement);
        updateFiberProps(domElement, props);
        return domElement;
    }
    function appendInitialChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
        setInitialProperties(domElement, type, props, rootContainerInstance);
        return shouldAutoFocusHostComponent(type, props);
    }
    function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
        var hostContextDev = hostContext;
        if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
            var string = '' + newProps.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        return diffProperties(domElement, type, oldProps, newProps);
    }
    function shouldSetTextContent(type, props) {
        return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
    }
    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        var hostContextDev = hostContext;
        validateDOMNesting(null, text, hostContextDev.ancestorInfo);
        var textNode = createTextNode(text, rootContainerInstance);
        precacheFiberNode(internalInstanceHandle, textNode);
        return textNode;
    }
    // if a component just imports ReactDOM (e.g. for findDOMNode).
    // Some environments might not have setTimeout or clearTimeout.
    var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
    var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
    var noTimeout = -1; // -------------------
    function commitMount(domElement, type, newProps, internalInstanceHandle) {
        // Despite the naming that might imply otherwise, this method only
        // fires if there is an `Update` effect scheduled during mounting.
        // This happens if `finalizeInitialChildren` returns `true` (which it
        // does to implement the `autoFocus` attribute on the client). But
        // there are also other cases when this might happen (such as patching
        // up text content during hydration mismatch). So we'll check this again.
        if (shouldAutoFocusHostComponent(type, newProps)) domElement.focus();
    }
    function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
        // Update the props handle so that we know which props are the ones with
        // with current event handlers.
        updateFiberProps(domElement, newProps); // Apply the diff to the DOM node.
        updateProperties(domElement, updatePayload, type, oldProps, newProps);
    }
    function resetTextContent(domElement) {
        setTextContent(domElement, '');
    }
    function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
    }
    function appendChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function appendChildToContainer(container, child) {
        var parentNode;
        if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
        } else {
            parentNode = container;
            parentNode.appendChild(child);
        } // This container might be used for a portal.
        // If something inside a portal is clicked, that click should bubble
        // through the React tree. However, on Mobile Safari the click would
        // never bubble through the *DOM* tree unless an ancestor with onclick
        // event exists. So we wouldn't see it and dispatch it.
        // This is why we ensure that non React root containers have inline onclick
        // defined.
        // https://github.com/facebook/react/issues/11918
        var reactRootContainer = container._reactRootContainer;
        if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(parentNode);
    }
    function insertBefore(parentInstance, child, beforeChild) {
        parentInstance.insertBefore(child, beforeChild);
    }
    function insertInContainerBefore(container, child, beforeChild) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.insertBefore(child, beforeChild);
        else container.insertBefore(child, beforeChild);
    }
    function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.removeChild(child);
        else container.removeChild(child);
    }
    function hideInstance(instance) {
        var style = instance.style;
        if (typeof style.setProperty === 'function') style.setProperty('display', 'none', 'important');
        else style.display = 'none';
    }
    function hideTextInstance(textInstance) {
        textInstance.nodeValue = '';
    }
    function unhideInstance(instance, props) {
        var styleProp = props[STYLE$1];
        var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
        instance.style.display = dangerousStyleValue('display', display);
    }
    function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
    }
    function clearContainer(container) {
        if (container.nodeType === ELEMENT_NODE) container.textContent = '';
        else if (container.nodeType === DOCUMENT_NODE) {
            var body = container.body;
            if (body != null) body.textContent = '';
        }
    } // -------------------
    function canHydrateInstance(instance, type, props) {
        if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) return null;
         // This has now been refined to an element node.
        return instance;
    }
    function canHydrateTextInstance(instance, text) {
        if (text === '' || instance.nodeType !== TEXT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a text node.
        return instance;
    }
    function isSuspenseInstancePending(instance) {
        return instance.data === SUSPENSE_PENDING_START_DATA;
    }
    function isSuspenseInstanceFallback(instance) {
        return instance.data === SUSPENSE_FALLBACK_START_DATA;
    }
    function getNextHydratable(node) {
        // Skip non-hydratable nodes.
        for(; node != null; node = node.nextSibling){
            var nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) break;
        }
        return node;
    }
    function getNextHydratableSibling(instance) {
        return getNextHydratable(instance.nextSibling);
    }
    function getFirstHydratableChild(parentInstance) {
        return getNextHydratable(parentInstance.firstChild);
    }
    function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
        // get attached.
        updateFiberProps(instance, props);
        var parentNamespace;
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
        return diffHydratedProperties(instance, type, props, parentNamespace);
    }
    function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
        precacheFiberNode(internalInstanceHandle, textInstance);
        return diffHydratedText(textInstance, text);
    }
    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) return getNextHydratableSibling(node);
                    else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) depth++;
            }
            node = node.nextSibling;
        } // TODO: Warn, we didn't find the end comment boundary.
        return null;
    } // Returns the SuspenseInstance if this node is a direct child of a
    // SuspenseInstance. I.e. if its previous sibling is a Comment with
    // SUSPENSE_x_START_DATA. Otherwise, null.
    function getParentSuspenseInstance(targetInstance) {
        var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                    if (depth === 0) return node;
                    else depth--;
                } else if (data === SUSPENSE_END_DATA) depth++;
            }
            node = node.previousSibling;
        }
        return null;
    }
    function commitHydratedContainer(container) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
        warnForUnmatchedText(textInstance, text);
    }
    function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForUnmatchedText(textInstance, text);
    }
    function didNotHydrateContainerInstance(parentContainer, instance) {
        if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentContainer, instance);
        else if (instance.nodeType === COMMENT_NODE) ;
        else warnForDeletedHydratableText(parentContainer, instance);
    }
    function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentInstance, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentInstance, instance);
        }
    }
    function didNotFindHydratableContainerInstance(parentContainer, type, props) {
        warnForInsertedHydratedElement(parentContainer, type);
    }
    function didNotFindHydratableContainerTextInstance(parentContainer, text) {
        warnForInsertedHydratedText(parentContainer, text);
    }
    function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedElement(parentInstance, type);
    }
    function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedText(parentInstance, text);
    }
    function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
        parentProps[SUPPRESS_HYDRATION_WARNING$1];
    }
    var clientId = 0;
    function makeClientIdInDEV(warnOnAccessInDEV) {
        var id = 'r:' + (clientId++).toString(36);
        return {
            toString: function() {
                warnOnAccessInDEV();
                return id;
            },
            valueOf: function() {
                warnOnAccessInDEV();
                return id;
            }
        };
    }
    function isOpaqueHydratingObject(value) {
        return value !== null && typeof value === 'object' && value.$$typeof === REACT_OPAQUE_ID_TYPE;
    }
    function makeOpaqueHydratingObject(attemptToReadValue) {
        return {
            $$typeof: REACT_OPAQUE_ID_TYPE,
            toString: attemptToReadValue,
            valueOf: attemptToReadValue
        };
    }
    function preparePortalMount(portalInstance) {
        listenToAllSupportedEvents(portalInstance);
    }
    var randomKey = Math.random().toString(36).slice(2);
    var internalInstanceKey = '__reactFiber$' + randomKey;
    var internalPropsKey = '__reactProps$' + randomKey;
    var internalContainerInstanceKey = '__reactContainer$' + randomKey;
    var internalEventHandlersKey = '__reactEvents$' + randomKey;
    function precacheFiberNode(hostInst, node) {
        node[internalInstanceKey] = hostInst;
    }
    function markContainerAsRoot(hostRoot, node) {
        node[internalContainerInstanceKey] = hostRoot;
    }
    function unmarkContainerAsRoot(node) {
        node[internalContainerInstanceKey] = null;
    }
    function isContainerMarkedAsRoot(node) {
        return !!node[internalContainerInstanceKey];
    } // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
    // If the target node is part of a hydrated or not yet rendered subtree, then
    // this may also return a SuspenseComponent or HostRoot to indicate that.
    // Conceptually the HostRoot fiber is a child of the Container node. So if you
    // pass the Container node as the targetNode, you will not actually get the
    // HostRoot back. To get to the HostRoot, you need to pass a child of it.
    // The same thing applies to Suspense boundaries.
    function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst) // Don't return HostRoot or SuspenseComponent here.
        return targetInst;
         // If the direct event target isn't a React owned DOM node, we need to look
        // to see if one of its parents is a React owned DOM node.
        var parentNode = targetNode.parentNode;
        while(parentNode){
            // We'll check if this is a container root that could include
            // React nodes in the future. We need to check this first because
            // if we're a child of a dehydrated container, we need to first
            // find that inner container before moving on to finding the parent
            // instance. Note that we don't check this field on  the targetNode
            // itself because the fibers are conceptually between the container
            // node and the first child. It isn't surrounding the container node.
            // If it's not a container, we check if it's an instance.
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
                // Since this wasn't the direct target of the event, we might have
                // stepped past dehydrated DOM nodes to get here. However they could
                // also have been non-React nodes. We need to answer which one.
                // If we the instance doesn't have any children, then there can't be
                // a nested suspense boundary within it. So we can use this as a fast
                // bailout. Most of the time, when people add non-React children to
                // the tree, it is using a ref to a child-less DOM node.
                // Normally we'd only need to check one of the fibers because if it
                // has ever gone from having children to deleting them or vice versa
                // it would have deleted the dehydrated boundary nested inside already.
                // However, since the HostRoot starts out with an alternate it might
                // have one on the alternate so we need to check in case this was a
                // root.
                var alternate = targetInst.alternate;
                if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                    // Next we need to figure out if the node that skipped past is
                    // nested within a dehydrated boundary and if so, which one.
                    var suspenseInstance = getParentSuspenseInstance(targetNode);
                    while(suspenseInstance !== null){
                        // We found a suspense instance. That means that we haven't
                        // hydrated it yet. Even though we leave the comments in the
                        // DOM after hydrating, and there are boundaries in the DOM
                        // that could already be hydrated, we wouldn't have found them
                        // through this pass since if the target is hydrated it would
                        // have had an internalInstanceKey on it.
                        // Let's get the fiber associated with the SuspenseComponent
                        // as the deepest instance.
                        var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                        if (targetSuspenseInst) return targetSuspenseInst;
                         // If we don't find a Fiber on the comment, it might be because
                        // we haven't gotten to hydrate it yet. There might still be a
                        // parent boundary that hasn't above this one so we need to find
                        // the outer most that is known.
                        suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
                    // host component also hasn't hydrated yet. We can return it
                    // below since it will bail out on the isMounted check later.
                    }
                }
                return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
        }
        return null;
    }
    /**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */ function getInstanceFromNode(node) {
        var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
        if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) return inst;
            else return null;
        }
        return null;
    }
    /**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */ function getNodeFromInstance(inst) {
        if (inst.tag === HostComponent || inst.tag === HostText) // In Fiber this, is just the state node right now. We assume it will be
        // a host component or host text.
        return inst.stateNode;
         // Without this first invariant, passing a non-DOM-component triggers the next
        throw Error("getNodeFromInstance: Invalid argument.");
    }
    function getFiberCurrentPropsFromNode(node) {
        return node[internalPropsKey] || null;
    }
    function updateFiberProps(node, props) {
        node[internalPropsKey] = props;
    }
    function getEventListenerSet(node) {
        var elementListenerSet = node[internalEventHandlersKey];
        if (elementListenerSet === undefined) elementListenerSet = node[internalEventHandlersKey] = new Set();
        return elementListenerSet;
    }
    var loggedTypeFailures = {
    };
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(Object.prototype.hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error1("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error1('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var valueStack = [];
    var fiberStack;
    fiberStack = [];
    var index1 = -1;
    function createCursor(defaultValue) {
        return {
            current: defaultValue
        };
    }
    function pop(cursor, fiber) {
        if (index1 < 0) {
            error1('Unexpected pop.');
            return;
        }
        if (fiber !== fiberStack[index1]) error1('Unexpected Fiber popped.');
        cursor.current = valueStack[index1];
        valueStack[index1] = null;
        fiberStack[index1] = null;
        index1--;
    }
    function push(cursor, value, fiber) {
        index1++;
        valueStack[index1] = cursor.current;
        fiberStack[index1] = fiber;
        cursor.current = value;
    }
    var warnedAboutMissingGetChildContext;
    warnedAboutMissingGetChildContext = {
    };
    var emptyContextObject = {
    };
    Object.freeze(emptyContextObject);
    var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.
    var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
    // We use this to get access to the parent context after we have already
    // pushed the next context provider, and now need to merge their contexts.
    var previousContext = emptyContextObject;
    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
        if (didPushOwnContextIfProvider && isContextProvider(Component)) // If the fiber is a context provider itself, when we read its context
        // we may have already pushed its own child context on the stack. A context
        // provider should not "see" its own child context. Therefore we read the
        // previous (parent) context instead for a context provider.
        return previousContext;
        return contextStackCursor.current;
    }
    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
    }
    function getMaskedContext(workInProgress, unmaskedContext) {
        var type = workInProgress.type;
        var contextTypes = type.contextTypes;
        if (!contextTypes) return emptyContextObject;
         // Avoid recreating masked context unless unmasked context has changed.
        // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
        // This may trigger infinite loops if componentWillReceiveProps calls setState.
        var instance = workInProgress.stateNode;
        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
        var context = {
        };
        for(var key in contextTypes)context[key] = unmaskedContext[key];
        var name = getComponentName(type) || 'Unknown';
        checkPropTypes(contextTypes, context, 'context', name);
        // Context is created before the class component is instantiated so check for instance.
        if (instance) cacheContext(workInProgress, unmaskedContext, context);
        return context;
    }
    function hasContextChanged() {
        return didPerformWorkStackCursor.current;
    }
    function isContextProvider(type) {
        var childContextTypes = type.childContextTypes;
        return childContextTypes !== null && childContextTypes !== undefined;
    }
    function popContext(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function pushTopLevelContextObject(fiber, context, didChange) {
        if (!(contextStackCursor.current === emptyContextObject)) throw Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
    }
    function processChildContext(fiber, type, parentContext) {
        var instance = fiber.stateNode;
        var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
        // It has only been added in Fiber to match the (unintentional) behavior in Stack.
        if (typeof instance.getChildContext !== 'function') {
            var componentName = getComponentName(type) || 'Unknown';
            if (!warnedAboutMissingGetChildContext[componentName]) {
                warnedAboutMissingGetChildContext[componentName] = true;
                error1("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
            }
            return parentContext;
        }
        var childContext = instance.getChildContext();
        for(var contextKey in childContext){
            if (!(contextKey in childContextTypes)) throw Error((getComponentName(type) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes.");
        }
        var name = getComponentName(type) || 'Unknown';
        checkPropTypes(childContextTypes, childContext, 'child context', name);
        return _assign({
        }, parentContext, childContext);
    }
    function pushContextProvider(workInProgress) {
        var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
        // If the instance does not exist yet, we will push null at first,
        // and replace it on the stack later when invalidating the context.
        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
        // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
        previousContext = contextStackCursor.current;
        push(contextStackCursor, memoizedMergedChildContext, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
    }
    function invalidateContextProvider(workInProgress, type, didChange) {
        var instance = workInProgress.stateNode;
        if (!instance) throw Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (didChange) {
            // Merge parent and own context.
            // Skip this if we're not updating due to sCU.
            // This avoids unnecessarily recomputing memoized values.
            var mergedContext = processChildContext(workInProgress, type, previousContext);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
            // It is important to unwind the context in the reverse order.
            pop(didPerformWorkStackCursor, workInProgress);
            pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.
            push(contextStackCursor, mergedContext, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        } else {
            pop(didPerformWorkStackCursor, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        }
    }
    function findCurrentUnmaskedContext(fiber) {
        // Currently this is only used with renderSubtreeIntoContainer; not sure if it
        // makes sense elsewhere
        if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) throw Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var node = fiber;
        do {
            switch(node.tag){
                case HostRoot:
                    return node.stateNode.context;
                case ClassComponent:
                    var Component = node.type;
                    if (isContextProvider(Component)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
                    break;
            }
            node = node.return;
        }while (node !== null)
        throw Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    var LegacyRoot = 0;
    var BlockingRoot = 1;
    var ConcurrentRoot = 2;
    var rendererID = null;
    var injectedHook = null;
    var hasLoggedError = false;
    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';
    function injectInternals(internals) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') // No DevTools
        return false;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled) // This isn't a real property on the hook, but it can be set to opt out
        // of DevTools integration and associated warnings and logs.
        // https://github.com/facebook/react/issues/3877
        return true;
        if (!hook.supportsFiber) {
            error1("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            return true;
        }
        try {
            rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.
            injectedHook = hook;
        } catch (err) {
            error1('React instrumentation encountered an error: %s.', err);
        } // DevTools exists
        return true;
    }
    function onScheduleRoot(root, children) {
        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') try {
            injectedHook.onScheduleFiberRoot(rendererID, root, children);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error1('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onCommitRoot(root, priorityLevel) {
        if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') try {
            var didError = (root.current.flags & DidCapture) === DidCapture;
            if (enableProfilerTimer) injectedHook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);
            else injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error1('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onCommitUnmount(fiber) {
        if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') try {
            injectedHook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error1('React instrumentation encountered an error: %s', err);
            }
        }
    }
    var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority, Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback, Scheduler_cancelCallback = Scheduler.unstable_cancelCallback, Scheduler_shouldYield = Scheduler.unstable_shouldYield, Scheduler_requestPaint = Scheduler.unstable_requestPaint, Scheduler_now$1 = Scheduler.unstable_now, Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel, Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority, Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority, Scheduler_NormalPriority = Scheduler.unstable_NormalPriority, Scheduler_LowPriority = Scheduler.unstable_LowPriority, Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;
    // Provide explicit error message when production+profiling bundle of e.g.
    // react-dom is used with production (non-profiling) bundle of
    // scheduler/tracing
    if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
    var fakeCallbackNode = {
    }; // Except for NoPriority, these correspond to Scheduler priorities. We use
    // ascending numbers so we can compare them like numbers. They start at 90 to
    // avoid clashing with Scheduler's priorities.
    var ImmediatePriority$1 = 99;
    var UserBlockingPriority$2 = 98;
    var NormalPriority$1 = 97;
    var LowPriority$1 = 96;
    var IdlePriority$1 = 95; // NoPriority is the absence of priority. Also React-only.
    var NoPriority$1 = 90;
    var shouldYield = Scheduler_shouldYield;
    var requestPaint = Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : function() {
    };
    var syncQueue = null;
    var immediateQueueCallbackNode = null;
    var isFlushingSyncQueue = false;
    var initialTimeMs$1 = Scheduler_now$1(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.
    // This will be the case for modern browsers that support `performance.now`. In
    // older browsers, Scheduler falls back to `Date.now`, which returns a Unix
    // timestamp. In that case, subtract the module initialization time to simulate
    // the behavior of performance.now and keep our times small enough to fit
    // within 32 bits.
    // TODO: Consider lifting this into Scheduler.
    var now = initialTimeMs$1 < 10000 ? Scheduler_now$1 : function() {
        return Scheduler_now$1() - initialTimeMs$1;
    };
    function getCurrentPriorityLevel() {
        switch(Scheduler_getCurrentPriorityLevel()){
            case Scheduler_ImmediatePriority:
                return ImmediatePriority$1;
            case Scheduler_UserBlockingPriority:
                return UserBlockingPriority$2;
            case Scheduler_NormalPriority:
                return NormalPriority$1;
            case Scheduler_LowPriority:
                return LowPriority$1;
            case Scheduler_IdlePriority:
                return IdlePriority$1;
            default:
                throw Error("Unknown priority level.");
        }
    }
    function reactPriorityToSchedulerPriority(reactPriorityLevel) {
        switch(reactPriorityLevel){
            case ImmediatePriority$1:
                return Scheduler_ImmediatePriority;
            case UserBlockingPriority$2:
                return Scheduler_UserBlockingPriority;
            case NormalPriority$1:
                return Scheduler_NormalPriority;
            case LowPriority$1:
                return Scheduler_LowPriority;
            case IdlePriority$1:
                return Scheduler_IdlePriority;
            default:
                throw Error("Unknown priority level.");
        }
    }
    function runWithPriority$1(reactPriorityLevel, fn) {
        var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
        return Scheduler_runWithPriority(priorityLevel, fn);
    }
    function scheduleCallback(reactPriorityLevel, callback, options) {
        var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
        return Scheduler_scheduleCallback(priorityLevel, callback, options);
    }
    function scheduleSyncCallback(callback) {
        // Push this callback into an internal queue. We'll flush these either in
        // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
        if (syncQueue === null) {
            syncQueue = [
                callback
            ]; // Flush the queue in the next tick, at the earliest.
            immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
        } else // Push onto existing queue. Don't need to schedule a callback because
        // we already scheduled one when we created the queue.
        syncQueue.push(callback);
        return fakeCallbackNode;
    }
    function cancelCallback(callbackNode) {
        if (callbackNode !== fakeCallbackNode) Scheduler_cancelCallback(callbackNode);
    }
    function flushSyncCallbackQueue() {
        if (immediateQueueCallbackNode !== null) {
            var node = immediateQueueCallbackNode;
            immediateQueueCallbackNode = null;
            Scheduler_cancelCallback(node);
        }
        flushSyncCallbackQueueImpl();
    }
    function flushSyncCallbackQueueImpl() {
        if (!isFlushingSyncQueue && syncQueue !== null) {
            // Prevent re-entrancy.
            isFlushingSyncQueue = true;
            var i = 0;
            try {
                var _isSync2 = true;
                var _queue = syncQueue;
                runWithPriority$1(ImmediatePriority$1, function() {
                    for(; i < _queue.length; i++){
                        var callback = _queue[i];
                        do callback = callback(_isSync2);
                        while (callback !== null)
                    }
                });
                syncQueue = null;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                if (syncQueue !== null) syncQueue = syncQueue.slice(i + 1);
                 // Resume flushing in the next tick
                Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
                throw error;
            } finally{
                isFlushingSyncQueue = false;
            }
        }
    }
    // TODO: this is special because it gets imported during build.
    var ReactVersion = '17.0.2';
    var NoMode = 0;
    var StrictMode = 1; // TODO: Remove BlockingMode and ConcurrentMode by reading from the root
    // tag instead
    var BlockingMode = 2;
    var ConcurrentMode = 4;
    var ProfileMode = 8;
    var DebugTracingMode = 16;
    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
    var NoTransition = 0;
    function requestCurrentTransition() {
        return ReactCurrentBatchConfig.transition;
    }
    var ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function(fiber, instance) {
        },
        flushPendingUnsafeLifecycleWarnings: function() {
        },
        recordLegacyContextWarning: function(fiber, instance) {
        },
        flushLegacyContextWarning: function() {
        },
        discardPendingWarnings: function() {
        }
    };
    var findStrictRoot = function(fiber) {
        var maybeStrictRoot = null;
        var node = fiber;
        while(node !== null){
            if (node.mode & StrictMode) maybeStrictRoot = node;
            node = node.return;
        }
        return maybeStrictRoot;
    };
    var setToSortedString = function(set) {
        var array = [];
        set.forEach(function(value) {
            array.push(value);
        });
        return array.sort().join(', ');
    };
    var pendingComponentWillMountWarnings = [];
    var pendingUNSAFE_ComponentWillMountWarnings = [];
    var pendingComponentWillReceivePropsWarnings = [];
    var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    var pendingComponentWillUpdateWarnings = [];
    var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.
    var didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
        // Dedup strategy: Warn once per component.
        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) return;
        if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) pendingComponentWillMountWarnings.push(fiber);
        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === 'function') pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
        if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) pendingComponentWillReceivePropsWarnings.push(fiber);
        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
        if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) pendingComponentWillUpdateWarnings.push(fiber);
        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === 'function') pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
        // We do an initial pass to gather component names
        var componentWillMountUniqueNames = new Set();
        if (pendingComponentWillMountWarnings.length > 0) {
            pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillMountWarnings = [];
        }
        var UNSAFE_componentWillMountUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
            pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillMountWarnings = [];
        }
        var componentWillReceivePropsUniqueNames = new Set();
        if (pendingComponentWillReceivePropsWarnings.length > 0) {
            pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillReceivePropsWarnings = [];
        }
        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
            pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        }
        var componentWillUpdateUniqueNames = new Set();
        if (pendingComponentWillUpdateWarnings.length > 0) {
            pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillUpdateWarnings = [];
        }
        var UNSAFE_componentWillUpdateUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
            pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
        } // Finally, we flush all the warnings
        // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'
        if (UNSAFE_componentWillMountUniqueNames.size > 0) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            error1("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
        }
        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
            error1("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
        }
        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
            error1("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
        }
        if (componentWillMountUniqueNames.size > 0) {
            var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
            warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
        }
        if (componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
            warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
        }
        if (componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
            warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
        }
    };
    var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.
    var didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
        var strictRoot = findStrictRoot(fiber);
        if (strictRoot === null) {
            error1("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
            return;
        } // Dedup strategy: Warn once per component.
        if (didWarnAboutLegacyContext.has(fiber.type)) return;
        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
            if (warningsForRoot === undefined) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
            }
            warningsForRoot.push(fiber);
        }
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function() {
        pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
            if (fiberArray.length === 0) return;
            var firstFiber = fiberArray[0];
            var uniqueNames = new Set();
            fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentName(fiber.type) || 'Component');
                didWarnAboutLegacyContext.add(fiber.type);
            });
            var sortedNames = setToSortedString(uniqueNames);
            try {
                setCurrentFiber(firstFiber);
                error1("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
            } finally{
                resetCurrentFiber();
            }
        });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function() {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
    };
    function resolveDefaultProps(Component, baseProps) {
        if (Component && Component.defaultProps) {
            // Resolve default props. Taken from ReactElement
            var props = _assign({
            }, baseProps);
            var defaultProps = Component.defaultProps;
            for(var propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
            return props;
        }
        return baseProps;
    }
    // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111
    var MAX_SIGNED_31_BIT_INT = 1073741823;
    var valueCursor = createCursor(null);
    var rendererSigil;
    // Use this to detect multiple renderers using the same context
    rendererSigil = {
    };
    var currentlyRenderingFiber = null;
    var lastContextDependency = null;
    var lastContextWithAllBitsObserved = null;
    var isDisallowedContextReadInDEV = false;
    function resetContextDependencies() {
        // This is called right before React yields execution, to ensure `readContext`
        // cannot be called outside the render phase.
        currentlyRenderingFiber = null;
        lastContextDependency = null;
        lastContextWithAllBitsObserved = null;
        isDisallowedContextReadInDEV = false;
    }
    function enterDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = true;
    }
    function exitDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = false;
    }
    function pushProvider(providerFiber, nextValue) {
        var context = providerFiber.type._context;
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) error1("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
        context._currentRenderer = rendererSigil;
    }
    function popProvider(providerFiber) {
        var currentValue = valueCursor.current;
        pop(valueCursor, providerFiber);
        var context = providerFiber.type._context;
        context._currentValue = currentValue;
    }
    function calculateChangedBits(context, newValue, oldValue) {
        if (objectIs(oldValue, newValue)) // No change
        return 0;
        else {
            var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
            if ((changedBits & MAX_SIGNED_31_BIT_INT) !== changedBits) error1("calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: %s", changedBits);
            return changedBits | 0;
        }
    }
    function scheduleWorkOnParentPath(parent, renderLanes) {
        // Update the child lanes of all the ancestors, including the alternates.
        var node = parent;
        while(node !== null){
            var alternate = node.alternate;
            if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
                node.childLanes = mergeLanes(node.childLanes, renderLanes);
                if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            else break;
            node = node.return;
        }
    }
    function propagateContextChange(workInProgress, context, changedBits, renderLanes) {
        var fiber = workInProgress.child;
        if (fiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
        fiber.return = workInProgress;
        while(fiber !== null){
            var nextFiber = void 0; // Visit this fiber.
            var list = fiber.dependencies;
            if (list !== null) {
                nextFiber = fiber.child;
                var dependency = list.firstContext;
                while(dependency !== null){
                    // Check if the context matches.
                    if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
                        // Match! Schedule an update on this fiber.
                        if (fiber.tag === ClassComponent) {
                            // Schedule a force update on the work-in-progress.
                            var update = createUpdate(NoTimestamp, pickArbitraryLane(renderLanes));
                            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
                            // update to the current fiber, too, which means it will persist even if
                            // this render is thrown away. Since it's a race condition, not sure it's
                            // worth fixing.
                            enqueueUpdate(fiber, update);
                        }
                        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
                        var alternate = fiber.alternate;
                        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
                        scheduleWorkOnParentPath(fiber.return, renderLanes); // Mark the updated lanes on the list, too.
                        list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
                        break;
                    }
                    dependency = dependency.next;
                }
            } else if (fiber.tag === ContextProvider) // Don't scan deeper if this is a matching provider
            nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
            else // Traverse down.
            nextFiber = fiber.child;
            if (nextFiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
            nextFiber.return = fiber;
            else {
                // No child. Traverse to next sibling.
                nextFiber = fiber;
                while(nextFiber !== null){
                    if (nextFiber === workInProgress) {
                        // We're back to the root of this subtree. Exit.
                        nextFiber = null;
                        break;
                    }
                    var sibling = nextFiber.sibling;
                    if (sibling !== null) {
                        // Set the return pointer of the sibling to the work-in-progress fiber.
                        sibling.return = nextFiber.return;
                        nextFiber = sibling;
                        break;
                    } // No more siblings. Traverse up.
                    nextFiber = nextFiber.return;
                }
            }
            fiber = nextFiber;
        }
    }
    function prepareToReadContext(workInProgress, renderLanes) {
        currentlyRenderingFiber = workInProgress;
        lastContextDependency = null;
        lastContextWithAllBitsObserved = null;
        var dependencies = workInProgress.dependencies;
        if (dependencies !== null) {
            var firstContext = dependencies.firstContext;
            if (firstContext !== null) {
                if (includesSomeLane(dependencies.lanes, renderLanes)) // Context list has a pending update. Mark that this fiber performed work.
                markWorkInProgressReceivedUpdate();
                 // Reset the work-in-progress list
                dependencies.firstContext = null;
            }
        }
    }
    function readContext(context, observedBits) {
        // This warning would fire if you read context inside a Hook like useMemo.
        // Unlike the class check below, it's not enforced in production for perf.
        if (isDisallowedContextReadInDEV) error1("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        if (lastContextWithAllBitsObserved === context) ;
        else if (observedBits === false || observedBits === 0) ;
        else {
            var resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.
            if (typeof observedBits !== 'number' || observedBits === MAX_SIGNED_31_BIT_INT) {
                // Observe all updates.
                lastContextWithAllBitsObserved = context;
                resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
            } else resolvedObservedBits = observedBits;
            var contextItem = {
                context: context,
                observedBits: resolvedObservedBits,
                next: null
            };
            if (lastContextDependency === null) {
                if (!(currentlyRenderingFiber !== null)) throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                 // This is the first dependency for this component. Create a new list.
                lastContextDependency = contextItem;
                currentlyRenderingFiber.dependencies = {
                    lanes: NoLanes,
                    firstContext: contextItem,
                    responders: null
                };
            } else // Append a new context item.
            lastContextDependency = lastContextDependency.next = contextItem;
        }
        return context._currentValue;
    }
    var UpdateState = 0;
    var ReplaceState = 1;
    var ForceUpdate = 2;
    var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
    // It should only be read right after calling `processUpdateQueue`, via
    // `checkHasForceUpdateAfterProcessing`.
    var hasForceUpdate = false;
    var didWarnUpdateInsideUpdate;
    var currentlyProcessingQueue;
    didWarnUpdateInsideUpdate = false;
    currentlyProcessingQueue = null;
    function initializeUpdateQueue(fiber) {
        var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
                pending: null
            },
            effects: null
        };
        fiber.updateQueue = queue;
    }
    function cloneUpdateQueue(current, workInProgress) {
        // Clone the update queue from current. Unless it's already a clone.
        var queue = workInProgress.updateQueue;
        var currentQueue = current.updateQueue;
        if (queue === currentQueue) {
            var clone = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: currentQueue.firstBaseUpdate,
                lastBaseUpdate: currentQueue.lastBaseUpdate,
                shared: currentQueue.shared,
                effects: currentQueue.effects
            };
            workInProgress.updateQueue = clone;
        }
    }
    function createUpdate(eventTime, lane) {
        var update = {
            eventTime: eventTime,
            lane: lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
        };
        return update;
    }
    function enqueueUpdate(fiber, update) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return;
        var sharedQueue = updateQueue.shared;
        var pending = sharedQueue.pending;
        if (pending === null) // This is the first update. Create a circular list.
        update.next = update;
        else {
            update.next = pending.next;
            pending.next = update;
        }
        sharedQueue.pending = update;
        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
            error1("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
            didWarnUpdateInsideUpdate = true;
        }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
        // Captured updates are updates that are thrown by a child during the render
        // phase. They should be discarded if the render is aborted. Therefore,
        // we should only put them on the work-in-progress queue, not the current one.
        var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.
        var current = workInProgress.alternate;
        if (current !== null) {
            var currentQueue = current.updateQueue;
            if (queue === currentQueue) {
                // The work-in-progress queue is the same as current. This happens when
                // we bail out on a parent fiber that then captures an error thrown by
                // a child. Since we want to append the update only to the work-in
                // -progress queue, we need to clone the updates. We usually clone during
                // processUpdateQueue, but that didn't happen in this case because we
                // skipped over the parent when we bailed out.
                var newFirst = null;
                var newLast = null;
                var firstBaseUpdate = queue.firstBaseUpdate;
                if (firstBaseUpdate !== null) {
                    // Loop through the updates and clone them.
                    var update = firstBaseUpdate;
                    do {
                        var clone = {
                            eventTime: update.eventTime,
                            lane: update.lane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        if (newLast === null) newFirst = newLast = clone;
                        else {
                            newLast.next = clone;
                            newLast = clone;
                        }
                        update = update.next;
                    }while (update !== null) // Append the captured update the end of the cloned list.
                    if (newLast === null) newFirst = newLast = capturedUpdate;
                    else {
                        newLast.next = capturedUpdate;
                        newLast = capturedUpdate;
                    }
                } else // There are no base updates.
                newFirst = newLast = capturedUpdate;
                queue = {
                    baseState: currentQueue.baseState,
                    firstBaseUpdate: newFirst,
                    lastBaseUpdate: newLast,
                    shared: currentQueue.shared,
                    effects: currentQueue.effects
                };
                workInProgress.updateQueue = queue;
                return;
            }
        } // Append the update to the end of the list.
        var lastBaseUpdate = queue.lastBaseUpdate;
        if (lastBaseUpdate === null) queue.firstBaseUpdate = capturedUpdate;
        else lastBaseUpdate.next = capturedUpdate;
        queue.lastBaseUpdate = capturedUpdate;
    }
    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
        switch(update.tag){
            case ReplaceState:
                var payload = update.payload;
                if (typeof payload === 'function') {
                    enterDisallowedContextReadInDEV();
                    var nextState = payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictMode) {
                        disableLogs();
                        try {
                            payload.call(instance, prevState, nextProps);
                        } finally{
                            reenableLogs();
                        }
                    }
                    exitDisallowedContextReadInDEV();
                    return nextState;
                } // State object
                return payload;
            case CaptureUpdate:
                workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
            // Intentional fallthrough
            case UpdateState:
                var _payload = update.payload;
                var partialState;
                if (typeof _payload === 'function') {
                    enterDisallowedContextReadInDEV();
                    partialState = _payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictMode) {
                        disableLogs();
                        try {
                            _payload.call(instance, prevState, nextProps);
                        } finally{
                            reenableLogs();
                        }
                    }
                    exitDisallowedContextReadInDEV();
                } else // Partial state object
                partialState = _payload;
                if (partialState === null || partialState === undefined) // Null and undefined are treated as no-ops.
                return prevState;
                 // Merge the partial state and the previous state.
                return _assign({
                }, prevState, partialState);
            case ForceUpdate:
                hasForceUpdate = true;
                return prevState;
        }
        return prevState;
    }
    function processUpdateQueue(workInProgress, props, instance, renderLanes) {
        // This is always non-null on a ClassComponent or HostRoot
        var queue = workInProgress.updateQueue;
        hasForceUpdate = false;
        currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate;
        var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.
        var pendingQueue = queue.shared.pending;
        if (pendingQueue !== null) {
            queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
            // and last so that it's non-circular.
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null; // Append pending updates to base queue
            if (lastBaseUpdate === null) firstBaseUpdate = firstPendingUpdate;
            else lastBaseUpdate.next = firstPendingUpdate;
            lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
            // we need to transfer the updates to that queue, too. Because the base
            // queue is a singly-linked list with no cycles, we can append to both
            // lists and take advantage of structural sharing.
            // TODO: Pass `current` as argument
            var current = workInProgress.alternate;
            if (current !== null) {
                // This is always non-null on a ClassComponent or HostRoot
                var currentQueue = current.updateQueue;
                var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
                if (currentLastBaseUpdate !== lastBaseUpdate) {
                    if (currentLastBaseUpdate === null) currentQueue.firstBaseUpdate = firstPendingUpdate;
                    else currentLastBaseUpdate.next = firstPendingUpdate;
                    currentQueue.lastBaseUpdate = lastPendingUpdate;
                }
            }
        } // These values may change as we process the queue.
        if (firstBaseUpdate !== null) {
            // Iterate through the list of updates to compute the result.
            var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
            // from the original lanes.
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update = firstBaseUpdate;
            do {
                var updateLane = update.lane;
                var updateEventTime = update.eventTime;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        eventTime: updateEventTime,
                        lane: updateLane,
                        tag: update.tag,
                        payload: update.payload,
                        callback: update.callback,
                        next: null
                    };
                    if (newLastBaseUpdate === null) {
                        newFirstBaseUpdate = newLastBaseUpdate = clone;
                        newBaseState = newState;
                    } else newLastBaseUpdate = newLastBaseUpdate.next = clone;
                     // Update the remaining priority in the queue.
                    newLanes = mergeLanes(newLanes, updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newLastBaseUpdate !== null) {
                        var _clone = {
                            eventTime: updateEventTime,
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                    } // Process this update.
                    newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
                    var callback = update.callback;
                    if (callback !== null) {
                        workInProgress.flags |= Callback;
                        var effects = queue.effects;
                        if (effects === null) queue.effects = [
                            update
                        ];
                        else effects.push(update);
                    }
                }
                update = update.next;
                if (update === null) {
                    pendingQueue = queue.shared.pending;
                    if (pendingQueue === null) break;
                    else {
                        // An update was scheduled from inside a reducer. Add the new
                        // pending updates to the end of the list and keep processing.
                        var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
                        // unravel them when transferring them to the base queue.
                        var _firstPendingUpdate = _lastPendingUpdate.next;
                        _lastPendingUpdate.next = null;
                        update = _firstPendingUpdate;
                        queue.lastBaseUpdate = _lastPendingUpdate;
                        queue.shared.pending = null;
                    }
                }
            }while (true)
            if (newLastBaseUpdate === null) newBaseState = newState;
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate; // Set the remaining expiration time to be whatever is remaining in the queue.
            // This should be fine because the only two other things that contribute to
            // expiration time are props and context. We're already in the middle of the
            // begin phase by the time we start processing the queue, so we've already
            // dealt with the props. Context in components that specify
            // shouldComponentUpdate is tricky; but we'll have to account for
            // that regardless.
            markSkippedUpdateLanes(newLanes);
            workInProgress.lanes = newLanes;
            workInProgress.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
    }
    function callCallback1(callback, context) {
        if (!(typeof callback === 'function')) throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
        callback.call(context);
    }
    function resetHasForceUpdateBeforeProcessing() {
        hasForceUpdate = false;
    }
    function checkHasForceUpdateAfterProcessing() {
        return hasForceUpdate;
    }
    function commitUpdateQueue(finishedWork, finishedQueue, instance) {
        // Commit the effects
        var effects = finishedQueue.effects;
        finishedQueue.effects = null;
        if (effects !== null) for(var i = 0; i < effects.length; i++){
            var effect = effects[i];
            var callback = effect.callback;
            if (callback !== null) {
                effect.callback = null;
                callCallback1(callback, instance);
            }
        }
    }
    var fakeInternalInstance = {
    };
    var isArray1 = Array.isArray; // React.Component uses a shared frozen object by default.
    // We'll use it to determine whether we need to initialize legacy refs.
    var emptyRefsObject = new React.Component().refs;
    var didWarnAboutStateAssignmentForComponent;
    var didWarnAboutUninitializedState;
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
    var didWarnAboutLegacyLifecyclesAndDerivedState;
    var didWarnAboutUndefinedDerivedState;
    var warnOnUndefinedDerivedState;
    var warnOnInvalidCallback;
    var didWarnAboutDirectlyAssigningPropsToState;
    var didWarnAboutContextTypeAndContextTypes;
    var didWarnAboutInvalidateContextType;
    didWarnAboutStateAssignmentForComponent = new Set();
    didWarnAboutUninitializedState = new Set();
    didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    didWarnAboutDirectlyAssigningPropsToState = new Set();
    didWarnAboutUndefinedDerivedState = new Set();
    didWarnAboutContextTypeAndContextTypes = new Set();
    didWarnAboutInvalidateContextType = new Set();
    var didWarnOnInvalidCallback = new Set();
    warnOnInvalidCallback = function(callback, callerName) {
        if (callback === null || typeof callback === 'function') return;
        var key = callerName + '_' + callback;
        if (!didWarnOnInvalidCallback.has(key)) {
            didWarnOnInvalidCallback.add(key);
            error1("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
        }
    };
    warnOnUndefinedDerivedState = function(type, partialState) {
        if (partialState === undefined) {
            var componentName = getComponentName(type) || 'Component';
            if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error1("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
            }
        }
    }; // This is so gross but it's at least non-critical and can be removed if
    // it causes problems. This is meant to give a nicer error message for
    // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
    // ...)) which otherwise throws a "_processChildContext is not a function"
    // exception.
    Object.defineProperty(fakeInternalInstance, '_processChildContext', {
        enumerable: false,
        value: function() {
            throw Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
    });
    Object.freeze(fakeInternalInstance);
    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress.memoizedState;
        if (workInProgress.mode & StrictMode) {
            disableLogs();
            try {
                // Invoke the function an extra time to help detect side-effects.
                getDerivedStateFromProps(nextProps, prevState);
            } finally{
                reenableLogs();
            }
        }
        var partialState = getDerivedStateFromProps(nextProps, prevState);
        warnOnUndefinedDerivedState(ctor, partialState);
        var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({
        }, prevState, partialState);
        workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
        // base state.
        if (workInProgress.lanes === NoLanes) {
            // Queue is always non-null for classes
            var updateQueue = workInProgress.updateQueue;
            updateQueue.baseState = memoizedState;
        }
    }
    var classComponentUpdater = {
        isMounted: isMounted,
        enqueueSetState: function(inst, payload, callback) {
            var fiber = get1(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'setState');
                update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
        },
        enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get1(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ReplaceState;
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'replaceState');
                update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
        },
        enqueueForceUpdate: function(inst, callback) {
            var fiber = get1(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ForceUpdate;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'forceUpdate');
                update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            scheduleUpdateOnFiber(fiber, lane, eventTime);
        }
    };
    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress.stateNode;
        if (typeof instance.shouldComponentUpdate === 'function') {
            if (workInProgress.mode & StrictMode) {
                disableLogs();
                try {
                    // Invoke the function an extra time to help detect side-effects.
                    instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally{
                    reenableLogs();
                }
            }
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            if (shouldUpdate === undefined) error1("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentName(ctor) || 'Component');
            return shouldUpdate;
        }
        if (ctor.prototype && ctor.prototype.isPureReactComponent) return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
        return true;
    }
    function checkClassInstance(workInProgress, ctor, newProps) {
        var instance = workInProgress.stateNode;
        var name = getComponentName(ctor) || 'Component';
        var renderPresent = instance.render;
        if (!renderPresent) {
            if (ctor.prototype && typeof ctor.prototype.render === 'function') error1("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
            else error1("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
        }
        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) error1("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) error1("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
        if (instance.propTypes) error1("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
        if (instance.contextType) error1("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
        if (instance.contextTypes) error1("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
        if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
            didWarnAboutContextTypeAndContextTypes.add(ctor);
            error1("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
        }
        if (typeof instance.componentShouldUpdate === 'function') error1("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') error1("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentName(ctor) || 'A pure component');
        if (typeof instance.componentDidUnmount === 'function') error1("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
        if (typeof instance.componentDidReceiveProps === 'function') error1("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
        if (typeof instance.componentWillRecieveProps === 'function') error1("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
        if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') error1("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
        var hasMutatedProps = instance.props !== newProps;
        if (instance.props !== undefined && hasMutatedProps) error1("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
        if (instance.defaultProps) error1("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
        if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
            error1("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentName(ctor));
        }
        if (typeof instance.getDerivedStateFromProps === 'function') error1("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof instance.getDerivedStateFromError === 'function') error1("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof ctor.getSnapshotBeforeUpdate === 'function') error1("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
        var _state = instance.state;
        if (_state && (typeof _state !== 'object' || isArray1(_state))) error1('%s.state: must be set to an object or null', name);
        if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') error1("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
    }
    function adoptClassInstance(workInProgress, instance) {
        instance.updater = classComponentUpdater;
        workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates
        set1(instance, workInProgress);
        instance._reactInternalInstance = fakeInternalInstance;
    }
    function constructClassInstance(workInProgress, ctor, props) {
        var isLegacyContextConsumer = false;
        var unmaskedContext = emptyContextObject;
        var context = emptyContextObject;
        var contextType = ctor.contextType;
        if ('contextType' in ctor) {
            var isValid = contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>
            if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = '';
                if (contextType === undefined) addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                else if (typeof contextType !== 'object') addendum = ' However, it is set to a ' + typeof contextType + '.';
                else if (contextType.$$typeof === REACT_PROVIDER_TYPE) addendum = ' Did you accidentally pass the Context.Provider instead?';
                else if (contextType._context !== undefined) // <Context.Consumer>
                addendum = ' Did you accidentally pass the Context.Consumer instead?';
                else addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
                error1("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentName(ctor) || 'Component', addendum);
            }
        }
        if (typeof contextType === 'object' && contextType !== null) context = readContext(contextType);
        else {
            unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
            context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
        } // Instantiate twice to help detect side-effects.
        if (workInProgress.mode & StrictMode) {
            disableLogs();
            try {
                new ctor(props, context); // eslint-disable-line no-new
            } finally{
                reenableLogs();
            }
        }
        var instance = new ctor(props, context);
        var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
        adoptClassInstance(workInProgress, instance);
        if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
            var componentName = getComponentName(ctor) || 'Component';
            if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error1("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? 'null' : 'undefined', componentName);
            }
        } // If new component APIs are defined, "unsafe" lifecycles won't be called.
        // Warn about these lifecycles if they are present.
        // Don't warn about react-lifecycles-compat polyfilled methods though.
        if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
            var foundWillMountName = null;
            var foundWillReceivePropsName = null;
            var foundWillUpdateName = null;
            if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) foundWillMountName = 'componentWillMount';
            else if (typeof instance.UNSAFE_componentWillMount === 'function') foundWillMountName = 'UNSAFE_componentWillMount';
            if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) foundWillReceivePropsName = 'componentWillReceiveProps';
            else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
            if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) foundWillUpdateName = 'componentWillUpdate';
            else if (typeof instance.UNSAFE_componentWillUpdate === 'function') foundWillUpdateName = 'UNSAFE_componentWillUpdate';
            if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentName(ctor) || 'Component';
                var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                    didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                    error1("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
                }
            }
        }
        // ReactFiberContext usually updates this cache but can't for newly-created instances.
        if (isLegacyContextConsumer) cacheContext(workInProgress, unmaskedContext, context);
        return instance;
    }
    function callComponentWillMount(workInProgress, instance) {
        var oldState = instance.state;
        if (typeof instance.componentWillMount === 'function') instance.componentWillMount();
        if (typeof instance.UNSAFE_componentWillMount === 'function') instance.UNSAFE_componentWillMount();
        if (oldState !== instance.state) {
            error1("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentName(workInProgress.type) || 'Component');
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        var oldState = instance.state;
        if (typeof instance.componentWillReceiveProps === 'function') instance.componentWillReceiveProps(newProps, nextContext);
        if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        if (instance.state !== oldState) {
            var componentName = getComponentName(workInProgress.type) || 'Component';
            if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error1("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    } // Invokes the mount life-cycles on a previously never rendered instance.
    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        checkClassInstance(workInProgress, ctor, newProps);
        var instance = workInProgress.stateNode;
        instance.props = newProps;
        instance.state = workInProgress.memoizedState;
        instance.refs = emptyRefsObject;
        initializeUpdateQueue(workInProgress);
        var contextType = ctor.contextType;
        if (typeof contextType === 'object' && contextType !== null) instance.context = readContext(contextType);
        else {
            var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            instance.context = getMaskedContext(workInProgress, unmaskedContext);
        }
        if (instance.state === newProps) {
            var componentName = getComponentName(ctor) || 'Component';
            if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error1("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
            }
        }
        if (workInProgress.mode & StrictMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
        ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        instance.state = workInProgress.memoizedState;
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress.memoizedState;
        } // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
            callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
            // process them now.
            processUpdateQueue(workInProgress, newProps, instance, renderLanes);
            instance.state = workInProgress.memoizedState;
        }
        if (typeof instance.componentDidMount === 'function') workInProgress.flags |= Update;
    }
    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        var oldProps = workInProgress.memoizedProps;
        instance.props = oldProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === 'object' && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
            if (oldProps !== newProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === 'function') workInProgress.flags |= Update;
            return false;
        }
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
                if (typeof instance.componentWillMount === 'function') instance.componentWillMount();
                if (typeof instance.UNSAFE_componentWillMount === 'function') instance.UNSAFE_componentWillMount();
            }
            if (typeof instance.componentDidMount === 'function') workInProgress.flags |= Update;
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === 'function') workInProgress.flags |= Update;
             // If shouldComponentUpdate returned false, we should still update the
            // memoized state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    } // Invokes the update life-cycles and returns false if it shouldn't rerender.
    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        cloneUpdateQueue(current, workInProgress);
        var unresolvedOldProps = workInProgress.memoizedProps;
        var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
        instance.props = oldProps;
        var unresolvedNewProps = workInProgress.pendingProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === 'object' && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
                if (typeof instance.componentWillUpdate === 'function') instance.componentWillUpdate(newProps, newState, nextContext);
                if (typeof instance.UNSAFE_componentWillUpdate === 'function') instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
            }
            if (typeof instance.componentDidUpdate === 'function') workInProgress.flags |= Update;
            if (typeof instance.getSnapshotBeforeUpdate === 'function') workInProgress.flags |= Snapshot;
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized props/state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    }
    var didWarnAboutMaps;
    var didWarnAboutGenerators;
    var didWarnAboutStringRefs;
    var ownerHasKeyUseWarning;
    var ownerHasFunctionTypeWarning;
    var warnForMissingKey = function(child, returnFiber) {
    };
    didWarnAboutMaps = false;
    didWarnAboutGenerators = false;
    didWarnAboutStringRefs = {
    };
    /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */ ownerHasKeyUseWarning = {
    };
    ownerHasFunctionTypeWarning = {
    };
    warnForMissingKey = function(child, returnFiber) {
        if (child === null || typeof child !== 'object') return;
        if (!child._store || child._store.validated || child.key != null) return;
        if (!(typeof child._store === 'object')) throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        child._store.validated = true;
        var componentName = getComponentName(returnFiber.type) || 'Component';
        if (ownerHasKeyUseWarning[componentName]) return;
        ownerHasKeyUseWarning[componentName] = true;
        error1("Each child in a list should have a unique \"key\" prop. See https://reactjs.org/link/warning-keys for more information.");
    };
    var isArray$1 = Array.isArray;
    function coerceRef(returnFiber, current, element) {
        var mixedRef = element.ref;
        if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
            // TODO: Clean this up once we turn on the string ref warning for
            // everyone, because the strict mode case will no longer be relevant
            if ((returnFiber.mode & StrictMode || warnAboutStringRefs) && // because these cannot be automatically converted to an arrow function
            // using a codemod. Therefore, we don't have to warn about string refs again.
            !(element._owner && element._self && element._owner.stateNode !== element._self)) {
                var componentName = getComponentName(returnFiber.type) || 'Component';
                if (!didWarnAboutStringRefs[componentName]) {
                    error1("A string ref, \"%s\", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref", mixedRef);
                    didWarnAboutStringRefs[componentName] = true;
                }
            }
            if (element._owner) {
                var owner = element._owner;
                var inst;
                if (owner) {
                    var ownerFiber = owner;
                    if (!(ownerFiber.tag === ClassComponent)) throw Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                    inst = ownerFiber.stateNode;
                }
                if (!inst) throw Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
                var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref
                if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) return current.ref;
                var ref = function(value) {
                    var refs = inst.refs;
                    if (refs === emptyRefsObject) // This is a lazy pooled frozen object, so we need to initialize.
                    refs = inst.refs = {
                    };
                    if (value === null) delete refs[stringRef];
                    else refs[stringRef] = value;
                };
                ref._stringRef = stringRef;
                return ref;
            } else {
                if (!(typeof mixedRef === 'string')) throw Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
                if (!element._owner) throw Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information.");
            }
        }
        return mixedRef;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        if (returnFiber.type !== 'textarea') throw Error("Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild) + "). If you meant to render a collection of children, use an array instead.");
    }
    function warnOnFunctionType(returnFiber) {
        var componentName = getComponentName(returnFiber.type) || 'Component';
        if (ownerHasFunctionTypeWarning[componentName]) return;
        ownerHasFunctionTypeWarning[componentName] = true;
        error1("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
    } // We avoid inlining this to avoid potential deopts from using try/catch.
    // to be able to optimize each path individually by branching early. This needs
    // a compiler or we can do it manually. Helpers that don't need this branching
    // live outside of this function.
    function ChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) // Noop.
            return;
             // Deletions are added in reversed order so we add it to the front.
            // At this point, the return fiber's effect list is empty except for
            // deletions, so we can just append the deletion to the list. The remaining
            // effects aren't added until the complete phase. Once we implement
            // resuming, this may not be true.
            var last = returnFiber.lastEffect;
            if (last !== null) {
                last.nextEffect = childToDelete;
                returnFiber.lastEffect = childToDelete;
            } else returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
            childToDelete.nextEffect = null;
            childToDelete.flags = Deletion;
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) // Noop.
            return null;
             // TODO: For the shouldClone case, this could be micro-optimized a bit by
            // assuming that after the first child we've already added everything.
            var childToDelete = currentFirstChild;
            while(childToDelete !== null){
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
            }
            return null;
        }
        function mapRemainingChildren(returnFiber, currentFirstChild) {
            // Add the remaining children to a temporary map so that we can find them by
            // keys quickly. Implicit (null) keys get added to this set with their index
            // instead.
            var existingChildren = new Map();
            var existingChild = currentFirstChild;
            while(existingChild !== null){
                if (existingChild.key !== null) existingChildren.set(existingChild.key, existingChild);
                else existingChildren.set(existingChild.index, existingChild);
                existingChild = existingChild.sibling;
            }
            return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
            // We currently set sibling to null and index to 0 here because it is easy
            // to forget to do before returning it. E.g. for the single child case.
            var clone = createWorkInProgress(fiber, pendingProps);
            clone.index = 0;
            clone.sibling = null;
            return clone;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) // Noop.
            return lastPlacedIndex;
            var current = newFiber.alternate;
            if (current !== null) {
                var oldIndex = current.index;
                if (oldIndex < lastPlacedIndex) {
                    // This is a move.
                    newFiber.flags = Placement;
                    return lastPlacedIndex;
                } else // This item can stay in place.
                return oldIndex;
            } else {
                // This is an insertion.
                newFiber.flags = Placement;
                return lastPlacedIndex;
            }
        }
        function placeSingleChild(newFiber) {
            // This is simpler for the single child case. We only need to do a
            // placement for inserting new children.
            if (shouldTrackSideEffects && newFiber.alternate === null) newFiber.flags = Placement;
            return newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, lanes) {
            if (current === null || current.tag !== HostText) {
                // Insert
                var created = createFiberFromText(textContent, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, textContent);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateElement(returnFiber, current, element, lanes) {
            if (current !== null) {
                if (current.elementType === element.type || isCompatibleFamilyForHotReloading(current, element)) {
                    // Move based on index
                    var existing = useFiber(current, element.props);
                    existing.ref = coerceRef(returnFiber, current, element);
                    existing.return = returnFiber;
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                    return existing;
                }
            } // Insert
            var created = createFiberFromElement(element, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current, element);
            created.return = returnFiber;
            return created;
        }
        function updatePortal(returnFiber, current, portal, lanes) {
            if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
                // Insert
                var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, portal.children || []);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateFragment(returnFiber, current, fragment, lanes, key) {
            if (current === null || current.tag !== Fragment) {
                // Insert
                var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, fragment);
                existing.return = returnFiber;
                return existing;
            }
        }
        function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === 'string' || typeof newChild === 'number') {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                        _created.ref = coerceRef(returnFiber, null, newChild);
                        _created.return = returnFiber;
                        return _created;
                    case REACT_PORTAL_TYPE:
                        var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                        _created2.return = returnFiber;
                        return _created2;
                }
                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                    var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                    _created3.return = returnFiber;
                    return _created3;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            // Update the fiber if the keys match, otherwise return null.
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === 'string' || typeof newChild === 'number') {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                if (key !== null) return null;
                return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        if (newChild.key === key) {
                            if (newChild.type === REACT_FRAGMENT_TYPE) return updateFragment(returnFiber, oldFiber, newChild.props.children, lanes, key);
                            return updateElement(returnFiber, oldFiber, newChild, lanes);
                        } else return null;
                    case REACT_PORTAL_TYPE:
                        if (newChild.key === key) return updatePortal(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                }
                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                    if (key !== null) return null;
                    return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === 'string' || typeof newChild === 'number') {
                // Text nodes don't have keys, so we neither have to check the old nor
                // new node for the key. If both are text nodes, they match.
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        if (newChild.type === REACT_FRAGMENT_TYPE) return updateFragment(returnFiber, _matchedFiber, newChild.props.children, lanes, newChild.key);
                        return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                    case REACT_PORTAL_TYPE:
                        var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                }
                if (isArray$1(newChild) || getIteratorFn(newChild)) {
                    var _matchedFiber3 = existingChildren.get(newIdx) || null;
                    return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        /**
   * Warns if there is a duplicate or missing key
   */ function warnOnInvalidKey(child, knownKeys, returnFiber) {
            if (typeof child !== 'object' || child === null) return knownKeys;
            switch(child.$$typeof){
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                    warnForMissingKey(child, returnFiber);
                    var key = child.key;
                    if (typeof key !== 'string') break;
                    if (knownKeys === null) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    error1("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.", key);
                    break;
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            // First, validate keys.
            var knownKeys = null;
            for(var i = 0; i < newChildren.length; i++){
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for(; oldFiber !== null && newIdx < newChildren.length; newIdx++){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; newIdx < newChildren.length; newIdx++){
                    var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                    if (_newFiber === null) continue;
                    lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber;
                    else previousNewFiber.sibling = _newFiber;
                    previousNewFiber = _newFiber;
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; newIdx < newChildren.length; newIdx++){
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
                if (_newFiber2 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber2.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber2;
                    else previousNewFiber.sibling = _newFiber2;
                    previousNewFiber = _newFiber2;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            // This is the same implementation as reconcileChildrenArray(),
            // but using the iterator instead.
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (!(typeof iteratorFn === 'function')) throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
            // We don't support rendering Generators because it's a mutation.
            // See https://github.com/facebook/react/issues/12995
            if (typeof Symbol === 'function' && newChildrenIterable[Symbol.toStringTag] === 'Generator') {
                if (!didWarnAboutGenerators) error1("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                didWarnAboutGenerators = true;
            } // Warn about using Maps as children
            if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) error1("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                didWarnAboutMaps = true;
            } // First, validate keys.
            // We'll get a different iterator later for the main pass.
            var _newChildren = iteratorFn.call(newChildrenIterable);
            if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for(; !_step.done; _step = _newChildren.next()){
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (!(newChildren != null)) throw Error("An iterable object provided no iterator.");
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for(; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (step.done) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; !step.done; newIdx++, step = newChildren.next()){
                    var _newFiber3 = createChild(returnFiber, step.value, lanes);
                    if (_newFiber3 === null) continue;
                    lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber3;
                    else previousNewFiber.sibling = _newFiber3;
                    previousNewFiber = _newFiber3;
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; !step.done; newIdx++, step = newChildren.next()){
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
                if (_newFiber4 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber4.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber4;
                    else previousNewFiber.sibling = _newFiber4;
                    previousNewFiber = _newFiber4;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            return resultingFirstChild;
        }
        function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            // There's no need to check for keys on text nodes since we don't have a
            // way to define them.
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
                // We already have an existing node so let's just update it and delete
                // the rest.
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, textContent);
                existing.return = returnFiber;
                return existing;
            } // The existing first child is not a text node so we need to create one
            // and delete the existing ones.
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        }
        function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
            var key = element.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    switch(child.tag){
                        case Fragment:
                            if (element.type === REACT_FRAGMENT_TYPE) {
                                deleteRemainingChildren(returnFiber, child.sibling);
                                var existing = useFiber(child, element.props.children);
                                existing.return = returnFiber;
                                existing._debugSource = element._source;
                                existing._debugOwner = element._owner;
                                return existing;
                            }
                            break;
                        case Block:
                        // We intentionally fallthrough here if enableBlocksAPI is not on.
                        // eslint-disable-next-lined no-fallthrough
                        default:
                            if (child.elementType === element.type || isCompatibleFamilyForHotReloading(child, element)) {
                                deleteRemainingChildren(returnFiber, child.sibling);
                                var _existing3 = useFiber(child, element.props);
                                _existing3.ref = coerceRef(returnFiber, child, element);
                                _existing3.return = returnFiber;
                                _existing3._debugSource = element._source;
                                _existing3._debugOwner = element._owner;
                                return _existing3;
                            }
                            break;
                    } // Didn't match.
                    deleteRemainingChildren(returnFiber, child);
                    break;
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
                created.return = returnFiber;
                return created;
            } else {
                var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
                _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
                _created4.return = returnFiber;
                return _created4;
            }
        }
        function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, portal.children || []);
                        existing.return = returnFiber;
                        return existing;
                    } else {
                        deleteRemainingChildren(returnFiber, child);
                        break;
                    }
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        } // This API will tag the children with the side-effect of the reconciliation
        // itself. They will be added to the side-effect list as we pass through the
        // children and the parent.
        function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
            // This function is not recursive.
            // If the top level item is an array, we treat it as a set of children,
            // not as a fragment. Nested arrays on the other hand will be treated as
            // fragment nodes. Recursion happens at the normal flow.
            // Handle top level unkeyed fragments as if they were arrays.
            // This leads to an ambiguity between <>{[...]}</> and <>...</>.
            // We treat the ambiguous cases above the same.
            var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) newChild = newChild.props.children;
             // Handle object types
            var isObject = typeof newChild === 'object' && newChild !== null;
            if (isObject) switch(newChild.$$typeof){
                case REACT_ELEMENT_TYPE:
                    return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                case REACT_PORTAL_TYPE:
                    return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
            }
            if (typeof newChild === 'string' || typeof newChild === 'number') return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));
            if (isArray$1(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
            if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
            if (isObject) throwOnInvalidObjectType(returnFiber, newChild);
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) // If the new child is undefined, and the return fiber is a composite
            // component, throw an error. If Fiber return types are disabled,
            // we already threw above.
            switch(returnFiber.tag){
                case ClassComponent:
                    var instance = returnFiber.stateNode;
                    if (instance.render._isMockFunction) break;
                // Intentionally fall through to the next case, which handles both
                // functions and classes
                // eslint-disable-next-lined no-fallthrough
                case Block:
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent:
                    throw Error((getComponentName(returnFiber.type) || 'Component') + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.");
            }
             // Remaining cases are all treated as empty.
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return reconcileChildFibers;
    }
    var reconcileChildFibers1 = ChildReconciler(true);
    var mountChildFibers = ChildReconciler(false);
    function cloneChildFibers(current, workInProgress) {
        if (!(current === null || workInProgress.child === current.child)) throw Error("Resuming work not yet implemented.");
        if (workInProgress.child === null) return;
        var currentChild = workInProgress.child;
        var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
        workInProgress.child = newChild;
        newChild.return = workInProgress;
        while(currentChild.sibling !== null){
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress;
        }
        newChild.sibling = null;
    } // Reset a workInProgress child set to prepare it for a second pass.
    function resetChildFibers(workInProgress, lanes) {
        var child = workInProgress.child;
        while(child !== null){
            resetWorkInProgress(child, lanes);
            child = child.sibling;
        }
    }
    var NO_CONTEXT = {
    };
    var contextStackCursor$1 = createCursor(NO_CONTEXT);
    var contextFiberStackCursor = createCursor(NO_CONTEXT);
    var rootInstanceStackCursor = createCursor(NO_CONTEXT);
    function requiredContext(c) {
        if (!(c !== NO_CONTEXT)) throw Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c;
    }
    function getRootHostContainer() {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        return rootInstance;
    }
    function pushHostContainer(fiber, nextRootInstance) {
        // Push current root instance onto the stack;
        // This allows us to reset root when portals are popped.
        push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
        // However, we can't just call getRootHostContext() and push it because
        // we'd have a different number of entries on the stack depending on
        // whether getRootHostContext() throws somewhere in renderer code or not.
        // So we push an empty value first. This lets us safely unwind on errors.
        push(contextStackCursor$1, NO_CONTEXT, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.
        pop(contextStackCursor$1, fiber);
        push(contextStackCursor$1, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        var context = requiredContext(contextStackCursor$1.current);
        return context;
    }
    function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        var context = requiredContext(contextStackCursor$1.current);
        var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.
        if (context === nextContext) return;
         // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor$1, nextContext, fiber);
    }
    function popHostContext(fiber) {
        // Do not pop unless this Fiber provided the current context.
        // pushHostContext() only pushes Fibers that provide unique contexts.
        if (contextFiberStackCursor.current !== fiber) return;
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
    }
    var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
    // inherited deeply down the subtree. The upper bits only affect
    // this immediate suspense boundary and gets reset each new
    // boundary or suspense list.
    var SubtreeSuspenseContextMask = 1; // Subtree Flags:
    // InvisibleParentSuspenseContext indicates that one of our parent Suspense
    // boundaries is not currently showing visible main content.
    // Either because it is already showing a fallback or is not mounted at all.
    // We can use this to determine if it is desirable to trigger a fallback at
    // the parent. If not, then we might need to trigger undesirable boundaries
    // and/or suspend the commit to avoid hiding the parent content.
    var InvisibleParentSuspenseContext = 1; // Shallow Flags:
    // ForceSuspenseFallback can be used by SuspenseList to force newly added
    // items into their fallback state during one of the render passes.
    var ForceSuspenseFallback = 2;
    var suspenseStackCursor = createCursor(DefaultSuspenseContext);
    function hasSuspenseContext(parentContext, flag) {
        return (parentContext & flag) !== 0;
    }
    function setDefaultShallowSuspenseContext(parentContext) {
        return parentContext & SubtreeSuspenseContextMask;
    }
    function setShallowSuspenseContext(parentContext, shallowContext) {
        return parentContext & SubtreeSuspenseContextMask | shallowContext;
    }
    function addSubtreeSuspenseContext(parentContext, subtreeContext) {
        return parentContext | subtreeContext;
    }
    function pushSuspenseContext(fiber, newContext) {
        push(suspenseStackCursor, newContext, fiber);
    }
    function popSuspenseContext(fiber) {
        pop(suspenseStackCursor, fiber);
    }
    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
        // If it was the primary children that just suspended, capture and render the
        // fallback. Otherwise, don't capture and bubble to the next boundary.
        var nextState = workInProgress.memoizedState;
        if (nextState !== null) {
            if (nextState.dehydrated !== null) // A dehydrated boundary always captures.
            return true;
            return false;
        }
        var props = workInProgress.memoizedProps; // In order to capture, the Suspense component must have a fallback prop.
        if (props.fallback === undefined) return false;
         // Regular boundaries always capture.
        if (props.unstable_avoidThisFallback !== true) return true;
         // If it's a boundary we should avoid, then we prefer to bubble up to the
        // parent boundary if it is currently invisible.
        if (hasInvisibleParent) return false;
         // If the parent is not able to handle it, we must handle it.
        return true;
    }
    function findFirstSuspended(row) {
        var node = row;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                    var dehydrated = state.dehydrated;
                    if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) return node;
                }
            } else if (node.tag === SuspenseListComponent && // keep track of whether it suspended or not.
            node.memoizedProps.revealOrder !== undefined) {
                var didSuspend = (node.flags & DidCapture) !== NoFlags;
                if (didSuspend) return node;
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === row) return null;
            while(node.sibling === null){
                if (node.return === null || node.return === row) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return null;
    }
    var NoFlags$1 = /*  */ 0; // Represents whether effect should fire.
    var HasEffect = /* */ 1; // Represents the phase in which the effect (not the clean-up) fires.
    var Layout = /*    */ 2;
    var Passive$1 = /*   */ 4;
    // This may have been an insertion or a hydration.
    var hydrationParentFiber = null;
    var nextHydratableInstance = null;
    var isHydrating1 = false;
    function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        nextHydratableInstance = getFirstHydratableChild(parentInstance);
        hydrationParentFiber = fiber;
        isHydrating1 = true;
        return true;
    }
    function deleteHydratableInstance(returnFiber, instance) {
        switch(returnFiber.tag){
            case HostRoot:
                didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
                break;
            case HostComponent:
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
                break;
        }
        var childToDelete = createFiberFromHostInstanceForDeletion();
        childToDelete.stateNode = instance;
        childToDelete.return = returnFiber;
        childToDelete.flags = Deletion; // This might seem like it belongs on progressedFirstDeletion. However,
        // these children are not part of the reconciliation list of children.
        // Even if we abort and rereconcile the children, that will try to hydrate
        // again and the nodes are still in the host tree so these will be
        // recreated.
        if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = childToDelete;
            returnFiber.lastEffect = childToDelete;
        } else returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.flags = fiber.flags & ~Hydrating | Placement;
        switch(returnFiber.tag){
            case HostRoot:
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch(fiber.tag){
                    case HostComponent:
                        var type = fiber.type;
                        var props = fiber.pendingProps;
                        didNotFindHydratableContainerInstance(parentContainer, type);
                        break;
                    case HostText:
                        var text = fiber.pendingProps;
                        didNotFindHydratableContainerTextInstance(parentContainer, text);
                        break;
                }
                break;
            case HostComponent:
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch(fiber.tag){
                    case HostComponent:
                        var _type = fiber.type;
                        var _props = fiber.pendingProps;
                        didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type);
                        break;
                    case HostText:
                        var _text = fiber.pendingProps;
                        didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                        break;
                    case SuspenseComponent:
                        didNotFindHydratableSuspenseInstance(parentType, parentProps);
                        break;
                }
                break;
            default:
                return;
        }
    }
    function tryHydrate(fiber, nextInstance) {
        switch(fiber.tag){
            case HostComponent:
                var type = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type);
                if (instance !== null) {
                    fiber.stateNode = instance;
                    return true;
                }
                return false;
            case HostText:
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                    fiber.stateNode = textInstance;
                    return true;
                }
                return false;
            case SuspenseComponent:
                return false;
            default:
                return false;
        }
    }
    function tryToClaimNextHydratableInstance(fiber) {
        if (!isHydrating1) return;
        var nextInstance = nextHydratableInstance;
        if (!nextInstance) {
            // Nothing to hydrate. Make it an insertion.
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating1 = false;
            hydrationParentFiber = fiber;
            return;
        }
        var firstAttemptedInstance = nextInstance;
        if (!tryHydrate(fiber, nextInstance)) {
            // If we can't hydrate this instance let's try the next one.
            // We use this as a heuristic. It's based on intuition and not data so it
            // might be flawed or unnecessary.
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                // Nothing to hydrate. Make it an insertion.
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating1 = false;
                hydrationParentFiber = fiber;
                return;
            } // We matched the next one, we'll now assume that the first one was
            // superfluous and we'll delete it. Since we can't eagerly delete it
            // we'll have to schedule a deletion. To do that, this node needs a dummy
            // fiber associated with it.
            deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
        }
        hydrationParentFiber = fiber;
        nextHydratableInstance = getFirstHydratableChild(nextInstance);
    }
    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
        var instance = fiber.stateNode;
        var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber); // TODO: Type this specific to this type of component.
        fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update.
        if (updatePayload !== null) return true;
        return false;
    }
    function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode;
        var textContent = fiber.memoizedProps;
        var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
        if (shouldUpdate) {
            // We assume that prepareToHydrateHostTextInstance is called in a context where the
            // hydration parent is the parent host component of this host text.
            var returnFiber = hydrationParentFiber;
            if (returnFiber !== null) switch(returnFiber.tag){
                case HostRoot:
                    var parentContainer = returnFiber.stateNode.containerInfo;
                    didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                    break;
                case HostComponent:
                    var parentType = returnFiber.type;
                    var parentProps = returnFiber.memoizedProps;
                    var parentInstance = returnFiber.stateNode;
                    didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                    break;
            }
        }
        return shouldUpdate;
    }
    function skipPastDehydratedSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
    }
    function popToNextHostParent(fiber) {
        var parent = fiber.return;
        while(parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent)parent = parent.return;
        hydrationParentFiber = parent;
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) // We're deeper than the current hydration context, inside an inserted
        // tree.
        return false;
        if (!isHydrating1) {
            // If we're not currently hydrating but we're in a hydration context, then
            // we were an insertion and now need to pop up reenter hydration of our
            // siblings.
            popToNextHostParent(fiber);
            isHydrating1 = true;
            return false;
        }
        var type = fiber.type; // If we have any remaining hydratable nodes, we need to delete them now.
        // We only do this deeper than head and body since they tend to have random
        // other nodes in them. We also ignore components with pure text content in
        // side of them.
        // TODO: Better heuristic.
        if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
            var nextInstance = nextHydratableInstance;
            while(nextInstance){
                deleteHydratableInstance(fiber, nextInstance);
                nextInstance = getNextHydratableSibling(nextInstance);
            }
        }
        popToNextHostParent(fiber);
        if (fiber.tag === SuspenseComponent) nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
        else nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
        return true;
    }
    function resetHydrationState() {
        hydrationParentFiber = null;
        nextHydratableInstance = null;
        isHydrating1 = false;
    }
    function getIsHydrating() {
        return isHydrating1;
    }
    // and should be reset before starting a new render.
    // This tracks which mutable sources need to be reset after a render.
    var workInProgressSources = [];
    var rendererSigil$1;
    // Used to detect multiple renderers using the same mutable source.
    rendererSigil$1 = {
    };
    function markSourceAsDirty(mutableSource) {
        workInProgressSources.push(mutableSource);
    }
    function resetWorkInProgressVersions() {
        for(var i = 0; i < workInProgressSources.length; i++){
            var mutableSource = workInProgressSources[i];
            mutableSource._workInProgressVersionPrimary = null;
        }
        workInProgressSources.length = 0;
    }
    function getWorkInProgressVersion(mutableSource) {
        return mutableSource._workInProgressVersionPrimary;
    }
    function setWorkInProgressVersion(mutableSource, version) {
        mutableSource._workInProgressVersionPrimary = version;
        workInProgressSources.push(mutableSource);
    }
    function warnAboutMultipleRenderersDEV(mutableSource) {
        if (mutableSource._currentPrimaryRenderer == null) mutableSource._currentPrimaryRenderer = rendererSigil$1;
        else if (mutableSource._currentPrimaryRenderer !== rendererSigil$1) error1("Detected multiple renderers concurrently rendering the same mutable source. This is currently unsupported.");
    } // Eager reads the version of a mutable source and stores it on the root.
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
    var didWarnAboutMismatchedHooksForComponent;
    var didWarnAboutUseOpaqueIdentifier;
    didWarnAboutUseOpaqueIdentifier = {
    };
    didWarnAboutMismatchedHooksForComponent = new Set();
    // These are set right before calling the component.
    var renderLanes1 = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
    // the work-in-progress hook.
    var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
    // current hook list is the list that belongs to the current fiber. The
    // work-in-progress hook list is a new list that will be added to the
    // work-in-progress fiber.
    var currentHook1 = null;
    var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
    // does not get reset if we do another render pass; only when we're completely
    // finished evaluating this component. This is an optimization so we know
    // whether we need to clear render phase updates after a throw.
    var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
    // gets reset after each attempt.
    // TODO: Maybe there's some way to consolidate this with
    // `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.
    var didScheduleRenderPhaseUpdateDuringThisPass = false;
    var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook
    var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
    // The list stores the order of hooks used during the initial render (mount).
    // Subsequent renders (updates) reference this list.
    var hookTypesDev = null;
    var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
    // the dependencies for Hooks that need them (e.g. useEffect or useMemo).
    // When true, such Hooks will always be "remounted". Only used during hot reload.
    var ignorePreviousDependencies = false;
    function mountHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev === null) hookTypesDev = [
            hookName
        ];
        else hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev !== null) {
            hookTypesUpdateIndexDev++;
            if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) warnOnHookMismatchInDev(hookName);
        }
    }
    function checkDepsAreArrayDev(deps) {
        if (deps !== undefined && deps !== null && !Array.isArray(deps)) // Verify deps, but only on mount to avoid extra checks.
        // It's unlikely their type would change as usually you define them inline.
        error1("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
    }
    function warnOnHookMismatchInDev(currentHookName) {
        var componentName = getComponentName(currentlyRenderingFiber$1.type);
        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
            didWarnAboutMismatchedHooksForComponent.add(componentName);
            if (hookTypesDev !== null) {
                var table = '';
                var secondColumnStart = 30;
                for(var i = 0; i <= hookTypesUpdateIndexDev; i++){
                    var oldHookName = hookTypesDev[i];
                    var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                    var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
                    // lol @ IE not supporting String#repeat
                    while(row.length < secondColumnStart)row += ' ';
                    row += newHookName + '\n';
                    table += row;
                }
                error1("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
            }
        }
    }
    function throwInvalidHookError() {
        throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies) // Only true when this component is being hot reloaded.
        return false;
        if (prevDeps === null) {
            error1("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            return false;
        }
        // Don't bother comparing lengths in prod because these arrays should be
        // passed inline.
        if (nextDeps.length !== prevDeps.length) error1("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
        for(var i = 0; i < prevDeps.length && i < nextDeps.length; i++){
            if (objectIs(nextDeps[i], prevDeps[i])) continue;
            return false;
        }
        return true;
    }
    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
        renderLanes1 = nextRenderLanes;
        currentlyRenderingFiber$1 = workInProgress;
        hookTypesDev = current !== null ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1; // Used for hot reloading:
        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.lanes = NoLanes; // The following should have already been reset
        if (current !== null && current.memoizedState !== null) ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
        else if (hookTypesDev !== null) // This dispatcher handles an edge case where a component is updating,
        // but no stateful hooks have been used.
        // We want to match the production code behavior (which will use HooksDispatcherOnMount),
        // but with the extra DEV validation to ensure hooks ordering hasn't changed.
        // This dispatcher does that.
        ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
        else ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
        var children = Component(props, secondArg); // Check if there was a render phase update
        if (didScheduleRenderPhaseUpdateDuringThisPass) {
            // Keep rendering in a loop for as long as render phase updates continue to
            // be scheduled. Use a counter to prevent infinite loops.
            var numberOfReRenders = 0;
            do {
                didScheduleRenderPhaseUpdateDuringThisPass = false;
                if (!(numberOfReRenders < RE_RENDER_LIMIT)) throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                numberOfReRenders += 1;
                // Even when hot reloading, allow dependencies to stabilize
                // after first render to prevent infinite render phase updates.
                ignorePreviousDependencies = false;
                currentHook1 = null;
                workInProgressHook = null;
                workInProgress.updateQueue = null;
                // Also validate hook order for cascading updates.
                hookTypesUpdateIndexDev = -1;
                ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
                children = Component(props, secondArg);
            }while (didScheduleRenderPhaseUpdateDuringThisPass)
        } // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrancy.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        workInProgress._debugHookTypes = hookTypesDev;
        // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
        var didRenderTooFewHooks = currentHook1 !== null && currentHook1.next !== null;
        renderLanes1 = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook1 = null;
        workInProgressHook = null;
        currentHookNameInDev = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        didScheduleRenderPhaseUpdate = false;
        if (!!didRenderTooFewHooks) throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        return children;
    }
    function bailoutHooks(current, workInProgress, lanes) {
        workInProgress.updateQueue = current.updateQueue;
        workInProgress.flags &= ~(Passive | Update);
        current.lanes = removeLanes(current.lanes, lanes);
    }
    function resetHooksAfterThrow() {
        // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrancy.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        if (didScheduleRenderPhaseUpdate) {
            // There were render phase updates. These are only valid for this render
            // phase, which we are now aborting. Remove the updates from the queues so
            // they do not persist to the next render. Do not remove updates from hooks
            // that weren't processed.
            //
            // Only reset the updates from the queue if it has a clone. If it does
            // not have a clone, that means it wasn't processed, and the updates were
            // scheduled before we entered the render phase.
            var hook = currentlyRenderingFiber$1.memoizedState;
            while(hook !== null){
                var queue = hook.queue;
                if (queue !== null) queue.pending = null;
                hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
        }
        renderLanes1 = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook1 = null;
        workInProgressHook = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        isUpdatingOpaqueValueInRenderPhase = false;
        didScheduleRenderPhaseUpdateDuringThisPass = false;
    }
    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        if (workInProgressHook === null) // This is the first hook in the list
        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
        else // Append to the end of the list
        workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }
    function updateWorkInProgressHook() {
        // This function is used both for updates and for re-renders triggered by a
        // render phase update. It assumes there is either a current hook we can
        // clone, or a work-in-progress hook from a previous render pass that we can
        // use as a base. When we reach the end of the base list, we must switch to
        // the dispatcher used for mounts.
        var nextCurrentHook;
        if (currentHook1 === null) {
            var current = currentlyRenderingFiber$1.alternate;
            if (current !== null) nextCurrentHook = current.memoizedState;
            else nextCurrentHook = null;
        } else nextCurrentHook = currentHook1.next;
        var nextWorkInProgressHook;
        if (workInProgressHook === null) nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
        else nextWorkInProgressHook = workInProgressHook.next;
        if (nextWorkInProgressHook !== null) {
            // There's already a work-in-progress. Reuse it.
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook1 = nextCurrentHook;
        } else {
            // Clone from the current hook.
            if (!(nextCurrentHook !== null)) throw Error("Rendered more hooks than during the previous render.");
            currentHook1 = nextCurrentHook;
            var newHook = {
                memoizedState: currentHook1.memoizedState,
                baseState: currentHook1.baseState,
                baseQueue: currentHook1.baseQueue,
                queue: currentHook1.queue,
                next: null
            };
            if (workInProgressHook === null) // This is the first hook in the list.
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            else // Append to the end of the list.
            workInProgressHook = workInProgressHook.next = newHook;
        }
        return workInProgressHook;
    }
    function createFunctionComponentUpdateQueue() {
        return {
            lastEffect: null
        };
    }
    function basicStateReducer(state, action) {
        // $FlowFixMe: Flow doesn't like mixed types
        return typeof action === 'function' ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook();
        var initialState;
        if (init !== undefined) initialState = init(initialArg);
        else initialState = initialArg;
        hook.memoizedState = hook.baseState = initialState;
        var queue = hook.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
        };
        var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (!(queue !== null)) throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        queue.lastRenderedReducer = reducer;
        var current = currentHook1; // The last rebase update that is NOT part of the base state.
        var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.
        var pendingQueue = queue.pending;
        if (pendingQueue !== null) {
            // We have new updates that haven't been processed yet.
            // We'll add them to the base queue.
            if (baseQueue !== null) {
                // Merge the pending queue and the base queue.
                var baseFirst = baseQueue.next;
                var pendingFirst = pendingQueue.next;
                baseQueue.next = pendingFirst;
                pendingQueue.next = baseFirst;
            }
            if (current.baseQueue !== baseQueue) // Internal invariant that should never happen, but feasibly could in
            // the future if we implement resuming, or some form of that.
            error1("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
            current.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
        }
        if (baseQueue !== null) {
            // We have a queue to process.
            var first = baseQueue.next;
            var newState = current.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update = first;
            do {
                var updateLane = update.lane;
                if (!isSubsetOfLanes(renderLanes1, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        lane: updateLane,
                        action: update.action,
                        eagerReducer: update.eagerReducer,
                        eagerState: update.eagerState,
                        next: null
                    };
                    if (newBaseQueueLast === null) {
                        newBaseQueueFirst = newBaseQueueLast = clone;
                        newBaseState = newState;
                    } else newBaseQueueLast = newBaseQueueLast.next = clone;
                     // Update the remaining priority in the queue.
                    // TODO: Don't need to accumulate this. Instead, we can remove
                    // renderLanes from the original lanes.
                    currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                    markSkippedUpdateLanes(updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newBaseQueueLast !== null) {
                        var _clone = {
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            action: update.action,
                            eagerReducer: update.eagerReducer,
                            eagerState: update.eagerState,
                            next: null
                        };
                        newBaseQueueLast = newBaseQueueLast.next = _clone;
                    } // Process this update.
                    if (update.eagerReducer === reducer) // If this update was processed eagerly, and its reducer matches the
                    // current reducer, we can use the eagerly computed state.
                    newState = update.eagerState;
                    else {
                        var action = update.action;
                        newState = reducer(newState, action);
                    }
                }
                update = update.next;
            }while (update !== null && update !== first)
            if (newBaseQueueLast === null) newBaseState = newState;
            else newBaseQueueLast.next = newBaseQueueFirst;
             // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
        }
        var dispatch = queue.dispatch;
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function rerenderReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (!(queue !== null)) throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
        // work-in-progress hook.
        var dispatch = queue.dispatch;
        var lastRenderPhaseUpdate = queue.pending;
        var newState = hook.memoizedState;
        if (lastRenderPhaseUpdate !== null) {
            // The queue doesn't persist past this render pass.
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update = firstRenderPhaseUpdate;
            do {
                // Process this render phase update. We don't have to check the
                // priority because it will always be the same as the current
                // render's.
                var action = update.action;
                newState = reducer(newState, action);
                update = update.next;
            }while (update !== firstRenderPhaseUpdate) // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
            // the base state unless the queue is empty.
            // TODO: Not sure if this is the desired semantics, but it's what we
            // do for gDSFP. I can't remember why.
            if (hook.baseQueue === null) hook.baseState = newState;
            queue.lastRenderedState = newState;
        }
        return [
            newState,
            dispatch
        ];
    }
    function readFromUnsubcribedMutableSource(root, source, getSnapshot) {
        warnAboutMultipleRenderersDEV(source);
        var getVersion = source._getVersion;
        var version = getVersion(source._source); // Is it safe for this component to read from this source during the current render?
        var isSafeToReadFromSource = false; // Check the version first.
        // If this render has already been started with a specific version,
        // we can use it alone to determine if we can safely read from the source.
        var currentRenderVersion = getWorkInProgressVersion(source);
        if (currentRenderVersion !== null) // It's safe to read if the store hasn't been mutated since the last time
        // we read something.
        isSafeToReadFromSource = currentRenderVersion === version;
        else {
            // If there's no version, then this is the first time we've read from the
            // source during the current render pass, so we need to do a bit more work.
            // What we need to determine is if there are any hooks that already
            // subscribed to the source, and if so, whether there are any pending
            // mutations that haven't been synchronized yet.
            //
            // If there are no pending mutations, then `root.mutableReadLanes` will be
            // empty, and we know we can safely read.
            //
            // If there *are* pending mutations, we may still be able to safely read
            // if the currently rendering lanes are inclusive of the pending mutation
            // lanes, since that guarantees that the value we're about to read from
            // the source is consistent with the values that we read during the most
            // recent mutation.
            isSafeToReadFromSource = isSubsetOfLanes(renderLanes1, root.mutableReadLanes);
            if (isSafeToReadFromSource) // If it's safe to read from this source during the current render,
            // store the version in case other components read from it.
            // A changed version number will let those components know to throw and restart the render.
            setWorkInProgressVersion(source, version);
        }
        if (isSafeToReadFromSource) {
            var snapshot = getSnapshot(source._source);
            if (typeof snapshot === 'function') error1("Mutable source should not return a function as the snapshot value. Functions may close over mutable values and cause tearing.");
            return snapshot;
        } else {
            // This handles the special case of a mutable source being shared between renderers.
            // In that case, if the source is mutated between the first and second renderer,
            // The second renderer don't know that it needs to reset the WIP version during unwind,
            // (because the hook only marks sources as dirty if it's written to their WIP version).
            // That would cause this tear check to throw again and eventually be visible to the user.
            // We can avoid this infinite loop by explicitly marking the source as dirty.
            //
            // This can lead to tearing in the first renderer when it resumes,
            // but there's nothing we can do about that (short of throwing here and refusing to continue the render).
            markSourceAsDirty(source);
            throw Error("Cannot read from mutable source during the current render without tearing. This is a bug in React. Please file an issue.");
        }
    }
    function useMutableSource(hook, source, getSnapshot, subscribe) {
        var root = getWorkInProgressRoot();
        if (!(root !== null)) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        var getVersion = source._getVersion;
        var version = getVersion(source._source);
        var dispatcher = ReactCurrentDispatcher$1.current; // eslint-disable-next-line prefer-const
        var _dispatcher$useState = dispatcher.useState(function() {
            return readFromUnsubcribedMutableSource(root, source, getSnapshot);
        }), currentSnapshot = _dispatcher$useState[0], setSnapshot = _dispatcher$useState[1];
        var snapshot = currentSnapshot; // Grab a handle to the state hook as well.
        // We use it to clear the pending update queue if we have a new source.
        var stateHook = workInProgressHook;
        var memoizedState = hook.memoizedState;
        var refs = memoizedState.refs;
        var prevGetSnapshot = refs.getSnapshot;
        var prevSource = memoizedState.source;
        var prevSubscribe = memoizedState.subscribe;
        var fiber = currentlyRenderingFiber$1;
        hook.memoizedState = {
            refs: refs,
            source: source,
            subscribe: subscribe
        }; // Sync the values needed by our subscription handler after each commit.
        dispatcher.useEffect(function() {
            refs.getSnapshot = getSnapshot; // Normally the dispatch function for a state hook never changes,
            // but this hook recreates the queue in certain cases  to avoid updates from stale sources.
            // handleChange() below needs to reference the dispatch function without re-subscribing,
            // so we use a ref to ensure that it always has the latest version.
            refs.setSnapshot = setSnapshot; // Check for a possible change between when we last rendered now.
            var maybeNewVersion = getVersion(source._source);
            if (!objectIs(version, maybeNewVersion)) {
                var maybeNewSnapshot = getSnapshot(source._source);
                if (typeof maybeNewSnapshot === 'function') error1("Mutable source should not return a function as the snapshot value. Functions may close over mutable values and cause tearing.");
                if (!objectIs(snapshot, maybeNewSnapshot)) {
                    setSnapshot(maybeNewSnapshot);
                    var lane = requestUpdateLane(fiber);
                    markRootMutableRead(root, lane);
                } // If the source mutated between render and now,
                // there may be state updates already scheduled from the old source.
                // Entangle the updates so that they render in the same batch.
                markRootEntangled(root, root.mutableReadLanes);
            }
        }, [
            getSnapshot,
            source,
            subscribe
        ]); // If we got a new source or subscribe function, re-subscribe in a passive effect.
        dispatcher.useEffect(function() {
            var handleChange = function() {
                var latestGetSnapshot = refs.getSnapshot;
                var latestSetSnapshot = refs.setSnapshot;
                try {
                    latestSetSnapshot(latestGetSnapshot(source._source)); // Record a pending mutable source update with the same expiration time.
                    var lane = requestUpdateLane(fiber);
                    markRootMutableRead(root, lane);
                } catch (error) {
                    // A selector might throw after a source mutation.
                    // e.g. it might try to read from a part of the store that no longer exists.
                    // In this case we should still schedule an update with React.
                    // Worst case the selector will throw again and then an error boundary will handle it.
                    latestSetSnapshot(function() {
                        throw error;
                    });
                }
            };
            var unsubscribe = subscribe(source._source, handleChange);
            if (typeof unsubscribe !== 'function') error1('Mutable source subscribe function must return an unsubscribe function.');
            return unsubscribe;
        }, [
            source,
            subscribe
        ]); // If any of the inputs to useMutableSource change, reading is potentially unsafe.
        //
        // If either the source or the subscription have changed we can't can't trust the update queue.
        // Maybe the source changed in a way that the old subscription ignored but the new one depends on.
        //
        // If the getSnapshot function changed, we also shouldn't rely on the update queue.
        // It's possible that the underlying source was mutated between the when the last "change" event fired,
        // and when the current render (with the new getSnapshot function) is processed.
        //
        // In both cases, we need to throw away pending updates (since they are no longer relevant)
        // and treat reading from the source as we do in the mount case.
        if (!objectIs(prevGetSnapshot, getSnapshot) || !objectIs(prevSource, source) || !objectIs(prevSubscribe, subscribe)) {
            // Create a new queue and setState method,
            // So if there are interleaved updates, they get pushed to the older queue.
            // When this becomes current, the previous queue and dispatch method will be discarded,
            // including any interleaving updates that occur.
            var newQueue = {
                pending: null,
                dispatch: null,
                lastRenderedReducer: basicStateReducer,
                lastRenderedState: snapshot
            };
            newQueue.dispatch = setSnapshot = dispatchAction.bind(null, currentlyRenderingFiber$1, newQueue);
            stateHook.queue = newQueue;
            stateHook.baseQueue = null;
            snapshot = readFromUnsubcribedMutableSource(root, source, getSnapshot);
            stateHook.memoizedState = stateHook.baseState = snapshot;
        }
        return snapshot;
    }
    function mountMutableSource(source, getSnapshot, subscribe) {
        var hook = mountWorkInProgressHook();
        hook.memoizedState = {
            refs: {
                getSnapshot: getSnapshot,
                setSnapshot: null
            },
            source: source,
            subscribe: subscribe
        };
        return useMutableSource(hook, source, getSnapshot, subscribe);
    }
    function updateMutableSource(source, getSnapshot, subscribe) {
        var hook = updateWorkInProgressHook();
        return useMutableSource(hook, source, getSnapshot, subscribe);
    }
    function mountState(initialState) {
        var hook = mountWorkInProgressHook();
        if (typeof initialState === 'function') // $FlowFixMe: Flow doesn't like mixed types
        initialState = initialState();
        hook.memoizedState = hook.baseState = initialState;
        var queue = hook.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
        };
        var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateState(initialState) {
        return updateReducer(basicStateReducer);
    }
    function rerenderState(initialState) {
        return rerenderReducer(basicStateReducer);
    }
    function pushEffect(tag, create, destroy, deps) {
        var effect = {
            tag: tag,
            create: create,
            destroy: destroy,
            deps: deps,
            // Circular
            next: null
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
        } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) componentUpdateQueue.lastEffect = effect.next = effect;
            else {
                var firstEffect = lastEffect.next;
                lastEffect.next = effect;
                effect.next = firstEffect;
                componentUpdateQueue.lastEffect = effect;
            }
        }
        return effect;
    }
    function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        var ref = {
            current: initialValue
        };
        Object.seal(ref);
        hook.memoizedState = ref;
        return ref;
    }
    function updateRef(initialValue) {
        var hook = updateWorkInProgressHook();
        return hook.memoizedState;
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var destroy = undefined;
        if (currentHook1 !== null) {
            var prevEffect = currentHook1.memoizedState;
            destroy = prevEffect.destroy;
            if (nextDeps !== null) {
                var prevDeps = prevEffect.deps;
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                    pushEffect(hookFlags, create, destroy, nextDeps);
                    return;
                }
            }
        }
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
    }
    function mountEffect(create, deps) {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
        return mountEffectImpl(Update | Passive, Passive$1, create, deps);
    }
    function updateEffect(create, deps) {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
        return updateEffectImpl(Update | Passive, Passive$1, create, deps);
    }
    function mountLayoutEffect(create, deps) {
        return mountEffectImpl(Update, Layout, create, deps);
    }
    function updateLayoutEffect(create, deps) {
        return updateEffectImpl(Update, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
        if (typeof ref === 'function') {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
                refCallback(null);
            };
        } else if (ref !== null && ref !== undefined) {
            var refObject = ref;
            if (!refObject.hasOwnProperty('current')) error1("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", 'an object with keys {' + Object.keys(refObject).join(', ') + '}');
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
                refObject.current = null;
            };
        }
    }
    function mountImperativeHandle(ref, create, deps) {
        if (typeof create !== 'function') error1("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : 'null');
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        return mountEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function updateImperativeHandle(ref, create, deps) {
        if (typeof create !== 'function') error1("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : 'null');
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function mountDebugValue(value, formatterFn) {
    // The react-debug-hooks package injects its own implementation
    // so that e.g. DevTools can display custom hook values.
    }
    var updateDebugValue = mountDebugValue;
    function mountCallback(callback, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) // Assume these are defined. If they're not, areHookInputsEqual will warn.
        {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function mountDeferredValue(value) {
        var _mountState = mountState(value), prevValue = _mountState[0], setValue = _mountState[1];
        mountEffect(function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
                setValue(value);
            } finally{
                ReactCurrentBatchConfig$1.transition = prevTransition;
            }
        }, [
            value
        ]);
        return prevValue;
    }
    function updateDeferredValue(value) {
        var _updateState = updateState(), prevValue = _updateState[0], setValue = _updateState[1];
        updateEffect(function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
                setValue(value);
            } finally{
                ReactCurrentBatchConfig$1.transition = prevTransition;
            }
        }, [
            value
        ]);
        return prevValue;
    }
    function rerenderDeferredValue(value) {
        var _rerenderState = rerenderState(), prevValue = _rerenderState[0], setValue = _rerenderState[1];
        updateEffect(function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
                setValue(value);
            } finally{
                ReactCurrentBatchConfig$1.transition = prevTransition;
            }
        }, [
            value
        ]);
        return prevValue;
    }
    function startTransition(setPending, callback) {
        var priorityLevel = getCurrentPriorityLevel();
        runWithPriority$1(priorityLevel < UserBlockingPriority$2 ? UserBlockingPriority$2 : priorityLevel, function() {
            setPending(true);
        });
        runWithPriority$1(priorityLevel > NormalPriority$1 ? NormalPriority$1 : priorityLevel, function() {
            var prevTransition = ReactCurrentBatchConfig$1.transition;
            ReactCurrentBatchConfig$1.transition = 1;
            try {
                setPending(false);
                callback();
            } finally{
                ReactCurrentBatchConfig$1.transition = prevTransition;
            }
        });
    }
    function mountTransition() {
        var _mountState2 = mountState(false), isPending = _mountState2[0], setPending = _mountState2[1]; // The `start` method can be stored on a ref, since `setPending`
        // never changes.
        var start = startTransition.bind(null, setPending);
        mountRef(start);
        return [
            start,
            isPending
        ];
    }
    function updateTransition() {
        var _updateState2 = updateState(), isPending = _updateState2[0];
        var startRef = updateRef();
        var start = startRef.current;
        return [
            start,
            isPending
        ];
    }
    function rerenderTransition() {
        var _rerenderState2 = rerenderState(), isPending = _rerenderState2[0];
        var startRef = updateRef();
        var start = startRef.current;
        return [
            start,
            isPending
        ];
    }
    var isUpdatingOpaqueValueInRenderPhase = false;
    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
        return isUpdatingOpaqueValueInRenderPhase;
    }
    function warnOnOpaqueIdentifierAccessInDEV(fiber) {
        // TODO: Should warn in effects and callbacks, too
        var name = getComponentName(fiber.type) || 'Unknown';
        if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {
            error1("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly.");
            didWarnAboutUseOpaqueIdentifier[name] = true;
        }
    }
    function mountOpaqueIdentifier() {
        var makeId = makeClientIdInDEV.bind(null, warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber$1));
        if (getIsHydrating()) {
            var didUpgrade = false;
            var fiber = currentlyRenderingFiber$1;
            var readValue = function() {
                if (!didUpgrade) {
                    // Only upgrade once. This works even inside the render phase because
                    // the update is added to a shared queue, which outlasts the
                    // in-progress render.
                    didUpgrade = true;
                    isUpdatingOpaqueValueInRenderPhase = true;
                    setId(makeId());
                    isUpdatingOpaqueValueInRenderPhase = false;
                    warnOnOpaqueIdentifierAccessInDEV(fiber);
                }
                throw Error("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly.");
            };
            var id = makeOpaqueHydratingObject(readValue);
            var setId = mountState(id)[1];
            if ((currentlyRenderingFiber$1.mode & BlockingMode) === NoMode) {
                currentlyRenderingFiber$1.flags |= Update | Passive;
                pushEffect(HasEffect | Passive$1, function() {
                    setId(makeId());
                }, undefined, null);
            }
            return id;
        } else {
            var _id = makeId();
            mountState(_id);
            return _id;
        }
    }
    function updateOpaqueIdentifier() {
        var id = updateState()[0];
        return id;
    }
    function rerenderOpaqueIdentifier() {
        var id = rerenderState()[0];
        return id;
    }
    function dispatchAction(fiber, queue, action) {
        if (typeof arguments[3] === 'function') error1("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            eagerReducer: null,
            eagerState: null,
            next: null
        }; // Append the update to the end of the list.
        var pending = queue.pending;
        if (pending === null) // This is the first update. Create a circular list.
        update.next = update;
        else {
            update.next = pending.next;
            pending.next = update;
        }
        queue.pending = update;
        var alternate = fiber.alternate;
        if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) // This is a render phase update. Stash it in a lazily-created map of
        // queue -> linked list of updates. After this render pass, we'll restart
        // and apply the stashed updates on top of the work-in-progress hook.
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
        else {
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
                // The queue is currently empty, which means we can eagerly compute the
                // next state before entering the render phase. If the new state is the
                // same as the current state, we may be able to bail out entirely.
                var lastRenderedReducer = queue.lastRenderedReducer;
                if (lastRenderedReducer !== null) {
                    var prevDispatcher;
                    prevDispatcher = ReactCurrentDispatcher$1.current;
                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                    try {
                        var currentState = queue.lastRenderedState;
                        var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
                        // it, on the update object. If the reducer hasn't changed by the
                        // time we enter the render phase, then the eager state can be used
                        // without calling the reducer again.
                        update.eagerReducer = lastRenderedReducer;
                        update.eagerState = eagerState;
                        if (objectIs(eagerState, currentState)) // Fast path. We can bail out without scheduling React to re-render.
                        // It's still possible that we'll need to rebase this update later,
                        // if the component re-renders for a different reason and by that
                        // time the reducer has changed.
                        return;
                    } catch (error) {
                    } finally{
                        ReactCurrentDispatcher$1.current = prevDispatcher;
                    }
                }
            }
            // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
            if ('undefined' !== typeof jest) {
                warnIfNotScopedWithMatchingAct(fiber);
                warnIfNotCurrentlyActingUpdatesInDev(fiber);
            }
            scheduleUpdateOnFiber(fiber, lane, eventTime);
        }
    }
    var ContextOnlyDispatcher = {
        readContext: readContext,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useMutableSource: throwInvalidHookError,
        useOpaqueIdentifier: throwInvalidHookError,
        unstable_isNewReconciler: enableNewReconciler
    };
    var HooksDispatcherOnMountInDEV = null;
    var HooksDispatcherOnMountWithHookTypesInDEV = null;
    var HooksDispatcherOnUpdateInDEV = null;
    var HooksDispatcherOnRerenderInDEV = null;
    var InvalidNestedHooksDispatcherOnMountInDEV = null;
    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    var warnInvalidContextAccess = function() {
        error1("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    };
    var warnInvalidHookAccess = function() {
        error1("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
    };
    HooksDispatcherOnMountInDEV = {
        readContext: function(context, observedBits) {
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            mountHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            mountHookTypesDev();
            return mountMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            mountHookTypesDev();
            return mountOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function(context, observedBits) {
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return mountMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            updateHookTypesDev();
            return mountOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnUpdateInDEV = {
        readContext: function(context, observedBits) {
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return updateMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            updateHookTypesDev();
            return updateOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnRerenderInDEV = {
        readContext: function(context, observedBits) {
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return updateMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            updateHookTypesDev();
            return rerenderOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function(context, observedBits) {
            warnInvalidContextAccess();
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function(context, observedBits) {
            warnInvalidContextAccess();
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function(context, observedBits) {
            warnInvalidContextAccess();
            return readContext(context, observedBits);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context, observedBits) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context, observedBits);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function() {
            currentHookNameInDev = 'useOpaqueIdentifier';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    var now$1 = Scheduler.unstable_now;
    var commitTime1 = 0;
    var profilerStartTime = -1;
    function getCommitTime() {
        return commitTime1;
    }
    function recordCommitTime() {
        commitTime1 = now$1();
    }
    function startProfilerTimer(fiber) {
        profilerStartTime = now$1();
        if (fiber.actualStartTime < 0) fiber.actualStartTime = now$1();
    }
    function stopProfilerTimerIfRunning(fiber) {
        profilerStartTime = -1;
    }
    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
        if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) fiber.selfBaseDuration = elapsedTime;
            profilerStartTime = -1;
        }
    }
    function transferActualDuration(fiber) {
        // Transfer time spent rendering these children so we don't lose it
        // after we rerender. This is used as a helper in special cases
        // where we should count the work of multiple passes.
        var child = fiber.child;
        while(child){
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
        }
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var didReceiveUpdate = false;
    var didWarnAboutBadClass;
    var didWarnAboutModulePatternComponent;
    var didWarnAboutContextTypeOnFunctionComponent;
    var didWarnAboutGetDerivedStateOnFunctionComponent;
    var didWarnAboutFunctionRefs;
    var didWarnAboutReassigningProps;
    var didWarnAboutRevealOrder;
    var didWarnAboutTailOptions;
    didWarnAboutBadClass = {
    };
    didWarnAboutModulePatternComponent = {
    };
    didWarnAboutContextTypeOnFunctionComponent = {
    };
    didWarnAboutGetDerivedStateOnFunctionComponent = {
    };
    didWarnAboutFunctionRefs = {
    };
    didWarnAboutReassigningProps = false;
    didWarnAboutRevealOrder = {
    };
    didWarnAboutTailOptions = {
    };
    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
        if (current === null) // If this is a fresh new component that hasn't been rendered yet, we
        // won't update its child set by applying minimal side-effects. Instead,
        // we will add them all to the child before it gets rendered. That means
        // we can optimize this reconciliation pass by not tracking side-effects.
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
        else // If the current child is the same as the work in progress, it means that
        // we haven't yet started any work on these children. Therefore, we use
        // the clone algorithm to create a copy of all the current children.
        // If we had any progressed work already, that is invalid at this point so
        // let's throw it out.
        workInProgress.child = reconcileChildFibers1(workInProgress, current.child, nextChildren, renderLanes);
    }
    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
        // This function is fork of reconcileChildren. It's used in cases where we
        // want to reconcile without matching against the existing set. This has the
        // effect of all current children being unmounted; even if the type and key
        // are the same, the old child is unmounted and a new child is created.
        //
        // To do this, we're going to go through the reconcile algorithm twice. In
        // the first pass, we schedule a deletion for all the current children by
        // passing null.
        workInProgress.child = reconcileChildFibers1(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
        // pass null in place of where we usually pass the current child set. This has
        // the effect of remounting all children regardless of whether their
        // identities match.
        workInProgress.child = reconcileChildFibers1(workInProgress, null, nextChildren, renderLanes);
    }
    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentName(Component));
        }
        var render = Component.render;
        var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent
        var nextChildren;
        prepareToReadContext(workInProgress, renderLanes);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
        if (workInProgress.mode & StrictMode) {
            disableLogs();
            try {
                nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
            } finally{
                reenableLogs();
            }
        }
        setIsRendering(false);
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMemoComponent(current, workInProgress, Component, nextProps, updateLanes, renderLanes) {
        if (current === null) {
            var type = Component.type;
            if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === undefined) {
                var resolvedType = type;
                resolvedType = resolveFunctionForHotReloading(type);
                // and with only the default shallow comparison, we upgrade it
                // to a SimpleMemoComponent to allow fast path updates.
                workInProgress.tag = SimpleMemoComponent;
                workInProgress.type = resolvedType;
                validateFunctionComponentInDev(workInProgress, type);
                return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, updateLanes, renderLanes);
            }
            var innerPropTypes = type.propTypes;
            if (innerPropTypes) // Inner memo component props aren't currently validated in createElement.
            // We could move it there, but we'd still need this for lazy code path.
            checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentName(type));
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
            child.ref = workInProgress.ref;
            child.return = workInProgress;
            workInProgress.child = child;
            return child;
        }
        var _type = Component.type;
        var _innerPropTypes = _type.propTypes;
        if (_innerPropTypes) // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(_innerPropTypes, nextProps, 'prop', getComponentName(_type));
        var currentChild = current.child; // This is always exactly one child
        if (!includesSomeLane(updateLanes, renderLanes)) {
            // This will be the props with resolved defaultProps,
            // unlike current.memoizedProps which will be the unresolved ones.
            var prevProps = currentChild.memoizedProps; // Default to shallow comparison
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual;
            if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        var newChild = createWorkInProgress(currentChild, nextProps);
        newChild.ref = workInProgress.ref;
        newChild.return = workInProgress;
        workInProgress.child = newChild;
        return newChild;
    }
    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, updateLanes, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var outerMemoType = workInProgress.elementType;
            if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                // We warn when you define propTypes on lazy()
                // so let's just skip over it to find memo() outer wrapper.
                // Inner props for memo are validated later.
                var lazyComponent = outerMemoType;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    outerMemoType = init(payload);
                } catch (x) {
                    outerMemoType = null;
                } // Inner propTypes will be validated in the function component path.
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) checkPropTypes(outerPropTypes, nextProps, 'prop', getComponentName(outerMemoType));
            }
        }
        if (current !== null) {
            var prevProps = current.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {
                didReceiveUpdate = false;
                if (!includesSomeLane(renderLanes, updateLanes)) {
                    // The pending lanes were cleared at the beginning of beginWork. We're
                    // about to bail out, but there might be other lanes that weren't
                    // included in the current render. Usually, the priority level of the
                    // remaining updates is accumlated during the evaluation of the
                    // component (i.e. when processing the update queue). But since since
                    // we're bailing out early *without* evaluating the component, we need
                    // to account for it here, too. Reset to the value of the current fiber.
                    // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
                    // because a MemoComponent fiber does not have hooks or an update queue;
                    // rather, it wraps around an inner component, which may or may not
                    // contains hooks.
                    // TODO: Move the reset at in beginWork out of the common path so that
                    // this is no longer necessary.
                    workInProgress.lanes = current.lanes;
                    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
            }
        }
        return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }
    function updateOffscreenComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        var prevState = current !== null ? current.memoizedState : null;
        if (nextProps.mode === 'hidden' || nextProps.mode === 'unstable-defer-without-hiding') {
            if ((workInProgress.mode & ConcurrentMode) === NoMode) {
                // In legacy sync mode, don't defer the subtree. Render it now.
                // TODO: Figure out what we should do in Blocking mode.
                var nextState = {
                    baseLanes: NoLanes
                };
                workInProgress.memoizedState = nextState;
                pushRenderLanes(workInProgress, renderLanes);
            } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
                var nextBaseLanes;
                if (prevState !== null) {
                    var prevBaseLanes = prevState.baseLanes;
                    nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
                } else nextBaseLanes = renderLanes;
                 // Schedule this fiber to re-render at offscreen priority. Then bailout.
                markSpawnedWork(OffscreenLane);
                workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
                var _nextState = {
                    baseLanes: nextBaseLanes
                };
                workInProgress.memoizedState = _nextState; // We're about to bail out, but we need to push this to the stack anyway
                // to avoid a push/pop misalignment.
                pushRenderLanes(workInProgress, nextBaseLanes);
                return null;
            } else {
                // Rendering at offscreen, so we can clear the base lanes.
                var _nextState2 = {
                    baseLanes: NoLanes
                };
                workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.
                var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;
                pushRenderLanes(workInProgress, subtreeRenderLanes);
            }
        } else {
            var _subtreeRenderLanes;
            if (prevState !== null) {
                _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes); // Since we're not hidden anymore, reset the state
                workInProgress.memoizedState = null;
            } else // We weren't previously hidden, and we still aren't, so there's nothing
            // special to do. Need to push to the stack regardless, though, to avoid
            // a push/pop misalignment.
            _subtreeRenderLanes = renderLanes;
            pushRenderLanes(workInProgress, _subtreeRenderLanes);
        }
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    } // Note: These happen to have identical begin phases, for now. We shouldn't hold
    // ourselves to this constraint, though. If the behavior diverges, we should
    // fork the function.
    var updateLegacyHiddenComponent = updateOffscreenComponent;
    function updateFragment1(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMode(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateProfiler(current, workInProgress, renderLanes) {
        workInProgress.flags |= Update; // Reset effect durations for the next eventual effect phase.
        // These are reset during render to allow the DevTools commit hook a chance to read them,
        var stateNode = workInProgress.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        if (current === null && ref !== null || current !== null && current.ref !== ref) // Schedule a Ref effect
        workInProgress.flags |= Ref;
    }
    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentName(Component));
        }
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
        context = getMaskedContext(workInProgress, unmaskedContext);
        var nextChildren;
        prepareToReadContext(workInProgress, renderLanes);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
        if (workInProgress.mode & StrictMode) {
            disableLogs();
            try {
                nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
            } finally{
                reenableLogs();
            }
        }
        setIsRendering(false);
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentName(Component));
        }
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        var instance = workInProgress.stateNode;
        var shouldUpdate;
        if (instance === null) {
            if (current !== null) {
                // A class component without an instance only mounts if it suspended
                // inside a non-concurrent tree, in an inconsistent state. We want to
                // treat it like a new mount, even though an empty version of it already
                // committed. Disconnect the alternate pointers.
                current.alternate = null;
                workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
                workInProgress.flags |= Placement;
            } // In the initial pass we might need to construct the instance.
            constructClassInstance(workInProgress, Component, nextProps);
            mountClassInstance(workInProgress, Component, nextProps, renderLanes);
            shouldUpdate = true;
        } else if (current === null) // In a resume, we'll already have an instance we can reuse.
        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
        else shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
        var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);
        var inst = workInProgress.stateNode;
        if (shouldUpdate && inst.props !== nextProps) {
            if (!didWarnAboutReassigningProps) error1("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentName(workInProgress.type) || 'a component');
            didWarnAboutReassigningProps = true;
        }
        return nextUnitOfWork;
    }
    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
        // Refs should update even if shouldComponentUpdate returns false
        markRef(current, workInProgress);
        var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;
        if (!shouldUpdate && !didCaptureError) {
            // Context providers should defer to sCU for rendering
            if (hasContext) invalidateContextProvider(workInProgress, Component, false);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        var instance = workInProgress.stateNode; // Rerender
        ReactCurrentOwner$1.current = workInProgress;
        var nextChildren;
        if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
            // If we captured an error, but getDerivedStateFromError is not defined,
            // unmount all the children. componentDidCatch will schedule an update to
            // re-render a fallback. This is temporary until we migrate everyone to
            // the new API.
            // TODO: Warn in a future release.
            nextChildren = null;
            stopProfilerTimerIfRunning();
        } else {
            setIsRendering(true);
            nextChildren = instance.render();
            if (workInProgress.mode & StrictMode) {
                disableLogs();
                try {
                    instance.render();
                } finally{
                    reenableLogs();
                }
            }
            setIsRendering(false);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        if (current !== null && didCaptureError) // If we're recovering from an error, reconcile without reusing any of
        // the existing children. Conceptually, the normal children and the children
        // that are shown on error are two different sets, so we shouldn't reuse
        // normal children even if their identities match.
        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
         // Memoize state using the values we just used to render.
        // TODO: Restructure so we never read values from the instance.
        workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.
        if (hasContext) invalidateContextProvider(workInProgress, Component, true);
        return workInProgress.child;
    }
    function pushHostRootContext(workInProgress) {
        var root = workInProgress.stateNode;
        if (root.pendingContext) pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
        else if (root.context) // Should always be set
        pushTopLevelContextObject(workInProgress, root.context, false);
        pushHostContainer(workInProgress, root.containerInfo);
    }
    function updateHostRoot(current, workInProgress, renderLanes) {
        pushHostRootContext(workInProgress);
        var updateQueue = workInProgress.updateQueue;
        if (!(current !== null && updateQueue !== null)) throw Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.");
        var nextProps = workInProgress.pendingProps;
        var prevState = workInProgress.memoizedState;
        var prevChildren = prevState !== null ? prevState.element : null;
        cloneUpdateQueue(current, workInProgress);
        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
        var nextState = workInProgress.memoizedState; // Caution: React DevTools currently depends on this property
        // being called "element".
        var nextChildren = nextState.element;
        if (nextChildren === prevChildren) {
            resetHydrationState();
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        var root = workInProgress.stateNode;
        if (root.hydrate && enterHydrationState(workInProgress)) {
            var mutableSourceEagerHydrationData = root.mutableSourceEagerHydrationData;
            if (mutableSourceEagerHydrationData != null) for(var i = 0; i < mutableSourceEagerHydrationData.length; i += 2){
                var mutableSource = mutableSourceEagerHydrationData[i];
                var version = mutableSourceEagerHydrationData[i + 1];
                setWorkInProgressVersion(mutableSource, version);
            }
            var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
            workInProgress.child = child;
            var node = child;
            while(node){
                // Mark each child as hydrating. This is a fast path to know whether this
                // tree is part of a hydrating tree. This is used to determine if a child
                // node has fully mounted yet, and for scheduling event replaying.
                // Conceptually this is similar to Placement in that a new subtree is
                // inserted into the React tree here. It just happens to not need DOM
                // mutations because it already exists.
                node.flags = node.flags & ~Placement | Hydrating;
                node = node.sibling;
            }
        } else {
            // Otherwise reset hydration state in case we aborted and resumed another
            // root.
            reconcileChildren(current, workInProgress, nextChildren, renderLanes);
            resetHydrationState();
        }
        return workInProgress.child;
    }
    function updateHostComponent(current, workInProgress, renderLanes) {
        pushHostContext(workInProgress);
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
        var type = workInProgress.type;
        var nextProps = workInProgress.pendingProps;
        var prevProps = current !== null ? current.memoizedProps : null;
        var nextChildren = nextProps.children;
        var isDirectTextChild = shouldSetTextContent(type, nextProps);
        if (isDirectTextChild) // We special case a direct text child of a host node. This is a common
        // case. We won't handle it as a reified child. We will instead handle
        // this in the host environment that also has access to this prop. That
        // avoids allocating another HostText fiber and traversing it.
        nextChildren = null;
        else if (prevProps !== null && shouldSetTextContent(type, prevProps)) // If we're switching from a direct text child to a normal child, or to
        // empty, we need to schedule the text content to be reset.
        workInProgress.flags |= ContentReset;
        markRef(current, workInProgress);
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostText(current, workInProgress) {
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
         // Nothing to do here. This is terminal. We'll do the completion step
        // immediately after.
        return null;
    }
    function mountLazyComponent(_current, workInProgress, elementType, updateLanes, renderLanes) {
        if (_current !== null) {
            // A lazy component only mounts if it suspended inside a non-
            // concurrent tree, in an inconsistent state. We want to treat it like
            // a new mount, even though an empty version of it already committed.
            // Disconnect the alternate pointers.
            _current.alternate = null;
            workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
            workInProgress.flags |= Placement;
        }
        var props = workInProgress.pendingProps;
        var lazyComponent = elementType;
        var payload = lazyComponent._payload;
        var init = lazyComponent._init;
        var Component = init(payload); // Store the unwrapped component in the type.
        workInProgress.type = Component;
        var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
        var resolvedProps = resolveDefaultProps(Component, props);
        var child;
        switch(resolvedTag){
            case FunctionComponent:
                validateFunctionComponentInDev(workInProgress, Component);
                workInProgress.type = Component = resolveFunctionForHotReloading(Component);
                child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ClassComponent:
                workInProgress.type = Component = resolveClassForHotReloading(Component);
                child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ForwardRef:
                workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
                child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case MemoComponent:
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = Component.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, resolvedProps, 'prop', getComponentName(Component));
                }
                child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), updateLanes, renderLanes);
                return child;
        }
        var hint = '';
        if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) hint = ' Did you wrap a component in React.lazy() more than once?';
        throw Error("Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint);
    }
    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
        if (_current !== null) {
            // An incomplete component only mounts if it suspended inside a non-
            // concurrent tree, in an inconsistent state. We want to treat it like
            // a new mount, even though an empty version of it already committed.
            // Disconnect the alternate pointers.
            _current.alternate = null;
            workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
            workInProgress.flags |= Placement;
        } // Promote the fiber to a class and try rendering again.
        workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
        // Push context providers early to prevent context stack mismatches.
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        constructClassInstance(workInProgress, Component, nextProps);
        mountClassInstance(workInProgress, Component, nextProps, renderLanes);
        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
    }
    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
        if (_current !== null) {
            // An indeterminate component only mounts if it suspended inside a non-
            // concurrent tree, in an inconsistent state. We want to treat it like
            // a new mount, even though an empty version of it already committed.
            // Disconnect the alternate pointers.
            _current.alternate = null;
            workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
            workInProgress.flags |= Placement;
        }
        var props = workInProgress.pendingProps;
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
        context = getMaskedContext(workInProgress, unmaskedContext);
        prepareToReadContext(workInProgress, renderLanes);
        var value;
        if (Component.prototype && typeof Component.prototype.render === 'function') {
            var componentName = getComponentName(Component) || 'Unknown';
            if (!didWarnAboutBadClass[componentName]) {
                error1("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
            }
        }
        if (workInProgress.mode & StrictMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        setIsRendering(true);
        ReactCurrentOwner$1.current = workInProgress;
        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
        setIsRendering(false);
        workInProgress.flags |= PerformedWork;
        // Support for module components is deprecated and is removed behind a flag.
        // Whether or not it would crash later, we want to show a good message in DEV first.
        if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
            var _componentName = getComponentName(Component) || 'Unknown';
            if (!didWarnAboutModulePatternComponent[_componentName]) {
                error1("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
            }
        }
        if (// Eventually we'll delete this branch altogether.
        typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
            var _componentName2 = getComponentName(Component) || 'Unknown';
            if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error1("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
            }
            workInProgress.tag = ClassComponent; // Throw out any hooks that were used.
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
            // During mounting we don't know the child context yet as the instance doesn't exist.
            // We will invalidate the child context in finishClassComponent() right after rendering.
            var hasContext = false;
            if (isContextProvider(Component)) {
                hasContext = true;
                pushContextProvider(workInProgress);
            } else hasContext = false;
            workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
            initializeUpdateQueue(workInProgress);
            var getDerivedStateFromProps = Component.getDerivedStateFromProps;
            if (typeof getDerivedStateFromProps === 'function') applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
            adoptClassInstance(workInProgress, value);
            mountClassInstance(workInProgress, Component, props, renderLanes);
            return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
        } else {
            // Proceed under the assumption that this is a function component
            workInProgress.tag = FunctionComponent;
            if (workInProgress.mode & StrictMode) {
                disableLogs();
                try {
                    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
                } finally{
                    reenableLogs();
                }
            }
            reconcileChildren(null, workInProgress, value, renderLanes);
            validateFunctionComponentInDev(workInProgress, Component);
            return workInProgress.child;
        }
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
        if (Component) {
            if (Component.childContextTypes) error1('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');
        }
        if (workInProgress.ref !== null) {
            var info = '';
            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
            if (ownerName) info += '\n\nCheck the render method of `' + ownerName + '`.';
            var warningKey = ownerName || workInProgress._debugID || '';
            var debugSource = workInProgress._debugSource;
            if (debugSource) warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
            if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error1("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
            }
        }
        if (typeof Component.getDerivedStateFromProps === 'function') {
            var _componentName3 = getComponentName(Component) || 'Unknown';
            if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error1('%s: Function components do not support getDerivedStateFromProps.', _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
            }
        }
        if (typeof Component.contextType === 'object' && Component.contextType !== null) {
            var _componentName4 = getComponentName(Component) || 'Unknown';
            if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error1('%s: Function components do not support contextType.', _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
            }
        }
    }
    var SUSPENDED_MARKER = {
        dehydrated: null,
        retryLane: NoLane
    };
    function mountSuspenseOffscreenState(renderLanes) {
        return {
            baseLanes: renderLanes
        };
    }
    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
        return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes)
        };
    } // TODO: Probably should inline this back
    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
        // If we're already showing a fallback, there are cases where we need to
        // remain on that fallback regardless of whether the content has resolved.
        // For example, SuspenseList coordinates when nested content appears.
        if (current !== null) {
            var suspenseState = current.memoizedState;
            if (suspenseState === null) // Currently showing content. Don't hide it, even if ForceSuspenseFallack
            // is true. More precise name might be "ForceRemainSuspenseFallback".
            // Note: This is a factoring smell. Can't remain on a fallback if there's
            // no fallback to remain on.
            return false;
        } // Not currently showing content. Consult the Suspense context.
        return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
    }
    function getRemainingWorkInPrimaryTree(current, renderLanes) {
        // TODO: Should not remove render lanes that were pinged during this render
        return removeLanes(current.childLanes, renderLanes);
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.
        if (shouldSuspend(workInProgress)) workInProgress.flags |= DidCapture;
        var suspenseContext = suspenseStackCursor.current;
        var showFallback = false;
        var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;
        if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
            // Something in this boundary's subtree already suspended. Switch to
            // rendering the fallback children.
            showFallback = true;
            workInProgress.flags &= ~DidCapture;
        } else {
            // Attempting the main content
            if (current === null || current.memoizedState !== null) // This is a new mount or this boundary is already showing a fallback state.
            // Mark this subtree context as having at least one invisible parent that could
            // handle the fallback state.
            // Boundaries without fallbacks or should be avoided are not considered since
            // they cannot handle preferred fallback states.
            {
                if (nextProps.fallback !== undefined && nextProps.unstable_avoidThisFallback !== true) suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
            }
        }
        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
        // boundary's children. This involves some custom reconcilation logic. Two
        // main reasons this is so complicated.
        //
        // First, Legacy Mode has different semantics for backwards compatibility. The
        // primary tree will commit in an inconsistent state, so when we do the
        // second pass to render the fallback, we do some exceedingly, uh, clever
        // hacks to make that not totally break. Like transferring effects and
        // deletions from hidden tree. In Concurrent Mode, it's much simpler,
        // because we bailout on the primary tree completely and leave it in its old
        // state, no effects. Same as what we do for Offscreen (except that
        // Offscreen doesn't have the first render pass).
        //
        // Second is hydration. During hydration, the Suspense fiber has a slightly
        // different layout, where the child points to a dehydrated fragment, which
        // contains the DOM rendered by the server.
        //
        // Third, even if you set all that aside, Suspense is like error boundaries in
        // that we first we try to render one tree, and if that fails, we render again
        // and switch to a different tree. Like a try/catch block. So we have to track
        // which branch we're currently rendering. Ideally we would model this using
        // a stack.
        if (current === null) {
            // Initial mount
            // If we're currently hydrating, try to hydrate this boundary.
            // But only if this has a fallback.
            if (nextProps.fallback !== undefined) tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
                var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var primaryChildFragment = workInProgress.child;
                primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackFragment;
            } else if (typeof nextProps.unstable_expectedLoadTime === 'number') {
                // This is a CPU-bound tree. Skip this tree and show a placeholder to
                // unblock the surrounding content. Then immediately retry after the
                // initial commit.
                var _fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var _primaryChildFragment = workInProgress.child;
                _primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER; // Since nothing actually suspended, there will nothing to ping this to
                // get it started back up to attempt the next item. While in terms of
                // priority this work has the same priority as this current render, it's
                // not part of the same transition once the transition has committed. If
                // it's sync, we still want to yield so that it can be painted.
                // Conceptually, this is really the same as pinging. We can use any
                // RetryLane even if it's the one currently rendering since we're leaving
                // it behind on this node.
                workInProgress.lanes = SomeRetryLane;
                markSpawnedWork(SomeRetryLane);
                return _fallbackFragment;
            } else return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren, renderLanes);
        } else {
            // This is an update.
            // If the current fiber has a SuspenseState, that means it's already showing
            // a fallback.
            var prevState = current.memoizedState;
            if (prevState !== null) {
                if (showFallback) {
                    var _nextFallbackChildren2 = nextProps.fallback;
                    var _nextPrimaryChildren2 = nextProps.children;
                    var _fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren2, _nextFallbackChildren2, renderLanes);
                    var _primaryChildFragment3 = workInProgress.child;
                    var prevOffscreenState = current.child.memoizedState;
                    _primaryChildFragment3.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);
                    _primaryChildFragment3.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
                    workInProgress.memoizedState = SUSPENDED_MARKER;
                    return _fallbackChildFragment;
                } else {
                    var _nextPrimaryChildren3 = nextProps.children;
                    var _primaryChildFragment4 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren3, renderLanes);
                    workInProgress.memoizedState = null;
                    return _primaryChildFragment4;
                }
            } else // The current tree is not already showing a fallback.
            if (showFallback) {
                // Timed out.
                var _nextFallbackChildren3 = nextProps.fallback;
                var _nextPrimaryChildren4 = nextProps.children;
                var _fallbackChildFragment2 = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren4, _nextFallbackChildren3, renderLanes);
                var _primaryChildFragment5 = workInProgress.child;
                var _prevOffscreenState = current.child.memoizedState;
                _primaryChildFragment5.memoizedState = _prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(_prevOffscreenState, renderLanes);
                _primaryChildFragment5.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes); // Skip the primary children, and continue working on the
                // fallback children.
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return _fallbackChildFragment2;
            } else {
                // Still haven't timed out. Continue rendering the children, like we
                // normally do.
                var _nextPrimaryChildren5 = nextProps.children;
                var _primaryChildFragment6 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren5, renderLanes);
                workInProgress.memoizedState = null;
                return _primaryChildFragment6;
            }
        }
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
        var mode = workInProgress.mode;
        var primaryChildProps = {
            mode: 'visible',
            children: primaryChildren
        };
        var primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, renderLanes, null);
        primaryChildFragment.return = workInProgress;
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var progressedPrimaryFragment = workInProgress.child;
        var primaryChildProps = {
            mode: 'hidden',
            children: primaryChildren
        };
        var primaryChildFragment;
        var fallbackChildFragment;
        if ((mode & BlockingMode) === NoMode && progressedPrimaryFragment !== null) {
            // In legacy mode, we commit the primary tree as if it successfully
            // completed, even though it's in an inconsistent state.
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = 0;
                primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        } else {
            primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, NoLanes, null);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        }
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function createWorkInProgressOffscreenFiber(current, offscreenProps) {
        // The props argument to `createWorkInProgress` is `any` typed, so we use this
        // wrapper function to constrain it.
        return createWorkInProgress(current, offscreenProps);
    }
    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: 'visible',
            children: primaryChildren
        });
        if ((workInProgress.mode & BlockingMode) === NoMode) primaryChildFragment.lanes = renderLanes;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = null;
        if (currentFallbackChildFragment !== null) {
            // Delete the fallback child fragment
            currentFallbackChildFragment.nextEffect = null;
            currentFallbackChildFragment.flags = Deletion;
            workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChildFragment;
        }
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildProps = {
            mode: 'hidden',
            children: primaryChildren
        };
        var primaryChildFragment;
        if (// completed, even though it's in an inconsistent state.
        (mode & BlockingMode) === NoMode && // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        workInProgress.child !== currentPrimaryChildFragment) {
            var progressedPrimaryFragment = workInProgress.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
                primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            } // The fallback fiber was added as a deletion effect during the first pass.
            // However, since we're going to remain on the fallback, we no longer want
            // to delete it. So we need to remove it from the list. Deletions are stored
            // on the same list as effects. We want to keep the effects from the primary
            // tree. So we copy the primary child fragment's effect list, which does not
            // include the fallback deletion effect.
            var progressedLastEffect = primaryChildFragment.lastEffect;
            if (progressedLastEffect !== null) {
                workInProgress.firstEffect = primaryChildFragment.firstEffect;
                workInProgress.lastEffect = progressedLastEffect;
                progressedLastEffect.nextEffect = null;
            } else // TODO: Reset this somewhere else? Lol legacy mode is so weird.
            workInProgress.firstEffect = workInProgress.lastEffect = null;
        } else primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
        var fallbackChildFragment;
        if (currentFallbackChildFragment !== null) fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
        else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
            // mounted but this is a new fiber.
            fallbackChildFragment.flags |= Placement;
        }
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function scheduleWorkOnFiber(fiber, renderLanes) {
        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
        scheduleWorkOnParentPath(fiber.return, renderLanes);
    }
    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
        // Mark any Suspense boundaries with fallbacks as having work to do.
        // If they were previously forced into fallbacks, they may now be able
        // to unblock.
        var node = firstChild;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) scheduleWorkOnFiber(node, renderLanes);
            } else if (node.tag === SuspenseListComponent) // If the tail is hidden there might not be an Suspense boundaries
            // to schedule work on. In this case we have to schedule it on the
            // list itself.
            // We don't have to traverse to the children of the list since
            // the list will propagate the change when it rerenders.
            scheduleWorkOnFiber(node, renderLanes);
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function findLastContentRow(firstChild) {
        // This is going to find the last row among these children that is already
        // showing content on the screen, as opposed to being in fallback state or
        // new. If a row has multiple Suspense boundaries, any of them being in the
        // fallback state, counts as the whole row being in a fallback state.
        // Note that the "rows" will be workInProgress, but any nested children
        // will still be current since we haven't rendered them yet. The mounted
        // order may not be the same as the new order. We use the new order.
        var row = firstChild;
        var lastContentRow = null;
        while(row !== null){
            var currentRow = row.alternate; // New rows can't be content rows.
            if (currentRow !== null && findFirstSuspended(currentRow) === null) lastContentRow = row;
            row = row.sibling;
        }
        return lastContentRow;
    }
    function validateRevealOrder(revealOrder) {
        if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
            didWarnAboutRevealOrder[revealOrder] = true;
            if (typeof revealOrder === 'string') switch(revealOrder.toLowerCase()){
                case 'together':
                case 'forwards':
                case 'backwards':
                    error1("\"%s\" is not a valid value for revealOrder on <SuspenseList />. Use lowercase \"%s\" instead.", revealOrder, revealOrder.toLowerCase());
                    break;
                case 'forward':
                case 'backward':
                    error1("\"%s\" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use \"%ss\" instead.", revealOrder, revealOrder.toLowerCase());
                    break;
                default:
                    error1("\"%s\" is not a supported revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?", revealOrder);
                    break;
            }
            else error1("%s is not a supported value for revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?", revealOrder);
        }
    }
    function validateTailOptions(tailMode, revealOrder) {
        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
            if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
                didWarnAboutTailOptions[tailMode] = true;
                error1("\"%s\" is not a supported value for tail on <SuspenseList />. Did you mean \"collapsed\" or \"hidden\"?", tailMode);
            } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
                didWarnAboutTailOptions[tailMode] = true;
                error1("<SuspenseList tail=\"%s\" /> is only valid if revealOrder is \"forwards\" or \"backwards\". Did you mean to specify revealOrder=\"forwards\"?", tailMode);
            }
        }
    }
    function validateSuspenseListNestedChild(childSlot, index) {
        var isArray = Array.isArray(childSlot);
        var isIterable = !isArray && typeof getIteratorFn(childSlot) === 'function';
        if (isArray || isIterable) {
            var type = isArray ? 'array' : 'iterable';
            error1("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index, type);
            return false;
        }
        return true;
    }
    function validateSuspenseListChildren(children, revealOrder) {
        if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
            if (Array.isArray(children)) for(var i = 0; i < children.length; i++){
                if (!validateSuspenseListNestedChild(children[i], i)) return;
            }
            else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === 'function') {
                    var childrenIterator = iteratorFn.call(children);
                    if (childrenIterator) {
                        var step = childrenIterator.next();
                        var _i = 0;
                        for(; !step.done; step = childrenIterator.next()){
                            if (!validateSuspenseListNestedChild(step.value, _i)) return;
                            _i++;
                        }
                    }
                } else error1("A single row was passed to a <SuspenseList revealOrder=\"%s\" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?", revealOrder);
            }
        }
    }
    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {
        var renderState = workInProgress.memoizedState;
        if (renderState === null) workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode,
            lastEffect: lastEffectBeforeRendering
        };
        else {
            // We can reuse the existing object from previous renders.
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
            renderState.lastEffect = lastEffectBeforeRendering;
        }
    } // This can end up rendering this component multiple passes.
    // The first pass splits the children fibers into two sets. A head and tail.
    // We first render the head. If anything is in fallback state, we do another
    // pass through beginWork to rerender all children (including the tail) with
    // the force suspend context. If the first render didn't have anything in
    // in fallback state. Then we render each row in the tail one-by-one.
    // That happens in the completeWork phase without going back to beginWork.
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var revealOrder = nextProps.revealOrder;
        var tailMode = nextProps.tail;
        var newChildren = nextProps.children;
        validateRevealOrder(revealOrder);
        validateTailOptions(tailMode, revealOrder);
        validateSuspenseListChildren(newChildren, revealOrder);
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        var suspenseContext = suspenseStackCursor.current;
        var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress.flags |= DidCapture;
        } else {
            var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) // If we previously forced a fallback, we need to schedule work
            // on any nested boundaries to let them know to try to render
            // again. This is the same as context updating.
            propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        }
        pushSuspenseContext(workInProgress, suspenseContext);
        if ((workInProgress.mode & BlockingMode) === NoMode) // In legacy mode, SuspenseList doesn't work so we just
        // use make it a noop by treating it as the default revealOrder.
        workInProgress.memoizedState = null;
        else switch(revealOrder){
            case 'forwards':
                var lastContentRow = findLastContentRow(workInProgress.child);
                var tail;
                if (lastContentRow === null) {
                    // The whole list is part of the tail.
                    // TODO: We could fast path by just rendering the tail now.
                    tail = workInProgress.child;
                    workInProgress.child = null;
                } else {
                    // Disconnect the tail rows after the content row.
                    // We're going to render them separately later.
                    tail = lastContentRow.sibling;
                    lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(workInProgress, false, tail, lastContentRow, tailMode, workInProgress.lastEffect);
                break;
            case 'backwards':
                // We're going to find the first row that has existing content.
                // At the same time we're going to reverse the list of everything
                // we pass in the meantime. That's going to be our tail in reverse
                // order.
                var _tail = null;
                var row = workInProgress.child;
                workInProgress.child = null;
                while(row !== null){
                    var currentRow = row.alternate; // New rows can't be content rows.
                    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                        // This is the beginning of the main content.
                        workInProgress.child = row;
                        break;
                    }
                    var nextRow = row.sibling;
                    row.sibling = _tail;
                    _tail = row;
                    row = nextRow;
                } // TODO: If workInProgress.child is null, we can continue on the tail immediately.
                initSuspenseListRenderState(workInProgress, true, _tail, null, tailMode, workInProgress.lastEffect);
                break;
            case 'together':
                initSuspenseListRenderState(workInProgress, false, null, null, undefined, workInProgress.lastEffect);
                break;
            default:
                // The default reveal order is the same as not having
                // a boundary.
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }
    function updatePortalComponent(current, workInProgress, renderLanes) {
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        var nextChildren = workInProgress.pendingProps;
        if (current === null) // Portals are special because we don't append the children during mount
        // but at commit. Therefore we need to track insertions which the normal
        // flow doesn't do during mount. This doesn't happen at the root because
        // the root always starts with a "current" with a null child.
        // TODO: Consider unifying this with how the root works.
        workInProgress.child = reconcileChildFibers1(workInProgress, null, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
    function updateContextProvider(current, workInProgress, renderLanes) {
        var providerType = workInProgress.type;
        var context = providerType._context;
        var newProps = workInProgress.pendingProps;
        var oldProps = workInProgress.memoizedProps;
        var newValue = newProps.value;
        if (!('value' in newProps)) {
            if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error1('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');
            }
        }
        var providerPropTypes = workInProgress.type.propTypes;
        if (providerPropTypes) checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');
        pushProvider(workInProgress, newValue);
        if (oldProps !== null) {
            var oldValue = oldProps.value;
            var changedBits = calculateChangedBits(context, newValue, oldValue);
            if (changedBits === 0) {
                // No change. Bailout early if children are the same.
                if (oldProps.children === newProps.children && !hasContextChanged()) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            } else // The context value changed. Search for matching consumers and schedule
            // them to update.
            propagateContextChange(workInProgress, context, changedBits, renderLanes);
        }
        var newChildren = newProps.children;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingContextAsConsumer = false;
    function updateContextConsumer(current, workInProgress, renderLanes) {
        var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
        if (context._context === undefined) {
            // This may be because it's a Context (rather than a Consumer).
            // Or it may be because it's older React where they're the same thing.
            // We only want to warn if we're sure it's a new React.
            if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                    hasWarnedAboutUsingContextAsConsumer = true;
                    error1("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
            }
        } else context = context._context;
        var newProps = workInProgress.pendingProps;
        var render = newProps.children;
        if (typeof render !== 'function') error1("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
        prepareToReadContext(workInProgress, renderLanes);
        var newValue = readContext(context, newProps.unstable_observedBits);
        var newChildren;
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        newChildren = render(newValue);
        setIsRendering(false);
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    function markWorkInProgressReceivedUpdate() {
        didReceiveUpdate = true;
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
        if (current !== null) // Reuse previous dependencies
        workInProgress.dependencies = current.dependencies;
        // Don't update "base" render times for bailouts.
        stopProfilerTimerIfRunning();
        markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.
        if (!includesSomeLane(renderLanes, workInProgress.childLanes)) // The children don't have any work either. We can skip them.
        // TODO: Once we add back resuming, we should check if the children are
        // a work-in-progress set. If so, we need to transfer their effects.
        return null;
        else {
            // This fiber doesn't have work, but its subtree does. Clone the child
            // fibers and continue.
            cloneChildFibers(current, workInProgress);
            return workInProgress.child;
        }
    }
    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
        var returnFiber = oldWorkInProgress.return;
        if (returnFiber === null) throw new Error('Cannot swap the root fiber.');
         // Disconnect from the old current.
        // It will get deleted.
        current.alternate = null;
        oldWorkInProgress.alternate = null; // Connect to the new tree.
        newWorkInProgress.index = oldWorkInProgress.index;
        newWorkInProgress.sibling = oldWorkInProgress.sibling;
        newWorkInProgress.return = oldWorkInProgress.return;
        newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.
        if (oldWorkInProgress === returnFiber.child) returnFiber.child = newWorkInProgress;
        else {
            var prevSibling = returnFiber.child;
            if (prevSibling === null) throw new Error('Expected parent to have a child.');
            while(prevSibling.sibling !== oldWorkInProgress){
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) throw new Error('Expected to find the previous sibling.');
            }
            prevSibling.sibling = newWorkInProgress;
        } // Delete the old fiber and place the new one.
        // Since the old fiber is disconnected, we have to schedule it manually.
        var last = returnFiber.lastEffect;
        if (last !== null) {
            last.nextEffect = current;
            returnFiber.lastEffect = current;
        } else returnFiber.firstEffect = returnFiber.lastEffect = current;
        current.nextEffect = null;
        current.flags = Deletion;
        newWorkInProgress.flags |= Placement; // Restart work from the new fiber.
        return newWorkInProgress;
    }
    function beginWork(current, workInProgress, renderLanes) {
        var updateLanes = workInProgress.lanes;
        if (workInProgress._debugNeedsRemount && current !== null) // This will restart the begin phase with a new fiber.
        return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
        if (current !== null) {
            var oldProps = current.memoizedProps;
            var newProps = workInProgress.pendingProps;
            if (oldProps !== newProps || hasContextChanged() || workInProgress.type !== current.type) // If props or context changed, mark the fiber as having performed work.
            // This may be unset if the props are determined to be equal later (memo).
            didReceiveUpdate = true;
            else if (!includesSomeLane(renderLanes, updateLanes)) {
                didReceiveUpdate = false; // This fiber does not have any pending work. Bailout without entering
                // the begin phase. There's still some bookkeeping we that needs to be done
                // in this optimized path, mostly pushing stuff onto the stack.
                switch(workInProgress.tag){
                    case HostRoot:
                        pushHostRootContext(workInProgress);
                        resetHydrationState();
                        break;
                    case HostComponent:
                        pushHostContext(workInProgress);
                        break;
                    case ClassComponent:
                        var Component = workInProgress.type;
                        if (isContextProvider(Component)) pushContextProvider(workInProgress);
                        break;
                    case HostPortal:
                        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                        break;
                    case ContextProvider:
                        var newValue = workInProgress.memoizedProps.value;
                        pushProvider(workInProgress, newValue);
                        break;
                    case Profiler:
                        // Profiler should only call onRender when one of its descendants actually rendered.
                        var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                        if (hasChildWork) workInProgress.flags |= Update;
                         // Reset effect durations for the next eventual effect phase.
                        // These are reset during render to allow the DevTools commit hook a chance to read them,
                        var stateNode = workInProgress.stateNode;
                        stateNode.effectDuration = 0;
                        stateNode.passiveEffectDuration = 0;
                        break;
                    case SuspenseComponent:
                        var state = workInProgress.memoizedState;
                        if (state !== null) {
                            // whether to retry the primary children, or to skip over it and
                            // go straight to the fallback. Check the priority of the primary
                            // child fragment.
                            var primaryChildFragment = workInProgress.child;
                            var primaryChildLanes = primaryChildFragment.childLanes;
                            if (includesSomeLane(renderLanes, primaryChildLanes)) // The primary children have pending work. Use the normal path
                            // to attempt to render the primary children again.
                            return updateSuspenseComponent(current, workInProgress, renderLanes);
                            else {
                                // The primary child fragment does not have pending work marked
                                // on it
                                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                                // priority. Bailout.
                                var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                                if (child !== null) // The fallback children have pending work. Skip over the
                                // primary children and work on the fallback.
                                return child.sibling;
                                else return null;
                            }
                        } else pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                        break;
                    case SuspenseListComponent:
                        var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;
                        var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                        if (didSuspendBefore) {
                            if (_hasChildWork) // If something was in fallback state last time, and we have all the
                            // same children then we're still in progressive loading state.
                            // Something might get unblocked by state updates or retries in the
                            // tree which will affect the tail. So we need to use the normal
                            // path to compute the correct tail.
                            return updateSuspenseListComponent(current, workInProgress, renderLanes);
                             // If none of the children had any work, that means that none of
                            // them got retried so they'll still be blocked in the same way
                            // as before. We can fast bail out.
                            workInProgress.flags |= DidCapture;
                        } // If nothing suspended before and we're rendering the same children,
                        // then the tail doesn't matter. Anything new that suspends will work
                        // in the "together" mode, so we can continue from the state we had.
                        var renderState = workInProgress.memoizedState;
                        if (renderState !== null) {
                            // Reset to the "together" mode in case we've started a different
                            // update in the past but didn't complete it.
                            renderState.rendering = null;
                            renderState.tail = null;
                            renderState.lastEffect = null;
                        }
                        pushSuspenseContext(workInProgress, suspenseStackCursor.current);
                        if (_hasChildWork) break;
                        else // If none of the children had any work, that means that none of
                        // them got retried so they'll still be blocked in the same way
                        // as before. We can fast bail out.
                        return null;
                    case OffscreenComponent:
                    case LegacyHiddenComponent:
                        // Need to check if the tree still needs to be deferred. This is
                        // almost identical to the logic used in the normal update path,
                        // so we'll just enter that. The only difference is we'll bail out
                        // at the next level instead of this one, because the child props
                        // have not changed. Which is fine.
                        // TODO: Probably should refactor `beginWork` to split the bailout
                        // path from the normal path. I'm tempted to do a labeled break here
                        // but I won't :)
                        workInProgress.lanes = NoLanes;
                        return updateOffscreenComponent(current, workInProgress, renderLanes);
                }
                return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
            // See https://github.com/facebook/react/pull/19216.
            didReceiveUpdate = true;
            else // An update was scheduled on this fiber, but there are no new props
            // nor legacy context. Set this to false. If an update queue or context
            // consumer produces a changed value, it will set this to true. Otherwise,
            // the component will assume the children have not changed and bail out.
            didReceiveUpdate = false;
        } else didReceiveUpdate = false;
         // Before entering the begin phase, clear pending update priority.
        // TODO: This assumes that we're about to evaluate the component and process
        // the update queue. However, there's an exception: SimpleMemoComponent
        // sometimes bails out later in the begin phase. This indicates that we should
        // move this assignment out of the common path and into each branch.
        workInProgress.lanes = NoLanes;
        switch(workInProgress.tag){
            case IndeterminateComponent:
                return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
            case LazyComponent:
                var elementType = workInProgress.elementType;
                return mountLazyComponent(current, workInProgress, elementType, updateLanes, renderLanes);
            case FunctionComponent:
                var _Component = workInProgress.type;
                var unresolvedProps = workInProgress.pendingProps;
                var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
                return updateFunctionComponent(current, workInProgress, _Component, resolvedProps, renderLanes);
            case ClassComponent:
                var _Component2 = workInProgress.type;
                var _unresolvedProps = workInProgress.pendingProps;
                var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);
                return updateClassComponent(current, workInProgress, _Component2, _resolvedProps, renderLanes);
            case HostRoot:
                return updateHostRoot(current, workInProgress, renderLanes);
            case HostComponent:
                return updateHostComponent(current, workInProgress, renderLanes);
            case HostText:
                return updateHostText(current, workInProgress);
            case SuspenseComponent:
                return updateSuspenseComponent(current, workInProgress, renderLanes);
            case HostPortal:
                return updatePortalComponent(current, workInProgress, renderLanes);
            case ForwardRef:
                var type = workInProgress.type;
                var _unresolvedProps2 = workInProgress.pendingProps;
                var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
                return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
            case Fragment:
                return updateFragment1(current, workInProgress, renderLanes);
            case Mode:
                return updateMode(current, workInProgress, renderLanes);
            case Profiler:
                return updateProfiler(current, workInProgress, renderLanes);
            case ContextProvider:
                return updateContextProvider(current, workInProgress, renderLanes);
            case ContextConsumer:
                return updateContextConsumer(current, workInProgress, renderLanes);
            case MemoComponent:
                var _type2 = workInProgress.type;
                var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.
                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = _type2.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, _resolvedProps3, 'prop', getComponentName(_type2));
                }
                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, updateLanes, renderLanes);
            case SimpleMemoComponent:
                return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, updateLanes, renderLanes);
            case IncompleteClassComponent:
                var _Component3 = workInProgress.type;
                var _unresolvedProps4 = workInProgress.pendingProps;
                var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);
                return mountIncompleteClassComponent(current, workInProgress, _Component3, _resolvedProps4, renderLanes);
            case SuspenseListComponent:
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
            case FundamentalComponent:
                break;
            case ScopeComponent:
                break;
            case Block:
                break;
            case OffscreenComponent:
                return updateOffscreenComponent(current, workInProgress, renderLanes);
            case LegacyHiddenComponent:
                return updateLegacyHiddenComponent(current, workInProgress, renderLanes);
        }
        throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function markUpdate(workInProgress) {
        // Tag the fiber with an update effect. This turns a Placement into
        // a PlacementAndUpdate.
        workInProgress.flags |= Update;
    }
    function markRef$1(workInProgress) {
        workInProgress.flags |= Ref;
    }
    var appendAllChildren;
    var updateHostContainer;
    var updateHostComponent$1;
    var updateHostText$1;
    // Mutation mode
    appendAllChildren = function(parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;
        while(node !== null){
            if (node.tag === HostComponent || node.tag === HostText) appendInitialChild(parent, node.stateNode);
            else if (node.tag === HostPortal) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    };
    updateHostContainer = function(workInProgress) {
    };
    updateHostComponent$1 = function(current, workInProgress, type, newProps, rootContainerInstance) {
        // If we have an alternate, that means this is an update and we need to
        // schedule a side-effect to do the updates.
        var oldProps = current.memoizedProps;
        if (oldProps === newProps) // In mutation mode, this is sufficient for a bailout because
        // we won't touch this node even if children changed.
        return;
         // If we get updated because one of our children updated, we don't
        // have newProps so we'll have to reuse them.
        // TODO: Split the update API as separate for the props vs. children.
        // Even better would be if children weren't special cased at all tho.
        var instance = workInProgress.stateNode;
        var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
        // component is hitting the resume path. Figure out why. Possibly
        // related to `hidden`.
        var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.
        workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.
        if (updatePayload) markUpdate(workInProgress);
    };
    updateHostText$1 = function(current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) markUpdate(workInProgress);
    };
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (getIsHydrating()) // If we're hydrating, we should consume as many items as we can
        // so we don't leave any behind.
        return;
        switch(renderState.tailMode){
            case 'hidden':
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var tailNode = renderState.tail;
                var lastTailNode = null;
                while(tailNode !== null){
                    if (tailNode.alternate !== null) lastTailNode = tailNode;
                    tailNode = tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (lastTailNode === null) // All remaining items in the tail are insertions.
                renderState.tail = null;
                else // Detach the insertion after the last node that was already
                // inserted.
                lastTailNode.sibling = null;
                break;
            case 'collapsed':
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var _tailNode = renderState.tail;
                var _lastTailNode = null;
                while(_tailNode !== null){
                    if (_tailNode.alternate !== null) _lastTailNode = _tailNode;
                    _tailNode = _tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (_lastTailNode === null) {
                    // All remaining items in the tail are insertions.
                    if (!hasRenderedATailFallback && renderState.tail !== null) // We suspended during the head. We want to show at least one
                    // row at the tail. So we'll keep on and cut off the rest.
                    renderState.tail.sibling = null;
                    else renderState.tail = null;
                } else // Detach the insertion after the last node that was already
                // inserted.
                _lastTailNode.sibling = null;
                break;
        }
    }
    function completeWork(current, workInProgress, renderLanes) {
        var newProps = workInProgress.pendingProps;
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
                return null;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                return null;
            case HostRoot:
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                var fiberRoot = workInProgress.stateNode;
                if (fiberRoot.pendingContext) {
                    fiberRoot.context = fiberRoot.pendingContext;
                    fiberRoot.pendingContext = null;
                }
                if (current === null || current.child === null) {
                    // If we hydrated, pop so that we can delete any remaining children
                    // that weren't hydrated.
                    var wasHydrated = popHydrationState(workInProgress);
                    if (wasHydrated) // If we hydrated, then we'll need to schedule an update for
                    // the commit side-effects on the root.
                    markUpdate(workInProgress);
                    else if (!fiberRoot.hydrate) // Schedule an effect to clear this container at the start of the next commit.
                    // This handles the case of React rendering into a container with previous children.
                    // It's also safe to do for updates too, because current.child would only be null
                    // if the previous render was null (so the the container would already be empty).
                    workInProgress.flags |= Snapshot;
                }
                updateHostContainer(workInProgress);
                return null;
            case HostComponent:
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer();
                var type = workInProgress.type;
                if (current !== null && workInProgress.stateNode != null) {
                    updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);
                    if (current.ref !== workInProgress.ref) markRef$1(workInProgress);
                } else {
                    if (!newProps) {
                        if (!(workInProgress.stateNode !== null)) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                        return null;
                    }
                    var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
                    // "stack" as the parent. Then append children as we go in beginWork
                    // or completeWork depending on whether we want to add them top->down or
                    // bottom->up. Top->down is faster in IE11.
                    var _wasHydrated = popHydrationState(workInProgress);
                    if (_wasHydrated) // TODO: Move this and createInstance step into the beginPhase
                    // to consolidate.
                    {
                        if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) // If changes to the hydrated node need to be applied at the
                        // commit-phase we mark this as such.
                        markUpdate(workInProgress);
                    } else {
                        var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                        appendAllChildren(instance, workInProgress, false, false);
                        workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
                        // (eg DOM renderer supports auto-focus for certain elements).
                        // Make sure such renderers get scheduled for later work.
                        if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) markUpdate(workInProgress);
                    }
                    if (workInProgress.ref !== null) // If there is a ref on a host node we need to schedule a callback
                    markRef$1(workInProgress);
                }
                return null;
            case HostText:
                var newText = newProps;
                if (current && workInProgress.stateNode != null) {
                    var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
                    // to schedule a side-effect to do the updates.
                    updateHostText$1(current, workInProgress, oldText, newText);
                } else {
                    if (typeof newText !== 'string') {
                        if (!(workInProgress.stateNode !== null)) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                    }
                    var _rootContainerInstance = getRootHostContainer();
                    var _currentHostContext = getHostContext();
                    var _wasHydrated2 = popHydrationState(workInProgress);
                    if (_wasHydrated2) {
                        if (prepareToHydrateHostTextInstance(workInProgress)) markUpdate(workInProgress);
                    } else workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
                }
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var nextState = workInProgress.memoizedState;
                if ((workInProgress.flags & DidCapture) !== NoFlags) {
                    // Something suspended. Re-render with the fallback children.
                    workInProgress.lanes = renderLanes; // Do not reset the effect list.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                var nextDidTimeout = nextState !== null;
                var prevDidTimeout = false;
                if (current === null) {
                    if (workInProgress.memoizedProps.fallback !== undefined) popHydrationState(workInProgress);
                } else {
                    var prevState = current.memoizedState;
                    prevDidTimeout = prevState !== null;
                }
                if (nextDidTimeout && !prevDidTimeout) // If this subtreee is running in blocking mode we can suspend,
                // otherwise we won't suspend.
                // TODO: This will still suspend a synchronous tree if anything
                // in the concurrent tree already suspended during this render.
                // This is a known bug.
                {
                    if ((workInProgress.mode & BlockingMode) !== NoMode) {
                        // TODO: Move this back to throwException because this is too late
                        // if this is a large tree which is common for initial loads. We
                        // don't know if we should restart a render or not until we get
                        // this marker, and this is too late.
                        // If this render already had a ping or lower pri updates,
                        // and this is the first time we know we're going to suspend we
                        // should be able to immediately restart from within throwException.
                        var hasInvisibleChildContext = current === null && workInProgress.memoizedProps.unstable_avoidThisFallback !== true;
                        if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) // If this was in an invisible tree or a new render, then showing
                        // this boundary is ok.
                        renderDidSuspend();
                        else // Otherwise, we're going to have to hide content so we should
                        // suspend for longer if possible.
                        renderDidSuspendDelayIfPossible();
                    }
                }
                // TODO: Only schedule updates if these values are non equal, i.e. it changed.
                if (nextDidTimeout || prevDidTimeout) // If this boundary just timed out, schedule an effect to attach a
                // retry listener to the promise. This flag is also used to hide the
                // primary children. In mutation mode, we also need the flag to
                // *unhide* children that were previously hidden, so check if this
                // is currently timed out, too.
                workInProgress.flags |= Update;
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                updateHostContainer(workInProgress);
                if (current === null) preparePortalMount(workInProgress.stateNode.containerInfo);
                return null;
            case ContextProvider:
                // Pop provider fiber
                popProvider(workInProgress);
                return null;
            case IncompleteClassComponent:
                // Same as class component case. I put it down here so that the tags are
                // sequential to ensure this switch is compiled to a jump table.
                var _Component = workInProgress.type;
                if (isContextProvider(_Component)) popContext(workInProgress);
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress);
                var renderState = workInProgress.memoizedState;
                if (renderState === null) // We're running in the default, "independent" mode.
                // We don't do anything in this mode.
                return null;
                var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
                var renderedTail = renderState.rendering;
                if (renderedTail === null) {
                    // We just rendered the head.
                    if (!didSuspendAlready) {
                        // This is the first pass. We need to figure out if anything is still
                        // suspended in the rendered set.
                        // If new content unsuspended, but there's still some content that
                        // didn't. Then we need to do a second pass that forces everything
                        // to keep showing their fallbacks.
                        // We might be suspended if something in this render pass suspended, or
                        // something in the previous committed pass suspended. Otherwise,
                        // there's no chance so we can skip the expensive call to
                        // findFirstSuspended.
                        var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);
                        if (!cannotBeSuspended) {
                            var row = workInProgress.child;
                            while(row !== null){
                                var suspended = findFirstSuspended(row);
                                if (suspended !== null) {
                                    didSuspendAlready = true;
                                    workInProgress.flags |= DidCapture;
                                    cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                                    // part of the second pass. In that case nothing will subscribe to
                                    // its thennables. Instead, we'll transfer its thennables to the
                                    // SuspenseList so that it can retry if they resolve.
                                    // There might be multiple of these in the list but since we're
                                    // going to wait for all of them anyway, it doesn't really matter
                                    // which ones gets to ping. In theory we could get clever and keep
                                    // track of how many dependencies remain but it gets tricky because
                                    // in the meantime, we can add/remove/change items and dependencies.
                                    // We might bail out of the loop before finding any but that
                                    // doesn't matter since that means that the other boundaries that
                                    // we did find already has their listeners attached.
                                    var newThennables = suspended.updateQueue;
                                    if (newThennables !== null) {
                                        workInProgress.updateQueue = newThennables;
                                        workInProgress.flags |= Update;
                                    } // Rerender the whole list, but this time, we'll force fallbacks
                                    // to stay in place.
                                    // Reset the effect list before doing the second pass since that's now invalid.
                                    if (renderState.lastEffect === null) workInProgress.firstEffect = null;
                                    workInProgress.lastEffect = renderState.lastEffect; // Reset the child fibers to their original state.
                                    resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                                    // rerender the children.
                                    pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                                    return workInProgress.child;
                                }
                                row = row.sibling;
                            }
                        }
                        if (renderState.tail !== null && now() > getRenderTargetTime()) {
                            // We have already passed our CPU deadline but we still have rows
                            // left in the tail. We'll just give up further attempts to render
                            // the main content and only render fallbacks.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                            markSpawnedWork(SomeRetryLane);
                        }
                    } else cutOffTailIfNeeded(renderState, false);
                     // Next we're going to render the tail.
                } else {
                    // Append the rendered row to the child list.
                    if (!didSuspendAlready) {
                        var _suspended = findFirstSuspended(renderedTail);
                        if (_suspended !== null) {
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
                            // get lost if this row ends up dropped during a second pass.
                            var _newThennables = _suspended.updateQueue;
                            if (_newThennables !== null) {
                                workInProgress.updateQueue = _newThennables;
                                workInProgress.flags |= Update;
                            }
                            cutOffTailIfNeeded(renderState, true); // This might have been modified.
                            if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
                            ) {
                                // We need to delete the row we just rendered.
                                // Reset the effect list to what it was before we rendered this
                                // child. The nested children have already appended themselves.
                                var lastEffect = workInProgress.lastEffect = renderState.lastEffect; // Remove any effects that were appended after this point.
                                if (lastEffect !== null) lastEffect.nextEffect = null;
                                 // We're done.
                                return null;
                            }
                        } else if (// time we have to render. So rendering one more row would likely
                        // exceed it.
                        now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
                            // We have now passed our CPU deadline and we'll just give up further
                            // attempts to render the main content and only render fallbacks.
                            // The assumption is that this is usually faster.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                            markSpawnedWork(SomeRetryLane);
                        }
                    }
                    if (renderState.isBackwards) {
                        // The effect list of the backwards tail will have been added
                        // to the end. This breaks the guarantee that life-cycles fire in
                        // sibling order but that isn't a strong guarantee promised by React.
                        // Especially since these might also just pop in during future commits.
                        // Append to the beginning of the list.
                        renderedTail.sibling = workInProgress.child;
                        workInProgress.child = renderedTail;
                    } else {
                        var previousSibling = renderState.last;
                        if (previousSibling !== null) previousSibling.sibling = renderedTail;
                        else workInProgress.child = renderedTail;
                        renderState.last = renderedTail;
                    }
                }
                if (renderState.tail !== null) {
                    // We still have tail rows to render.
                    // Pop a row.
                    var next = renderState.tail;
                    renderState.rendering = next;
                    renderState.tail = next.sibling;
                    renderState.lastEffect = workInProgress.lastEffect;
                    renderState.renderingStartTime = now();
                    next.sibling = null; // Restore the context.
                    // TODO: We can probably just avoid popping it instead and only
                    // setting it the first time we go from not suspended to suspended.
                    var suspenseContext = suspenseStackCursor.current;
                    if (didSuspendAlready) suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                    else suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                    pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.
                    return next;
                }
                return null;
            case FundamentalComponent:
                break;
            case ScopeComponent:
                break;
            case Block:
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                if (current !== null) {
                    var _nextState = workInProgress.memoizedState;
                    var _prevState = current.memoizedState;
                    var prevIsHidden = _prevState !== null;
                    var nextIsHidden = _nextState !== null;
                    if (prevIsHidden !== nextIsHidden && newProps.mode !== 'unstable-defer-without-hiding') workInProgress.flags |= Update;
                }
                return null;
        }
        throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function unwindWork(workInProgress, renderLanes) {
        switch(workInProgress.tag){
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                var flags = workInProgress.flags;
                if (flags & ShouldCapture) {
                    workInProgress.flags = flags & ~ShouldCapture | DidCapture;
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case HostRoot:
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                var _flags = workInProgress.flags;
                if (!((_flags & DidCapture) === NoFlags)) throw Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue.");
                workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
                return workInProgress;
            case HostComponent:
                // TODO: popHydrationState
                popHostContext(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var _flags2 = workInProgress.flags;
                if (_flags2 & ShouldCapture) {
                    workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
                // caught by a nested boundary. If not, it should bubble through.
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                return null;
            case ContextProvider:
                popProvider(workInProgress);
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                return null;
            default:
                return null;
        }
    }
    function unwindInterruptedWork(interruptedWork) {
        switch(interruptedWork.tag){
            case ClassComponent:
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (childContextTypes !== null && childContextTypes !== undefined) popContext(interruptedWork);
                break;
            case HostRoot:
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                resetWorkInProgressVersions();
                break;
            case HostComponent:
                popHostContext(interruptedWork);
                break;
            case HostPortal:
                popHostContainer(interruptedWork);
                break;
            case SuspenseComponent:
                popSuspenseContext(interruptedWork);
                break;
            case SuspenseListComponent:
                popSuspenseContext(interruptedWork);
                break;
            case ContextProvider:
                popProvider(interruptedWork);
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(interruptedWork);
                break;
        }
    }
    function createCapturedValue(value, source) {
        // If the value is an error, call this function immediately after it is thrown
        // so the stack is accurate.
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source)
        };
    }
    // This module is forked in different environments.
    // By default, return `true` to log errors to the console.
    // Forks can return `false` if this isn't desirable.
    function showErrorDialog(boundary, errorInfo) {
        return true;
    }
    function logCapturedError(boundary, errorInfo) {
        try {
            var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
            // This enables renderers like ReactNative to better manage redbox behavior.
            if (logError === false) return;
            var error = errorInfo.value;
            var source = errorInfo.source;
            var stack = errorInfo.stack;
            var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling
            // `preventDefault()` in window `error` handler.
            // We record this information as an expando on the error.
            if (error != null && error._suppressLogging) {
                if (boundary.tag === ClassComponent) // The error is recoverable and was silenced.
                // Ignore it and don't print the stack addendum.
                // This is handy for testing error boundaries without noise.
                return;
                 // The error is fatal. Since the silencing might have
                // been accidental, we'll surface it anyway.
                // However, the browser would have silenced the original error
                // so we'll print it first, and then print the stack addendum.
                console['error'](error); // Don't transform to our wrapper
            // For a more detailed description of this block, see:
            // https://github.com/facebook/react/pull/13384
            }
            var componentName = source ? getComponentName(source.type) : null;
            var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
            var errorBoundaryMessage;
            var errorBoundaryName = getComponentName(boundary.type);
            if (errorBoundaryName) errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
            else errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
            var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
            // We don't include the original error message and JS stack because the browser
            // has already printed it. Even if the application swallows the error, it is still
            // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
            console['error'](combinedMessage); // Don't transform to our wrapper
        } catch (e) {
            // This method must not throw, or React internal state will get messed up.
            // If console.error is overridden, or logCapturedError() shows a dialog that throws,
            // we want to report this error outside of the normal stack as a last resort.
            // https://github.com/facebook/react/issues/13188
            setTimeout(function() {
                throw e;
            });
        }
    }
    var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;
    function createRootErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.
        update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: null
        };
        var error = errorInfo.value;
        update.callback = function() {
            onUncaughtError(error);
            logCapturedError(fiber, errorInfo);
        };
        return update;
    }
    function createClassErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane);
        update.tag = CaptureUpdate;
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if (typeof getDerivedStateFromError === 'function') {
            var error$1 = errorInfo.value;
            update.payload = function() {
                logCapturedError(fiber, errorInfo);
                return getDerivedStateFromError(error$1);
            };
        }
        var inst = fiber.stateNode;
        if (inst !== null && typeof inst.componentDidCatch === 'function') update.callback = function callback() {
            markFailedErrorBoundaryForHotReloading(fiber);
            if (typeof getDerivedStateFromError !== 'function') {
                // To preserve the preexisting retry behavior of error boundaries,
                // we keep track of which ones already failed during this batch.
                // This gets reset before we yield back to the browser.
                // TODO: Warn in strict mode if getDerivedStateFromError is
                // not defined.
                markLegacyErrorBoundaryAsFailed(this); // Only log here if componentDidCatch is the only error boundary method defined
                logCapturedError(fiber, errorInfo);
            }
            var error$1 = errorInfo.value;
            var stack = errorInfo.stack;
            this.componentDidCatch(error$1, {
                componentStack: stack !== null ? stack : ''
            });
            if (typeof getDerivedStateFromError !== 'function') // If componentDidCatch is the only error boundary method defined,
            // then it needs to call setState to recover from errors.
            // If no state update is scheduled then the boundary will swallow the error.
            {
                if (!includesSomeLane(fiber.lanes, SyncLane)) error1("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentName(fiber.type) || 'Unknown');
            }
        };
        else update.callback = function() {
            markFailedErrorBoundaryForHotReloading(fiber);
        };
        return update;
    }
    function attachPingListener(root, wakeable, lanes) {
        // Attach a listener to the promise to "ping" the root and retry. But only if
        // one does not already exist for the lanes we're currently rendering (which
        // acts like a "thread ID" here).
        var pingCache = root.pingCache;
        var threadIDs;
        if (pingCache === null) {
            pingCache = root.pingCache = new PossiblyWeakMap$1();
            threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
        } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === undefined) {
                threadIDs = new Set();
                pingCache.set(wakeable, threadIDs);
            }
        }
        if (!threadIDs.has(lanes)) {
            // Memoize using the thread ID to prevent redundant listeners.
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);
            wakeable.then(ping, ping);
        }
    }
    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
        // The source fiber did not complete.
        sourceFiber.flags |= Incomplete; // Its effect list is no longer valid.
        sourceFiber.firstEffect = sourceFiber.lastEffect = null;
        if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
            // This is a wakeable.
            var wakeable = value;
            if ((sourceFiber.mode & BlockingMode) === NoMode) {
                // Reset the memoizedState to what it was before we attempted
                // to render it.
                var currentSource = sourceFiber.alternate;
                if (currentSource) {
                    sourceFiber.updateQueue = currentSource.updateQueue;
                    sourceFiber.memoizedState = currentSource.memoizedState;
                    sourceFiber.lanes = currentSource.lanes;
                } else {
                    sourceFiber.updateQueue = null;
                    sourceFiber.memoizedState = null;
                }
            }
            var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext); // Schedule the nearest Suspense to re-render the timed out view.
            var _workInProgress = returnFiber;
            do {
                if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
                    // Found the nearest boundary.
                    // Stash the promise on the boundary fiber. If the boundary times out, we'll
                    // attach another listener to flip the boundary back to its normal state.
                    var wakeables = _workInProgress.updateQueue;
                    if (wakeables === null) {
                        var updateQueue = new Set();
                        updateQueue.add(wakeable);
                        _workInProgress.updateQueue = updateQueue;
                    } else wakeables.add(wakeable);
                     // If the boundary is outside of blocking mode, we should *not*
                    // suspend the commit. Pretend as if the suspended component rendered
                    // null and keep rendering. In the commit phase, we'll schedule a
                    // subsequent synchronous update to re-render the Suspense.
                    //
                    // Note: It doesn't matter whether the component that suspended was
                    // inside a blocking mode tree. If the Suspense is outside of it, we
                    // should *not* suspend the commit.
                    if ((_workInProgress.mode & BlockingMode) === NoMode) {
                        _workInProgress.flags |= DidCapture;
                        sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
                        // But we shouldn't call any lifecycle methods or callbacks. Remove
                        // all lifecycle effect tags.
                        sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                        if (sourceFiber.tag === ClassComponent) {
                            var currentSourceFiber = sourceFiber.alternate;
                            if (currentSourceFiber === null) // This is a new mount. Change the tag so it's not mistaken for a
                            // completed class component. For example, we should not call
                            // componentWillUnmount if it is deleted.
                            sourceFiber.tag = IncompleteClassComponent;
                            else {
                                // When we try rendering again, we should not reuse the current fiber,
                                // since it's known to be in an inconsistent state. Use a force update to
                                // prevent a bail out.
                                var update = createUpdate(NoTimestamp, SyncLane);
                                update.tag = ForceUpdate;
                                enqueueUpdate(sourceFiber, update);
                            }
                        } // The source fiber did not complete. Mark it with Sync priority to
                        // indicate that it still has pending work.
                        sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane); // Exit without suspending.
                        return;
                    } // Confirmed that the boundary is in a concurrent mode tree. Continue
                    // with the normal suspend path.
                    //
                    // After this we'll use a set of heuristics to determine whether this
                    // render pass will run to completion or restart or "suspend" the commit.
                    // The actual logic for this is spread out in different places.
                    //
                    // This first principle is that if we're going to suspend when we complete
                    // a root, then we should also restart if we get an update or ping that
                    // might unsuspend it, and vice versa. The only reason to suspend is
                    // because you think you might want to restart before committing. However,
                    // it doesn't make sense to restart only while in the period we're suspended.
                    //
                    // Restarting too aggressively is also not good because it starves out any
                    // intermediate loading state. So we use heuristics to determine when.
                    // Suspense Heuristics
                    //
                    // If nothing threw a Promise or all the same fallbacks are already showing,
                    // then don't suspend/restart.
                    //
                    // If this is an initial render of a new tree of Suspense boundaries and
                    // those trigger a fallback, then don't suspend/restart. We want to ensure
                    // that we can show the initial loading state as quickly as possible.
                    //
                    // If we hit a "Delayed" case, such as when we'd switch from content back into
                    // a fallback, then we should always suspend/restart. Transitions apply
                    // to this case. If none is defined, JND is used instead.
                    //
                    // If we're already showing a fallback and it gets "retried", allowing us to show
                    // another level, but there's still an inner boundary that would show a fallback,
                    // then we suspend/restart for 500ms since the last time we showed a fallback
                    // anywhere in the tree. This effectively throttles progressive loading into a
                    // consistent train of commits. This also gives us an opportunity to restart to
                    // get to the completed state slightly earlier.
                    //
                    // If there's ambiguity due to batching it's resolved in preference of:
                    // 1) "delayed", 2) "initial render", 3) "retry".
                    //
                    // We want to ensure that a "busy" state doesn't get force committed. We want to
                    // ensure that new initial loading states can commit as soon as possible.
                    attachPingListener(root, wakeable, rootRenderLanes);
                    _workInProgress.flags |= ShouldCapture;
                    _workInProgress.lanes = rootRenderLanes;
                    return;
                } // This boundary already captured during this render. Continue to the next
                // boundary.
                _workInProgress = _workInProgress.return;
            }while (_workInProgress !== null) // No boundary was found. Fallthrough to error mode.
            // TODO: Use invariant so the message is stripped in prod?
            value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.');
        } // We didn't find a boundary that could handle this type of exception. Start
        // over and traverse parent path again, this time treating the exception
        // as an error.
        renderDidError();
        value = createCapturedValue(value, sourceFiber);
        var workInProgress = returnFiber;
        do {
            switch(workInProgress.tag){
                case HostRoot:
                    var _errorInfo = value;
                    workInProgress.flags |= ShouldCapture;
                    var lane = pickArbitraryLane(rootRenderLanes);
                    workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);
                    var _update = createRootErrorUpdate(workInProgress, _errorInfo, lane);
                    enqueueCapturedUpdate(workInProgress, _update);
                    return;
                case ClassComponent:
                    // Capture and retry
                    var errorInfo = value;
                    var ctor = workInProgress.type;
                    var instance = workInProgress.stateNode;
                    if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                        workInProgress.flags |= ShouldCapture;
                        var _lane = pickArbitraryLane(rootRenderLanes);
                        workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state
                        var _update2 = createClassErrorUpdate(workInProgress, errorInfo, _lane);
                        enqueueCapturedUpdate(workInProgress, _update2);
                        return;
                    }
                    break;
            }
            workInProgress = workInProgress.return;
        }while (workInProgress !== null)
    }
    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
    var callComponentWillUnmountWithTimer = function(current, instance) {
        instance.props = current.memoizedProps;
        instance.state = current.memoizedState;
        instance.componentWillUnmount();
    }; // Capture errors so they don't interrupt unmounting.
    function safelyCallComponentWillUnmount(current, instance) {
        invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current, instance);
        if (hasCaughtError()) {
            var unmountError = clearCaughtError();
            captureCommitPhaseError(current, unmountError);
        }
    }
    function safelyDetachRef(current) {
        var ref = current.ref;
        if (ref !== null) {
            if (typeof ref === 'function') {
                invokeGuardedCallback(null, ref, null, null);
                if (hasCaughtError()) {
                    var refError = clearCaughtError();
                    captureCommitPhaseError(current, refError);
                }
            } else ref.current = null;
        }
    }
    function safelyCallDestroy(current, destroy) {
        invokeGuardedCallback(null, destroy, null);
        if (hasCaughtError()) {
            var error = clearCaughtError();
            captureCommitPhaseError(current, error);
        }
    }
    function commitBeforeMutationLifeCycles(current, finishedWork) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
            case Block:
                return;
            case ClassComponent:
                if (finishedWork.flags & Snapshot) {
                    if (current !== null) {
                        var prevProps = current.memoizedProps;
                        var prevState = current.memoizedState;
                        var instance = finishedWork.stateNode; // We could update instance props and state here,
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) error1("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                            if (instance.state !== finishedWork.memoizedState) error1("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                        }
                        var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                        var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                        if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                            didWarnSet.add(finishedWork.type);
                            error1("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentName(finishedWork.type));
                        }
                        instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                    }
                }
                return;
            case HostRoot:
                if (finishedWork.flags & Snapshot) {
                    var root = finishedWork.stateNode;
                    clearContainer(root.containerInfo);
                }
                return;
            case HostComponent:
            case HostText:
            case HostPortal:
            case IncompleteClassComponent:
                // Nothing to do for these component types
                return;
        }
        throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
    function commitHookEffectListUnmount(tag, finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & tag) === tag) {
                    // Unmount
                    var destroy = effect.destroy;
                    effect.destroy = undefined;
                    if (destroy !== undefined) destroy();
                }
                effect = effect.next;
            }while (effect !== firstEffect)
        }
    }
    function commitHookEffectListMount(tag, finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & tag) === tag) {
                    // Mount
                    var create = effect.create;
                    effect.destroy = create();
                    var destroy = effect.destroy;
                    if (destroy !== undefined && typeof destroy !== 'function') {
                        var addendum = void 0;
                        if (destroy === null) addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                        else if (typeof destroy.then === 'function') addendum = "\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                        else addendum = ' You returned: ' + destroy;
                        error1("An effect function must not return anything besides a function, which is used for clean-up.%s", addendum);
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect)
        }
    }
    function schedulePassiveEffects(finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                var _effect = effect, next = _effect.next, tag = _effect.tag;
                if ((tag & Passive$1) !== NoFlags$1 && (tag & HasEffect) !== NoFlags$1) {
                    enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);
                    enqueuePendingPassiveHookEffectMount(finishedWork, effect);
                }
                effect = next;
            }while (effect !== firstEffect)
        }
    }
    function commitLifeCycles(finishedRoot, current, finishedWork, committedLanes) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
            case Block:
                commitHookEffectListMount(Layout | HasEffect, finishedWork);
                schedulePassiveEffects(finishedWork);
                return;
            case ClassComponent:
                var instance = finishedWork.stateNode;
                if (finishedWork.flags & Update) {
                    if (current === null) {
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) error1("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                            if (instance.state !== finishedWork.memoizedState) error1("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                        }
                        instance.componentDidMount();
                    } else {
                        var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
                        var prevState = current.memoizedState; // We could update instance props and state here,
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) error1("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                            if (instance.state !== finishedWork.memoizedState) error1("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                        }
                        instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                    }
                } // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) error1("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                        if (instance.state !== finishedWork.memoizedState) error1("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentName(finishedWork.type) || 'instance');
                    }
                    // but instead we rely on them being set during last render.
                    // TODO: revisit this when we implement resuming.
                    commitUpdateQueue(finishedWork, updateQueue, instance);
                }
                return;
            case HostRoot:
                // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                    var _instance = null;
                    if (finishedWork.child !== null) switch(finishedWork.child.tag){
                        case HostComponent:
                            _instance = getPublicInstance(finishedWork.child.stateNode);
                            break;
                        case ClassComponent:
                            _instance = finishedWork.child.stateNode;
                            break;
                    }
                    commitUpdateQueue(finishedWork, _updateQueue, _instance);
                }
                return;
            case HostComponent:
                var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
                // (eg DOM renderer may schedule auto-focus for inputs and form controls).
                // These effects should only be committed when components are first mounted,
                // aka when there is no current/alternate.
                if (current === null && finishedWork.flags & Update) {
                    var type = finishedWork.type;
                    var props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props);
                }
                return;
            case HostText:
                // We have no life-cycles associated with text.
                return;
            case HostPortal:
                // We have no life-cycles associated with portals.
                return;
            case Profiler:
                var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                var effectDuration = finishedWork.stateNode.effectDuration;
                var commitTime = getCommitTime();
                if (typeof onRender === 'function') onRender(finishedWork.memoizedProps.id, current === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime, finishedRoot.memoizedInteractions);
                return;
            case SuspenseComponent:
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                return;
            case SuspenseListComponent:
            case IncompleteClassComponent:
            case FundamentalComponent:
            case ScopeComponent:
            case OffscreenComponent:
            case LegacyHiddenComponent:
                return;
        }
        throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
    function hideOrUnhideAllChildren(finishedWork, isHidden) {
        // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = finishedWork;
        while(true){
            if (node.tag === HostComponent) {
                var instance = node.stateNode;
                if (isHidden) hideInstance(instance);
                else unhideInstance(node.stateNode, node.memoizedProps);
            } else if (node.tag === HostText) {
                var _instance3 = node.stateNode;
                if (isHidden) hideTextInstance(_instance3);
                else unhideTextInstance(_instance3, node.memoizedProps);
            } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === finishedWork) return;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse;
            switch(finishedWork.tag){
                case HostComponent:
                    instanceToUse = getPublicInstance(instance);
                    break;
                default:
                    instanceToUse = instance;
            } // Moved outside to ensure DCE works with this flag
            if (typeof ref === 'function') ref(instanceToUse);
            else {
                if (!ref.hasOwnProperty('current')) error1("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentName(finishedWork.type));
                ref.current = instanceToUse;
            }
        }
    }
    function commitDetachRef(current) {
        var currentRef = current.ref;
        if (currentRef !== null) {
            if (typeof currentRef === 'function') currentRef(null);
            else currentRef.current = null;
        }
    } // User-originating errors (lifecycles and refs) should not interrupt
    // deletion, so don't let them throw. Host-originating errors should
    // interrupt deletion, so it's okay
    function commitUnmount(finishedRoot, current, renderPriorityLevel) {
        onCommitUnmount(current);
        switch(current.tag){
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
            case Block:
                var updateQueue = current.updateQueue;
                if (updateQueue !== null) {
                    var lastEffect = updateQueue.lastEffect;
                    if (lastEffect !== null) {
                        var firstEffect = lastEffect.next;
                        var effect = firstEffect;
                        do {
                            var _effect2 = effect, destroy = _effect2.destroy, tag = _effect2.tag;
                            if (destroy !== undefined) {
                                if ((tag & Passive$1) !== NoFlags$1) enqueuePendingPassiveHookEffectUnmount(current, effect);
                                else safelyCallDestroy(current, destroy);
                            }
                            effect = effect.next;
                        }while (effect !== firstEffect)
                    }
                }
                return;
            case ClassComponent:
                safelyDetachRef(current);
                var instance = current.stateNode;
                if (typeof instance.componentWillUnmount === 'function') safelyCallComponentWillUnmount(current, instance);
                return;
            case HostComponent:
                safelyDetachRef(current);
                return;
            case HostPortal:
                unmountHostComponents(finishedRoot, current);
                return;
            case FundamentalComponent:
                return;
            case DehydratedFragment:
                return;
            case ScopeComponent:
                return;
        }
    }
    function commitNestedUnmounts(finishedRoot, root, renderPriorityLevel) {
        // While we're inside a removed host node we don't want to call
        // removeChild on the inner nodes because they're removed by the top
        // call anyway. We also want to call componentWillUnmount on all
        // composites before this host node is removed from the tree. Therefore
        // we do an inner loop while we're still inside the host node.
        var node = root;
        while(true){
            commitUnmount(finishedRoot, node); // Visit children because they may contain more composite or host nodes.
            // Skip portals because commitUnmount() currently visits them recursively.
            if (node.child !== null && // If we don't use mutation we drill down into portals here instead.
            node.tag !== HostPortal) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === root) return;
            while(node.sibling === null){
                if (node.return === null || node.return === root) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function detachFiberMutation(fiber) {
        // Cut off the return pointers to disconnect it from the tree. Ideally, we
        // should clear the child pointer of the parent alternate to let this
        // get GC:ed but we don't know which for sure which parent is the current
        // one so we'll settle for GC:ing the subtree of this child. This child
        // itself will be GC:ed when the parent updates the next time.
        // Note: we cannot null out sibling here, otherwise it can cause issues
        // with findDOMNode and how it requires the sibling field to carry out
        // traversal in a later effect. See PR #16820. We now clear the sibling
        // field after effects, see: detachFiberAfterEffects.
        //
        // Don't disconnect stateNode now; it will be detached in detachFiberAfterEffects.
        // It may be required if the current component is an error boundary,
        // and one of its descendants throws while unmounting a passive effect.
        fiber.alternate = null;
        fiber.child = null;
        fiber.dependencies = null;
        fiber.firstEffect = null;
        fiber.lastEffect = null;
        fiber.memoizedProps = null;
        fiber.memoizedState = null;
        fiber.pendingProps = null;
        fiber.return = null;
        fiber.updateQueue = null;
        fiber._debugOwner = null;
    }
    function getHostParentFiber(fiber) {
        var parent = fiber.return;
        while(parent !== null){
            if (isHostParent(parent)) return parent;
            parent = parent.return;
        }
        throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function isHostParent(fiber) {
        return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
    }
    function getHostSibling(fiber) {
        // We're going to search forward into the tree until we find a sibling host
        // node. Unfortunately, if multiple insertions are done in a row we have to
        // search past them. This leads to exponential search for the next sibling.
        // TODO: Find a more efficient way to do this.
        var node = fiber;
        siblings: while(true){
            // If we didn't find anything, let's try the next sibling.
            while(node.sibling === null){
                if (node.return === null || isHostParent(node.return)) // If we pop out of the root or hit the parent the fiber we are the
                // last sibling.
                return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
            while(node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment){
                // If it is not host node and, we might have a host node inside it.
                // Try to search down until we find one.
                if (node.flags & Placement) continue siblings;
                 // If we don't have a child, try the siblings instead.
                // We also skip portals because they are not part of this host tree.
                if (node.child === null || node.tag === HostPortal) continue siblings;
                else {
                    node.child.return = node;
                    node = node.child;
                }
            } // Check if this host node is stable or about to be placed.
            if (!(node.flags & Placement)) // Found it!
            return node.stateNode;
        }
    }
    function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.
        var parent;
        var isContainer;
        var parentStateNode = parentFiber.stateNode;
        switch(parentFiber.tag){
            case HostComponent:
                parent = parentStateNode;
                isContainer = false;
                break;
            case HostRoot:
                parent = parentStateNode.containerInfo;
                isContainer = true;
                break;
            case HostPortal:
                parent = parentStateNode.containerInfo;
                isContainer = true;
                break;
            case FundamentalComponent:
            // eslint-disable-next-line-no-fallthrough
            default:
                throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (parentFiber.flags & ContentReset) {
            // Reset the text content of the parent before doing any insertions
            resetTextContent(parent); // Clear ContentReset from the effect tag
            parentFiber.flags &= ~ContentReset;
        }
        var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        if (isContainer) insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);
        else insertOrAppendPlacementNode(finishedWork, before, parent);
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost || enableFundamentalAPI) {
            var stateNode = isHost ? node.stateNode : node.stateNode.instance;
            if (before) insertInContainerBefore(parent, stateNode, before);
            else appendChildToContainer(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNodeIntoContainer(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    }
    function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost || enableFundamentalAPI) {
            var stateNode = isHost ? node.stateNode : node.stateNode.instance;
            if (before) insertBefore(parent, stateNode, before);
            else appendChild(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNode(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNode(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    }
    function unmountHostComponents(finishedRoot, current, renderPriorityLevel) {
        // We only have the top Fiber that was deleted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = current; // Each iteration, currentParent is populated with node's host parent if not
        // currentParentIsValid.
        var currentParentIsValid = false; // Note: these two variables *must* always be updated together.
        var currentParent;
        var currentParentIsContainer;
        while(true){
            if (!currentParentIsValid) {
                var parent = node.return;
                findParent: while(true){
                    if (!(parent !== null)) throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
                    var parentStateNode = parent.stateNode;
                    switch(parent.tag){
                        case HostComponent:
                            currentParent = parentStateNode;
                            currentParentIsContainer = false;
                            break findParent;
                        case HostRoot:
                            currentParent = parentStateNode.containerInfo;
                            currentParentIsContainer = true;
                            break findParent;
                        case HostPortal:
                            currentParent = parentStateNode.containerInfo;
                            currentParentIsContainer = true;
                            break findParent;
                    }
                    parent = parent.return;
                }
                currentParentIsValid = true;
            }
            if (node.tag === HostComponent || node.tag === HostText) {
                commitNestedUnmounts(finishedRoot, node); // After all the children have unmounted, it is now safe to remove the
                // node from the tree.
                if (currentParentIsContainer) removeChildFromContainer(currentParent, node.stateNode);
                else removeChild(currentParent, node.stateNode);
                 // Don't visit children because we already visited them.
            } else if (node.tag === HostPortal) {
                if (node.child !== null) {
                    // When we go into a portal, it becomes the parent to remove from.
                    // We will reassign it back when we pop the portal on the way up.
                    currentParent = node.stateNode.containerInfo;
                    currentParentIsContainer = true; // Visit children because portals might contain host components.
                    node.child.return = node;
                    node = node.child;
                    continue;
                }
            } else {
                commitUnmount(finishedRoot, node); // Visit children because we may find more host components below.
                if (node.child !== null) {
                    node.child.return = node;
                    node = node.child;
                    continue;
                }
            }
            if (node === current) return;
            while(node.sibling === null){
                if (node.return === null || node.return === current) return;
                node = node.return;
                if (node.tag === HostPortal) // When we go out of the portal, we need to restore the parent.
                // Since we don't keep a stack of them, we will search for it.
                currentParentIsValid = false;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function commitDeletion(finishedRoot, current, renderPriorityLevel) {
        // Recursively delete all host nodes from the parent.
        // Detach refs and call componentWillUnmount() on the whole subtree.
        unmountHostComponents(finishedRoot, current);
        var alternate = current.alternate;
        detachFiberMutation(current);
        if (alternate !== null) detachFiberMutation(alternate);
    }
    function commitWork(current, finishedWork) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
            case Block:
                commitHookEffectListUnmount(Layout | HasEffect, finishedWork);
                return;
            case ClassComponent:
                return;
            case HostComponent:
                var instance = finishedWork.stateNode;
                if (instance != null) {
                    // Commit the work prepared earlier.
                    var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                    // as the newProps. The updatePayload will contain the real change in
                    // this case.
                    var oldProps = current !== null ? current.memoizedProps : newProps;
                    var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.
                    var updatePayload = finishedWork.updateQueue;
                    finishedWork.updateQueue = null;
                    if (updatePayload !== null) commitUpdate(instance, updatePayload, type, oldProps, newProps);
                }
                return;
            case HostText:
                if (!(finishedWork.stateNode !== null)) throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                var textInstance = finishedWork.stateNode;
                var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                // as the newProps. The updatePayload will contain the real change in
                // this case.
                var oldText = current !== null ? current.memoizedProps : newText;
                commitTextUpdate(textInstance, oldText, newText);
                return;
            case HostRoot:
                var _root = finishedWork.stateNode;
                if (_root.hydrate) {
                    // We've just hydrated. No need to hydrate again.
                    _root.hydrate = false;
                    commitHydratedContainer(_root.containerInfo);
                }
                return;
            case Profiler:
                return;
            case SuspenseComponent:
                commitSuspenseComponent(finishedWork);
                attachSuspenseRetryListeners(finishedWork);
                return;
            case SuspenseListComponent:
                attachSuspenseRetryListeners(finishedWork);
                return;
            case IncompleteClassComponent:
                return;
            case FundamentalComponent:
                break;
            case ScopeComponent:
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                var newState = finishedWork.memoizedState;
                var isHidden = newState !== null;
                hideOrUnhideAllChildren(finishedWork, isHidden);
                return;
        }
        throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
    function commitSuspenseComponent(finishedWork) {
        var newState = finishedWork.memoizedState;
        if (newState !== null) {
            markCommitTimeOfFallback();
            // Hide the Offscreen component that contains the primary children. TODO:
            // Ideally, this effect would have been scheduled on the Offscreen fiber
            // itself. That's how unhiding works: the Offscreen component schedules an
            // effect on itself. However, in this case, the component didn't complete,
            // so the fiber was never added to the effect list in the normal path. We
            // could have appended it to the effect list in the Suspense component's
            // second pass, but doing it this way is less complicated. This would be
            // simpler if we got rid of the effect list and traversed the tree, like
            // we're planning to do.
            var primaryChildParent = finishedWork.child;
            hideOrUnhideAllChildren(primaryChildParent, true);
        }
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        var newState = finishedWork.memoizedState;
        if (newState === null) {
            var current = finishedWork.alternate;
            if (current !== null) {
                var prevState = current.memoizedState;
                if (prevState !== null) {
                    var suspenseInstance = prevState.dehydrated;
                    if (suspenseInstance !== null) commitHydratedSuspenseInstance(suspenseInstance);
                }
            }
        }
    }
    function attachSuspenseRetryListeners(finishedWork) {
        // If this boundary just timed out, then it will have a set of wakeables.
        // For each wakeable, attach a listener so that when it resolves, React
        // attempts to re-render the boundary in the primary (pre-timeout) state.
        var wakeables = finishedWork.updateQueue;
        if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            wakeables.forEach(function(wakeable) {
                // Memoize using the boundary fiber to prevent redundant listeners.
                var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
                if (!retryCache.has(wakeable)) {
                    if (wakeable.__reactDoNotTraceInteractions !== true) retry = tracing.unstable_wrap(retry);
                    retryCache.add(wakeable);
                    wakeable.then(retry, retry);
                }
            });
        }
    } // This function detects when a Suspense boundary goes from visible to hidden.
    // It returns false if the boundary is already hidden.
    // TODO: Use an effect tag.
    function isSuspenseBoundaryBeingHidden(current, finishedWork) {
        if (current !== null) {
            var oldState = current.memoizedState;
            if (oldState === null || oldState.dehydrated !== null) {
                var newState = finishedWork.memoizedState;
                return newState !== null && newState.dehydrated === null;
            }
        }
        return false;
    }
    function commitResetTextContent(current) {
        resetTextContent(current.stateNode);
    }
    var COMPONENT_TYPE = 0;
    var HAS_PSEUDO_CLASS_TYPE = 1;
    var ROLE_TYPE = 2;
    var TEST_NAME_TYPE = 3;
    var TEXT_TYPE = 4;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor$1 = Symbol.for;
        COMPONENT_TYPE = symbolFor$1('selector.component');
        HAS_PSEUDO_CLASS_TYPE = symbolFor$1('selector.has_pseudo_class');
        ROLE_TYPE = symbolFor$1('selector.role');
        TEST_NAME_TYPE = symbolFor$1('selector.test_id');
        TEXT_TYPE = symbolFor$1('selector.text');
    }
    var commitHooks = [];
    function onCommitRoot$1() {
        commitHooks.forEach(function(commitHook) {
            return commitHook();
        });
    }
    var ceil = Math.ceil;
    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
    var NoContext = /*             */ 0;
    var BatchedContext = /*               */ 1;
    var EventContext = /*                 */ 2;
    var DiscreteEventContext = /*         */ 4;
    var LegacyUnbatchedContext = /*       */ 8;
    var RenderContext = /*                */ 16;
    var CommitContext = /*                */ 32;
    var RetryAfterError = /*       */ 64;
    var RootIncomplete = 0;
    var RootFatalErrored = 1;
    var RootErrored = 2;
    var RootSuspended = 3;
    var RootSuspendedWithDelay = 4;
    var RootCompleted = 5; // Describes where we are in the React execution stack
    var executionContext = NoContext; // The root we're working on
    var workInProgressRoot = null; // The fiber we're working on
    var workInProgress1 = null; // The lanes we're rendering
    var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
    // This is a superset of the lanes we started working on at the root. The only
    // case where it's different from `workInProgressRootRenderLanes` is when we
    // enter a subtree that is hidden and needs to be unhidden: Suspense and
    // Offscreen component.
    //
    // Most things in the work loop should deal with workInProgressRootRenderLanes.
    // Most things in begin/complete phases should deal with subtreeRenderLanes.
    var subtreeRenderLanes1 = NoLanes;
    var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.
    var workInProgressRootExitStatus = RootIncomplete; // A fatal error, if one is thrown
    var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
    // slightly different than `renderLanes` because `renderLanes` can change as you
    // enter and exit an Offscreen tree. This value is the combination of all render
    // lanes for the entire render phase.
    var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
    // includes unprocessed updates, not work in bailed out children.
    var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.
    var workInProgressRootUpdatedLanes = NoLanes; // Lanes that were pinged (in an interleaved event) during this render.
    var workInProgressRootPingedLanes = NoLanes;
    var mostRecentlyUpdatedRoot = null; // The most recent time we committed a fallback. This lets us ensure a train
    // model where we don't commit new loading states in too quick succession.
    var globalMostRecentFallbackTime = 0;
    var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
    // more and prefer CPU suspense heuristics instead.
    var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
    // suspense heuristics and opt out of rendering more content.
    var RENDER_TIMEOUT_MS = 500;
    function resetRenderTimer() {
        workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
    }
    function getRenderTargetTime() {
        return workInProgressRootRenderTargetTime;
    }
    var nextEffect = null;
    var hasUncaughtError = false;
    var firstUncaughtError = null;
    var legacyErrorBoundariesThatAlreadyFailed = null;
    var rootDoesHavePassiveEffects = false;
    var rootWithPendingPassiveEffects = null;
    var pendingPassiveEffectsRenderPriority = NoPriority$1;
    var pendingPassiveEffectsLanes = NoLanes;
    var pendingPassiveHookEffectsMount = [];
    var pendingPassiveHookEffectsUnmount = [];
    var rootsWithPendingDiscreteUpdates = null; // Use these to prevent an infinite loop of nested updates
    var NESTED_UPDATE_LIMIT = 50;
    var nestedUpdateCount = 0;
    var rootWithNestedUpdates = null;
    var NESTED_PASSIVE_UPDATE_LIMIT = 50;
    var nestedPassiveUpdateCount = 0; // Marks the need to reschedule pending interactions at these lanes
    // during the commit phase. This enables them to be traced across components
    // that spawn new work during render. E.g. hidden boundaries, suspended SSR
    // hydration or SuspenseList.
    // TODO: Can use a bitmask instead of an array
    var spawnedWorkDuringRender = null; // If two updates are scheduled within the same event, we should treat their
    // event times as simultaneous, even if the actual clock time has advanced
    // between the first and second call.
    var currentEventTime = NoTimestamp;
    var currentEventWipLanes = NoLanes;
    var currentEventPendingLanes = NoLanes; // Dev only flag that tracks if passive effects are currently being flushed.
    // We warn about state updates for unmounted components differently in this case.
    var isFlushingPassiveEffects = false;
    var focusedInstanceHandle = null;
    var shouldFireAfterActiveInstanceBlur = false;
    function getWorkInProgressRoot() {
        return workInProgressRoot;
    }
    function requestEventTime() {
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) // We're inside React, so it's fine to read the actual time.
        return now();
         // We're not inside React, so we may be in the middle of a browser event.
        if (currentEventTime !== NoTimestamp) // Use the same start time for all updates until we enter React again.
        return currentEventTime;
         // This is the first update since React yielded. Compute a new start time.
        currentEventTime = now();
        return currentEventTime;
    }
    function requestUpdateLane(fiber) {
        // Special cases
        var mode = fiber.mode;
        if ((mode & BlockingMode) === NoMode) return SyncLane;
        else if ((mode & ConcurrentMode) === NoMode) return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
         // The algorithm for assigning an update to a lane should be stable for all
        // updates at the same priority within the same event. To do this, the inputs
        // to the algorithm must be the same. For example, we use the `renderLanes`
        // to avoid choosing a lane that is already in the middle of rendering.
        //
        // However, the "included" lanes could be mutated in between updates in the
        // same event, like if you perform an update inside `flushSync`. Or any other
        // code path that might call `prepareFreshStack`.
        //
        // The trick we use is to cache the first of each of these inputs within an
        // event. Then reset the cached values once we can be sure the event is over.
        // Our heuristic for that is whenever we enter a concurrent work loop.
        //
        // We'll do the same for `currentEventPendingLanes` below.
        if (currentEventWipLanes === NoLanes) currentEventWipLanes = workInProgressRootIncludedLanes;
        var isTransition = requestCurrentTransition() !== NoTransition;
        if (isTransition) {
            if (currentEventPendingLanes !== NoLanes) currentEventPendingLanes = mostRecentlyUpdatedRoot !== null ? mostRecentlyUpdatedRoot.pendingLanes : NoLanes;
            return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);
        } // TODO: Remove this dependency on the Scheduler priority.
        // To do that, we're replacing it with an update lane priority.
        var schedulerPriority = getCurrentPriorityLevel(); // The old behavior was using the priority level of the Scheduler.
        // This couples React to the Scheduler internals, so we're replacing it
        // with the currentUpdateLanePriority above. As an example of how this
        // could be problematic, if we're not inside `Scheduler.runWithPriority`,
        // then we'll get the priority of the current running Scheduler task,
        // which is probably not what we want.
        var lane;
        if ((executionContext & DiscreteEventContext) !== NoContext && schedulerPriority === UserBlockingPriority$2) lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);
        else {
            var schedulerLanePriority = schedulerPriorityToLanePriority(schedulerPriority);
            lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);
        }
        return lane;
    }
    function requestRetryLane(fiber) {
        // This is a fork of `requestUpdateLane` designed specifically for Suspense
        // "retries" — a special update that attempts to flip a Suspense boundary
        // from its placeholder state to its primary/resolved state.
        // Special cases
        var mode = fiber.mode;
        if ((mode & BlockingMode) === NoMode) return SyncLane;
        else if ((mode & ConcurrentMode) === NoMode) return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
         // See `requestUpdateLane` for explanation of `currentEventWipLanes`
        if (currentEventWipLanes === NoLanes) currentEventWipLanes = workInProgressRootIncludedLanes;
        return findRetryLane(currentEventWipLanes);
    }
    function scheduleUpdateOnFiber(fiber, lane, eventTime) {
        checkForNestedUpdates();
        warnAboutRenderPhaseUpdatesInDEV(fiber);
        var root = markUpdateLaneFromFiberToRoot(fiber, lane);
        if (root === null) {
            warnAboutUpdateOnUnmountedFiberInDEV(fiber);
            return null;
        } // Mark that the root has a pending update.
        markRootUpdated(root, lane, eventTime);
        if (root === workInProgressRoot) {
            workInProgressRootUpdatedLanes = mergeLanes(workInProgressRootUpdatedLanes, lane);
            if (workInProgressRootExitStatus === RootSuspendedWithDelay) // The root already suspended with a delay, which means this render
            // definitely won't finish. Since we have a new update, let's mark it as
            // suspended now, right before marking the incoming update. This has the
            // effect of interrupting the current render and switching to the update.
            // TODO: Make sure this doesn't override pings that happen while we've
            // already started rendering.
            markRootSuspended$1(root, workInProgressRootRenderLanes);
        } // TODO: requestUpdateLanePriority also reads the priority. Pass the
        // priority as an argument to that function and this one.
        var priorityLevel = getCurrentPriorityLevel();
        if (lane === SyncLane) {
            if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & (RenderContext | CommitContext)) === NoContext) {
                // Register pending interactions on the root to avoid losing traced interaction data.
                schedulePendingInteractions(root, lane); // This is a legacy edge case. The initial mount of a ReactDOM.render-ed
                // root inside of batchedUpdates should be synchronous, but layout updates
                // should be deferred until the end of the batch.
                performSyncWorkOnRoot(root);
            } else {
                ensureRootIsScheduled(root, eventTime);
                schedulePendingInteractions(root, lane);
                if (executionContext === NoContext) {
                    // Flush the synchronous work now, unless we're already working or inside
                    // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
                    // scheduleCallbackForFiber to preserve the ability to schedule a callback
                    // without immediately flushing it. We only do this for user-initiated
                    // updates, to preserve historical behavior of legacy mode.
                    resetRenderTimer();
                    flushSyncCallbackQueue();
                }
            }
        } else {
            // Schedule a discrete update but only if it's not Sync.
            if ((executionContext & DiscreteEventContext) !== NoContext && // discrete, even inside a discrete event.
            (priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority$1)) {
                // This is the result of a discrete event. Track the lowest priority
                // discrete update per root so we can flush them early, if needed.
                if (rootsWithPendingDiscreteUpdates === null) rootsWithPendingDiscreteUpdates = new Set([
                    root
                ]);
                else rootsWithPendingDiscreteUpdates.add(root);
            } // Schedule other updates after in case the callback is sync.
            ensureRootIsScheduled(root, eventTime);
            schedulePendingInteractions(root, lane);
        } // We use this when assigning a lane for a transition inside
        // `requestUpdateLane`. We assume it's the same as the root being updated,
        // since in the common case of a single root app it probably is. If it's not
        // the same root, then it's not a huge deal, we just might batch more stuff
        // together more than necessary.
        mostRecentlyUpdatedRoot = root;
    } // This is split into a separate function so we can mark a fiber with pending
    // work without treating it as a typical update that originates from an event;
    // e.g. retrying a Suspense boundary isn't an update, but it does schedule work
    // on a fiber.
    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
        // Update the source fiber's lanes
        sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
        var alternate = sourceFiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, lane);
        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        var node = sourceFiber;
        var parent = sourceFiber.return;
        while(parent !== null){
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            else if ((parent.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            node = parent;
            parent = parent.return;
        }
        if (node.tag === HostRoot) {
            var root = node.stateNode;
            return root;
        } else return null;
    } // Use this function to schedule a task for a root. There's only one task per
    // root; if a task was already scheduled, we'll check to make sure the priority
    // of the existing task is the same as the priority of the next level that the
    // root has work on. This function is called on every update, and right before
    // exiting a task.
    function ensureRootIsScheduled(root, currentTime) {
        var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
        // expired so we know to work on those next.
        markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.
        var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes); // This returns the priority level computed during the `getNextLanes` call.
        var newCallbackPriority = returnNextLanesPriority();
        if (nextLanes === NoLanes) {
            // Special case: There's nothing to work on.
            if (existingCallbackNode !== null) {
                cancelCallback(existingCallbackNode);
                root.callbackNode = null;
                root.callbackPriority = NoLanePriority;
            }
            return;
        } // Check if there's an existing task. We may be able to reuse it.
        if (existingCallbackNode !== null) {
            var existingCallbackPriority = root.callbackPriority;
            if (existingCallbackPriority === newCallbackPriority) // The priority hasn't changed. We can reuse the existing task. Exit.
            return;
             // The priority changed. Cancel the existing callback. We'll schedule a new
            // one below.
            cancelCallback(existingCallbackNode);
        } // Schedule a new callback.
        var newCallbackNode;
        if (newCallbackPriority === SyncLanePriority) // Special case: Sync React callbacks are scheduled on a special
        // internal queue
        newCallbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
        else if (newCallbackPriority === SyncBatchedLanePriority) newCallbackNode = scheduleCallback(ImmediatePriority$1, performSyncWorkOnRoot.bind(null, root));
        else {
            var schedulerPriorityLevel = lanePriorityToSchedulerPriority(newCallbackPriority);
            newCallbackNode = scheduleCallback(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
        }
        root.callbackPriority = newCallbackPriority;
        root.callbackNode = newCallbackNode;
    } // This is the entry point for every concurrent task, i.e. anything that
    // goes through Scheduler.
    function performConcurrentWorkOnRoot(root) {
        // Since we know we're in a React event, we can clear the current
        // event time. The next update will compute a new event time.
        currentEventTime = NoTimestamp;
        currentEventWipLanes = NoLanes;
        currentEventPendingLanes = NoLanes;
        if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) throw Error("Should not already be working.");
         // Flush any pending passive effects before deciding which lanes to work on,
        // in case they schedule additional work.
        var originalCallbackNode = root.callbackNode;
        var didFlushPassiveEffects = flushPassiveEffects();
        if (didFlushPassiveEffects) {
            // Something in the passive effect phase may have canceled the current task.
            // Check if the task node for this root was changed.
            if (root.callbackNode !== originalCallbackNode) // The current task was canceled. Exit. We don't need to call
            // `ensureRootIsScheduled` because the check above implies either that
            // there's a new task, or that there's no remaining work on this root.
            return null;
        } // Determine the next expiration time to work on, using the fields stored
        // on the root.
        var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (lanes === NoLanes) // Defensive coding. This is never expected to happen.
        return null;
        var exitStatus = renderRootConcurrent(root, lanes);
        if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) // The render included lanes that were updated during the render phase.
        // For example, when unhiding a hidden tree, we include all the lanes
        // that were previously skipped when the tree was hidden. That set of
        // lanes is a superset of the lanes we started rendering with.
        //
        // So we'll throw out the current work and restart.
        prepareFreshStack(root, NoLanes);
        else if (exitStatus !== RootIncomplete) {
            if (exitStatus === RootErrored) {
                executionContext |= RetryAfterError; // If an error occurred during hydration,
                // discard server response and fall back to client side render.
                if (root.hydrate) {
                    root.hydrate = false;
                    clearContainer(root.containerInfo);
                } // If something threw an error, try rendering one more time. We'll render
                // synchronously to block concurrent data mutations, and we'll includes
                // all pending updates are included. If it still fails after the second
                // attempt, we'll give up and commit the resulting tree.
                lanes = getLanesToRetrySynchronouslyOnError(root);
                if (lanes !== NoLanes) exitStatus = renderRootSync(root, lanes);
            }
            if (exitStatus === RootFatalErrored) {
                var fatalError = workInProgressRootFatalError;
                prepareFreshStack(root, NoLanes);
                markRootSuspended$1(root, lanes);
                ensureRootIsScheduled(root, now());
                throw fatalError;
            } // We now have a consistent tree. The next step is either to commit it,
            // or, if something suspended, wait to commit it after a timeout.
            var finishedWork = root.current.alternate;
            root.finishedWork = finishedWork;
            root.finishedLanes = lanes;
            finishConcurrentRender(root, exitStatus, lanes);
        }
        ensureRootIsScheduled(root, now());
        if (root.callbackNode === originalCallbackNode) // The task node scheduled for this root is the same one that's
        // currently executed. Need to return a continuation.
        return performConcurrentWorkOnRoot.bind(null, root);
        return null;
    }
    function finishConcurrentRender(root, exitStatus, lanes) {
        switch(exitStatus){
            case RootIncomplete:
            case RootFatalErrored:
                throw Error("Root did not complete. This is a bug in React.");
            // Flow knows about invariant, so it complains if I add a break
            // statement, but eslint doesn't know about invariant, so it complains
            // if I do. eslint-disable-next-line no-fallthrough
            case RootErrored:
                // We should have already attempted to retry this tree. If we reached
                // this point, it errored again. Commit it.
                commitRoot(root);
                break;
            case RootSuspended:
                markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
                // should immediately commit it or wait a bit.
                if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {
                    // This render only included retries, no updates. Throttle committing
                    // retries so that we don't show too many loading states too quickly.
                    var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.
                    if (msUntilTimeout > 10) {
                        var nextLanes = getNextLanes(root, NoLanes);
                        if (nextLanes !== NoLanes) break;
                        var suspendedLanes = root.suspendedLanes;
                        if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                            // We should prefer to render the fallback of at the last
                            // suspended level. Ping the last suspended level to try
                            // rendering it again.
                            // FIXME: What if the suspended lanes are Idle? Should not restart.
                            var eventTime = requestEventTime();
                            markRootPinged(root, suspendedLanes);
                            break;
                        } // The render is suspended, it hasn't timed out, and there's no
                        // lower priority work to do. Instead of committing the fallback
                        // immediately, wait for more data to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);
                        break;
                    }
                } // The work expired. Commit immediately.
                commitRoot(root);
                break;
            case RootSuspendedWithDelay:
                markRootSuspended$1(root, lanes);
                if (includesOnlyTransitions(lanes)) break;
                if (!shouldForceFlushFallbacksInDEV()) {
                    // This is not a transition, but we did trigger an avoided state.
                    // Schedule a placeholder to display after a short delay, using the Just
                    // Noticeable Difference.
                    // TODO: Is the JND optimization worth the added complexity? If this is
                    // the only reason we track the event time, then probably not.
                    // Consider removing.
                    var mostRecentEventTime = getMostRecentEventTime(root, lanes);
                    var eventTimeMs = mostRecentEventTime;
                    var timeElapsedMs = now() - eventTimeMs;
                    var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.
                    if (_msUntilTimeout > 10) {
                        // Instead of committing the fallback immediately, wait for more data
                        // to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout);
                        break;
                    }
                } // Commit the placeholder.
                commitRoot(root);
                break;
            case RootCompleted:
                // The work completed. Ready to commit.
                commitRoot(root);
                break;
            default:
                throw Error("Unknown root exit status.");
        }
    }
    function markRootSuspended$1(root, suspendedLanes) {
        // When suspending, we should always exclude lanes that were pinged or (more
        // rarely, since we try to avoid it) updated during the render phase.
        // TODO: Lol maybe there's a better way to factor this besides this
        // obnoxiously named function :)
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);
        markRootSuspended(root, suspendedLanes);
    } // This is the entry point for synchronous tasks that don't go
    // through Scheduler
    function performSyncWorkOnRoot(root) {
        if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) throw Error("Should not already be working.");
        flushPassiveEffects();
        var lanes;
        var exitStatus;
        if (root === workInProgressRoot && includesSomeLane(root.expiredLanes, workInProgressRootRenderLanes)) {
            // There's a partial tree, and at least one of its lanes has expired. Finish
            // rendering it before rendering the rest of the expired work.
            lanes = workInProgressRootRenderLanes;
            exitStatus = renderRootSync(root, lanes);
            if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
                // The render included lanes that were updated during the render phase.
                // For example, when unhiding a hidden tree, we include all the lanes
                // that were previously skipped when the tree was hidden. That set of
                // lanes is a superset of the lanes we started rendering with.
                //
                // Note that this only happens when part of the tree is rendered
                // concurrently. If the whole tree is rendered synchronously, then there
                // are no interleaved events.
                lanes = getNextLanes(root, lanes);
                exitStatus = renderRootSync(root, lanes);
            }
        } else {
            lanes = getNextLanes(root, NoLanes);
            exitStatus = renderRootSync(root, lanes);
        }
        if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
            executionContext |= RetryAfterError; // If an error occurred during hydration,
            // discard server response and fall back to client side render.
            if (root.hydrate) {
                root.hydrate = false;
                clearContainer(root.containerInfo);
            } // If something threw an error, try rendering one more time. We'll render
            // synchronously to block concurrent data mutations, and we'll includes
            // all pending updates are included. If it still fails after the second
            // attempt, we'll give up and commit the resulting tree.
            lanes = getLanesToRetrySynchronouslyOnError(root);
            if (lanes !== NoLanes) exitStatus = renderRootSync(root, lanes);
        }
        if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root, NoLanes);
            markRootSuspended$1(root, lanes);
            ensureRootIsScheduled(root, now());
            throw fatalError;
        } // We now have a consistent tree. Because this is a sync render, we
        // will commit it even if something suspended.
        var finishedWork = root.current.alternate;
        root.finishedWork = finishedWork;
        root.finishedLanes = lanes;
        commitRoot(root); // Before exiting, make sure there's a callback scheduled for the next
        // pending level.
        ensureRootIsScheduled(root, now());
        return null;
    }
    function flushDiscreteUpdates() {
        // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.
        // However, `act` uses `batchedUpdates`, so there's no way to distinguish
        // those two cases. Need to fix this before exposing flushDiscreteUpdates
        // as a public API.
        if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
            if ((executionContext & RenderContext) !== NoContext) error1("unstable_flushDiscreteUpdates: Cannot flush updates when React is already rendering.");
            // This is probably a nested event dispatch triggered by a lifecycle/effect,
            // like `el.focus()`. Exit.
            return;
        }
        flushPendingDiscreteUpdates(); // If the discrete updates scheduled passive effects, flush them now so that
        // they fire before the next serial event.
        flushPassiveEffects();
    }
    function flushPendingDiscreteUpdates() {
        if (rootsWithPendingDiscreteUpdates !== null) {
            // For each root with pending discrete updates, schedule a callback to
            // immediately flush them.
            var roots = rootsWithPendingDiscreteUpdates;
            rootsWithPendingDiscreteUpdates = null;
            roots.forEach(function(root) {
                markDiscreteUpdatesExpired(root);
                ensureRootIsScheduled(root, now());
            });
        } // Now flush the immediate queue.
        flushSyncCallbackQueue();
    }
    function batchedUpdates$1(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        try {
            return fn(a);
        } finally{
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
                // Flush the immediate callbacks that were scheduled during this batch
                resetRenderTimer();
                flushSyncCallbackQueue();
            }
        }
    }
    function batchedEventUpdates$1(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext |= EventContext;
        try {
            return fn(a);
        } finally{
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
                // Flush the immediate callbacks that were scheduled during this batch
                resetRenderTimer();
                flushSyncCallbackQueue();
            }
        }
    }
    function discreteUpdates$1(fn, a, b, c, d) {
        var prevExecutionContext = executionContext;
        executionContext |= DiscreteEventContext;
        try {
            return runWithPriority$1(UserBlockingPriority$2, fn.bind(null, a, b, c, d));
        } finally{
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
                // Flush the immediate callbacks that were scheduled during this batch
                resetRenderTimer();
                flushSyncCallbackQueue();
            }
        }
    }
    function unbatchedUpdates(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext &= ~BatchedContext;
        executionContext |= LegacyUnbatchedContext;
        try {
            return fn(a);
        } finally{
            executionContext = prevExecutionContext;
            if (executionContext === NoContext) {
                // Flush the immediate callbacks that were scheduled during this batch
                resetRenderTimer();
                flushSyncCallbackQueue();
            }
        }
    }
    function flushSync(fn, a) {
        var prevExecutionContext = executionContext;
        if ((prevExecutionContext & (RenderContext | CommitContext)) !== NoContext) {
            error1("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
            return fn(a);
        }
        executionContext |= BatchedContext;
        try {
            if (fn) return runWithPriority$1(ImmediatePriority$1, fn.bind(null, a));
            else return undefined;
        } finally{
            executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
            // Note that this will happen even if batchedUpdates is higher up
            // the stack.
            flushSyncCallbackQueue();
        }
    }
    function pushRenderLanes(fiber, lanes) {
        push(subtreeRenderLanesCursor, subtreeRenderLanes1, fiber);
        subtreeRenderLanes1 = mergeLanes(subtreeRenderLanes1, lanes);
        workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
    }
    function popRenderLanes(fiber) {
        subtreeRenderLanes1 = subtreeRenderLanesCursor.current;
        pop(subtreeRenderLanesCursor, fiber);
    }
    function prepareFreshStack(root, lanes) {
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        var timeoutHandle = root.timeoutHandle;
        if (timeoutHandle !== noTimeout) {
            // The root previous suspended and scheduled a timeout to commit a fallback
            // state. Now that we have additional work, cancel the timeout.
            root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
            cancelTimeout(timeoutHandle);
        }
        if (workInProgress1 !== null) {
            var interruptedWork = workInProgress1.return;
            while(interruptedWork !== null){
                unwindInterruptedWork(interruptedWork);
                interruptedWork = interruptedWork.return;
            }
        }
        workInProgressRoot = root;
        workInProgress1 = createWorkInProgress(root.current, null);
        workInProgressRootRenderLanes = subtreeRenderLanes1 = workInProgressRootIncludedLanes = lanes;
        workInProgressRootExitStatus = RootIncomplete;
        workInProgressRootFatalError = null;
        workInProgressRootSkippedLanes = NoLanes;
        workInProgressRootUpdatedLanes = NoLanes;
        workInProgressRootPingedLanes = NoLanes;
        spawnedWorkDuringRender = null;
        ReactStrictModeWarnings.discardPendingWarnings();
    }
    function handleError(root, thrownValue) {
        do {
            var erroredWork = workInProgress1;
            try {
                // Reset module-level state that was set during the render phase.
                resetContextDependencies();
                resetHooksAfterThrow();
                resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
                // separate issue. Write a regression test using string refs.
                ReactCurrentOwner$2.current = null;
                if (erroredWork === null || erroredWork.return === null) {
                    // Expected to be working on a non-root fiber. This is a fatal error
                    // because there's no ancestor that can handle it; the root is
                    // supposed to capture all errors that weren't caught by an error
                    // boundary.
                    workInProgressRootExitStatus = RootFatalErrored;
                    workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
                    // sibling, or the parent if there are no siblings. But since the root
                    // has no siblings nor a parent, we set it to null. Usually this is
                    // handled by `completeUnitOfWork` or `unwindWork`, but since we're
                    // intentionally not calling those, we need set it here.
                    // TODO: Consider calling `unwindWork` to pop the contexts.
                    workInProgress1 = null;
                    return;
                }
                if (enableProfilerTimer && erroredWork.mode & ProfileMode) // Record the time spent rendering before an error was thrown. This
                // avoids inaccurate Profiler durations in the case of a
                // suspended render.
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
                throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
                completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
                // Something in the return path also threw.
                thrownValue = yetAnotherThrownValue;
                if (workInProgress1 === erroredWork && erroredWork !== null) {
                    // If this boundary has already errored, then we had trouble processing
                    // the error. Bubble it to the next boundary.
                    erroredWork = erroredWork.return;
                    workInProgress1 = erroredWork;
                } else erroredWork = workInProgress1;
                continue;
            } // Return to the normal work loop.
            return;
        }while (true)
    }
    function pushDispatcher() {
        var prevDispatcher = ReactCurrentDispatcher$2.current;
        ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
        if (prevDispatcher === null) // The React isomorphic package does not include a default dispatcher.
        // Instead the first renderer will lazily attach one, in order to give
        // nicer error messages.
        return ContextOnlyDispatcher;
        else return prevDispatcher;
    }
    function popDispatcher(prevDispatcher) {
        ReactCurrentDispatcher$2.current = prevDispatcher;
    }
    function pushInteractions(root) {
        var prevInteractions = tracing.__interactionsRef.current;
        tracing.__interactionsRef.current = root.memoizedInteractions;
        return prevInteractions;
    }
    function popInteractions(prevInteractions) {
        tracing.__interactionsRef.current = prevInteractions;
    }
    function markCommitTimeOfFallback() {
        globalMostRecentFallbackTime = now();
    }
    function markSkippedUpdateLanes(lane) {
        workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
    }
    function renderDidSuspend() {
        if (workInProgressRootExitStatus === RootIncomplete) workInProgressRootExitStatus = RootSuspended;
    }
    function renderDidSuspendDelayIfPossible() {
        if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
         // Check if there are updates that we skipped tree that might have unblocked
        // this render.
        if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootUpdatedLanes))) // Mark the current render as suspended so that we switch to working on
        // the updates that were skipped. Usually we only suspend at the end of
        // the render phase.
        // TODO: We should probably always mark the root as suspended immediately
        // (inside this function), since by suspending at the end of the render
        // phase introduces a potential mistake where we suspend lanes that were
        // pinged or updated while we were rendering.
        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
    }
    function renderDidError() {
        if (workInProgressRootExitStatus !== RootCompleted) workInProgressRootExitStatus = RootErrored;
    } // Called during render to determine if anything has suspended.
    // Returns false if we're not sure.
    function renderHasNotSuspendedYet() {
        // If something errored or completed, we can't really be sure,
        // so those are false.
        return workInProgressRootExitStatus === RootIncomplete;
    }
    function renderRootSync(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            prepareFreshStack(root, lanes);
            startWorkOnPendingInteractions(root, lanes);
        }
        var prevInteractions = pushInteractions(root);
        for(;;)try {
            workLoopSync();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        popInteractions(prevInteractions);
        executionContext = prevExecutionContext;
        popDispatcher(prevDispatcher);
        if (workInProgress1 !== null) throw Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
        workInProgressRoot = null;
        workInProgressRootRenderLanes = NoLanes;
        return workInProgressRootExitStatus;
    } // The work loop is an extremely hot path. Tell Closure not to inline it.
    /** @noinline */ function workLoopSync() {
        // Already timed out, so perform work without checking if we need to yield.
        while(workInProgress1 !== null)performUnitOfWork(workInProgress1);
    }
    function renderRootConcurrent(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            resetRenderTimer();
            prepareFreshStack(root, lanes);
            startWorkOnPendingInteractions(root, lanes);
        }
        var prevInteractions = pushInteractions(root);
        for(;;)try {
            workLoopConcurrent();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        popInteractions(prevInteractions);
        popDispatcher(prevDispatcher);
        executionContext = prevExecutionContext;
        if (workInProgress1 !== null) return RootIncomplete;
        else {
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes; // Return the final exit status.
            return workInProgressRootExitStatus;
        }
    }
    /** @noinline */ function workLoopConcurrent() {
        // Perform work until Scheduler asks us to yield
        while(workInProgress1 !== null && !shouldYield())performUnitOfWork(workInProgress1);
    }
    function performUnitOfWork(unitOfWork) {
        // The current, flushed, state of this fiber is the alternate. Ideally
        // nothing should rely on this, but relying on it here means that we don't
        // need an additional field on the work in progress.
        var current = unitOfWork.alternate;
        setCurrentFiber(unitOfWork);
        var next;
        if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current, unitOfWork, subtreeRenderLanes1);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
        } else next = beginWork$1(current, unitOfWork, subtreeRenderLanes1);
        resetCurrentFiber();
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        if (next === null) // If this doesn't spawn new work, complete the current work.
        completeUnitOfWork(unitOfWork);
        else workInProgress1 = next;
        ReactCurrentOwner$2.current = null;
    }
    function completeUnitOfWork(unitOfWork) {
        // Attempt to complete the current unit of work, then move to the next
        // sibling. If there are no more siblings, return to the parent fiber.
        var completedWork = unitOfWork;
        do {
            // The current, flushed, state of this fiber is the alternate. Ideally
            // nothing should rely on this, but relying on it here means that we don't
            // need an additional field on the work in progress.
            var current = completedWork.alternate;
            var returnFiber = completedWork.return; // Check if the work completed or if something threw.
            if ((completedWork.flags & Incomplete) === NoFlags) {
                setCurrentFiber(completedWork);
                var next = void 0;
                if ((completedWork.mode & ProfileMode) === NoMode) next = completeWork(current, completedWork, subtreeRenderLanes1);
                else {
                    startProfilerTimer(completedWork);
                    next = completeWork(current, completedWork, subtreeRenderLanes1); // Update render duration assuming we didn't error.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                }
                resetCurrentFiber();
                if (next !== null) {
                    // Completing this fiber spawned new work. Work on that next.
                    workInProgress1 = next;
                    return;
                }
                resetChildLanes(completedWork);
                if (returnFiber !== null && (returnFiber.flags & Incomplete) === NoFlags) {
                    // Append all the effects of the subtree and this fiber onto the effect
                    // list of the parent. The completion order of the children affects the
                    // side-effect order.
                    if (returnFiber.firstEffect === null) returnFiber.firstEffect = completedWork.firstEffect;
                    if (completedWork.lastEffect !== null) {
                        if (returnFiber.lastEffect !== null) returnFiber.lastEffect.nextEffect = completedWork.firstEffect;
                        returnFiber.lastEffect = completedWork.lastEffect;
                    } // If this fiber had side-effects, we append it AFTER the children's
                    // side-effects. We can perform certain side-effects earlier if needed,
                    // by doing multiple passes over the effect list. We don't want to
                    // schedule our own side-effect on our own list because if end up
                    // reusing children we'll schedule this effect onto itself since we're
                    // at the end.
                    var flags = completedWork.flags; // Skip both NoWork and PerformedWork tags when creating the effect
                    // list. PerformedWork effect is read by React DevTools but shouldn't be
                    // committed.
                    if (flags > PerformedWork) {
                        if (returnFiber.lastEffect !== null) returnFiber.lastEffect.nextEffect = completedWork;
                        else returnFiber.firstEffect = completedWork;
                        returnFiber.lastEffect = completedWork;
                    }
                }
            } else {
                // This fiber did not complete because something threw. Pop values off
                // the stack without entering the complete phase. If this is a boundary,
                // capture values if possible.
                var _next = unwindWork(completedWork); // Because this fiber did not complete, don't reset its expiration time.
                if (_next !== null) {
                    // If completing this work spawned new work, do that next. We'll come
                    // back here again.
                    // Since we're restarting, remove anything that is not a host effect
                    // from the effect tag.
                    _next.flags &= HostEffectMask;
                    workInProgress1 = _next;
                    return;
                }
                if ((completedWork.mode & ProfileMode) !== NoMode) {
                    // Record the render duration for the fiber that errored.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.
                    var actualDuration = completedWork.actualDuration;
                    var child = completedWork.child;
                    while(child !== null){
                        actualDuration += child.actualDuration;
                        child = child.sibling;
                    }
                    completedWork.actualDuration = actualDuration;
                }
                if (returnFiber !== null) {
                    // Mark the parent fiber as incomplete and clear its effect list.
                    returnFiber.firstEffect = returnFiber.lastEffect = null;
                    returnFiber.flags |= Incomplete;
                }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
                // If there is more work to do in this returnFiber, do that next.
                workInProgress1 = siblingFiber;
                return;
            } // Otherwise, return to the parent
            completedWork = returnFiber; // Update the next thing we're working on in case something throws.
            workInProgress1 = completedWork;
        }while (completedWork !== null) // We've reached the root.
        if (workInProgressRootExitStatus === RootIncomplete) workInProgressRootExitStatus = RootCompleted;
    }
    function resetChildLanes(completedWork) {
        if (// to switch statement in `completeWork`.
        (completedWork.tag === LegacyHiddenComponent || completedWork.tag === OffscreenComponent) && completedWork.memoizedState !== null && !includesSomeLane(subtreeRenderLanes1, OffscreenLane) && (completedWork.mode & ConcurrentMode) !== NoLanes) // The children of this component are hidden. Don't bubble their
        // expiration times.
        return;
        var newChildLanes = NoLanes; // Bubble up the earliest expiration time.
        if ((completedWork.mode & ProfileMode) !== NoMode) {
            // In profiling mode, resetChildExpirationTime is also used to reset
            // profiler durations.
            var actualDuration = completedWork.actualDuration;
            var treeBaseDuration = completedWork.selfBaseDuration; // When a fiber is cloned, its actualDuration is reset to 0. This value will
            // only be updated if work is done on the fiber (i.e. it doesn't bailout).
            // When work is done, it should bubble to the parent's actualDuration. If
            // the fiber has not been cloned though, (meaning no work was done), then
            // this value will reflect the amount of time spent working on a previous
            // render. In that case it should not bubble. We determine whether it was
            // cloned by comparing the child pointer.
            var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
            var child = completedWork.child;
            while(child !== null){
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                if (shouldBubbleActualDurations) actualDuration += child.actualDuration;
                treeBaseDuration += child.treeBaseDuration;
                child = child.sibling;
            }
            var isTimedOutSuspense = completedWork.tag === SuspenseComponent && completedWork.memoizedState !== null;
            if (isTimedOutSuspense) {
                // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                var primaryChildFragment = completedWork.child;
                if (primaryChildFragment !== null) treeBaseDuration -= primaryChildFragment.treeBaseDuration;
            }
            completedWork.actualDuration = actualDuration;
            completedWork.treeBaseDuration = treeBaseDuration;
        } else {
            var _child = completedWork.child;
            while(_child !== null){
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                _child = _child.sibling;
            }
        }
        completedWork.childLanes = newChildLanes;
    }
    function commitRoot(root) {
        var renderPriorityLevel = getCurrentPriorityLevel();
        runWithPriority$1(ImmediatePriority$1, commitRootImpl.bind(null, root, renderPriorityLevel));
        return null;
    }
    function commitRootImpl(root, renderPriorityLevel) {
        do // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
        // means `flushPassiveEffects` will sometimes result in additional
        // passive effects. So we need to keep flushing in a loop until there are
        // no more pending effects.
        // TODO: Might be better if `flushPassiveEffects` did not automatically
        // flush synchronous work at the end, to avoid factoring hazards like this.
        flushPassiveEffects();
        while (rootWithPendingPassiveEffects !== null)
        flushRenderPhaseStrictModeWarningsInDEV();
        if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) throw Error("Should not already be working.");
        var finishedWork = root.finishedWork;
        var lanes = root.finishedLanes;
        if (finishedWork === null) return null;
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        if (!(finishedWork !== root.current)) throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
         // commitRoot never returns a continuation; it always finishes synchronously.
        // So we can clear these now to allow a new callback to be scheduled.
        root.callbackNode = null; // Update the first and last pending times on this root. The new first
        // pending time is whatever is left on the root fiber.
        var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
        markRootFinished(root, remainingLanes); // Clear already finished discrete updates in case that a later call of
        // `flushDiscreteUpdates` starts a useless render pass which may cancels
        // a scheduled timeout.
        if (rootsWithPendingDiscreteUpdates !== null) {
            if (!hasDiscreteLanes(remainingLanes) && rootsWithPendingDiscreteUpdates.has(root)) rootsWithPendingDiscreteUpdates.delete(root);
        }
        if (root === workInProgressRoot) {
            // We can reset these now that they are finished.
            workInProgressRoot = null;
            workInProgress1 = null;
            workInProgressRootRenderLanes = NoLanes;
        } // Get the list of effects.
        var firstEffect;
        if (finishedWork.flags > PerformedWork) {
            // A fiber's effect list consists only of its children, not itself. So if
            // the root has an effect, we need to add it to the end of the list. The
            // resulting list is the set that would belong to the root's parent, if it
            // had one; that is, all the effects in the tree including the root.
            if (finishedWork.lastEffect !== null) {
                finishedWork.lastEffect.nextEffect = finishedWork;
                firstEffect = finishedWork.firstEffect;
            } else firstEffect = finishedWork;
        } else // There is no effect on the root.
        firstEffect = finishedWork.firstEffect;
        if (firstEffect !== null) {
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            var prevInteractions = pushInteractions(root); // Reset this to null before calling lifecycles
            ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
            // of the effect list for each phase: all mutation effects come before all
            // layout effects, and so on.
            // The first phase a "before mutation" phase. We use this phase to read the
            // state of the host tree right before we mutate it. This is where
            // getSnapshotBeforeUpdate is called.
            focusedInstanceHandle = prepareForCommit(root.containerInfo);
            shouldFireAfterActiveInstanceBlur = false;
            nextEffect = firstEffect;
            do {
                invokeGuardedCallback(null, commitBeforeMutationEffects, null);
                if (hasCaughtError()) {
                    if (!(nextEffect !== null)) throw Error("Should be working on an effect.");
                    var error = clearCaughtError();
                    captureCommitPhaseError(nextEffect, error);
                    nextEffect = nextEffect.nextEffect;
                }
            }while (nextEffect !== null) // We no longer need to track the active instance fiber
            focusedInstanceHandle = null;
            // Mark the current commit time to be shared by all Profilers in this
            // batch. This enables them to be grouped later.
            recordCommitTime();
            nextEffect = firstEffect;
            do {
                invokeGuardedCallback(null, commitMutationEffects, null, root, renderPriorityLevel);
                if (hasCaughtError()) {
                    if (!(nextEffect !== null)) throw Error("Should be working on an effect.");
                    var _error = clearCaughtError();
                    captureCommitPhaseError(nextEffect, _error);
                    nextEffect = nextEffect.nextEffect;
                }
            }while (nextEffect !== null)
            resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
            // the mutation phase, so that the previous tree is still current during
            // componentWillUnmount, but before the layout phase, so that the finished
            // work is current during componentDidMount/Update.
            root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
            // the host tree after it's been mutated. The idiomatic use case for this is
            // layout, but class component lifecycles also fire here for legacy reasons.
            nextEffect = firstEffect;
            do {
                invokeGuardedCallback(null, commitLayoutEffects, null, root, lanes);
                if (hasCaughtError()) {
                    if (!(nextEffect !== null)) throw Error("Should be working on an effect.");
                    var _error2 = clearCaughtError();
                    captureCommitPhaseError(nextEffect, _error2);
                    nextEffect = nextEffect.nextEffect;
                }
            }while (nextEffect !== null)
            nextEffect = null; // Tell Scheduler to yield at the end of the frame, so the browser has an
            // opportunity to paint.
            requestPaint();
            popInteractions(prevInteractions);
            executionContext = prevExecutionContext;
        } else {
            // No effects.
            root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
            recordCommitTime();
        }
        var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
        if (rootDoesHavePassiveEffects) {
            // This commit has passive effects. Stash a reference to them. But don't
            // schedule a callback until after flushing layout work.
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root;
            pendingPassiveEffectsLanes = lanes;
            pendingPassiveEffectsRenderPriority = renderPriorityLevel;
        } else {
            // We are done with the effect chain at this point so let's clear the
            // nextEffect pointers to assist with GC. If we have passive effects, we'll
            // clear this in flushPassiveEffects.
            nextEffect = firstEffect;
            while(nextEffect !== null){
                var nextNextEffect = nextEffect.nextEffect;
                nextEffect.nextEffect = null;
                if (nextEffect.flags & Deletion) detachFiberAfterEffects(nextEffect);
                nextEffect = nextNextEffect;
            }
        } // Read this again, since an effect might have updated it
        remainingLanes = root.pendingLanes; // Check if there's remaining work on this root
        if (remainingLanes !== NoLanes) {
            if (spawnedWorkDuringRender !== null) {
                var expirationTimes = spawnedWorkDuringRender;
                spawnedWorkDuringRender = null;
                for(var i = 0; i < expirationTimes.length; i++)scheduleInteractions(root, expirationTimes[i], root.memoizedInteractions);
            }
            schedulePendingInteractions(root, remainingLanes);
        } else // If there's no remaining work, we can clear the set of already failed
        // error boundaries.
        legacyErrorBoundariesThatAlreadyFailed = null;
        if (!rootDidHavePassiveEffects) // If there are no passive effects, then we can complete the pending interactions.
        // Otherwise, we'll wait until after the passive effects are flushed.
        // Wait to do this until after remaining work has been scheduled,
        // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.
        finishPendingInteractions(root, lanes);
        if (remainingLanes === SyncLane) {
            // Count the number of times the root synchronously re-renders without
            // finishing. If there are too many, it indicates an infinite update loop.
            if (root === rootWithNestedUpdates) nestedUpdateCount++;
            else {
                nestedUpdateCount = 0;
                rootWithNestedUpdates = root;
            }
        } else nestedUpdateCount = 0;
        onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
        onCommitRoot$1();
        // additional work on this root is scheduled.
        ensureRootIsScheduled(root, now());
        if (hasUncaughtError) {
            hasUncaughtError = false;
            var _error3 = firstUncaughtError;
            firstUncaughtError = null;
            throw _error3;
        }
        if ((executionContext & LegacyUnbatchedContext) !== NoContext) // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired
        // synchronously, but layout updates should be deferred until the end
        // of the batch.
        return null;
         // If layout work was scheduled, flush it now.
        flushSyncCallbackQueue();
        return null;
    }
    function commitBeforeMutationEffects() {
        while(nextEffect !== null){
            var current = nextEffect.alternate;
            if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {
                if ((nextEffect.flags & Deletion) !== NoFlags) {
                    if (doesFiberContain(nextEffect, focusedInstanceHandle)) shouldFireAfterActiveInstanceBlur = true;
                } else // TODO: Move this out of the hot path using a dedicated effect tag.
                if (nextEffect.tag === SuspenseComponent && isSuspenseBoundaryBeingHidden(current, nextEffect) && doesFiberContain(nextEffect, focusedInstanceHandle)) shouldFireAfterActiveInstanceBlur = true;
            }
            var flags = nextEffect.flags;
            if ((flags & Snapshot) !== NoFlags) {
                setCurrentFiber(nextEffect);
                commitBeforeMutationLifeCycles(current, nextEffect);
                resetCurrentFiber();
            }
            if ((flags & Passive) !== NoFlags) // If there are passive effects, schedule a callback to flush at
            // the earliest opportunity.
            {
                if (!rootDoesHavePassiveEffects) {
                    rootDoesHavePassiveEffects = true;
                    scheduleCallback(NormalPriority$1, function() {
                        flushPassiveEffects();
                        return null;
                    });
                }
            }
            nextEffect = nextEffect.nextEffect;
        }
    }
    function commitMutationEffects(root, renderPriorityLevel) {
        // TODO: Should probably move the bulk of this function to commitWork.
        while(nextEffect !== null){
            setCurrentFiber(nextEffect);
            var flags = nextEffect.flags;
            if (flags & ContentReset) commitResetTextContent(nextEffect);
            if (flags & Ref) {
                var current = nextEffect.alternate;
                if (current !== null) commitDetachRef(current);
            } // The following switch statement is only concerned about placement,
            // updates, and deletions. To avoid needing to add a case for every possible
            // bitmap value, we remove the secondary effects from the effect tag and
            // switch on that value.
            var primaryFlags = flags & (Placement | Update | Deletion | Hydrating);
            switch(primaryFlags){
                case Placement:
                    commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
                    // inserted, before any life-cycles like componentDidMount gets called.
                    // TODO: findDOMNode doesn't rely on this any more but isMounted does
                    // and isMounted is deprecated anyway so we should be able to kill this.
                    nextEffect.flags &= ~Placement;
                    break;
                case PlacementAndUpdate:
                    // Placement
                    commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
                    // inserted, before any life-cycles like componentDidMount gets called.
                    nextEffect.flags &= ~Placement; // Update
                    var _current = nextEffect.alternate;
                    commitWork(_current, nextEffect);
                    break;
                case Hydrating:
                    nextEffect.flags &= ~Hydrating;
                    break;
                case HydratingAndUpdate:
                    nextEffect.flags &= ~Hydrating; // Update
                    var _current2 = nextEffect.alternate;
                    commitWork(_current2, nextEffect);
                    break;
                case Update:
                    var _current3 = nextEffect.alternate;
                    commitWork(_current3, nextEffect);
                    break;
                case Deletion:
                    commitDeletion(root, nextEffect);
                    break;
            }
            resetCurrentFiber();
            nextEffect = nextEffect.nextEffect;
        }
    }
    function commitLayoutEffects(root, committedLanes) {
        while(nextEffect !== null){
            setCurrentFiber(nextEffect);
            var flags = nextEffect.flags;
            if (flags & (Update | Callback)) {
                var current = nextEffect.alternate;
                commitLifeCycles(root, current, nextEffect);
            }
            if (flags & Ref) commitAttachRef(nextEffect);
            resetCurrentFiber();
            nextEffect = nextEffect.nextEffect;
        }
    }
    function flushPassiveEffects() {
        // Returns whether passive effects were flushed.
        if (pendingPassiveEffectsRenderPriority !== NoPriority$1) {
            var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority$1 ? NormalPriority$1 : pendingPassiveEffectsRenderPriority;
            pendingPassiveEffectsRenderPriority = NoPriority$1;
            return runWithPriority$1(priorityLevel, flushPassiveEffectsImpl);
        }
        return false;
    }
    function enqueuePendingPassiveHookEffectMount(fiber, effect) {
        pendingPassiveHookEffectsMount.push(effect, fiber);
        if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback(NormalPriority$1, function() {
                flushPassiveEffects();
                return null;
            });
        }
    }
    function enqueuePendingPassiveHookEffectUnmount(fiber, effect) {
        pendingPassiveHookEffectsUnmount.push(effect, fiber);
        fiber.flags |= PassiveUnmountPendingDev;
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.flags |= PassiveUnmountPendingDev;
        if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback(NormalPriority$1, function() {
                flushPassiveEffects();
                return null;
            });
        }
    }
    function invokePassiveEffectCreate(effect) {
        var create = effect.create;
        effect.destroy = create();
    }
    function flushPassiveEffectsImpl() {
        if (rootWithPendingPassiveEffects === null) return false;
        var root = rootWithPendingPassiveEffects;
        var lanes = pendingPassiveEffectsLanes;
        rootWithPendingPassiveEffects = null;
        pendingPassiveEffectsLanes = NoLanes;
        if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) throw Error("Cannot flush passive effects while already rendering.");
        isFlushingPassiveEffects = true;
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;
        var prevInteractions = pushInteractions(root); // It's important that ALL pending passive effect destroy functions are called
        // before ANY passive effect create functions are called.
        // Otherwise effects in sibling components might interfere with each other.
        // e.g. a destroy function in one component may unintentionally override a ref
        // value set by a create function in another component.
        // Layout effects have the same constraint.
        // First pass: Destroy stale passive effects.
        var unmountEffects = pendingPassiveHookEffectsUnmount;
        pendingPassiveHookEffectsUnmount = [];
        for(var i = 0; i < unmountEffects.length; i += 2){
            var _effect = unmountEffects[i];
            var fiber = unmountEffects[i + 1];
            var destroy = _effect.destroy;
            _effect.destroy = undefined;
            fiber.flags &= ~PassiveUnmountPendingDev;
            var alternate = fiber.alternate;
            if (alternate !== null) alternate.flags &= ~PassiveUnmountPendingDev;
            if (typeof destroy === 'function') {
                setCurrentFiber(fiber);
                invokeGuardedCallback(null, destroy, null);
                if (hasCaughtError()) {
                    if (!(fiber !== null)) throw Error("Should be working on an effect.");
                    var error = clearCaughtError();
                    captureCommitPhaseError(fiber, error);
                }
                resetCurrentFiber();
            }
        } // Second pass: Create new passive effects.
        var mountEffects = pendingPassiveHookEffectsMount;
        pendingPassiveHookEffectsMount = [];
        for(var _i = 0; _i < mountEffects.length; _i += 2){
            var _effect2 = mountEffects[_i];
            var _fiber = mountEffects[_i + 1];
            setCurrentFiber(_fiber);
            invokeGuardedCallback(null, invokePassiveEffectCreate, null, _effect2);
            if (hasCaughtError()) {
                if (!(_fiber !== null)) throw Error("Should be working on an effect.");
                var _error4 = clearCaughtError();
                captureCommitPhaseError(_fiber, _error4);
            }
            resetCurrentFiber();
        } // Note: This currently assumes there are no passive effects on the root fiber
        // because the root is not part of its own effect list.
        // This could change in the future.
        var effect = root.current.firstEffect;
        while(effect !== null){
            var nextNextEffect = effect.nextEffect; // Remove nextEffect pointer to assist GC
            effect.nextEffect = null;
            if (effect.flags & Deletion) detachFiberAfterEffects(effect);
            effect = nextNextEffect;
        }
        popInteractions(prevInteractions);
        finishPendingInteractions(root, lanes);
        isFlushingPassiveEffects = false;
        executionContext = prevExecutionContext;
        flushSyncCallbackQueue(); // If additional passive effects were scheduled, increment a counter. If this
        // exceeds the limit, we'll fire a warning.
        nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
        return true;
    }
    function isAlreadyFailedLegacyErrorBoundary(instance) {
        return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
    }
    function markLegacyErrorBoundaryAsFailed(instance) {
        if (legacyErrorBoundariesThatAlreadyFailed === null) legacyErrorBoundariesThatAlreadyFailed = new Set([
            instance
        ]);
        else legacyErrorBoundariesThatAlreadyFailed.add(instance);
    }
    function prepareToThrowUncaughtError(error) {
        if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error;
        }
    }
    var onUncaughtError = prepareToThrowUncaughtError;
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        var errorInfo = createCapturedValue(error, sourceFiber);
        var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
        enqueueUpdate(rootFiber, update);
        var eventTime = requestEventTime();
        var root = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);
        if (root !== null) {
            markRootUpdated(root, SyncLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
            schedulePendingInteractions(root, SyncLane);
        }
    }
    function captureCommitPhaseError(sourceFiber, error) {
        if (sourceFiber.tag === HostRoot) {
            // Error was thrown at the root. There is no parent, so the root
            // itself should capture it.
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
            return;
        }
        var fiber = sourceFiber.return;
        while(fiber !== null){
            if (fiber.tag === HostRoot) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
                return;
            } else if (fiber.tag === ClassComponent) {
                var ctor = fiber.type;
                var instance = fiber.stateNode;
                if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                    var errorInfo = createCapturedValue(error, sourceFiber);
                    var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                    enqueueUpdate(fiber, update);
                    var eventTime = requestEventTime();
                    var root = markUpdateLaneFromFiberToRoot(fiber, SyncLane);
                    if (root !== null) {
                        markRootUpdated(root, SyncLane, eventTime);
                        ensureRootIsScheduled(root, eventTime);
                        schedulePendingInteractions(root, SyncLane);
                    } else {
                        // This component has already been unmounted.
                        // We can't schedule any follow up work for the root because the fiber is already unmounted,
                        // but we can still call the log-only boundary so the error isn't swallowed.
                        //
                        // TODO This is only a temporary bandaid for the old reconciler fork.
                        // We can delete this special case once the new fork is merged.
                        if (typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) try {
                            instance.componentDidCatch(error, errorInfo);
                        } catch (errorToIgnore) {
                        // This is kind of an edge case.
                        }
                    }
                    return;
                }
            }
            fiber = fiber.return;
        }
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
        var pingCache = root.pingCache;
        if (pingCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        pingCache.delete(wakeable);
        var eventTime = requestEventTime();
        markRootPinged(root, pingedLanes);
        if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            // Received a ping at the same priority level at which we're currently
            // rendering. We might want to restart this render. This should mirror
            // the logic of whether or not a root suspends once it completes.
            // TODO: If we're rendering sync either due to Sync, Batched or expired,
            // we should probably never restart.
            // If we're suspended with delay, or if it's a retry, we'll always suspend
            // so we can always restart.
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) // Restart from the root.
            prepareFreshStack(root, NoLanes);
            else // Even though we can't restart right now, we might get an
            // opportunity later. So we mark this render as having a ping.
            workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
        }
        ensureRootIsScheduled(root, eventTime);
        schedulePendingInteractions(root, pingedLanes);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
        // The boundary fiber (a Suspense component or SuspenseList component)
        // previously was rendered in its fallback state. One of the promises that
        // suspended it has resolved, which means at least part of the tree was
        // likely unblocked. Try rendering again, at a new expiration time.
        if (retryLane === NoLane) retryLane = requestRetryLane(boundaryFiber);
         // TODO: Special case idle priority?
        var eventTime = requestEventTime();
        var root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);
        if (root !== null) {
            markRootUpdated(root, retryLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
            schedulePendingInteractions(root, retryLane);
        }
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = NoLane; // Default
        var retryCache;
        retryCache = boundaryFiber.stateNode;
        if (retryCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        retryCache.delete(wakeable);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    } // Computes the next Just Noticeable Difference (JND) boundary.
    // The theory is that a person can't tell the difference between small differences in time.
    // Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
    // difference in the experience. However, waiting for longer might mean that we can avoid
    // showing an intermediate loading state. The longer we have already waited, the harder it
    // is to tell small differences in time. Therefore, the longer we've already waited,
    // the longer we can wait additionally. At some point we have to give up though.
    // We pick a train model where the next boundary commits at a consistent schedule.
    // These particular numbers are vague estimates. We expect to adjust them based on research.
    function jnd(timeElapsed) {
        return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
    }
    function checkForNestedUpdates() {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            throw Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        }
        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
            nestedPassiveUpdateCount = 0;
            error1("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
        }
    }
    function flushRenderPhaseStrictModeWarningsInDEV() {
        ReactStrictModeWarnings.flushLegacyContextWarning();
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
    var didWarnStateUpdateForNotYetMountedComponent = null;
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        if ((executionContext & RenderContext) !== NoContext) // We let the other warning about render phase updates deal with this one.
        return;
        if (!(fiber.mode & (BlockingMode | ConcurrentMode))) return;
        var tag = fiber.tag;
        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) // Only warn for user-defined components, not internal ones like Suspense.
        return;
         // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.
        var componentName = getComponentName(fiber.type) || 'ReactComponent';
        if (didWarnStateUpdateForNotYetMountedComponent !== null) {
            if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) return;
            didWarnStateUpdateForNotYetMountedComponent.add(componentName);
        } else didWarnStateUpdateForNotYetMountedComponent = new Set([
            componentName
        ]);
        var previousFiber = current1;
        try {
            setCurrentFiber(fiber);
            error1("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally{
            if (previousFiber) setCurrentFiber(fiber);
            else resetCurrentFiber();
        }
    }
    var didWarnStateUpdateForUnmountedComponent = null;
    function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
        var tag = fiber.tag;
        if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) // Only warn for user-defined components, not internal ones like Suspense.
        return;
         // If there are pending passive effects unmounts for this Fiber,
        // we can assume that they would have prevented this update.
        if ((fiber.flags & PassiveUnmountPendingDev) !== NoFlags) return;
         // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.
        var componentName = getComponentName(fiber.type) || 'ReactComponent';
        if (didWarnStateUpdateForUnmountedComponent !== null) {
            if (didWarnStateUpdateForUnmountedComponent.has(componentName)) return;
            didWarnStateUpdateForUnmountedComponent.add(componentName);
        } else didWarnStateUpdateForUnmountedComponent = new Set([
            componentName
        ]);
        if (isFlushingPassiveEffects) ;
        else {
            var previousFiber = current1;
            try {
                setCurrentFiber(fiber);
                error1("Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in %s.", tag === ClassComponent ? 'the componentWillUnmount method' : 'a useEffect cleanup function');
            } finally{
                if (previousFiber) setCurrentFiber(fiber);
                else resetCurrentFiber();
            }
        }
    }
    var beginWork$1;
    var dummyFiber = null;
    beginWork$1 = function(current, unitOfWork, lanes) {
        // If a component throws an error, we replay it again in a synchronously
        // dispatched event, so that the debugger will treat it as an uncaught
        // error See ReactErrorUtils for more information.
        // Before entering the begin phase, copy the work-in-progress onto a dummy
        // fiber. If beginWork throws, we'll use this to reset the state.
        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
        try {
            return beginWork(current, unitOfWork, lanes);
        } catch (originalError) {
            if (originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') // Don't replay promises. Treat everything else like an error.
            throw originalError;
             // Keep this code in sync with handleError; any changes here must have
            // corresponding changes there.
            resetContextDependencies();
            resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
            // same fiber again.
            // Unwind the failed stack frame
            unwindInterruptedWork(unitOfWork); // Restore the original properties of the fiber.
            assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
            if (unitOfWork.mode & ProfileMode) // Reset the profiler timer.
            startProfilerTimer(unitOfWork);
             // Run beginWork again.
            invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);
            if (hasCaughtError()) {
                var replayError = clearCaughtError(); // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.
                // Rethrow this error instead of the original one.
                throw replayError;
            } else // This branch is reachable if the render phase is impure.
            throw originalError;
        }
    };
    var didWarnAboutUpdateInRender = false;
    var didWarnAboutUpdateInRenderForAnotherComponent;
    didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    function warnAboutRenderPhaseUpdatesInDEV(fiber) {
        if (isRendering && (executionContext & RenderContext) !== NoContext && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                var renderingComponentName = workInProgress1 && getComponentName(workInProgress1.type) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.
                var dedupeKey = renderingComponentName;
                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentName(fiber.type) || 'Unknown';
                    error1("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                }
                break;
            case ClassComponent:
                if (!didWarnAboutUpdateInRender) {
                    error1("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                }
                break;
        }
    } // a 'shared' variable that changes when act() opens/closes in tests.
    var IsThisRendererActing = {
        current: false
    };
    function warnIfNotScopedWithMatchingAct(fiber) {
        if (IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
            var previousFiber = current1;
            try {
                setCurrentFiber(fiber);
                error1("It looks like you're using the wrong act() around your test interactions.\nBe sure to use the matching version of act() corresponding to your renderer:\n\n// for react-dom:\nimport {act} from 'react-dom/test-utils';\n// ...\nact(() => ...);\n\n// for react-test-renderer:\nimport TestRenderer from react-test-renderer';\nconst {act} = TestRenderer;\n// ...\nact(() => ...);");
            } finally{
                if (previousFiber) setCurrentFiber(fiber);
                else resetCurrentFiber();
            }
        }
    }
    function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
        if ((fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) error1("An update to %s ran an effect, but was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentName(fiber.type));
    }
    function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
        if (executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
            var previousFiber = current1;
            try {
                setCurrentFiber(fiber);
                error1("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentName(fiber.type));
            } finally{
                if (previousFiber) setCurrentFiber(fiber);
                else resetCurrentFiber();
            }
        }
    }
    var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV; // In tests, we want to enforce a mocked scheduler.
    var didWarnAboutUnmockedScheduler = false; // TODO Before we release concurrent mode, revisit this and decide whether a mocked
    // scheduler is the actual recommendation. The alternative could be a testing build,
    // a new lib, or whatever; we dunno just yet. This message is for early adopters
    // to get their tests right.
    function warnIfUnmockedScheduler(fiber) {
        if (didWarnAboutUnmockedScheduler === false && Scheduler.unstable_flushAllWithoutAsserting === undefined) {
            if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {
                didWarnAboutUnmockedScheduler = true;
                error1("In Concurrent or Sync modes, the \"scheduler\" module needs to be mocked to guarantee consistent behaviour across tests and browsers. For example, with jest: \njest.mock('scheduler', () => require('scheduler/unstable_mock'));\n\nFor more info, visit https://reactjs.org/link/mock-scheduler");
            }
        }
    }
    function computeThreadID(root, lane) {
        // Interaction threads are unique per root and expiration time.
        // NOTE: Intentionally unsound cast. All that matters is that it's a number
        // and it represents a batch of work. Could make a helper function instead,
        // but meh this is fine for now.
        return lane * 1000 + root.interactionThreadID;
    }
    function markSpawnedWork(lane) {
        if (spawnedWorkDuringRender === null) spawnedWorkDuringRender = [
            lane
        ];
        else spawnedWorkDuringRender.push(lane);
    }
    function scheduleInteractions(root, lane, interactions) {
        if (interactions.size > 0) {
            var pendingInteractionMap = root.pendingInteractionMap;
            var pendingInteractions = pendingInteractionMap.get(lane);
            if (pendingInteractions != null) interactions.forEach(function(interaction) {
                if (!pendingInteractions.has(interaction)) // Update the pending async work count for previously unscheduled interaction.
                interaction.__count++;
                pendingInteractions.add(interaction);
            });
            else {
                pendingInteractionMap.set(lane, new Set(interactions)); // Update the pending async work count for the current interactions.
                interactions.forEach(function(interaction) {
                    interaction.__count++;
                });
            }
            var subscriber = tracing.__subscriberRef.current;
            if (subscriber !== null) {
                var threadID = computeThreadID(root, lane);
                subscriber.onWorkScheduled(interactions, threadID);
            }
        }
    }
    function schedulePendingInteractions(root, lane) {
        scheduleInteractions(root, lane, tracing.__interactionsRef.current);
    }
    function startWorkOnPendingInteractions(root, lanes) {
        // we can accurately attribute time spent working on it, And so that cascading
        // work triggered during the render phase will be associated with it.
        var interactions = new Set();
        root.pendingInteractionMap.forEach(function(scheduledInteractions, scheduledLane) {
            if (includesSomeLane(lanes, scheduledLane)) scheduledInteractions.forEach(function(interaction) {
                return interactions.add(interaction);
            });
        }); // Store the current set of interactions on the FiberRoot for a few reasons:
        // We can re-use it in hot functions like performConcurrentWorkOnRoot()
        // without having to recalculate it. We will also use it in commitWork() to
        // pass to any Profiler onRender() hooks. This also provides DevTools with a
        // way to access it when the onCommitRoot() hook is called.
        root.memoizedInteractions = interactions;
        if (interactions.size > 0) {
            var subscriber = tracing.__subscriberRef.current;
            if (subscriber !== null) {
                var threadID = computeThreadID(root, lanes);
                try {
                    subscriber.onWorkStarted(interactions, threadID);
                } catch (error) {
                    // If the subscriber throws, rethrow it in a separate task
                    scheduleCallback(ImmediatePriority$1, function() {
                        throw error;
                    });
                }
            }
        }
    }
    function finishPendingInteractions(root, committedLanes) {
        var remainingLanesAfterCommit = root.pendingLanes;
        var subscriber;
        try {
            subscriber = tracing.__subscriberRef.current;
            if (subscriber !== null && root.memoizedInteractions.size > 0) {
                // FIXME: More than one lane can finish in a single commit.
                var threadID = computeThreadID(root, committedLanes);
                subscriber.onWorkStopped(root.memoizedInteractions, threadID);
            }
        } catch (error2) {
            // If the subscriber throws, rethrow it in a separate task
            scheduleCallback(ImmediatePriority$1, function() {
                throw error2;
            });
        } finally{
            // Clear completed interactions from the pending Map.
            // Unless the render was suspended or cascading work was scheduled,
            // In which case– leave pending interactions until the subsequent render.
            var pendingInteractionMap = root.pendingInteractionMap;
            pendingInteractionMap.forEach(function(scheduledInteractions, lane) {
                // Only decrement the pending interaction count if we're done.
                // If there's still work at the current priority,
                // That indicates that we are waiting for suspense data.
                if (!includesSomeLane(remainingLanesAfterCommit, lane)) {
                    pendingInteractionMap.delete(lane);
                    scheduledInteractions.forEach(function(interaction) {
                        interaction.__count--;
                        if (subscriber !== null && interaction.__count === 0) try {
                            subscriber.onInteractionScheduledWorkCompleted(interaction);
                        } catch (error) {
                            // If the subscriber throws, rethrow it in a separate task
                            scheduleCallback(ImmediatePriority$1, function() {
                                throw error;
                            });
                        }
                    });
                }
            });
        }
    } // `act` testing API
    function shouldForceFlushFallbacksInDEV() {
        // Never force flush in production. This function should get stripped out.
        return actingUpdatesScopeDepth > 0;
    }
    // so we can tell if any async act() calls try to run in parallel.
    var actingUpdatesScopeDepth = 0;
    function detachFiberAfterEffects(fiber) {
        fiber.sibling = null;
        fiber.stateNode = null;
    }
    var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.
    var failedBoundaries = null;
    var setRefreshHandler = function(handler) {
        resolveFamily = handler;
    };
    function resolveFunctionForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) return type;
         // Use the latest known implementation.
        return family.current;
    }
    function resolveClassForHotReloading(type) {
        // No implementation differences.
        return resolveFunctionForHotReloading(type);
    }
    function resolveForwardRefForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) {
            // Check if we're dealing with a real forwardRef. Don't want to crash early.
            if (type !== null && type !== undefined && typeof type.render === 'function') {
                // ForwardRef is special because its resolved .type is an object,
                // but it's possible that we only have its inner render function in the map.
                // If that inner render function is different, we'll build a new forwardRef type.
                var currentRender = resolveFunctionForHotReloading(type.render);
                if (type.render !== currentRender) {
                    var syntheticType = {
                        $$typeof: REACT_FORWARD_REF_TYPE,
                        render: currentRender
                    };
                    if (type.displayName !== undefined) syntheticType.displayName = type.displayName;
                    return syntheticType;
                }
            }
            return type;
        } // Use the latest known implementation.
        return family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return false;
        var prevType = fiber.elementType;
        var nextType = element.type; // If we got here, we know types aren't === equal.
        var needsCompareFamilies = false;
        var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;
        switch(fiber.tag){
            case ClassComponent:
                if (typeof nextType === 'function') needsCompareFamilies = true;
                break;
            case FunctionComponent:
                if (typeof nextType === 'function') needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) // We don't know the inner type yet.
                // We're going to assume that the lazy inner type is stable,
                // and so it is sufficient to avoid reconciling it away.
                // We're not going to unwrap or actually use the new lazy type.
                needsCompareFamilies = true;
                break;
            case ForwardRef:
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            case MemoComponent:
            case SimpleMemoComponent:
                if ($$typeofNextType === REACT_MEMO_TYPE) // TODO: if it was but can no longer be simple,
                // we shouldn't set this.
                needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            default:
                return false;
        } // Check if both types have a family and it's the same one.
        if (needsCompareFamilies) {
            // Note: memo() and forwardRef() we'll compare outer rather than inner type.
            // This means both of them need to be registered to preserve state.
            // If we unwrapped and compared the inner types for wrappers instead,
            // then we would risk falsely saying two separate memo(Foo)
            // calls are equivalent because they wrap the same Foo function.
            var prevFamily = resolveFamily(prevType);
            if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) return true;
        }
        return false;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        if (typeof WeakSet !== 'function') return;
        if (failedBoundaries === null) failedBoundaries = new WeakSet();
        failedBoundaries.add(fiber);
    }
    var scheduleRefresh = function(root, update) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
        flushPassiveEffects();
        flushSync(function() {
            scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
        });
    };
    var scheduleRoot = function(root, element) {
        if (root.context !== emptyContextObject) // Super edge case: root has a legacy _renderSubtree context
        // but we don't know the parentComponent so we can't pass it.
        // Just ignore. We'll delete this with _renderSubtree code path later.
        return;
        flushPassiveEffects();
        flushSync(function() {
            updateContainer(element, root, null, null);
        });
    };
    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        if (resolveFamily === null) throw new Error('Expected resolveFamily to be set during hot reload.');
        var needsRender = false;
        var needsRemount = false;
        if (candidateType !== null) {
            var family = resolveFamily(candidateType);
            if (family !== undefined) {
                if (staleFamilies.has(family)) needsRemount = true;
                else if (updatedFamilies.has(family)) {
                    if (tag === ClassComponent) needsRemount = true;
                    else needsRender = true;
                }
            }
        }
        if (failedBoundaries !== null) {
            if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) needsRemount = true;
        }
        if (needsRemount) fiber._debugNeedsRemount = true;
        if (needsRemount || needsRender) scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        if (child !== null && !needsRemount) scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        if (sibling !== null) scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
    var findHostInstancesForRefresh = function(root, families) {
        var hostInstances = new Set();
        var types = new Set(families.map(function(family) {
            return family.current;
        }));
        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
        return hostInstances;
    };
    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
        var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        var didMatch = false;
        if (candidateType !== null) {
            if (types.has(candidateType)) didMatch = true;
        }
        if (didMatch) // We have a match. This only drills down to the closest host components.
        // There's no need to search deeper because for the purpose of giving
        // visual feedback, "flashing" outermost parent rectangles is sufficient.
        findHostInstancesForFiberShallowly(fiber, hostInstances);
        else // If there's no match, maybe there will be one further down in the child tree.
        if (child !== null) findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
        if (sibling !== null) findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
    function findHostInstancesForFiberShallowly(fiber, hostInstances) {
        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
        if (foundHostInstances) return;
         // If we didn't find any host children, fallback to closest host parent.
        var node = fiber;
        while(true){
            switch(node.tag){
                case HostComponent:
                    hostInstances.add(node.stateNode);
                    return;
                case HostPortal:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                case HostRoot:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
            }
            if (node.return === null) throw new Error('Expected to reach root first.');
            node = node.return;
        }
    }
    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
        var node = fiber;
        var foundHostInstances = false;
        while(true){
            if (node.tag === HostComponent) {
                // We got a match.
                foundHostInstances = true;
                hostInstances.add(node.stateNode); // There may still be more, so keep searching.
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === fiber) return foundHostInstances;
            while(node.sibling === null){
                if (node.return === null || node.return === fiber) return foundHostInstances;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return false;
    }
    var hasBadMapPolyfill;
    hasBadMapPolyfill = false;
    try {
        var nonExtensibleObject = Object.preventExtensions({
        });
        /* eslint-disable no-new */ new Map([
            [
                nonExtensibleObject,
                null
            ]
        ]);
        new Set([
            nonExtensibleObject
        ]);
    /* eslint-enable no-new */ } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
    }
    var debugCounter = 1;
    function FiberNode(tag, pendingProps, key, mode) {
        // Instance
        this.tag = tag;
        this.key = key;
        this.elementType = null;
        this.type = null;
        this.stateNode = null; // Fiber
        this.return = null;
        this.child = null;
        this.sibling = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = pendingProps;
        this.memoizedProps = null;
        this.updateQueue = null;
        this.memoizedState = null;
        this.dependencies = null;
        this.mode = mode; // Effects
        this.flags = NoFlags;
        this.nextEffect = null;
        this.firstEffect = null;
        this.lastEffect = null;
        this.lanes = NoLanes;
        this.childLanes = NoLanes;
        this.alternate = null;
        // Note: The following is done to avoid a v8 performance cliff.
        //
        // Initializing the fields below to smis and later updating them with
        // double values will cause Fibers to end up having separate shapes.
        // This behavior/bug has something to do with Object.preventExtension().
        // Fortunately this only impacts DEV builds.
        // Unfortunately it makes React unusably slow for some applications.
        // To work around this, initialize the fields below with doubles.
        //
        // Learn more about this here:
        // https://github.com/facebook/react/issues/14365
        // https://bugs.chromium.org/p/v8/issues/detail?id=8538
        this.actualDuration = Number.NaN;
        this.actualStartTime = Number.NaN;
        this.selfBaseDuration = Number.NaN;
        this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
        // This won't trigger the performance cliff mentioned above,
        // and it simplifies other profiler code (including DevTools).
        this.actualDuration = 0;
        this.actualStartTime = -1;
        this.selfBaseDuration = 0;
        this.treeBaseDuration = 0;
        // This isn't directly used but is handy for debugging internals:
        this._debugID = debugCounter++;
        this._debugSource = null;
        this._debugOwner = null;
        this._debugNeedsRemount = false;
        this._debugHookTypes = null;
        if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') Object.preventExtensions(this);
    } // This is a constructor function, rather than a POJO constructor, still
    // please ensure we do the following:
    // 1) Nobody should add any instance methods on this. Instance methods can be
    //    more difficult to predict when they get optimized and they are almost
    //    never inlined properly in static compilers.
    // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
    //    always know when it is a fiber.
    // 3) We might want to experiment with using numeric keys since they are easier
    //    to optimize in a non-JIT environment.
    // 4) We can easily go from a constructor to a createFiber object literal if that
    //    is faster.
    // 5) It should be easy to port this to a C struct and keep a C implementation
    //    compatible.
    var createFiber = function(tag, pendingProps, key, mode) {
        // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
        return new FiberNode(tag, pendingProps, key, mode);
    };
    function shouldConstruct$1(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function isSimpleFunctionComponent(type) {
        return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;
    }
    function resolveLazyComponentTag(Component) {
        if (typeof Component === 'function') return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
        else if (Component !== undefined && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) return ForwardRef;
            if ($$typeof === REACT_MEMO_TYPE) return MemoComponent;
        }
        return IndeterminateComponent;
    } // This is used to create an alternate fiber to do work on.
    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        if (workInProgress === null) {
            // We use a double buffering pooling technique because we know that we'll
            // only ever need at most two versions of a tree. We pool the "other" unused
            // node that we're free to reuse. This is lazily created to avoid allocating
            // extra objects for things that are never updated. It also allow us to
            // reclaim the extra memory if needed.
            workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
            workInProgress.elementType = current.elementType;
            workInProgress.type = current.type;
            workInProgress.stateNode = current.stateNode;
            // DEV-only fields
            workInProgress._debugID = current._debugID;
            workInProgress._debugSource = current._debugSource;
            workInProgress._debugOwner = current._debugOwner;
            workInProgress._debugHookTypes = current._debugHookTypes;
            workInProgress.alternate = current;
            current.alternate = workInProgress;
        } else {
            workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // We already have an alternate.
            // Reset the effect tag.
            workInProgress.flags = NoFlags; // The effect list is no longer valid.
            workInProgress.nextEffect = null;
            workInProgress.firstEffect = null;
            workInProgress.lastEffect = null;
            // We intentionally reset, rather than copy, actualDuration & actualStartTime.
            // This prevents time from endlessly accumulating in new commits.
            // This has the downside of resetting values for different priority renders,
            // But works for yielding (the common case) and should support resuming.
            workInProgress.actualDuration = 0;
            workInProgress.actualStartTime = -1;
        }
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
        // it cannot be shared with the current fiber.
        var currentDependencies = current.dependencies;
        workInProgress.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
        }; // These will be overridden during the parent's reconciliation
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case FunctionComponent:
            case SimpleMemoComponent:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case ClassComponent:
                workInProgress.type = resolveClassForHotReloading(current.type);
                break;
            case ForwardRef:
                workInProgress.type = resolveForwardRefForHotReloading(current.type);
                break;
        }
        return workInProgress;
    } // Used to reuse a Fiber for a second pass.
    function resetWorkInProgress(workInProgress, renderLanes) {
        // This resets the Fiber to what createFiber or createWorkInProgress would
        // have set the values to before during the first pass. Ideally this wouldn't
        // be necessary but unfortunately many code paths reads from the workInProgress
        // when they should be reading from current and writing to workInProgress.
        // We assume pendingProps, index, key, ref, return are still untouched to
        // avoid doing another reconciliation.
        // Reset the effect tag but keep any Placement tags, since that's something
        // that child fiber is setting, not the reconciliation.
        workInProgress.flags &= Placement; // The effect list is no longer valid.
        workInProgress.nextEffect = null;
        workInProgress.firstEffect = null;
        workInProgress.lastEffect = null;
        var current = workInProgress.alternate;
        if (current === null) {
            // Reset to createFiber's initial values.
            workInProgress.childLanes = NoLanes;
            workInProgress.lanes = renderLanes;
            workInProgress.child = null;
            workInProgress.memoizedProps = null;
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null;
            workInProgress.dependencies = null;
            workInProgress.stateNode = null;
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = 0;
            workInProgress.treeBaseDuration = 0;
        } else {
            // Reset to the cloned values that createWorkInProgress would've.
            workInProgress.childLanes = current.childLanes;
            workInProgress.lanes = current.lanes;
            workInProgress.child = current.child;
            workInProgress.memoizedProps = current.memoizedProps;
            workInProgress.memoizedState = current.memoizedState;
            workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
            // it cannot be shared with the current fiber.
            var currentDependencies = current.dependencies;
            workInProgress.dependencies = currentDependencies === null ? null : {
                lanes: currentDependencies.lanes,
                firstContext: currentDependencies.firstContext
            };
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = current.selfBaseDuration;
            workInProgress.treeBaseDuration = current.treeBaseDuration;
        }
        return workInProgress;
    }
    function createHostRootFiber(tag) {
        var mode;
        if (tag === ConcurrentRoot) mode = ConcurrentMode | BlockingMode | StrictMode;
        else if (tag === BlockingRoot) mode = BlockingMode | StrictMode;
        else mode = NoMode;
        if (isDevToolsPresent) // Always collect profile timings when DevTools are present.
        // This enables DevTools to start capturing timing at any point–
        // Without some nodes in the tree having empty base times.
        mode |= ProfileMode;
        return createFiber(HostRoot, null, null, mode);
    }
    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.
        var resolvedType = type;
        if (typeof type === 'function') {
            if (shouldConstruct$1(type)) {
                fiberTag = ClassComponent;
                resolvedType = resolveClassForHotReloading(resolvedType);
            } else resolvedType = resolveFunctionForHotReloading(resolvedType);
        } else if (typeof type === 'string') fiberTag = HostComponent;
        else getTag: switch(type){
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
            case REACT_DEBUG_TRACING_MODE_TYPE:
                fiberTag = Mode;
                mode |= DebugTracingMode;
                break;
            case REACT_STRICT_MODE_TYPE:
                fiberTag = Mode;
                mode |= StrictMode;
                break;
            case REACT_PROFILER_TYPE:
                return createFiberFromProfiler(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_TYPE:
                return createFiberFromSuspense(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_LIST_TYPE:
                return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
            case REACT_OFFSCREEN_TYPE:
                return createFiberFromOffscreen(pendingProps, mode, lanes, key);
            case REACT_LEGACY_HIDDEN_TYPE:
                return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);
            case REACT_SCOPE_TYPE:
            // eslint-disable-next-line no-fallthrough
            default:
                if (typeof type === 'object' && type !== null) switch(type.$$typeof){
                    case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                    case REACT_CONTEXT_TYPE:
                        // This is a consumer
                        fiberTag = ContextConsumer;
                        break getTag;
                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        break getTag;
                    case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                    case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                    case REACT_BLOCK_TYPE:
                        fiberTag = Block;
                        break getTag;
                }
                var info = '';
                if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                var ownerName = owner ? getComponentName(owner.type) : null;
                if (ownerName) info += '\n\nCheck the render method of `' + ownerName + '`.';
                throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type == null ? type : typeof type) + "." + info);
        }
        var fiber = createFiber(fiberTag, pendingProps, key, mode);
        fiber.elementType = type;
        fiber.type = resolvedType;
        fiber.lanes = lanes;
        fiber._debugOwner = owner;
        return fiber;
    }
    function createFiberFromElement(element, mode, lanes) {
        var owner = null;
        owner = element._owner;
        var type = element.type;
        var key = element.key;
        var pendingProps = element.props;
        var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
        fiber._debugSource = element._source;
        fiber._debugOwner = element._owner;
        return fiber;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
        var fiber = createFiber(Fragment, elements, key, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromProfiler(pendingProps, mode, lanes, key) {
        if (typeof pendingProps.id !== 'string') error1('Profiler must specify an "id" as a prop');
        var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode); // TODO: The Profiler fiber shouldn't have a type. It has a tag.
        fiber.elementType = REACT_PROFILER_TYPE;
        fiber.type = REACT_PROFILER_TYPE;
        fiber.lanes = lanes;
        fiber.stateNode = {
            effectDuration: 0,
            passiveEffectDuration: 0
        };
        return fiber;
    }
    function createFiberFromSuspense(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseComponent, pendingProps, key, mode); // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.
        // This needs to be fixed in getComponentName so that it relies on the tag
        // instead.
        fiber.type = REACT_SUSPENSE_TYPE;
        fiber.elementType = REACT_SUSPENSE_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
        // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.
        // This needs to be fixed in getComponentName so that it relies on the tag
        // instead.
        fiber.type = REACT_SUSPENSE_LIST_TYPE;
        fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
        var fiber = createFiber(OffscreenComponent, pendingProps, key, mode); // TODO: The OffscreenComponent fiber shouldn't have a type. It has a tag.
        fiber.type = REACT_OFFSCREEN_TYPE;
        fiber.elementType = REACT_OFFSCREEN_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromLegacyHidden(pendingProps, mode, lanes, key) {
        var fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode); // TODO: The LegacyHidden fiber shouldn't have a type. It has a tag.
        fiber.type = REACT_LEGACY_HIDDEN_TYPE;
        fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromText(content, mode, lanes) {
        var fiber = createFiber(HostText, content, null, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromHostInstanceForDeletion() {
        var fiber = createFiber(HostComponent, null, null, NoMode); // TODO: These should not need a type.
        fiber.elementType = 'DELETED';
        fiber.type = 'DELETED';
        return fiber;
    }
    function createFiberFromPortal(portal, mode, lanes) {
        var pendingProps = portal.children !== null ? portal.children : [];
        var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
        fiber.lanes = lanes;
        fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            // Used by persistent updates
            implementation: portal.implementation
        };
        return fiber;
    } // Used for stashing WIP properties to replay failed work in DEV.
    function assignFiberPropertiesInDEV(target, source) {
        if (target === null) // This Fiber's initial properties will always be overwritten.
        // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
        target = createFiber(IndeterminateComponent, null, null, NoMode);
         // This is intentionally written as a list of all properties.
        // We tried to use Object.assign() instead but this is called in
        // the hottest path, and Object.assign() was too slow:
        // https://github.com/facebook/react/issues/12502
        // This code is DEV-only so size is not a concern.
        target.tag = source.tag;
        target.key = source.key;
        target.elementType = source.elementType;
        target.type = source.type;
        target.stateNode = source.stateNode;
        target.return = source.return;
        target.child = source.child;
        target.sibling = source.sibling;
        target.index = source.index;
        target.ref = source.ref;
        target.pendingProps = source.pendingProps;
        target.memoizedProps = source.memoizedProps;
        target.updateQueue = source.updateQueue;
        target.memoizedState = source.memoizedState;
        target.dependencies = source.dependencies;
        target.mode = source.mode;
        target.flags = source.flags;
        target.nextEffect = source.nextEffect;
        target.firstEffect = source.firstEffect;
        target.lastEffect = source.lastEffect;
        target.lanes = source.lanes;
        target.childLanes = source.childLanes;
        target.alternate = source.alternate;
        target.actualDuration = source.actualDuration;
        target.actualStartTime = source.actualStartTime;
        target.selfBaseDuration = source.selfBaseDuration;
        target.treeBaseDuration = source.treeBaseDuration;
        target._debugID = source._debugID;
        target._debugSource = source._debugSource;
        target._debugOwner = source._debugOwner;
        target._debugNeedsRemount = source._debugNeedsRemount;
        target._debugHookTypes = source._debugHookTypes;
        return target;
    }
    function FiberRootNode(containerInfo, tag, hydrate) {
        this.tag = tag;
        this.containerInfo = containerInfo;
        this.pendingChildren = null;
        this.current = null;
        this.pingCache = null;
        this.finishedWork = null;
        this.timeoutHandle = noTimeout;
        this.context = null;
        this.pendingContext = null;
        this.hydrate = hydrate;
        this.callbackNode = null;
        this.callbackPriority = NoLanePriority;
        this.eventTimes = createLaneMap(NoLanes);
        this.expirationTimes = createLaneMap(NoTimestamp);
        this.pendingLanes = NoLanes;
        this.suspendedLanes = NoLanes;
        this.pingedLanes = NoLanes;
        this.expiredLanes = NoLanes;
        this.mutableReadLanes = NoLanes;
        this.finishedLanes = NoLanes;
        this.entangledLanes = NoLanes;
        this.entanglements = createLaneMap(NoLanes);
        this.mutableSourceEagerHydrationData = null;
        this.interactionThreadID = tracing.unstable_getThreadID();
        this.memoizedInteractions = new Set();
        this.pendingInteractionMap = new Map();
        switch(tag){
            case BlockingRoot:
                this._debugRootType = 'createBlockingRoot()';
                break;
            case ConcurrentRoot:
                this._debugRootType = 'createRoot()';
                break;
            case LegacyRoot:
                this._debugRootType = 'createLegacyRoot()';
                break;
        }
    }
    function createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks) {
        var root = new FiberRootNode(containerInfo, tag, hydrate);
        // stateNode is any.
        var uninitializedFiber = createHostRootFiber(tag);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        initializeUpdateQueue(uninitializedFiber);
        return root;
    }
    // This ensures that the version used for server rendering matches the one
    // that is eventually read during hydration.
    // If they don't match there's a potential tear and a full deopt render is required.
    function registerMutableSourceForHydration(root, mutableSource) {
        var getVersion = mutableSource._getVersion;
        var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
        // Retaining it forever may interfere with GC.
        if (root.mutableSourceEagerHydrationData == null) root.mutableSourceEagerHydrationData = [
            mutableSource,
            version
        ];
        else root.mutableSourceEagerHydrationData.push(mutableSource, version);
    }
    function createPortal(children, containerInfo, implementation) {
        var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
        return {
            // This tag allow us to uniquely identify this as a React Portal
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : '' + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }
    var didWarnAboutNestedUpdates;
    var didWarnAboutFindNodeInStrictMode;
    didWarnAboutNestedUpdates = false;
    didWarnAboutFindNodeInStrictMode = {
    };
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyContextObject;
        var fiber = get1(parentComponent);
        var parentContext = findCurrentUnmaskedContext(fiber);
        if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) return processChildContext(fiber, Component, parentContext);
        }
        return parentContext;
    }
    function findHostInstanceWithWarning(component, methodName) {
        var fiber = get1(component);
        if (fiber === undefined) {
            if (typeof component.render === 'function') throw Error("Unable to find node on an unmounted component.");
            else throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
        }
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        if (hostFiber.mode & StrictMode) {
            var componentName = getComponentName(fiber.type) || 'Component';
            if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current1;
                try {
                    setCurrentFiber(hostFiber);
                    if (fiber.mode & StrictMode) error1("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                    else error1("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                } finally{
                    // Ideally this should reset to previous but this shouldn't be called in
                    // render and there's another warning for that anyway.
                    if (previousFiber) setCurrentFiber(previousFiber);
                    else resetCurrentFiber();
                }
            }
        }
        return hostFiber.stateNode;
    }
    function createContainer(containerInfo, tag, hydrate, hydrationCallbacks) {
        return createFiberRoot(containerInfo, tag, hydrate);
    }
    function updateContainer(element, container, parentComponent, callback) {
        onScheduleRoot(container, element);
        var current$1 = container.current;
        var eventTime = requestEventTime();
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) {
            warnIfUnmockedScheduler(current$1);
            warnIfNotScopedWithMatchingAct(current$1);
        }
        var lane = requestUpdateLane(current$1);
        var context = getContextForSubtree(parentComponent);
        if (container.context === null) container.context = context;
        else container.pendingContext = context;
        if (isRendering && current1 !== null && !didWarnAboutNestedUpdates) {
            didWarnAboutNestedUpdates = true;
            error1("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentName(current1.type) || 'Unknown');
        }
        var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: element
        };
        callback = callback === undefined ? null : callback;
        if (callback !== null) {
            if (typeof callback !== 'function') error1("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
            update.callback = callback;
        }
        enqueueUpdate(current$1, update);
        scheduleUpdateOnFiber(current$1, lane, eventTime);
        return lane;
    }
    function getPublicRootInstance(container) {
        var containerFiber = container.current;
        if (!containerFiber.child) return null;
        switch(containerFiber.child.tag){
            case HostComponent:
                return getPublicInstance(containerFiber.child.stateNode);
            default:
                return containerFiber.child.stateNode;
        }
    }
    function markRetryLaneImpl(fiber, retryLane) {
        var suspenseState = fiber.memoizedState;
        if (suspenseState !== null && suspenseState.dehydrated !== null) suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
    } // Increases the priority of thennables when they resolve within this boundary.
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        var alternate = fiber.alternate;
        if (alternate) markRetryLaneImpl(alternate, retryLane);
    }
    function attemptUserBlockingHydration$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
        var eventTime = requestEventTime();
        var lane = InputDiscreteHydrationLane;
        scheduleUpdateOnFiber(fiber, lane, eventTime);
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function attemptContinuousHydration$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
        var eventTime = requestEventTime();
        var lane = SelectiveHydrationLane;
        scheduleUpdateOnFiber(fiber, lane, eventTime);
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function attemptHydrationAtCurrentPriority$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority other than synchronously flush it.
        return;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(fiber);
        scheduleUpdateOnFiber(fiber, lane, eventTime);
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function runWithPriority$2(priority, fn) {
        setCurrentUpdateLanePriority(priority);
        return fn();
    }
    function findHostInstanceWithNoPortals(fiber) {
        var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
        if (hostFiber === null) return null;
        if (hostFiber.tag === FundamentalComponent) return hostFiber.stateNode.instance;
        return hostFiber.stateNode;
    }
    var shouldSuspendImpl = function(fiber) {
        return false;
    };
    function shouldSuspend(fiber) {
        return shouldSuspendImpl(fiber);
    }
    var overrideHookState = null;
    var overrideHookStateDeletePath = null;
    var overrideHookStateRenamePath = null;
    var overrideProps = null;
    var overridePropsDeletePath = null;
    var overridePropsRenamePath = null;
    var scheduleUpdate = null;
    var setSuspenseHandler = null;
    var copyWithDeleteImpl = function(obj, path, index) {
        var key = path[index];
        var updated = Array.isArray(obj) ? obj.slice() : _assign({
        }, obj);
        if (index + 1 === path.length) {
            if (Array.isArray(updated)) updated.splice(key, 1);
            else delete updated[key];
            return updated;
        } // $FlowFixMe number or string is fine here
        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
    };
    var copyWithDelete = function(obj, path) {
        return copyWithDeleteImpl(obj, path, 0);
    };
    var copyWithRenameImpl = function(obj, oldPath, newPath, index) {
        var oldKey = oldPath[index];
        var updated = Array.isArray(obj) ? obj.slice() : _assign({
        }, obj);
        if (index + 1 === oldPath.length) {
            var newKey = newPath[index]; // $FlowFixMe number or string is fine here
            updated[newKey] = updated[oldKey];
            if (Array.isArray(updated)) updated.splice(oldKey, 1);
            else delete updated[oldKey];
        } else // $FlowFixMe number or string is fine here
        updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);
        return updated;
    };
    var copyWithRename = function(obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) {
            warn('copyWithRename() expects paths of the same length');
            return;
        } else {
            for(var i = 0; i < newPath.length - 1; i++)if (oldPath[i] !== newPath[i]) {
                warn('copyWithRename() expects paths to be the same except for the deepest key');
                return;
            }
        }
        return copyWithRenameImpl(obj, oldPath, newPath, 0);
    };
    var copyWithSetImpl = function(obj, path, index, value) {
        if (index >= path.length) return value;
        var key = path[index];
        var updated = Array.isArray(obj) ? obj.slice() : _assign({
        }, obj); // $FlowFixMe number or string is fine here
        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
    };
    var copyWithSet = function(obj, path, value) {
        return copyWithSetImpl(obj, path, 0, value);
    };
    var findHook = function(fiber, id) {
        // For now, the "id" of stateful hooks is just the stateful hook index.
        // This may change in the future with e.g. nested hooks.
        var currentHook = fiber.memoizedState;
        while(currentHook !== null && id > 0){
            currentHook = currentHook.next;
            id--;
        }
        return currentHook;
    }; // Support DevTools editable values for useState and useReducer.
    overrideHookState = function(fiber, id, path, value) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithSet(hook.memoizedState, path, value);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = _assign({
            }, fiber.memoizedProps);
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateDeletePath = function(fiber, id, path) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithDelete(hook.memoizedState, path);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = _assign({
            }, fiber.memoizedProps);
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = _assign({
            }, fiber.memoizedProps);
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }
    }; // Support DevTools props for function components, forwardRef, memo, host components, etc.
    overrideProps = function(fiber, path, value) {
        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    };
    overridePropsDeletePath = function(fiber, path) {
        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    };
    overridePropsRenamePath = function(fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    };
    scheduleUpdate = function(fiber) {
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    };
    setSuspenseHandler = function(newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
    };
    function findHostInstanceByFiber(fiber) {
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    function emptyFindFiberByHostInstance(instance) {
        return null;
    }
    function getCurrentFiberForDevTools() {
        return current1;
    }
    function injectIntoDevTools(devToolsConfig) {
        var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState: overrideHookState,
            overrideHookStateDeletePath: overrideHookStateDeletePath,
            overrideHookStateRenamePath: overrideHookStateRenamePath,
            overrideProps: overrideProps,
            overridePropsDeletePath: overridePropsDeletePath,
            overridePropsRenamePath: overridePropsRenamePath,
            setSuspenseHandler: setSuspenseHandler,
            scheduleUpdate: scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher,
            findHostInstanceByFiber: findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            // React Refresh
            findHostInstancesForRefresh: findHostInstancesForRefresh,
            scheduleRefresh: scheduleRefresh,
            scheduleRoot: scheduleRoot,
            setRefreshHandler: setRefreshHandler,
            // Enables DevTools to append owner stacks to error messages in DEV mode.
            getCurrentFiber: getCurrentFiberForDevTools
        });
    }
    function ReactDOMRoot(container, options) {
        this._internalRoot = createRootImpl(container, ConcurrentRoot, options);
    }
    function ReactDOMBlockingRoot(container, tag, options) {
        this._internalRoot = createRootImpl(container, tag, options);
    }
    ReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function(children) {
        var root = this._internalRoot;
        if (typeof arguments[1] === 'function') error1("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        var container = root.containerInfo;
        if (container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(root.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error1("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
            }
        }
        updateContainer(children, root, null, null);
    };
    ReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function() {
        if (typeof arguments[0] === 'function') error1("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        var root = this._internalRoot;
        var container = root.containerInfo;
        updateContainer(null, root, null, function() {
            unmarkContainerAsRoot(container);
        });
    };
    function createRootImpl(container, tag, options) {
        // Tag is either LegacyRoot or Concurrent Root
        var hydrate = options != null && options.hydrate === true;
        var hydrationCallbacks = options != null && options.hydrationOptions || null;
        var mutableSources = options != null && options.hydrationOptions != null && options.hydrationOptions.mutableSources || null;
        var root = createContainer(container, tag, hydrate);
        markContainerAsRoot(root.current, container);
        var containerNodeType = container.nodeType;
        var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
        listenToAllSupportedEvents(rootContainerElement);
        if (mutableSources) for(var i = 0; i < mutableSources.length; i++){
            var mutableSource = mutableSources[i];
            registerMutableSourceForHydration(root, mutableSource);
        }
        return root;
    }
    function createLegacyRoot(container, options) {
        return new ReactDOMBlockingRoot(container, LegacyRoot, options);
    }
    function isValidContainer(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
    }
    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
    var topLevelUpdateWarnings;
    var warnedAboutHydrateAPI = false;
    topLevelUpdateWarnings = function(container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error1("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
            }
        }
        var isRootRenderedBySomeReact = !!container._reactRootContainer;
        var rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
        if (hasNonRootReactChild && !isRootRenderedBySomeReact) error1("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') error1("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function getReactRootElementInContainer(container) {
        if (!container) return null;
        if (container.nodeType === DOCUMENT_NODE) return container.documentElement;
        else return container.firstChild;
    }
    function shouldHydrateDueToLegacyHeuristic(container) {
        var rootElement = getReactRootElementInContainer(container);
        return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
    }
    function legacyCreateRootFromDOMContainer(container, forceHydrate) {
        var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.
        if (!shouldHydrate) {
            var warned = false;
            var rootSibling;
            while(rootSibling = container.lastChild){
                if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
                    warned = true;
                    error1("render(): Target node has markup rendered by React, but there are unrelated nodes as well. This is most commonly caused by white-space inserted around server-rendered markup.");
                }
                container.removeChild(rootSibling);
            }
        }
        if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
            warnedAboutHydrateAPI = true;
            warn("render(): Calling ReactDOM.render() to hydrate server-rendered markup will stop working in React v18. Replace the ReactDOM.render() call with ReactDOM.hydrate() if you want React to attach to the server HTML.");
        }
        return createLegacyRoot(container, shouldHydrate ? {
            hydrate: true
        } : undefined);
    }
    function warnOnInvalidCallback$1(callback, callerName) {
        if (callback !== null && typeof callback !== 'function') error1("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
    }
    function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
        topLevelUpdateWarnings(container);
        warnOnInvalidCallback$1(callback === undefined ? null : callback, 'render');
        // member of intersection type." Whyyyyyy.
        var root = container._reactRootContainer;
        var fiberRoot;
        if (!root) {
            // Initial mount
            root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
            fiberRoot = root._internalRoot;
            if (typeof callback === 'function') {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(fiberRoot);
                    originalCallback.call(instance);
                };
            } // Initial mount should not be batched.
            unbatchedUpdates(function() {
                updateContainer(children, fiberRoot, parentComponent, callback);
            });
        } else {
            fiberRoot = root._internalRoot;
            if (typeof callback === 'function') {
                var _originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(fiberRoot);
                    _originalCallback.call(instance);
                };
            } // Update
            updateContainer(children, fiberRoot, parentComponent, callback);
        }
        return getPublicRootInstance(fiberRoot);
    }
    function findDOMNode(componentOrElement) {
        var owner = ReactCurrentOwner$3.current;
        if (owner !== null && owner.stateNode !== null) {
            var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
            if (!warnedAboutRefsInRender) error1("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentName(owner.type) || 'A component');
            owner.stateNode._warnedAboutRefsInRender = true;
        }
        if (componentOrElement == null) return null;
        if (componentOrElement.nodeType === ELEMENT_NODE) return componentOrElement;
        return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
    }
    function hydrate1(element, container, callback) {
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error1("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call createRoot(container, {hydrate: true}).render(element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
    }
    function render1(element, container, callback) {
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error1("You are calling ReactDOM.render() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.render(element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
    }
    function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        if (!isValidContainer(containerNode)) throw Error("Target container is not a DOM element.");
        if (!(parentComponent != null && has1(parentComponent))) throw Error("parentComponent must be a valid React Component");
        return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
    }
    function unmountComponentAtNode(container) {
        if (!isValidContainer(container)) throw Error("unmountComponentAtNode(...): Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error1("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?");
        if (container._reactRootContainer) {
            var rootEl = getReactRootElementInContainer(container);
            var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
            if (renderedByDifferentReact) error1("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
            unbatchedUpdates(function() {
                legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                    // $FlowFixMe This should probably use `delete container._reactRootContainer`
                    container._reactRootContainer = null;
                    unmarkContainerAsRoot(container);
                });
            }); // If you call unmountComponentAtNode twice in quick succession, you'll
            // get `true` twice. That's probably fine?
            return true;
        } else {
            var _rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.
            var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;
            if (hasNonRootReactChild) error1("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
            return false;
        }
    }
    setAttemptUserBlockingHydration(attemptUserBlockingHydration$1);
    setAttemptContinuousHydration(attemptContinuousHydration$1);
    setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
    setAttemptHydrationAtPriority(runWithPriority$2);
    var didWarnAboutUnstableCreatePortal = false;
    if (typeof Map !== 'function' || Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') error1("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    setRestoreImplementation(restoreControlledState$3);
    setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);
    function createPortal$1(children, container) {
        var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
         // TODO: pass ReactDOM portal implementation as third argument
        // $FlowFixMe The Flow type is opaque but there's no way to actually create it.
        return createPortal(children, container, null, key);
    }
    function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
    }
    function unstable_createPortal(children, container) {
        var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        if (!didWarnAboutUnstableCreatePortal) {
            didWarnAboutUnstableCreatePortal = true;
            warn("The ReactDOM.unstable_createPortal() alias has been deprecated, and will be removed in React 18+. Update your code to use ReactDOM.createPortal() instead. It has the exact same API, but without the \"unstable_\" prefix.");
        }
        return createPortal$1(children, container, key);
    }
    var Internals = {
        // Keep in sync with ReactTestUtils.js, and ReactTestUtilsAct.js.
        // This is an array for better minification.
        Events: [
            getInstanceFromNode,
            getNodeFromInstance,
            getFiberCurrentPropsFromNode,
            enqueueStateRestore,
            restoreStateIfNeeded,
            flushPassiveEffects,
            IsThisRendererActing
        ]
    };
    var foundDevTools = injectIntoDevTools({
        findFiberByHostInstance: getClosestInstanceFromNode,
        bundleType: 1,
        version: ReactVersion,
        rendererPackageName: 'react-dom'
    });
    if (!foundDevTools && canUseDOM && window.top === window.self) // If we're in Chrome or Firefox, provide a download link if not installed.
    {
        if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
            var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.
            if (/^(https?|file):$/.test(protocol)) // eslint-disable-next-line react-internal/no-production-logging
            console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === 'file:' ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ''), 'font-weight:bold');
        }
    }
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
    exports.createPortal = createPortal$1;
    exports.findDOMNode = findDOMNode;
    exports.flushSync = flushSync;
    exports.hydrate = hydrate1;
    exports.render = render1;
    exports.unmountComponentAtNode = unmountComponentAtNode;
    exports.unstable_batchedUpdates = batchedUpdates$1;
    exports.unstable_createPortal = unstable_createPortal;
    exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
    exports.version = ReactVersion;
})();

},{"react":"6fep5","object-assign":"dDdxj","scheduler":"e5esB","scheduler/tracing":"hGxqN"}],"6fep5":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react.development.js');

},{"./cjs/react.development.js":"ia0OY"}],"ia0OY":[function(require,module,exports) {
/** @license React v17.0.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    var _assign = require('object-assign');
    // TODO: this is special because it gets imported during build.
    var ReactVersion = '17.0.2';
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 60103;
    var REACT_PORTAL_TYPE = 60106;
    exports.Fragment = 60107;
    exports.StrictMode = 60108;
    exports.Profiler = 60114;
    var REACT_PROVIDER_TYPE = 60109;
    var REACT_CONTEXT_TYPE = 60110;
    var REACT_FORWARD_REF_TYPE = 60112;
    exports.Suspense = 60113;
    var REACT_SUSPENSE_LIST_TYPE = 60120;
    var REACT_MEMO_TYPE = 60115;
    var REACT_LAZY_TYPE = 60116;
    var REACT_BLOCK_TYPE = 60121;
    var REACT_SERVER_BLOCK_TYPE = 60122;
    var REACT_FUNDAMENTAL_TYPE = 60117;
    var REACT_SCOPE_TYPE = 60119;
    var REACT_OPAQUE_ID_TYPE = 60128;
    var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
    var REACT_OFFSCREEN_TYPE = 60130;
    var REACT_LEGACY_HIDDEN_TYPE = 60131;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor('react.element');
        REACT_PORTAL_TYPE = symbolFor('react.portal');
        exports.Fragment = symbolFor('react.fragment');
        exports.StrictMode = symbolFor('react.strict_mode');
        exports.Profiler = symbolFor('react.profiler');
        REACT_PROVIDER_TYPE = symbolFor('react.provider');
        REACT_CONTEXT_TYPE = symbolFor('react.context');
        REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
        exports.Suspense = symbolFor('react.suspense');
        REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
        REACT_MEMO_TYPE = symbolFor('react.memo');
        REACT_LAZY_TYPE = symbolFor('react.lazy');
        REACT_BLOCK_TYPE = symbolFor('react.block');
        REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
        REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
        REACT_SCOPE_TYPE = symbolFor('react.scope');
        REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
        REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
        REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }
    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    /**
 * Keeps track of the current dispatcher.
 */ var ReactCurrentDispatcher = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    /**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */ var ReactCurrentBatchConfig = {
        transition: 0
    };
    /**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */ var ReactCurrentOwner = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    var ReactDebugCurrentFrame1 = {
    };
    var currentExtraStackFrame = null;
    function setExtraStackFrame(stack) {
        currentExtraStackFrame = stack;
    }
    ReactDebugCurrentFrame1.setExtraStackFrame = function(stack) {
        currentExtraStackFrame = stack;
    }; // Stack implementation injected by the current renderer.
    ReactDebugCurrentFrame1.getCurrentStack = null;
    ReactDebugCurrentFrame1.getStackAddendum = function() {
        var stack = ''; // Add an extra top frame while an element is being validated
        if (currentExtraStackFrame) stack += currentExtraStackFrame;
         // Delegate to the injected renderer-specific implementation
        var impl = ReactDebugCurrentFrame1.getCurrentStack;
        if (impl) stack += impl() || '';
        return stack;
    };
    /**
 * Used by act() to track whether you're inside an act() scope.
 */ var IsSomeRendererActing = {
        current: false
    };
    var ReactSharedInternals = {
        ReactCurrentDispatcher: ReactCurrentDispatcher,
        ReactCurrentBatchConfig: ReactCurrentBatchConfig,
        ReactCurrentOwner: ReactCurrentOwner,
        IsSomeRendererActing: IsSomeRendererActing,
        // Used by renderers to avoid bundling object-assign twice in UMD bundles:
        assign: _assign
    };
    ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame1;
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        printWarning('warn', format, args);
    }
    function error1(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning('error', format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        }
        var argsWithFormat = args.map(function(item) {
            return '' + item;
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var didWarnStateUpdateForUnmountedComponent = {
    };
    function warnNoop(publicInstance, callerName) {
        var _constructor = publicInstance.constructor;
        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
        var warningKey = componentName + "." + callerName;
        if (didWarnStateUpdateForUnmountedComponent[warningKey]) return;
        error1("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
    }
    /**
 * This is the abstract API for an update queue.
 */ var ReactNoopUpdateQueue = {
        /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */ isMounted: function(publicInstance) {
            return false;
        },
        /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, 'forceUpdate');
        },
        /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, 'replaceState');
        },
        /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */ enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, 'setState');
        }
    };
    var emptyObject = {
    };
    Object.freeze(emptyObject);
    /**
 * Base class helpers for the updating state of a component.
 */ function Component1(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
        // renderer.
        this.updater = updater || ReactNoopUpdateQueue;
    }
    Component1.prototype.isReactComponent = {
    };
    /**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */ Component1.prototype.setState = function(partialState, callback) {
        if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, 'setState');
    };
    /**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */ Component1.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
    };
    var deprecatedAPIs = {
        isMounted: [
            'isMounted',
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
        ],
        replaceState: [
            'replaceState',
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
        ]
    };
    var defineDeprecationWarning = function(methodName, info) {
        Object.defineProperty(Component1.prototype, methodName, {
            get: function() {
                warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
                return undefined;
            }
        });
    };
    for(var fnName in deprecatedAPIs)if (deprecatedAPIs.hasOwnProperty(fnName)) defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    function ComponentDummy() {
    }
    ComponentDummy.prototype = Component1.prototype;
    /**
 * Convenience component with default shallow equality check for sCU.
 */ function PureComponent(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
    _assign(pureComponentPrototype, Component1.prototype);
    pureComponentPrototype.isPureReactComponent = true;
    // an immutable object with a single mutable value
    function createRef() {
        var refObject = {
            current: null
        };
        Object.seal(refObject);
        return refObject;
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || '';
        return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }
    function getContextName(type) {
        return type.displayName || 'Context';
    }
    function getComponentName(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error1("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case exports.Fragment:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case exports.Profiler:
                return 'Profiler';
            case exports.StrictMode:
                return 'StrictMode';
            case exports.Suspense:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                return getComponentName(type.type);
            case REACT_BLOCK_TYPE:
                return getComponentName(type._render);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentName(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
    didWarnAboutStringRefs = {
    };
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, 'ref')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, 'key')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error1("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error1("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    function warnIfStringRefCannotBeAutoConverted(config) {
        if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
            var componentName = getComponentName(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error1("Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref", componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {
        }; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */ function createElement(type, config, children) {
        var propName; // Reserved names are extracted
        var props = {
        };
        var key = null;
        var ref = null;
        var self = null;
        var source = null;
        if (config != null) {
            if (hasValidRef(config)) {
                ref = config.ref;
                warnIfStringRefCannotBeAutoConverted(config);
            }
            if (hasValidKey(config)) key = '' + config.key;
            self = config.__self === undefined ? null : config.__self;
            source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            if (Object.freeze) Object.freeze(childArray);
            props.children = childArray;
        } // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    function cloneAndReplaceKey(oldElement, newKey) {
        var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
        return newElement;
    }
    /**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */ function cloneElement(element, config, children) {
        if (!!(element === null || element === undefined)) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
        var propName; // Original props are copied
        var props = _assign({
        }, element.props); // Reserved names are extracted
        var key = element.key;
        var ref = element.ref; // Self is preserved since the owner is preserved.
        var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
        // transpiler, and the original source is probably a better indicator of the
        // true owner.
        var source = element._source; // Owner will be preserved, unless ref is overridden
        var owner = element._owner;
        if (config != null) {
            if (hasValidRef(config)) {
                // Silently steal the ref from the parent.
                ref = config.ref;
                owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) key = '' + config.key;
             // Remaining properties override existing props
            var defaultProps;
            if (element.type && element.type.defaultProps) defaultProps = element.type.defaultProps;
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === undefined && defaultProps !== undefined) // Resolve default props
                props[propName] = defaultProps[propName];
                else props[propName] = config[propName];
            }
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            props.children = childArray;
        }
        return ReactElement(element.type, key, ref, self, source, owner, props);
    }
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    /**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */ function escape(key) {
        var escapeRegex = /[=:]/g;
        var escaperLookup = {
            '=': '=0',
            ':': '=2'
        };
        var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
        });
        return '$' + escapedString;
    }
    /**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */ var didWarnAboutMaps = false;
    var userProvidedKeyEscapeRegex = /\/+/g;
    function escapeUserProvidedKey(text) {
        return text.replace(userProvidedKeyEscapeRegex, '$&/');
    }
    /**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */ function getElementKey(element, index) {
        // Do some typechecking here since we call this blindly. We want to ensure
        // that we don't block potential future ES APIs.
        if (typeof element === 'object' && element !== null && element.key != null) // Explicit key
        return escape('' + element.key);
         // Implicit key determined by the index in the set
        return index.toString(36);
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        if (type === 'undefined' || type === 'boolean') // All of the above are perceived as null.
        children = null;
        var invokeCallback = false;
        if (children === null) invokeCallback = true;
        else switch(type){
            case 'string':
            case 'number':
                invokeCallback = true;
                break;
            case 'object':
                switch(children.$$typeof){
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                        invokeCallback = true;
                }
        }
        if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
            // so that it's consistent if the number of children grows:
            var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (Array.isArray(mappedChild)) {
                var escapedChildKey = '';
                if (childKey != null) escapedChildKey = escapeUserProvidedKey(childKey) + '/';
                mapIntoArray(mappedChild, array, escapedChildKey, '', function(c) {
                    return c;
                });
            } else if (mappedChild != null) {
                if (isValidElement(mappedChild)) mappedChild = cloneAndReplaceKey(mappedChild, // traverseAllChildren used to do for objects as children
                escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
                array.push(mappedChild);
            }
            return 1;
        }
        var child;
        var nextName;
        var subtreeCount = 0; // Count of children found in the current subtree.
        var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
        if (Array.isArray(children)) for(var i = 0; i < children.length; i++){
            child = children[i];
            nextName = nextNamePrefix + getElementKey(child, i);
            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
        }
        else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === 'function') {
                var iterableChildren = children;
                // Warn about using Maps as children
                if (iteratorFn === iterableChildren.entries) {
                    if (!didWarnAboutMaps) warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                    didWarnAboutMaps = true;
                }
                var iterator = iteratorFn.call(iterableChildren);
                var step;
                var ii = 0;
                while(!(step = iterator.next()).done){
                    child = step.value;
                    nextName = nextNamePrefix + getElementKey(child, ii++);
                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
                }
            } else if (type === 'object') {
                var childrenString = '' + children;
                throw Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). If you meant to render a collection of children, use an array instead.");
            }
        }
        return subtreeCount;
    }
    /**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */ function mapChildren(children, func, context) {
        if (children == null) return children;
        var result = [];
        var count = 0;
        mapIntoArray(children, result, '', '', function(child) {
            return func.call(context, child, count++);
        });
        return result;
    }
    /**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */ function countChildren(children) {
        var n = 0;
        mapChildren(children, function() {
            n++; // Don't return anything
        });
        return n;
    }
    /**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */ function forEachChildren(children, forEachFunc, forEachContext) {
        mapChildren(children, function() {
            forEachFunc.apply(this, arguments); // Don't return anything.
        }, forEachContext);
    }
    /**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */ function toArray(children) {
        return mapChildren(children, function(child) {
            return child;
        }) || [];
    }
    /**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */ function onlyChild(children) {
        if (!isValidElement(children)) throw Error("React.Children.only expected to receive a single React element child.");
        return children;
    }
    function createContext(defaultValue, calculateChangedBits) {
        if (calculateChangedBits === undefined) calculateChangedBits = null;
        else if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') error1("createContext: Expected the optional second argument to be a function. Instead received: %s", calculateChangedBits);
        var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            _calculateChangedBits: calculateChangedBits,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            _threadCount: 0,
            // These are circular
            Provider: null,
            Consumer: null
        };
        context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
        };
        var hasWarnedAboutUsingNestedContextConsumers = false;
        var hasWarnedAboutUsingConsumerProvider = false;
        var hasWarnedAboutDisplayNameOnConsumer = false;
        // A separate object, but proxies back to the original context object for
        // backwards compatibility. It has a different $$typeof, so we can properly
        // warn for the incorrect usage of Context as a Consumer.
        var Consumer = {
            $$typeof: REACT_CONTEXT_TYPE,
            _context: context,
            _calculateChangedBits: context._calculateChangedBits
        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here
        Object.defineProperties(Consumer, {
            Provider: {
                get: function() {
                    if (!hasWarnedAboutUsingConsumerProvider) {
                        hasWarnedAboutUsingConsumerProvider = true;
                        error1("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                    }
                    return context.Provider;
                },
                set: function(_Provider) {
                    context.Provider = _Provider;
                }
            },
            _currentValue: {
                get: function() {
                    return context._currentValue;
                },
                set: function(_currentValue) {
                    context._currentValue = _currentValue;
                }
            },
            _currentValue2: {
                get: function() {
                    return context._currentValue2;
                },
                set: function(_currentValue2) {
                    context._currentValue2 = _currentValue2;
                }
            },
            _threadCount: {
                get: function() {
                    return context._threadCount;
                },
                set: function(_threadCount) {
                    context._threadCount = _threadCount;
                }
            },
            Consumer: {
                get: function() {
                    if (!hasWarnedAboutUsingNestedContextConsumers) {
                        hasWarnedAboutUsingNestedContextConsumers = true;
                        error1("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                    }
                    return context.Consumer;
                }
            },
            displayName: {
                get: function() {
                    return context.displayName;
                },
                set: function(displayName) {
                    if (!hasWarnedAboutDisplayNameOnConsumer) {
                        warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                        hasWarnedAboutDisplayNameOnConsumer = true;
                    }
                }
            }
        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
        context.Consumer = Consumer;
        context._currentRenderer = null;
        context._currentRenderer2 = null;
        return context;
    }
    var Uninitialized = -1;
    var Pending = 0;
    var Resolved = 1;
    var Rejected = 2;
    function lazyInitializer(payload) {
        if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor(); // Transition to the next state.
            var pending = payload;
            pending._status = Pending;
            pending._result = thenable;
            thenable.then(function(moduleObject) {
                if (payload._status === Pending) {
                    var defaultExport = moduleObject.default;
                    if (defaultExport === undefined) error1("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
                    var resolved = payload;
                    resolved._status = Resolved;
                    resolved._result = defaultExport;
                }
            }, function(error) {
                if (payload._status === Pending) {
                    // Transition to the next state.
                    var rejected = payload;
                    rejected._status = Rejected;
                    rejected._result = error;
                }
            });
        }
        if (payload._status === Resolved) return payload._result;
        else throw payload._result;
    }
    function lazy(ctor) {
        var payload = {
            // We use these fields to store the result.
            _status: -1,
            _result: ctor
        };
        var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
        };
        // In production, this would just set it on the object.
        var defaultProps;
        var propTypes; // $FlowFixMe
        Object.defineProperties(lazyType, {
            defaultProps: {
                configurable: true,
                get: function() {
                    return defaultProps;
                },
                set: function(newDefaultProps) {
                    error1("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    defaultProps = newDefaultProps; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, 'defaultProps', {
                        enumerable: true
                    });
                }
            },
            propTypes: {
                configurable: true,
                get: function() {
                    return propTypes;
                },
                set: function(newPropTypes) {
                    error1("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    propTypes = newPropTypes; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, 'propTypes', {
                        enumerable: true
                    });
                }
            }
        });
        return lazyType;
    }
    function forwardRef(render) {
        if (render != null && render.$$typeof === REACT_MEMO_TYPE) error1("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
        else if (typeof render !== 'function') error1('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
        else if (render.length !== 0 && render.length !== 2) error1('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
        if (render != null) {
            if (render.defaultProps != null || render.propTypes != null) error1("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        }
        var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
        };
        var ownName;
        Object.defineProperty(elementType, 'displayName', {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name;
                if (render.displayName == null) render.displayName = name;
            }
        });
        return elementType;
    }
    // Filter certain DOM attributes (e.g. src, href) if their values are empty strings.
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === exports.Fragment || type === exports.Profiler || type === REACT_DEBUG_TRACING_MODE_TYPE || type === exports.StrictMode || type === exports.Suspense || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) return true;
        }
        return false;
    }
    function memo(type, compare) {
        if (!isValidElementType(type)) error1("memo: The first argument must be a component. Instead received: %s", type === null ? 'null' : typeof type);
        var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: compare === undefined ? null : compare
        };
        var ownName;
        Object.defineProperty(elementType, 'displayName', {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name;
                if (type.displayName == null) type.displayName = name;
            }
        });
        return elementType;
    }
    function resolveDispatcher() {
        var dispatcher = ReactCurrentDispatcher.current;
        if (!(dispatcher !== null)) throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        return dispatcher;
    }
    function useContext(Context, unstable_observedBits) {
        var dispatcher = resolveDispatcher();
        if (unstable_observedBits !== undefined) error1("useContext() second argument is reserved for future use in React. Passing it is not supported. You passed: %s.%s", unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? "\n\nDid you call array.map(useContext)? Calling Hooks inside a loop is not supported. Learn more at https://reactjs.org/link/rules-of-hooks" : '');
         // TODO: add a more generic warning for invalid values.
        if (Context._context !== undefined) {
            var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
            // and nobody should be using this in existing code.
            if (realContext.Consumer === Context) error1("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
            else if (realContext.Provider === Context) error1("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return dispatcher.useContext(Context, unstable_observedBits);
    }
    function useState(initialState) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useState(initialState);
    }
    function useReducer(reducer, initialArg, init) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useReducer(reducer, initialArg, init);
    }
    function useRef(initialValue) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useRef(initialValue);
    }
    function useEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useEffect(create, deps);
    }
    function useLayoutEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useLayoutEffect(create, deps);
    }
    function useCallback(callback, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useCallback(callback, deps);
    }
    function useMemo(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useMemo(create, deps);
    }
    function useImperativeHandle(ref, create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useImperativeHandle(ref, create, deps);
    }
    function useDebugValue(value, formatterFn) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDebugValue(value, formatterFn);
    }
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {
    }
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: _assign({
                }, props, {
                    value: prevLog
                }),
                info: _assign({
                }, props, {
                    value: prevInfo
                }),
                warn: _assign({
                }, props, {
                    value: prevWarn
                }),
                error: _assign({
                }, props, {
                    value: prevError
                }),
                group: _assign({
                }, props, {
                    value: prevGroup
                }),
                groupCollapsed: _assign({
                }, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: _assign({
                }, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error1("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher$1.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0)
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher$1.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case exports.Suspense:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_BLOCK_TYPE:
                return describeFunctionComponentFrame(type._render);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
        }
        return '';
    }
    var loggedTypeFailures = {
    };
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(Object.prototype.hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error1("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error1('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            setExtraStackFrame(stack);
        } else setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner.current) {
            var name = getComponentName(ReactCurrentOwner.current.type);
            if (name) return '\n\nCheck the render method of `' + name + '`.';
        }
        return '';
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
        }
        return '';
    }
    function getSourceInfoErrorAddendumForProps(elementProps) {
        if (elementProps !== null && elementProps !== undefined) return getSourceInfoErrorAddendum(elementProps.__source);
        return '';
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {
    };
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = '';
        if (element && element._owner && element._owner !== ReactCurrentOwner.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error1("Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.", currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== 'object') return;
        if (Array.isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === 'string') return;
        var propTypes;
        if (typeof type === 'function') propTypes = type.propTypes;
        else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentName(type);
            checkPropTypes(propTypes, element.props, 'prop', name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentName(type);
            error1('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
        }
        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) error1("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== 'children' && key !== 'key') {
                setCurrentlyValidatingElement$1(fragment);
                error1("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error1('Invalid attribute `ref` supplied to `React.Fragment`.');
            setCurrentlyValidatingElement$1(null);
        }
    }
    function createElementWithValidation(type, props, children) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = 'null';
            else if (Array.isArray(type)) typeString = 'array';
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
                info = ' Did you accidentally export a JSX literal instead of a component?';
            } else typeString = typeof type;
            error1("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], type);
        if (type === exports.Fragment) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    }
    var didWarnAboutDeprecatedCreateFactory = false;
    function createFactoryWithValidation(type) {
        var validatedFactory = createElementWithValidation.bind(null, type);
        validatedFactory.type = type;
        if (!didWarnAboutDeprecatedCreateFactory) {
            didWarnAboutDeprecatedCreateFactory = true;
            warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
        } // Legacy hook: remove it
        Object.defineProperty(validatedFactory, 'type', {
            enumerable: false,
            get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, 'type', {
                    value: type
                });
                return type;
            }
        });
        return validatedFactory;
    }
    function cloneElementWithValidation(element, props, children) {
        var newElement = cloneElement.apply(this, arguments);
        for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], newElement.type);
        validatePropTypes(newElement);
        return newElement;
    }
    try {
        var frozenObject = Object.freeze({
        });
        /* eslint-disable no-new */ new Map([
            [
                frozenObject,
                null
            ]
        ]);
        new Set([
            frozenObject
        ]);
    /* eslint-enable no-new */ } catch (e) {
    }
    var createElement$1 = createElementWithValidation;
    var cloneElement$1 = cloneElementWithValidation;
    var createFactory = createFactoryWithValidation;
    var Children = {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray: toArray,
        only: onlyChild
    };
    exports.Children = Children;
    exports.Component = Component1;
    exports.PureComponent = PureComponent;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
    exports.cloneElement = cloneElement$1;
    exports.createContext = createContext;
    exports.createElement = createElement$1;
    exports.createFactory = createFactory;
    exports.createRef = createRef;
    exports.forwardRef = forwardRef;
    exports.isValidElement = isValidElement;
    exports.lazy = lazy;
    exports.memo = memo;
    exports.useCallback = useCallback;
    exports.useContext = useContext;
    exports.useDebugValue = useDebugValue;
    exports.useEffect = useEffect;
    exports.useImperativeHandle = useImperativeHandle;
    exports.useLayoutEffect = useLayoutEffect;
    exports.useMemo = useMemo;
    exports.useReducer = useReducer;
    exports.useRef = useRef;
    exports.useState = useState;
    exports.version = ReactVersion;
})();

},{"object-assign":"dDdxj"}],"dDdxj":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/ 'use strict';
/* eslint-disable no-unused-vars */ var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
    if (val === null || val === undefined) throw new TypeError('Object.assign cannot be called with null or undefined');
    return Object(val);
}
function shouldUseNative() {
    try {
        if (!Object.assign) return false;
        // Detect buggy property enumeration order in older V8 versions.
        // https://bugs.chromium.org/p/v8/issues/detail?id=4118
        var test1 = "abc"; // eslint-disable-line no-new-wrappers
        test1[5] = 'de';
        if (Object.getOwnPropertyNames(test1)[0] === '5') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test2 = {
        };
        for(var i = 0; i < 10; i++)test2['_' + String.fromCharCode(i)] = i;
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
        });
        if (order2.join('') !== '0123456789') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test3 = {
        };
        'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
            test3[letter] = letter;
        });
        if (Object.keys(Object.assign({
        }, test3)).join('') !== 'abcdefghijklmnopqrst') return false;
        return true;
    } catch (err) {
        // We don't expect any of the above to throw, but better to be safe.
        return false;
    }
}
module.exports = shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = toObject(target);
    var symbols;
    for(var s = 1; s < arguments.length; s++){
        from = Object(arguments[s]);
        for(var key in from)if (hasOwnProperty.call(from, key)) to[key] = from[key];
        if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for(var i = 0; i < symbols.length; i++)if (propIsEnumerable.call(from, symbols[i])) to[symbols[i]] = from[symbols[i]];
        }
    }
    return to;
};

},{}],"e5esB":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/scheduler.development.js');

},{"./cjs/scheduler.development.js":"kG542"}],"kG542":[function(require,module,exports) {
/** @license React v0.20.2
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    var enableSchedulerDebugging = false;
    var enableProfiling = false;
    var requestHostCallback;
    var requestHostTimeout;
    var cancelHostTimeout;
    var requestPaint;
    var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';
    if (hasPerformanceNow) {
        var localPerformance = performance;
        exports.unstable_now = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date;
        var initialTime = localDate.now();
        exports.unstable_now = function() {
            return localDate.now() - initialTime;
        };
    }
    if (// implementation using setTimeout.
    typeof window === 'undefined' || typeof MessageChannel !== 'function') {
        // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,
        // fallback to a naive implementation.
        var _callback = null;
        var _timeoutID = null;
        var _flushCallback = function() {
            if (_callback !== null) try {
                var currentTime = exports.unstable_now();
                var hasRemainingTime = true;
                _callback(hasRemainingTime, currentTime);
                _callback = null;
            } catch (e) {
                setTimeout(_flushCallback, 0);
                throw e;
            }
        };
        requestHostCallback = function(cb) {
            if (_callback !== null) // Protect against re-entrancy.
            setTimeout(requestHostCallback, 0, cb);
            else {
                _callback = cb;
                setTimeout(_flushCallback, 0);
            }
        };
        requestHostTimeout = function(cb, ms) {
            _timeoutID = setTimeout(cb, ms);
        };
        cancelHostTimeout = function() {
            clearTimeout(_timeoutID);
        };
        exports.unstable_shouldYield = function() {
            return false;
        };
        requestPaint = exports.unstable_forceFrameRate = function() {
        };
    } else {
        // Capture local references to native APIs, in case a polyfill overrides them.
        var _setTimeout = window.setTimeout;
        var _clearTimeout = window.clearTimeout;
        if (typeof console !== 'undefined') {
            // TODO: Scheduler no longer requires these methods to be polyfilled. But
            // maybe we want to continue warning if they don't exist, to preserve the
            // option to rely on it in the future?
            var requestAnimationFrame = window.requestAnimationFrame;
            var cancelAnimationFrame = window.cancelAnimationFrame;
            if (typeof requestAnimationFrame !== 'function') // Using console['error'] to evade Babel and ESLint
            console['error']("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
            if (typeof cancelAnimationFrame !== 'function') // Using console['error'] to evade Babel and ESLint
            console['error']("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
        // thread, like user events. By default, it yields multiple times per frame.
        // It does not attempt to align with frame boundaries, since most tasks don't
        // need to be frame aligned; for those that do, use requestAnimationFrame.
        var yieldInterval = 5;
        var deadline = 0; // TODO: Make this configurable
        // `isInputPending` is not available. Since we have no way of knowing if
        // there's pending input, always yield at the end of the frame.
        exports.unstable_shouldYield = function() {
            return exports.unstable_now() >= deadline;
        }; // Since we yield every frame regardless, `requestPaint` has no effect.
        requestPaint = function() {
        };
        exports.unstable_forceFrameRate = function(fps) {
            if (fps < 0 || fps > 125) {
                // Using console['error'] to evade Babel and ESLint
                console['error']("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
                return;
            }
            if (fps > 0) yieldInterval = Math.floor(1000 / fps);
            else // reset the framerate
            yieldInterval = 5;
        };
        var performWorkUntilDeadline = function() {
            if (scheduledHostCallback !== null) {
                var currentTime = exports.unstable_now(); // Yield after `yieldInterval` ms, regardless of where we are in the vsync
                // cycle. This means there's always time remaining at the beginning of
                // the message event.
                deadline = currentTime + yieldInterval;
                var hasTimeRemaining = true;
                try {
                    var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
                    if (!hasMoreWork) {
                        isMessageLoopRunning = false;
                        scheduledHostCallback = null;
                    } else // If there's more work, schedule the next message event at the end
                    // of the preceding one.
                    port.postMessage(null);
                } catch (error) {
                    // If a scheduler task throws, exit the current browser task so the
                    // error can be observed.
                    port.postMessage(null);
                    throw error;
                }
            } else isMessageLoopRunning = false;
             // Yielding to the browser will give it a chance to paint, so we can
        };
        var channel = new MessageChannel();
        var port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline;
        requestHostCallback = function(callback) {
            scheduledHostCallback = callback;
            if (!isMessageLoopRunning) {
                isMessageLoopRunning = true;
                port.postMessage(null);
            }
        };
        requestHostTimeout = function(callback, ms) {
            taskTimeoutID = _setTimeout(function() {
                callback(exports.unstable_now());
            }, ms);
        };
        cancelHostTimeout = function() {
            _clearTimeout(taskTimeoutID);
            taskTimeoutID = -1;
        };
    }
    function push(heap, node) {
        var index = heap.length;
        heap.push(node);
        siftUp(heap, node, index);
    }
    function peek(heap) {
        var first = heap[0];
        return first === undefined ? null : first;
    }
    function pop(heap) {
        var first = heap[0];
        if (first !== undefined) {
            var last = heap.pop();
            if (last !== first) {
                heap[0] = last;
                siftDown(heap, last, 0);
            }
            return first;
        } else return null;
    }
    function siftUp(heap, node, i) {
        var index = i;
        while(true){
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (parent !== undefined && compare(parent, node) > 0) {
                // The parent is larger. Swap positions.
                heap[parentIndex] = node;
                heap[index] = parent;
                index = parentIndex;
            } else // The parent is smaller. Exit.
            return;
        }
    }
    function siftDown(heap, node, i) {
        var index = i;
        var length = heap.length;
        while(index < length){
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.
            if (left !== undefined && compare(left, node) < 0) {
                if (right !== undefined && compare(right, left) < 0) {
                    heap[index] = right;
                    heap[rightIndex] = node;
                    index = rightIndex;
                } else {
                    heap[index] = left;
                    heap[leftIndex] = node;
                    index = leftIndex;
                }
            } else if (right !== undefined && compare(right, node) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
            } else // Neither child is smaller. Exit.
            return;
        }
    }
    function compare(a, b) {
        // Compare sort index first, then task id.
        var diff = a.sortIndex - b.sortIndex;
        return diff !== 0 ? diff : a.id - b.id;
    }
    // TODO: Use symbols?
    var ImmediatePriority = 1;
    var UserBlockingPriority = 2;
    var NormalPriority = 3;
    var LowPriority = 4;
    var IdlePriority = 5;
    function markTaskErrored(task, ms) {
    }
    /* eslint-disable no-var */ // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111
    var maxSigned31BitInt = 1073741823; // Times out immediately
    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out
    var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
    var NORMAL_PRIORITY_TIMEOUT = 5000;
    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out
    var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap
    var taskQueue = [];
    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.
    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
    var currentTask = null;
    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.
    var isPerformingWork = false;
    var isHostCallbackScheduled = false;
    var isHostTimeoutScheduled = false;
    function advanceTimers(currentTime) {
        // Check for tasks that are no longer delayed and add them to the queue.
        var timer = peek(timerQueue);
        while(timer !== null){
            if (timer.callback === null) // Timer was cancelled.
            pop(timerQueue);
            else if (timer.startTime <= currentTime) {
                // Timer fired. Transfer to the task queue.
                pop(timerQueue);
                timer.sortIndex = timer.expirationTime;
                push(taskQueue, timer);
            } else // Remaining timers are pending.
            return;
            timer = peek(timerQueue);
        }
    }
    function handleTimeout(currentTime) {
        isHostTimeoutScheduled = false;
        advanceTimers(currentTime);
        if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            } else {
                var firstTimer = peek(timerQueue);
                if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
        }
    }
    function flushWork(hasTimeRemaining, initialTime) {
        isHostCallbackScheduled = false;
        if (isHostTimeoutScheduled) {
            // We scheduled a timeout but it's no longer needed. Cancel it.
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
        }
        isPerformingWork = true;
        var previousPriorityLevel = currentPriorityLevel;
        try {
            if (enableProfiling) try {
                return workLoop(hasTimeRemaining, initialTime);
            } catch (error) {
                if (currentTask !== null) {
                    var currentTime = exports.unstable_now();
                    markTaskErrored(currentTask, currentTime);
                    currentTask.isQueued = false;
                }
                throw error;
            }
            else // No catch in prod code path.
            return workLoop(hasTimeRemaining, initialTime);
        } finally{
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
        }
    }
    function workLoop(hasTimeRemaining, initialTime) {
        var currentTime = initialTime;
        advanceTimers(currentTime);
        currentTask = peek(taskQueue);
        while(currentTask !== null && !enableSchedulerDebugging){
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || exports.unstable_shouldYield())) break;
            var callback = currentTask.callback;
            if (typeof callback === 'function') {
                currentTask.callback = null;
                currentPriorityLevel = currentTask.priorityLevel;
                var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
                var continuationCallback = callback(didUserCallbackTimeout);
                currentTime = exports.unstable_now();
                if (typeof continuationCallback === 'function') currentTask.callback = continuationCallback;
                else if (currentTask === peek(taskQueue)) pop(taskQueue);
                advanceTimers(currentTime);
            } else pop(taskQueue);
            currentTask = peek(taskQueue);
        } // Return whether there's additional work
        if (currentTask !== null) return true;
        else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            return false;
        }
    }
    function unstable_runWithPriority(priorityLevel, eventHandler) {
        switch(priorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
                break;
            default:
                priorityLevel = NormalPriority;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_next(eventHandler) {
        var priorityLevel;
        switch(currentPriorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
                // Shift down to normal priority
                priorityLevel = NormalPriority;
                break;
            default:
                // Anything lower than normal priority should remain at the current level.
                priorityLevel = currentPriorityLevel;
                break;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_wrapCallback(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
            // This is a fork of runWithPriority, inlined for performance.
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
                return callback.apply(this, arguments);
            } finally{
                currentPriorityLevel = previousPriorityLevel;
            }
        };
    }
    function unstable_scheduleCallback(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now();
        var startTime;
        if (typeof options === 'object' && options !== null) {
            var delay = options.delay;
            if (typeof delay === 'number' && delay > 0) startTime = currentTime + delay;
            else startTime = currentTime;
        } else startTime = currentTime;
        var timeout;
        switch(priorityLevel){
            case ImmediatePriority:
                timeout = IMMEDIATE_PRIORITY_TIMEOUT;
                break;
            case UserBlockingPriority:
                timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
                break;
            case IdlePriority:
                timeout = IDLE_PRIORITY_TIMEOUT;
                break;
            case LowPriority:
                timeout = LOW_PRIORITY_TIMEOUT;
                break;
            case NormalPriority:
            default:
                timeout = NORMAL_PRIORITY_TIMEOUT;
                break;
        }
        var expirationTime = startTime + timeout;
        var newTask = {
            id: taskIdCounter++,
            callback: callback,
            priorityLevel: priorityLevel,
            startTime: startTime,
            expirationTime: expirationTime,
            sortIndex: -1
        };
        if (startTime > currentTime) {
            // This is a delayed task.
            newTask.sortIndex = startTime;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
                // All tasks are delayed, and this is the task with the earliest delay.
                if (isHostTimeoutScheduled) // Cancel an existing timeout.
                cancelHostTimeout();
                else isHostTimeoutScheduled = true;
                 // Schedule a timeout.
                requestHostTimeout(handleTimeout, startTime - currentTime);
            }
        } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            // wait until the next time we yield.
            if (!isHostCallbackScheduled && !isPerformingWork) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            }
        }
        return newTask;
    }
    function unstable_pauseExecution() {
    }
    function unstable_continueExecution() {
        if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
        }
    }
    function unstable_getFirstCallbackNode() {
        return peek(taskQueue);
    }
    function unstable_cancelCallback(task) {
        // remove from the queue because you can't remove arbitrary nodes from an
        // array based heap, only the first one.)
        task.callback = null;
    }
    function unstable_getCurrentPriorityLevel() {
        return currentPriorityLevel;
    }
    var unstable_requestPaint = requestPaint;
    var unstable_Profiling = null;
    exports.unstable_IdlePriority = IdlePriority;
    exports.unstable_ImmediatePriority = ImmediatePriority;
    exports.unstable_LowPriority = LowPriority;
    exports.unstable_NormalPriority = NormalPriority;
    exports.unstable_Profiling = unstable_Profiling;
    exports.unstable_UserBlockingPriority = UserBlockingPriority;
    exports.unstable_cancelCallback = unstable_cancelCallback;
    exports.unstable_continueExecution = unstable_continueExecution;
    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
    exports.unstable_next = unstable_next;
    exports.unstable_pauseExecution = unstable_pauseExecution;
    exports.unstable_requestPaint = unstable_requestPaint;
    exports.unstable_runWithPriority = unstable_runWithPriority;
    exports.unstable_scheduleCallback = unstable_scheduleCallback;
    exports.unstable_wrapCallback = unstable_wrapCallback;
})();

},{}],"hGxqN":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/scheduler-tracing.development.js');

},{"./cjs/scheduler-tracing.development.js":"eJRCv"}],"eJRCv":[function(require,module,exports) {
/** @license React v0.20.2
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    var DEFAULT_THREAD_ID = 0; // Counters used to generate unique IDs.
    var interactionIDCounter = 0;
    var threadIDCounter = 0; // Set of currently traced interactions.
    // Interactions "stack"–
    // Meaning that newly traced interactions are appended to the previously active set.
    // When an interaction goes out of scope, the previous set (if any) is restored.
    exports.__interactionsRef = null; // Listener(s) to notify when interactions begin and end.
    exports.__subscriberRef = null;
    exports.__interactionsRef = {
        current: new Set()
    };
    exports.__subscriberRef = {
        current: null
    };
    function unstable_clear(callback) {
        var prevInteractions = exports.__interactionsRef.current;
        exports.__interactionsRef.current = new Set();
        try {
            return callback();
        } finally{
            exports.__interactionsRef.current = prevInteractions;
        }
    }
    function unstable_getCurrent() {
        return exports.__interactionsRef.current;
    }
    function unstable_getThreadID() {
        return ++threadIDCounter;
    }
    function unstable_trace(name, timestamp, callback) {
        var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;
        var interaction = {
            __count: 1,
            id: interactionIDCounter++,
            name: name,
            timestamp: timestamp
        };
        var prevInteractions = exports.__interactionsRef.current; // Traced interactions should stack/accumulate.
        // To do that, clone the current interactions.
        // The previous set will be restored upon completion.
        var interactions = new Set(prevInteractions);
        interactions.add(interaction);
        exports.__interactionsRef.current = interactions;
        var subscriber = exports.__subscriberRef.current;
        var returnValue;
        try {
            if (subscriber !== null) subscriber.onInteractionTraced(interaction);
        } finally{
            try {
                if (subscriber !== null) subscriber.onWorkStarted(interactions, threadID);
            } finally{
                try {
                    returnValue = callback();
                } finally{
                    exports.__interactionsRef.current = prevInteractions;
                    try {
                        if (subscriber !== null) subscriber.onWorkStopped(interactions, threadID);
                    } finally{
                        interaction.__count--; // If no async work was scheduled for this interaction,
                        // Notify subscribers that it's completed.
                        if (subscriber !== null && interaction.__count === 0) subscriber.onInteractionScheduledWorkCompleted(interaction);
                    }
                }
            }
        }
        return returnValue;
    }
    function unstable_wrap(callback) {
        var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;
        var wrappedInteractions = exports.__interactionsRef.current;
        var subscriber = exports.__subscriberRef.current;
        if (subscriber !== null) subscriber.onWorkScheduled(wrappedInteractions, threadID);
         // Update the pending async work count for the current interactions.
        // Update after calling subscribers in case of error.
        wrappedInteractions.forEach(function(interaction) {
            interaction.__count++;
        });
        var hasRun = false;
        function wrapped() {
            var prevInteractions = exports.__interactionsRef.current;
            exports.__interactionsRef.current = wrappedInteractions;
            subscriber = exports.__subscriberRef.current;
            try {
                var returnValue;
                try {
                    if (subscriber !== null) subscriber.onWorkStarted(wrappedInteractions, threadID);
                } finally{
                    try {
                        returnValue = callback.apply(undefined, arguments);
                    } finally{
                        exports.__interactionsRef.current = prevInteractions;
                        if (subscriber !== null) subscriber.onWorkStopped(wrappedInteractions, threadID);
                    }
                }
                return returnValue;
            } finally{
                if (!hasRun) {
                    // We only expect a wrapped function to be executed once,
                    // But in the event that it's executed more than once–
                    // Only decrement the outstanding interaction counts once.
                    hasRun = true; // Update pending async counts for all wrapped interactions.
                    // If this was the last scheduled async work for any of them,
                    // Mark them as completed.
                    wrappedInteractions.forEach(function(interaction) {
                        interaction.__count--;
                        if (subscriber !== null && interaction.__count === 0) subscriber.onInteractionScheduledWorkCompleted(interaction);
                    });
                }
            }
        }
        wrapped.cancel = function cancel() {
            subscriber = exports.__subscriberRef.current;
            try {
                if (subscriber !== null) subscriber.onWorkCanceled(wrappedInteractions, threadID);
            } finally{
                // Update pending async counts for all wrapped interactions.
                // If this was the last scheduled async work for any of them,
                // Mark them as completed.
                wrappedInteractions.forEach(function(interaction) {
                    interaction.__count--;
                    if (subscriber && interaction.__count === 0) subscriber.onInteractionScheduledWorkCompleted(interaction);
                });
            }
        };
        return wrapped;
    }
    var subscribers = null;
    subscribers = new Set();
    function unstable_subscribe(subscriber) {
        subscribers.add(subscriber);
        if (subscribers.size === 1) exports.__subscriberRef.current = {
            onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
            onInteractionTraced: onInteractionTraced,
            onWorkCanceled: onWorkCanceled,
            onWorkScheduled: onWorkScheduled,
            onWorkStarted: onWorkStarted,
            onWorkStopped: onWorkStopped
        };
    }
    function unstable_unsubscribe(subscriber) {
        subscribers.delete(subscriber);
        if (subscribers.size === 0) exports.__subscriberRef.current = null;
    }
    function onInteractionTraced(interaction) {
        var didCatchError = false;
        var caughtError = null;
        subscribers.forEach(function(subscriber) {
            try {
                subscriber.onInteractionTraced(interaction);
            } catch (error) {
                if (!didCatchError) {
                    didCatchError = true;
                    caughtError = error;
                }
            }
        });
        if (didCatchError) throw caughtError;
    }
    function onInteractionScheduledWorkCompleted(interaction) {
        var didCatchError = false;
        var caughtError = null;
        subscribers.forEach(function(subscriber) {
            try {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
            } catch (error) {
                if (!didCatchError) {
                    didCatchError = true;
                    caughtError = error;
                }
            }
        });
        if (didCatchError) throw caughtError;
    }
    function onWorkScheduled(interactions, threadID) {
        var didCatchError = false;
        var caughtError = null;
        subscribers.forEach(function(subscriber) {
            try {
                subscriber.onWorkScheduled(interactions, threadID);
            } catch (error) {
                if (!didCatchError) {
                    didCatchError = true;
                    caughtError = error;
                }
            }
        });
        if (didCatchError) throw caughtError;
    }
    function onWorkStarted(interactions, threadID) {
        var didCatchError = false;
        var caughtError = null;
        subscribers.forEach(function(subscriber) {
            try {
                subscriber.onWorkStarted(interactions, threadID);
            } catch (error) {
                if (!didCatchError) {
                    didCatchError = true;
                    caughtError = error;
                }
            }
        });
        if (didCatchError) throw caughtError;
    }
    function onWorkStopped(interactions, threadID) {
        var didCatchError = false;
        var caughtError = null;
        subscribers.forEach(function(subscriber) {
            try {
                subscriber.onWorkStopped(interactions, threadID);
            } catch (error) {
                if (!didCatchError) {
                    didCatchError = true;
                    caughtError = error;
                }
            }
        });
        if (didCatchError) throw caughtError;
    }
    function onWorkCanceled(interactions, threadID) {
        var didCatchError = false;
        var caughtError = null;
        subscribers.forEach(function(subscriber) {
            try {
                subscriber.onWorkCanceled(interactions, threadID);
            } catch (error) {
                if (!didCatchError) {
                    didCatchError = true;
                    caughtError = error;
                }
            }
        });
        if (didCatchError) throw caughtError;
    }
    exports.unstable_clear = unstable_clear;
    exports.unstable_getCurrent = unstable_getCurrent;
    exports.unstable_getThreadID = unstable_getThreadID;
    exports.unstable_subscribe = unstable_subscribe;
    exports.unstable_trace = unstable_trace;
    exports.unstable_unsubscribe = unstable_unsubscribe;
    exports.unstable_wrap = unstable_wrap;
})();

},{}],"fMyel":[function(require,module,exports) {
function e1(e) {
    return e && "object" == typeof e && "default" in e ? e.default : e;
}
var n1 = e1(require("lodash.isequal")), r1 = require("react"), t1 = e1(r1), o1 = require("@inertiajs/inertia");
function i1() {
    return (i1 = Object.assign || function(e) {
        for(var n = 1; n < arguments.length; n++){
            var r = arguments[n];
            for(var t in r)Object.prototype.hasOwnProperty.call(r, t) && (e[t] = r[t]);
        }
        return e;
    }).apply(this, arguments);
}
function a1(e, n) {
    var t = r1.useState(function() {
        var r = o1.Inertia.restore(n);
        return void 0 !== r ? r : e;
    }), i = t[0], a = t[1];
    return r1.useEffect(function() {
        o1.Inertia.remember(i, n);
    }, [
        i,
        n
    ]), [
        i,
        a
    ];
}
var u1 = r1.createContext();
u1.displayName = "InertiaPageContext";
var c1 = r1.createContext();
function s1(e2) {
    var n2 = e2.children, t2 = e2.initialPage, a = e2.resolveComponent, s = e2.titleCallback, l = e2.onHeadUpdate, f = r1.useState({
        component: e2.initialComponent || null,
        page: t2,
        key: null
    }), p = f[0], d = f[1], v = r1.useMemo(function() {
        return o1.createHeadManager("undefined" == typeof window, s || function(e) {
            return e;
        }, l || function() {
        });
    }, []);
    if (r1.useEffect(function() {
        o1.Inertia.init({
            initialPage: t2,
            resolveComponent: a,
            swapComponent: function(e3) {
                var n = e3.component, r = e3.page, t = e3.preserveState;
                try {
                    return d(function(e) {
                        return {
                            component: n,
                            page: r,
                            key: t ? e.key : Date.now()
                        };
                    }), Promise.resolve();
                } catch (e) {
                    return Promise.reject(e);
                }
            }
        });
    }, []), !p.component) return r1.createElement(c1.Provider, {
        value: v
    }, r1.createElement(u1.Provider, {
        value: p.page
    }, null));
    var m = n2 || function(e4) {
        var n3 = e4.Component, t = e4.props, o = r1.createElement(n3, i1({
            key: e4.key
        }, t));
        return "function" == typeof n3.layout ? n3.layout(o) : Array.isArray(n3.layout) ? n3.layout.concat(o).reverse().reduce(function(e, n) {
            return r1.createElement(n, i1({
                children: e
            }, t));
        }) : o;
    };
    return r1.createElement(c1.Provider, {
        value: v
    }, r1.createElement(u1.Provider, {
        value: p.page
    }, m({
        Component: p.component,
        key: p.key,
        props: p.page.props
    })));
}
function l1(e5) {
    var n4, o, i = e5.children, a = e5.title, u = r1.useContext(c1), s = r1.useMemo(function() {
        return u.createProvider();
    }, [
        u
    ]);
    return r1.useEffect(function() {
        return function() {
            s.disconnect();
        };
    }, [
        s
    ]), s.update((n4 = i, o = (Array.isArray(n4) ? n4 : [
        n4
    ]).filter(function(e) {
        return e;
    }).map(function(e6) {
        return (function(e7) {
            return (function e8(n5) {
                var r2 = function(e) {
                    var n6 = Object.keys(e.props).reduce(function(n, r) {
                        if ([
                            "head-key",
                            "children",
                            "dangerouslySetInnerHTML"
                        ].includes(r)) return n;
                        var t = e.props[r];
                        return "" === t ? n + " " + r : n + " " + r + '="' + t + '"';
                    }, "");
                    return "<" + e.type + n6 + ">";
                }(n5);
                return n5.props.children && (r2 += (function(n7) {
                    return "string" == typeof n7.props.children ? n7.props.children : n7.props.children.reduce(function(n, r) {
                        return n + e8(r);
                    }, "");
                })(n5)), n5.props.dangerouslySetInnerHTML && (r2 += n5.props.dangerouslySetInnerHTML.__html), (function(e) {
                    return [
                        "area",
                        "base",
                        "br",
                        "col",
                        "embed",
                        "hr",
                        "img",
                        "input",
                        "keygen",
                        "link",
                        "meta",
                        "param",
                        "source",
                        "track",
                        "wbr"
                    ].indexOf(e.type) > -1;
                })(n5) || (r2 += "</" + n5.type + ">"), r2;
            })(function(e) {
                return t1.cloneElement(e, {
                    inertia: void 0 !== e.props["head-key"] ? e.props["head-key"] : ""
                });
            }(e7));
        })(e6);
    }), a && !o.find(function(e) {
        return e.startsWith("<title");
    }) && o.push("<title inertia>" + a + "</title>"), o)), null;
}
c1.displayName = "InertiaHeadContext", s1.displayName = "Inertia";
var f1 = [
    "children",
    "as",
    "data",
    "href",
    "method",
    "preserveScroll",
    "preserveState",
    "replace",
    "only",
    "headers",
    "onClick",
    "onCancelToken",
    "onBefore",
    "onStart",
    "onProgress",
    "onFinish",
    "onCancel",
    "onSuccess",
    "onError"
], p1 = function() {
}, d1 = r1.forwardRef(function(e9, n8) {
    var t3 = e9.children, a = e9.as, u = void 0 === a ? "a" : a, c = e9.data, s = void 0 === c ? {
    } : c, l = e9.href, d = e9.method, v = void 0 === d ? "get" : d, m = e9.preserveScroll, h = void 0 !== m && m, y = e9.preserveState, g = void 0 === y ? null : y, k = e9.replace, S = void 0 !== k && k, C = e9.only, b = void 0 === C ? [] : C, P = e9.headers, E = void 0 === P ? {
    } : P, x = e9.onClick, I = void 0 === x ? p1 : x, w = e9.onCancelToken, T = void 0 === w ? p1 : w, O = e9.onBefore, j = void 0 === O ? p1 : O, L = e9.onStart, H = void 0 === L ? p1 : L, A = e9.onProgress, F = void 0 === A ? p1 : A, R = e9.onFinish, B = void 0 === R ? p1 : R, D = e9.onCancel, M = void 0 === D ? p1 : D, N = e9.onSuccess, q = void 0 === N ? p1 : N, U = e9.onError, J = void 0 === U ? p1 : U, W = function(e, n) {
        if (null == e) return {
        };
        var r, t, o = {
        }, i = Object.keys(e);
        for(t = 0; t < i.length; t++)n.indexOf(r = i[t]) >= 0 || (o[r] = e[r]);
        return o;
    }(e9, f1), _ = r1.useCallback(function(e) {
        I(e), o1.shouldIntercept(e) && (e.preventDefault(), o1.Inertia.visit(l, {
            data: s,
            method: v,
            preserveScroll: h,
            preserveState: null != g ? g : "get" !== v,
            replace: S,
            only: b,
            headers: E,
            onCancelToken: T,
            onBefore: j,
            onStart: H,
            onProgress: F,
            onFinish: B,
            onCancel: M,
            onSuccess: q,
            onError: J
        }));
    }, [
        s,
        l,
        v,
        h,
        g,
        S,
        b,
        E,
        I,
        T,
        j,
        H,
        F,
        B,
        M,
        q,
        J
    ]);
    u = u.toLowerCase(), v = v.toLowerCase();
    var Q = o1.mergeDataIntoQueryString(v, l || "", s);
    return l = Q[0], s = Q[1], "a" === u && "get" !== v && console.warn('Creating POST/PUT/PATCH/DELETE <a> links is discouraged as it causes "Open Link in New Tab/Window" accessibility issues.\n\nPlease specify a more appropriate element using the "as" attribute. For example:\n\n<InertiaLink href="' + l + '" method="' + v + '" as="button">...</InertiaLink>'), r1.createElement(u, i1({
    }, W, "a" === u ? {
        href: l
    } : {
    }, {
        ref: n8,
        onClick: _
    }), t3);
});
exports.App = s1, exports.Head = l1, exports.InertiaApp = s1, exports.InertiaHead = l1, exports.InertiaLink = d1, exports.Link = d1, exports.app = s1, exports.createInertiaApp = function(e10) {
    try {
        var n, t, o, i, a, u, c;
        t = void 0 === (n = e10.id) ? "app" : n, o = e10.resolve, i = e10.setup, a = e10.title, u = e10.page, c = e10.render;
        var l = "undefined" == typeof window, f = l ? null : document.getElementById(t), p = u || JSON.parse(f.dataset.page), d = function(e11) {
            return Promise.resolve(o(e11)).then(function(e) {
                return e.default || e;
            });
        }, v = [];
        return Promise.resolve(d(p.component).then(function(e12) {
            return i({
                el: f,
                App: s1,
                props: {
                    initialPage: p,
                    initialComponent: e12,
                    resolveComponent: d,
                    titleCallback: a,
                    onHeadUpdate: l ? function(e) {
                        return v = e;
                    } : null
                }
            });
        })).then(function(e13) {
            return (function() {
                if (l) return Promise.resolve(c(r1.createElement("div", {
                    id: t,
                    "data-page": JSON.stringify(p)
                }, e13))).then(function(e) {
                    return {
                        head: v,
                        body: e
                    };
                });
            })();
        });
    } catch (e) {
        return Promise.reject(e);
    }
}, exports.link = d1, exports.useForm = function() {
    var e14 = [].slice.call(arguments), t4 = r1.useRef(null), u = "string" == typeof e14[0] ? e14[0] : null, c = ("string" == typeof e14[0] ? e14[1] : e14[0]) || {
    }, s = r1.useRef(null), l = r1.useRef(null), f = u ? a1(c, u + ":data") : r1.useState(c), p = f[0], d = f[1], v = u ? a1({
    }, u + ":errors") : r1.useState({
    }), m = v[0], h = v[1], y = r1.useState(!1), g = y[0], k = y[1], S = r1.useState(!1), C = S[0], b = S[1], P = r1.useState(null), E = P[0], x = P[1], I = r1.useState(!1), w = I[0], T = I[1], O = r1.useState(!1), j = O[0], L = O[1], H = function(e) {
        return e;
    };
    r1.useEffect(function() {
        return t4.current = !0, function() {
            t4.current = !1;
        };
    }, []);
    var A = r1.useCallback(function(e15, n, r) {
        void 0 === r && (r = {
        });
        var a = i1({
        }, r, {
            onCancelToken: function(e) {
                if (s.current = e, r.onCancelToken) return r.onCancelToken(e);
            },
            onBefore: function(e) {
                if (T(!1), L(!1), clearTimeout(l.current), r.onBefore) return r.onBefore(e);
            },
            onStart: function(e) {
                if (b(!0), r.onStart) return r.onStart(e);
            },
            onProgress: function(e) {
                if (x(e), r.onProgress) return r.onProgress(e);
            },
            onSuccess: function(e) {
                if (t4.current && (b(!1), x(null), h({
                }), k(!1), T(!0), L(!0), l.current = setTimeout(function() {
                    t4.current && L(!1);
                }, 2000)), r.onSuccess) return r.onSuccess(e);
            },
            onError: function(e) {
                if (t4.current && (b(!1), x(null), h(e), k(!0)), r.onError) return r.onError(e);
            },
            onCancel: function() {
                if (t4.current && (b(!1), x(null)), r.onCancel) return r.onCancel();
            },
            onFinish: function() {
                if (t4.current && (b(!1), x(null)), s.current = null, r.onFinish) return r.onFinish();
            }
        });
        "delete" === e15 ? o1.Inertia.delete(n, i1({
        }, a, {
            data: H(p)
        })) : o1.Inertia[e15](n, H(p), a);
    }, [
        p,
        h
    ]);
    return {
        data: p,
        setData: function(e, n9) {
            var r;
            d("string" == typeof e ? i1({
            }, p, ((r = {
            })[e] = n9, r)) : "function" == typeof e ? function(n) {
                return e(n);
            } : e);
        },
        isDirty: !n1(p, c),
        errors: m,
        hasErrors: g,
        processing: C,
        progress: E,
        wasSuccessful: w,
        recentlySuccessful: j,
        transform: function(e) {
            H = e;
        },
        reset: function() {
            var e16 = [].slice.call(arguments);
            d(0 === e16.length ? c : Object.keys(c).filter(function(n) {
                return e16.includes(n);
            }).reduce(function(e, n) {
                return e[n] = c[n], e;
            }, i1({
            }, p)));
        },
        clearErrors: function() {
            var e = [].slice.call(arguments);
            h(Object.keys(m).reduce(function(n, r) {
                var t;
                return i1({
                }, n, e.length > 0 && !e.includes(r) ? ((t = {
                })[r] = m[r], t) : {
                });
            }, {
            })), k(Object.keys(m).length > 0);
        },
        submit: A,
        get: function(e, n) {
            A("get", e, n);
        },
        post: function(e, n) {
            A("post", e, n);
        },
        put: function(e, n) {
            A("put", e, n);
        },
        patch: function(e, n) {
            A("patch", e, n);
        },
        delete: function(e, n) {
            A("delete", e, n);
        },
        cancel: function() {
            s.current && s.current.cancel();
        }
    };
}, exports.usePage = function() {
    var e = r1.useContext(u1);
    if (!e) throw new Error("usePage must be used within the Inertia component");
    return e;
}, exports.useRemember = a1, exports.useRememberedState = function(e, n) {
    return console.warn('The "useRememberedState" hook has been deprecated and will be removed in a future release. Use "useRemember" instead.'), a1(e, n);
};

},{"lodash.isequal":"hIX62","react":"6fep5","@inertiajs/inertia":"9NmSu"}],"hIX62":[function(require,module,exports) {
var global = arguments[3];
/**
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */ /** Used as the size to enable large array optimizations. */ var LARGE_ARRAY_SIZE = 200;
/** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = '__lodash_hash_undefined__';
/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
/** Used as references for various `Number` constants. */ var MAX_SAFE_INTEGER = 9007199254740991;
/** `Object#toString` result references. */ var argsTag = '[object Arguments]', arrayTag = '[object Array]', asyncTag = '[object AsyncFunction]', boolTag = '[object Boolean]', dateTag = '[object Date]', errorTag = '[object Error]', funcTag = '[object Function]', genTag = '[object GeneratorFunction]', mapTag = '[object Map]', numberTag = '[object Number]', nullTag = '[object Null]', objectTag = '[object Object]', promiseTag = '[object Promise]', proxyTag = '[object Proxy]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', symbolTag = '[object Symbol]', undefinedTag = '[object Undefined]', weakMapTag = '[object WeakMap]';
var arrayBufferTag = '[object ArrayBuffer]', dataViewTag = '[object DataView]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';
/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */ var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
/** Used to detect host constructors (Safari). */ var reIsHostCtor = /^\[object .+?Constructor\]$/;
/** Used to detect unsigned integer values. */ var reIsUint = /^(?:0|[1-9]\d*)$/;
/** Used to identify `toStringTag` values of typed arrays. */ var typedArrayTags = {
};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
/** Detect free variable `global` from Node.js. */ var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
/** Detect free variable `self`. */ var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
/** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function('return this')();
/** Detect free variable `exports`. */ var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
/** Detect free variable `module`. */ var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */ var moduleExports = freeModule && freeModule.exports === freeExports;
/** Detect free variable `process` from Node.js. */ var freeProcess = moduleExports && freeGlobal.process;
/** Used to access faster Node.js helpers. */ var nodeUtil = function() {
    try {
        return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {
    }
}();
/* Node.js helper references. */ var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */ function arrayFilter(array, predicate) {
    var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
    while(++index < length){
        var value = array[index];
        if (predicate(value, index, array)) result[resIndex++] = value;
    }
    return result;
}
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */ function arrayPush(array, values) {
    var index = -1, length = values.length, offset = array.length;
    while(++index < length)array[offset + index] = values[index];
    return array;
}
/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */ function arraySome(array, predicate) {
    var index = -1, length = array == null ? 0 : array.length;
    while(++index < length){
        if (predicate(array[index], index, array)) return true;
    }
    return false;
}
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */ function baseTimes(n, iteratee) {
    var index = -1, result = Array(n);
    while(++index < n)result[index] = iteratee(index);
    return result;
}
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */ function baseUnary(func) {
    return function(value) {
        return func(value);
    };
}
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function cacheHas(cache, key) {
    return cache.has(key);
}
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */ function getValue(object, key) {
    return object == null ? undefined : object[key];
}
/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */ function mapToArray(map) {
    var index = -1, result = Array(map.size);
    map.forEach(function(value, key) {
        result[++index] = [
            key,
            value
        ];
    });
    return result;
}
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */ function overArg(func, transform) {
    return function(arg) {
        return func(transform(arg));
    };
}
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */ function setToArray(set) {
    var index = -1, result = Array(set.size);
    set.forEach(function(value) {
        result[++index] = value;
    });
    return result;
}
/** Used for built-in method references. */ var arrayProto = Array.prototype, funcProto = Function.prototype, objectProto = Object.prototype;
/** Used to detect overreaching core-js shims. */ var coreJsData = root['__core-js_shared__'];
/** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/** Used to detect methods masquerading as native. */ var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? 'Symbol(src)_1.' + uid : '';
}();
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */ var nativeObjectToString = objectProto.toString;
/** Used to detect if a method is native. */ var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
/** Built-in value references. */ var Buffer = moduleExports ? root.Buffer : undefined, Symbol = root.Symbol, Uint8Array = root.Uint8Array, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, symToStringTag = Symbol ? Symbol.toStringTag : undefined;
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeGetSymbols = Object.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined, nativeKeys = overArg(Object.keys, Object);
/* Built-in method references that are verified to be native. */ var DataView = getNative(root, 'DataView'), Map = getNative(root, 'Map'), Promise = getNative(root, 'Promise'), Set = getNative(root, 'Set'), WeakMap = getNative(root, 'WeakMap'), nativeCreate = getNative(Object, 'create');
/** Used to detect maps, sets, and weakmaps. */ var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);
/** Used to convert symbols to primitives and strings. */ var symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function Hash(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while(++index < length){
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}
/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */ function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {
    };
    this.size = 0;
}
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
}
/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
}
/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}
/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */ function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
    return this;
}
// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;
/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function ListCache(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while(++index < length){
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */ function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
}
/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function listCacheDelete(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) return false;
    var lastIndex = data.length - 1;
    if (index == lastIndex) data.pop();
    else splice.call(data, index, 1);
    --this.size;
    return true;
}
/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function listCacheGet(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
}
/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
}
/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */ function listCacheSet(key, value) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
        ++this.size;
        data.push([
            key,
            value
        ]);
    } else data[index][1] = value;
    return this;
}
// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;
/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function MapCache(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while(++index < length){
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}
/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */ function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
    };
}
/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function mapCacheDelete(key) {
    var result = getMapData(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
}
/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function mapCacheGet(key) {
    return getMapData(this, key).get(key);
}
/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function mapCacheHas(key) {
    return getMapData(this, key).has(key);
}
/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */ function mapCacheSet(key, value) {
    var data = getMapData(this, key), size = data.size;
    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
}
// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;
/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */ function SetCache(values) {
    var index = -1, length = values == null ? 0 : values.length;
    this.__data__ = new MapCache;
    while(++index < length)this.add(values[index]);
}
/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */ function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
}
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */ function setCacheHas(value) {
    return this.__data__.has(value);
}
// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;
/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function Stack(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
}
/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */ function stackClear() {
    this.__data__ = new ListCache;
    this.size = 0;
}
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function stackDelete(key) {
    var data = this.__data__, result = data['delete'](key);
    this.size = data.size;
    return result;
}
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function stackGet(key) {
    return this.__data__.get(key);
}
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function stackHas(key) {
    return this.__data__.has(key);
}
/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */ function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
            pairs.push([
                key,
                value
            ]);
            this.size = ++data.size;
            return this;
        }
        data = this.__data__ = new MapCache(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
}
// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;
/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */ function arrayLikeKeys(value, inherited) {
    var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
    for(var key in value)if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.
    isIndex(key, length)))) result.push(key);
    return result;
}
/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */ function assocIndexOf(array, key) {
    var length = array.length;
    while(length--){
        if (eq(array[length][0], key)) return length;
    }
    return -1;
}
/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */ function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}
/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */ function baseGetTag(value) {
    if (value == null) return value === undefined ? undefinedTag : nullTag;
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}
/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */ function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
}
/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */ function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) return true;
    if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) return value !== value && other !== other;
    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}
/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */ function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;
    var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
    if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) return false;
        objIsArr = true;
        objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'), othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
        if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack);
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
    }
    if (!isSameTag) return false;
    stack || (stack = new Stack);
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}
/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */ function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) return false;
    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
}
/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */ function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}
/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */ function baseKeys(object) {
    if (!isPrototype(object)) return nativeKeys(object);
    var result = [];
    for(var key in Object(object))if (hasOwnProperty.call(object, key) && key != 'constructor') result.push(key);
    return result;
}
/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */ function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
    if (arrLength != othLength && !(isPartial && othLength > arrLength)) return false;
    // Assume cyclic values are equal.
    var stacked = stack.get(array);
    if (stacked && stack.get(other)) return stacked == other;
    var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache : undefined;
    stack.set(array, other);
    stack.set(other, array);
    // Ignore non-index properties.
    while(++index < arrLength){
        var arrValue = array[index], othValue1 = other[index];
        if (customizer) var compared = isPartial ? customizer(othValue1, arrValue, index, other, array, stack) : customizer(arrValue, othValue1, index, array, other, stack);
        if (compared !== undefined) {
            if (compared) continue;
            result = false;
            break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
            if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) return seen.push(othIndex);
            })) {
                result = false;
                break;
            }
        } else if (!(arrValue === othValue1 || equalFunc(arrValue, othValue1, bitmask, customizer, stack))) {
            result = false;
            break;
        }
    }
    stack['delete'](array);
    stack['delete'](other);
    return result;
}
/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */ function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch(tag){
        case dataViewTag:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) return false;
            object = object.buffer;
            other = other.buffer;
        case arrayBufferTag:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) return false;
            return true;
        case boolTag:
        case dateTag:
        case numberTag:
            // Coerce booleans to `1` or `0` and dates to milliseconds.
            // Invalid dates are coerced to `NaN`.
            return eq(+object, +other);
        case errorTag:
            return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
            // Coerce regexes to strings and treat strings, primitives and objects,
            // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
            // for more details.
            return object == other + '';
        case mapTag:
            var convert = mapToArray;
        case setTag:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
            convert || (convert = setToArray);
            if (object.size != other.size && !isPartial) return false;
            // Assume cyclic values are equal.
            var stacked = stack.get(object);
            if (stacked) return stacked == other;
            bitmask |= COMPARE_UNORDERED_FLAG;
            // Recursively compare objects (susceptible to call stack limits).
            stack.set(object, other);
            var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack['delete'](object);
            return result;
        case symbolTag:
            if (symbolValueOf) return symbolValueOf.call(object) == symbolValueOf.call(other);
    }
    return false;
}
/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */ function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
    if (objLength != othLength && !isPartial) return false;
    var index = objLength;
    while(index--){
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) return false;
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(object);
    if (stacked && stack.get(other)) return stacked == other;
    var result = true;
    stack.set(object, other);
    stack.set(other, object);
    var skipCtor = isPartial;
    while(++index < objLength){
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result = false;
            break;
        }
        skipCtor || (skipCtor = key == 'constructor');
    }
    if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) result = false;
    }
    stack['delete'](object);
    stack['delete'](other);
    return result;
}
/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */ function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
}
/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */ function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
}
/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */ function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
}
/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */ function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
    try {
        value[symToStringTag] = undefined;
        var unmasked = true;
    } catch (e) {
    }
    var result = nativeObjectToString.call(value);
    if (unmasked) {
        if (isOwn) value[symToStringTag] = tag;
        else delete value[symToStringTag];
    }
    return result;
}
/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */ var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
    if (object == null) return [];
    object = Object(object);
    return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
    });
};
/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */ var getTag = baseGetTag;
// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set) != setTag || WeakMap && getTag(new WeakMap) != weakMapTag) getTag = function(value) {
    var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : '';
    if (ctorString) switch(ctorString){
        case dataViewCtorString:
            return dataViewTag;
        case mapCtorString:
            return mapTag;
        case promiseCtorString:
            return promiseTag;
        case setCtorString:
            return setTag;
        case weakMapCtorString:
            return weakMapTag;
    }
    return result;
};
/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */ function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */ function isKeyable(value) {
    var type = typeof value;
    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
}
/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */ function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
}
/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */ function isPrototype(value) {
    var Ctor = value && value.constructor, proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
    return value === proto;
}
/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */ function objectToString(value) {
    return nativeObjectToString.call(value);
}
/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */ function toSource(func) {
    if (func != null) {
        try {
            return funcToString.call(func);
        } catch (e) {
        }
        try {
            return func + '';
        } catch (e1) {
        }
    }
    return '';
}
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */ function eq(value, other) {
    return value === other || value !== value && other !== other;
}
/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */ var isArguments = baseIsArguments(function() {
    return arguments;
}()) ? baseIsArguments : function(value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */ var isArray = Array.isArray;
/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */ function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
}
/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */ var isBuffer = nativeIsBuffer || stubFalse;
/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */ function isEqual(value, other) {
    return baseIsEqual(value, other);
}
/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */ function isFunction(value) {
    if (!isObject(value)) return false;
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 9 which returns 'object' for typed arrays and other constructors.
    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */ function isLength(value) {
    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */ function isObject(value) {
    var type = typeof value;
    return value != null && (type == 'object' || type == 'function');
}
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */ function isObjectLike(value) {
    return value != null && typeof value == 'object';
}
/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */ var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */ function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */ function stubArray() {
    return [];
}
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */ function stubFalse() {
    return false;
}
module.exports = isEqual;

},{}],"9NmSu":[function(require,module,exports) {
function e1(e) {
    return e && "object" == typeof e && "default" in e ? e.default : e;
}
var t1 = e1(require("axios")), n1 = require("qs"), i1 = e1(require("deepmerge"));
function r1() {
    return (r1 = Object.assign || function(e) {
        for(var t = 1; t < arguments.length; t++){
            var n = arguments[t];
            for(var i in n)Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
        }
        return e;
    }).apply(this, arguments);
}
var o1, s1 = {
    modal: null,
    listener: null,
    show: function(e2) {
        var t = this;
        "object" == typeof e2 && (e2 = "All Inertia requests must receive a valid Inertia response, however a plain JSON response was received.<hr>" + JSON.stringify(e2));
        var n = document.createElement("html");
        n.innerHTML = e2, n.querySelectorAll("a").forEach(function(e) {
            return e.setAttribute("target", "_top");
        }), this.modal = document.createElement("div"), this.modal.style.position = "fixed", this.modal.style.width = "100vw", this.modal.style.height = "100vh", this.modal.style.padding = "50px", this.modal.style.boxSizing = "border-box", this.modal.style.backgroundColor = "rgba(0, 0, 0, .6)", this.modal.style.zIndex = 200000, this.modal.addEventListener("click", function() {
            return t.hide();
        });
        var i = document.createElement("iframe");
        if (i.style.backgroundColor = "white", i.style.borderRadius = "5px", i.style.width = "100%", i.style.height = "100%", this.modal.appendChild(i), document.body.prepend(this.modal), document.body.style.overflow = "hidden", !i.contentWindow) throw new Error("iframe not yet ready.");
        i.contentWindow.document.open(), i.contentWindow.document.write(n.outerHTML), i.contentWindow.document.close(), this.listener = this.hideOnEscape.bind(this), document.addEventListener("keydown", this.listener);
    },
    hide: function() {
        this.modal.outerHTML = "", this.modal = null, document.body.style.overflow = "visible", document.removeEventListener("keydown", this.listener);
    },
    hideOnEscape: function(e) {
        27 === e.keyCode && this.hide();
    }
};
function a1(e, t) {
    var n;
    return function() {
        var i = arguments, r = this;
        clearTimeout(n), n = setTimeout(function() {
            return e.apply(r, [].slice.call(i));
        }, t);
    };
}
function c1(e, t, n) {
    for(var i in void 0 === t && (t = new FormData), void 0 === n && (n = null), e = e || {
    })Object.prototype.hasOwnProperty.call(e, i) && d1(t, l1(n, i), e[i]);
    return t;
}
function l1(e, t) {
    return e ? e + "[" + t + "]" : t;
}
function d1(e, t, n) {
    return Array.isArray(n) ? Array.from(n.keys()).forEach(function(i) {
        return d1(e, l1(t, i.toString()), n[i]);
    }) : n instanceof Date ? e.append(t, n.toISOString()) : n instanceof File ? e.append(t, n, n.name) : n instanceof Blob ? e.append(t, n) : "boolean" == typeof n ? e.append(t, n ? "1" : "0") : "string" == typeof n ? e.append(t, n) : "number" == typeof n ? e.append(t, "" + n) : null == n ? e.append(t, "") : void c1(n, e, t);
}
function u(e) {
    return new URL(e.toString(), window.location.toString());
}
function h1(e, t, r) {
    var o = t.toString().includes("http"), s = o || t.toString().startsWith("/"), a = !s && !t.toString().startsWith("#") && !t.toString().startsWith("?"), c = t.toString().includes("?") || e === exports.Method.GET && Object.keys(r).length, l = t.toString().includes("#"), d = new URL(t.toString(), "http://localhost");
    return e === exports.Method.GET && Object.keys(r).length && (d.search = n1.stringify(i1(n1.parse(d.search, {
        ignoreQueryPrefix: !0
    }), r), {
        encodeValuesOnly: !0,
        arrayFormat: "brackets"
    }), r = {
    }), [
        [
            o ? d.protocol + "//" + d.host : "",
            s ? d.pathname : "",
            a ? d.pathname.substring(1) : "",
            c ? d.search : "",
            l ? d.hash : ""
        ].join(""),
        r
    ];
}
function p(e) {
    return (e = new URL(e.href)).hash = "", e;
}
function f(e, t) {
    return document.dispatchEvent(new CustomEvent("inertia:" + e, t));
}
(o1 = exports.Method || (exports.Method = {
})).GET = "get", o1.POST = "post", o1.PUT = "put", o1.PATCH = "patch", o1.DELETE = "delete";
var v1 = function(e) {
    return f("finish", {
        detail: {
            visit: e
        }
    });
}, m1 = function(e) {
    return f("navigate", {
        detail: {
            page: e
        }
    });
}, g1 = function() {
    function e3() {
        this.visitId = null;
    }
    var n2 = e3.prototype;
    return n2.init = function(e) {
        var t = e.resolveComponent, n = e.swapComponent;
        this.page = e.initialPage, this.resolveComponent = t, this.swapComponent = n, this.isBackForwardVisit() ? this.handleBackForwardVisit(this.page) : this.isLocationVisit() ? this.handleLocationVisit(this.page) : this.handleInitialPageVisit(this.page), this.setupEventListeners();
    }, n2.handleInitialPageVisit = function(e) {
        this.page.url += window.location.hash, this.setPage(e, {
            preserveState: !0
        }).then(function() {
            return m1(e);
        });
    }, n2.setupEventListeners = function() {
        window.addEventListener("popstate", this.handlePopstateEvent.bind(this)), document.addEventListener("scroll", a1(this.handleScrollEvent.bind(this), 100), !0);
    }, n2.scrollRegions = function() {
        return document.querySelectorAll("[scroll-region]");
    }, n2.handleScrollEvent = function(e) {
        "function" == typeof e.target.hasAttribute && e.target.hasAttribute("scroll-region") && this.saveScrollPositions();
    }, n2.saveScrollPositions = function() {
        this.replaceState(r1({
        }, this.page, {
            scrollRegions: Array.from(this.scrollRegions()).map(function(e) {
                return {
                    top: e.scrollTop,
                    left: e.scrollLeft
                };
            })
        }));
    }, n2.resetScrollPositions = function() {
        var e4;
        document.documentElement.scrollTop = 0, document.documentElement.scrollLeft = 0, this.scrollRegions().forEach(function(e) {
            e.scrollTop = 0, e.scrollLeft = 0;
        }), this.saveScrollPositions(), window.location.hash && (null == (e4 = document.getElementById(window.location.hash.slice(1))) || e4.scrollIntoView());
    }, n2.restoreScrollPositions = function() {
        var e = this;
        this.page.scrollRegions && this.scrollRegions().forEach(function(t, n) {
            var i = e.page.scrollRegions[n];
            i && (t.scrollTop = i.top, t.scrollLeft = i.left);
        });
    }, n2.isBackForwardVisit = function() {
        return window.history.state && window.performance && window.performance.getEntriesByType("navigation").length > 0 && "back_forward" === window.performance.getEntriesByType("navigation")[0].type;
    }, n2.handleBackForwardVisit = function(e) {
        var t = this;
        window.history.state.version = e.version, this.setPage(window.history.state, {
            preserveScroll: !0,
            preserveState: !0
        }).then(function() {
            t.restoreScrollPositions(), m1(e);
        });
    }, n2.locationVisit = function(e, t) {
        try {
            window.sessionStorage.setItem("inertiaLocationVisit", JSON.stringify({
                preserveScroll: t
            })), window.location.href = e.href, p(window.location).href === p(e).href && window.location.reload();
        } catch (e5) {
            return !1;
        }
    }, n2.isLocationVisit = function() {
        try {
            return null !== window.sessionStorage.getItem("inertiaLocationVisit");
        } catch (e) {
            return !1;
        }
    }, n2.handleLocationVisit = function(e) {
        var t, n, i, r, o = this, s = JSON.parse(window.sessionStorage.getItem("inertiaLocationVisit") || "");
        window.sessionStorage.removeItem("inertiaLocationVisit"), e.url += window.location.hash, e.rememberedState = null != (t = null == (n = window.history.state) ? void 0 : n.rememberedState) ? t : {
        }, e.scrollRegions = null != (i = null == (r = window.history.state) ? void 0 : r.scrollRegions) ? i : [], this.setPage(e, {
            preserveScroll: s.preserveScroll,
            preserveState: !0
        }).then(function() {
            s.preserveScroll && o.restoreScrollPositions(), m1(e);
        });
    }, n2.isLocationVisitResponse = function(e) {
        return e && 409 === e.status && e.headers["x-inertia-location"];
    }, n2.isInertiaResponse = function(e) {
        return null == e ? void 0 : e.headers["x-inertia"];
    }, n2.createVisitId = function() {
        return this.visitId = {
        }, this.visitId;
    }, n2.cancelVisit = function(e, t) {
        var n = t.cancelled, i = void 0 !== n && n, r = t.interrupted, o = void 0 !== r && r;
        !e || e.completed || e.cancelled || e.interrupted || (e.cancelToken.cancel(), e.onCancel(), e.completed = !1, e.cancelled = i, e.interrupted = o, v1(e), e.onFinish(e));
    }, n2.finishVisit = function(e) {
        e.cancelled || e.interrupted || (e.completed = !0, e.cancelled = !1, e.interrupted = !1, v1(e), e.onFinish(e));
    }, n2.resolvePreserveOption = function(e, t) {
        return "function" == typeof e ? e(t) : "errors" === e ? Object.keys(t.props.errors || {
        }).length > 0 : e;
    }, n2.visit = function(e6, n3) {
        var i = this, o2 = void 0 === n3 ? {
        } : n3, a = o2.method, l = void 0 === a ? exports.Method.GET : a, d = o2.data, v = void 0 === d ? {
        } : d, m = o2.replace, g = void 0 !== m && m, w = o2.preserveScroll, S = void 0 !== w && w, y = o2.preserveState, b = void 0 !== y && y, E = o2.only, P = void 0 === E ? [] : E, I = o2.headers, x = void 0 === I ? {
        } : I, V = o2.errorBag, T = void 0 === V ? "" : V, L = o2.forceFormData, O = void 0 !== L && L, C = o2.onCancelToken, k = void 0 === C ? function() {
        } : C, M = o2.onBefore, R = void 0 === M ? function() {
        } : M, j = o2.onStart, A = void 0 === j ? function() {
        } : j, F = o2.onProgress, D = void 0 === F ? function() {
        } : F, B = o2.onFinish, N = void 0 === B ? function() {
        } : B, H = o2.onCancel, q = void 0 === H ? function() {
        } : H, W = o2.onSuccess, G = void 0 === W ? function() {
        } : W, U = o2.onError, X = void 0 === U ? function() {
        } : U, J = "string" == typeof e6 ? u(e6) : e6;
        if (!function e(t2) {
            return t2 instanceof File || t2 instanceof Blob || t2 instanceof FileList && t2.length > 0 || t2 instanceof FormData && Array.from(t2.values()).some(function(t) {
                return e(t);
            }) || "object" == typeof t2 && null !== t2 && Object.values(t2).some(function(t) {
                return e(t);
            });
        }(v) && !O || v instanceof FormData || (v = c1(v)), !(v instanceof FormData)) {
            var K = h1(l, J, v), _ = K[1];
            J = u(K[0]), v = _;
        }
        var z = {
            url: J,
            method: l,
            data: v,
            replace: g,
            preserveScroll: S,
            preserveState: b,
            only: P,
            headers: x,
            errorBag: T,
            forceFormData: O,
            cancelled: !1,
            completed: !1,
            interrupted: !1
        };
        if (!1 !== R(z) && (function(e) {
            return f("before", {
                cancelable: !0,
                detail: {
                    visit: e
                }
            });
        })(z)) {
            this.activeVisit && this.cancelVisit(this.activeVisit, {
                interrupted: !0
            }), this.saveScrollPositions();
            var Q = this.createVisitId();
            this.activeVisit = r1({
            }, z, {
                onCancelToken: k,
                onBefore: R,
                onStart: A,
                onProgress: D,
                onFinish: N,
                onCancel: q,
                onSuccess: G,
                onError: X,
                cancelToken: t1.CancelToken.source()
            }), k({
                cancel: function() {
                    i.activeVisit && i.cancelVisit(i.activeVisit, {
                        cancelled: !0
                    });
                }
            }), (function(e) {
                f("start", {
                    detail: {
                        visit: e
                    }
                });
            })(z), A(z), t1({
                method: l,
                url: p(J).href,
                data: l === exports.Method.GET ? {
                } : v,
                params: l === exports.Method.GET ? v : {
                },
                cancelToken: this.activeVisit.cancelToken.token,
                headers: r1({
                }, x, {
                    Accept: "text/html, application/xhtml+xml",
                    "X-Requested-With": "XMLHttpRequest",
                    "X-Inertia": !0
                }, P.length ? {
                    "X-Inertia-Partial-Component": this.page.component,
                    "X-Inertia-Partial-Data": P.join(",")
                } : {
                }, T && T.length ? {
                    "X-Inertia-Error-Bag": T
                } : {
                }, this.page.version ? {
                    "X-Inertia-Version": this.page.version
                } : {
                }),
                onUploadProgress: function(e7) {
                    v instanceof FormData && (e7.percentage = Math.round(e7.loaded / e7.total * 100), (function(e) {
                        f("progress", {
                            detail: {
                                progress: e
                            }
                        });
                    })(e7), D(e7));
                }
            }).then(function(e) {
                var t;
                if (!i.isInertiaResponse(e)) return Promise.reject({
                    response: e
                });
                var n = e.data;
                P.length && n.component === i.page.component && (n.props = r1({
                }, i.page.props, n.props)), S = i.resolvePreserveOption(S, n), (b = i.resolvePreserveOption(b, n)) && null != (t = window.history.state) && t.rememberedState && n.component === i.page.component && (n.rememberedState = window.history.state.rememberedState);
                var o = J, s = u(n.url);
                return o.hash && !s.hash && p(o).href === s.href && (s.hash = o.hash, n.url = s.href), i.setPage(n, {
                    visitId: Q,
                    replace: g,
                    preserveScroll: S,
                    preserveState: b
                });
            }).then(function() {
                var e8 = i.page.props.errors || {
                };
                if (Object.keys(e8).length > 0) {
                    var t = T ? e8[T] ? e8[T] : {
                    } : e8;
                    return (function(e) {
                        f("error", {
                            detail: {
                                errors: e
                            }
                        });
                    })(t), X(t);
                }
                return f("success", {
                    detail: {
                        page: i.page
                    }
                }), G(i.page);
            }).catch(function(e) {
                if (i.isInertiaResponse(e.response)) return i.setPage(e.response.data, {
                    visitId: Q
                });
                if (i.isLocationVisitResponse(e.response)) {
                    var t = u(e.response.headers["x-inertia-location"]), n = J;
                    n.hash && !t.hash && p(n).href === t.href && (t.hash = n.hash), i.locationVisit(t, !0 === S);
                } else {
                    if (!e.response) return Promise.reject(e);
                    f("invalid", {
                        cancelable: !0,
                        detail: {
                            response: e.response
                        }
                    }) && s1.show(e.response.data);
                }
            }).then(function() {
                i.activeVisit && i.finishVisit(i.activeVisit);
            }).catch(function(e) {
                if (!t1.isCancel(e)) {
                    var n = f("exception", {
                        cancelable: !0,
                        detail: {
                            exception: e
                        }
                    });
                    if (i.activeVisit && i.finishVisit(i.activeVisit), n) return Promise.reject(e);
                }
            });
        }
    }, n2.setPage = function(e, t3) {
        var n = this, i = void 0 === t3 ? {
        } : t3, r = i.visitId, o = void 0 === r ? this.createVisitId() : r, s = i.replace, a = void 0 !== s && s, c = i.preserveScroll, l = void 0 !== c && c, d = i.preserveState, h = void 0 !== d && d;
        return Promise.resolve(this.resolveComponent(e.component)).then(function(t) {
            o === n.visitId && (e.scrollRegions = e.scrollRegions || [], e.rememberedState = e.rememberedState || {
            }, (a = a || u(e.url).href === window.location.href) ? n.replaceState(e) : n.pushState(e), n.swapComponent({
                component: t,
                page: e,
                preserveState: h
            }).then(function() {
                l || n.resetScrollPositions(), a || m1(e);
            }));
        });
    }, n2.pushState = function(e) {
        this.page = e, window.history.pushState(e, "", e.url);
    }, n2.replaceState = function(e) {
        this.page = e, window.history.replaceState(e, "", e.url);
    }, n2.handlePopstateEvent = function(e9) {
        var t = this;
        if (null !== e9.state) {
            var n = e9.state, i = this.createVisitId();
            Promise.resolve(this.resolveComponent(n.component)).then(function(e) {
                i === t.visitId && (t.page = n, t.swapComponent({
                    component: e,
                    page: n,
                    preserveState: !1
                }).then(function() {
                    t.restoreScrollPositions(), m1(n);
                }));
            });
        } else {
            var o = u(this.page.url);
            o.hash = window.location.hash, this.replaceState(r1({
            }, this.page, {
                url: o.href
            })), this.resetScrollPositions();
        }
    }, n2.get = function(e, t, n) {
        return void 0 === t && (t = {
        }), void 0 === n && (n = {
        }), this.visit(e, r1({
        }, n, {
            method: exports.Method.GET,
            data: t
        }));
    }, n2.reload = function(e) {
        return void 0 === e && (e = {
        }), this.visit(window.location.href, r1({
        }, e, {
            preserveScroll: !0,
            preserveState: !0
        }));
    }, n2.replace = function(e, t) {
        var n;
        return void 0 === t && (t = {
        }), console.warn("Inertia.replace() has been deprecated and will be removed in a future release. Please use Inertia." + (null != (n = t.method) ? n : "get") + "() instead."), this.visit(e, r1({
            preserveState: !0
        }, t, {
            replace: !0
        }));
    }, n2.post = function(e, t, n) {
        return void 0 === t && (t = {
        }), void 0 === n && (n = {
        }), this.visit(e, r1({
            preserveState: !0
        }, n, {
            method: exports.Method.POST,
            data: t
        }));
    }, n2.put = function(e, t, n) {
        return void 0 === t && (t = {
        }), void 0 === n && (n = {
        }), this.visit(e, r1({
            preserveState: !0
        }, n, {
            method: exports.Method.PUT,
            data: t
        }));
    }, n2.patch = function(e, t, n) {
        return void 0 === t && (t = {
        }), void 0 === n && (n = {
        }), this.visit(e, r1({
            preserveState: !0
        }, n, {
            method: exports.Method.PATCH,
            data: t
        }));
    }, n2.delete = function(e, t) {
        return void 0 === t && (t = {
        }), this.visit(e, r1({
            preserveState: !0
        }, t, {
            method: exports.Method.DELETE
        }));
    }, n2.remember = function(e, t) {
        var n;
        void 0 === t && (t = "default"), this.replaceState(r1({
        }, this.page, {
            rememberedState: r1({
            }, this.page.rememberedState, (n = {
            }, n[t] = e, n))
        }));
    }, n2.restore = function(e) {
        var t, n;
        return void 0 === e && (e = "default"), null == (t = window.history.state) || null == (n = t.rememberedState) ? void 0 : n[e];
    }, n2.on = function(e10, t) {
        var n4 = function(e) {
            var n = t(e);
            e.cancelable && !e.defaultPrevented && !1 === n && e.preventDefault();
        };
        return document.addEventListener("inertia:" + e10, n4), function() {
            return document.removeEventListener("inertia:" + e10, n4);
        };
    }, e3;
}(), w1 = {
    buildDOMElement: function(e11) {
        var t = document.createElement("template");
        t.innerHTML = e11;
        var n = t.content.firstChild;
        if (!e11.startsWith("<script ")) return n;
        var i = document.createElement("script");
        return i.innerHTML = n.innerHTML, n.getAttributeNames().forEach(function(e) {
            i.setAttribute(e, n.getAttribute(e) || "");
        }), i;
    },
    isInertiaManagedElement: function(e) {
        return e.nodeType === Node.ELEMENT_NODE && null !== e.getAttribute("inertia");
    },
    findMatchingElementIndex: function(e12, t) {
        var n = e12.getAttribute("inertia");
        return null !== n ? t.findIndex(function(e) {
            return e.getAttribute("inertia") === n;
        }) : -1;
    },
    update: a1(function(e13) {
        var t = this, n = e13.map(function(e) {
            return t.buildDOMElement(e);
        });
        Array.from(document.head.childNodes).filter(function(e) {
            return t.isInertiaManagedElement(e);
        }).forEach(function(e) {
            var i = t.findMatchingElementIndex(e, n);
            if (-1 !== i) {
                var r, o = n.splice(i, 1)[0];
                o && !e.isEqualNode(o) && (null == e || null == (r = e.parentNode) || r.replaceChild(o, e));
            } else {
                var s;
                null == e || null == (s = e.parentNode) || s.removeChild(e);
            }
        }), n.forEach(function(e) {
            return document.head.appendChild(e);
        });
    }, 1)
}, S1 = new g1;
exports.Inertia = S1, exports.createHeadManager = function(e14, t4, n5) {
    var i2 = {
    }, r2 = 0;
    function o() {
        var e15 = Object.values(i2).reduce(function(e, t) {
            return e.concat(t);
        }, []).reduce(function(e, n) {
            if (-1 === n.indexOf("<")) return e;
            if (0 === n.indexOf("<title ")) {
                var i = n.match(/(<title [^>]+>)(.*?)(<\/title>)/);
                return e.title = i ? "" + i[1] + t4(i[2]) + i[3] : n, e;
            }
            var r = n.match(/ inertia="[^"]+"/);
            return r ? e[r[0]] = n : e[Object.keys(e).length] = n, e;
        }, {
        });
        return Object.values(e15);
    }
    function s() {
        e14 ? n5(o()) : w1.update(o());
    }
    return {
        createProvider: function() {
            var e16 = function() {
                var e = r2 += 1;
                return i2[e] = [], e.toString();
            }();
            return {
                update: function(t5) {
                    return (function(e, t) {
                        void 0 === t && (t = []), null !== e && Object.keys(i2).indexOf(e) > -1 && (i2[e] = t), s();
                    })(e16, t5);
                },
                disconnect: function() {
                    return (function(e) {
                        null !== e && -1 !== Object.keys(i2).indexOf(e) && (delete i2[e], s());
                    })(e16);
                }
            };
        }
    };
}, exports.hrefToUrl = u, exports.mergeDataIntoQueryString = h1, exports.shouldIntercept = function(e) {
    var t = "a" === e.currentTarget.tagName.toLowerCase();
    return !(e.target && null != e && e.target.isContentEditable || e.defaultPrevented || t && e.which > 1 || t && e.altKey || t && e.ctrlKey || t && e.metaKey || t && e.shiftKey);
}, exports.urlWithoutHash = p;

},{"axios":"gX9jO","qs":"3tjdD","deepmerge":"9Im5o"}],"gX9jO":[function(require,module,exports) {
module.exports = require('./lib/axios');

},{"./lib/axios":"3vgWi"}],"3vgWi":[function(require,module,exports) {
'use strict';
var utils = require('./utils');
var bind = require('./helpers/bind');
var Axios = require('./core/Axios');
var mergeConfig = require('./core/mergeConfig');
var defaults = require('./defaults');
/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */ function createInstance(defaultConfig) {
    var context = new Axios(defaultConfig);
    var instance = bind(Axios.prototype.request, context);
    // Copy axios.prototype to instance
    utils.extend(instance, Axios.prototype, context);
    // Copy context to instance
    utils.extend(instance, context);
    return instance;
}
// Create the default instance to be exported
var axios = createInstance(defaults);
// Expose Axios class to allow class inheritance
axios.Axios = Axios;
// Factory for creating new instances
axios.create = function create(instanceConfig) {
    return createInstance(mergeConfig(axios.defaults, instanceConfig));
};
// Expose Cancel & CancelToken
axios.Cancel = require('./cancel/Cancel');
axios.CancelToken = require('./cancel/CancelToken');
axios.isCancel = require('./cancel/isCancel');
// Expose all/spread
axios.all = function all(promises) {
    return Promise.all(promises);
};
axios.spread = require('./helpers/spread');
// Expose isAxiosError
axios.isAxiosError = require('./helpers/isAxiosError');
module.exports = axios;
// Allow use of default import syntax in TypeScript
module.exports.default = axios;

},{"./utils":"7j2sX","./helpers/bind":"2MGQn","./core/Axios":"l0T5T","./core/mergeConfig":"1LwUA","./defaults":"4v7MY","./cancel/Cancel":"hWx5z","./cancel/CancelToken":"SSxPe","./cancel/isCancel":"5xIFF","./helpers/spread":"6LGo5","./helpers/isAxiosError":"kyEee"}],"7j2sX":[function(require,module,exports) {
'use strict';
var bind = require('./helpers/bind');
// utils is a library of generic helper functions non-specific to axios
var toString = Object.prototype.toString;
/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */ function isArray(val) {
    return toString.call(val) === '[object Array]';
}
/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */ function isUndefined(val) {
    return typeof val === 'undefined';
}
/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */ function isBuffer(val) {
    return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}
/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */ function isArrayBuffer(val) {
    return toString.call(val) === '[object ArrayBuffer]';
}
/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */ function isFormData(val) {
    return typeof FormData !== 'undefined' && val instanceof FormData;
}
/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */ function isArrayBufferView(val) {
    var result;
    if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) result = ArrayBuffer.isView(val);
    else result = val && val.buffer && val.buffer instanceof ArrayBuffer;
    return result;
}
/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */ function isString(val) {
    return typeof val === 'string';
}
/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */ function isNumber(val) {
    return typeof val === 'number';
}
/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */ function isObject(val) {
    return val !== null && typeof val === 'object';
}
/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */ function isPlainObject(val) {
    if (toString.call(val) !== '[object Object]') return false;
    var prototype = Object.getPrototypeOf(val);
    return prototype === null || prototype === Object.prototype;
}
/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */ function isDate(val) {
    return toString.call(val) === '[object Date]';
}
/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */ function isFile(val) {
    return toString.call(val) === '[object File]';
}
/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */ function isBlob(val) {
    return toString.call(val) === '[object Blob]';
}
/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */ function isFunction(val) {
    return toString.call(val) === '[object Function]';
}
/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */ function isStream(val) {
    return isObject(val) && isFunction(val.pipe);
}
/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */ function isURLSearchParams(val) {
    return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}
/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */ function trim(str) {
    return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '');
}
/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */ function isStandardBrowserEnv() {
    if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' || navigator.product === 'NativeScript' || navigator.product === 'NS')) return false;
    return typeof window !== 'undefined' && typeof document !== 'undefined';
}
/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */ function forEach(obj, fn) {
    // Don't bother if no value provided
    if (obj === null || typeof obj === 'undefined') return;
    // Force an array if not already something iterable
    if (typeof obj !== 'object') /*eslint no-param-reassign:0*/ obj = [
        obj
    ];
    if (isArray(obj)) // Iterate over array values
    for(var i = 0, l = obj.length; i < l; i++)fn.call(null, obj[i], i, obj);
    else {
        // Iterate over object keys
        for(var key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) fn.call(null, obj[key], key, obj);
    }
}
/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */ function merge() {
    var result = {
    };
    function assignValue(val, key) {
        if (isPlainObject(result[key]) && isPlainObject(val)) result[key] = merge(result[key], val);
        else if (isPlainObject(val)) result[key] = merge({
        }, val);
        else if (isArray(val)) result[key] = val.slice();
        else result[key] = val;
    }
    for(var i = 0, l = arguments.length; i < l; i++)forEach(arguments[i], assignValue);
    return result;
}
/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */ function extend(a, b, thisArg) {
    forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === 'function') a[key] = bind(val, thisArg);
        else a[key] = val;
    });
    return a;
}
/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */ function stripBOM(content) {
    if (content.charCodeAt(0) === 65279) content = content.slice(1);
    return content;
}
module.exports = {
    isArray: isArray,
    isArrayBuffer: isArrayBuffer,
    isBuffer: isBuffer,
    isFormData: isFormData,
    isArrayBufferView: isArrayBufferView,
    isString: isString,
    isNumber: isNumber,
    isObject: isObject,
    isPlainObject: isPlainObject,
    isUndefined: isUndefined,
    isDate: isDate,
    isFile: isFile,
    isBlob: isBlob,
    isFunction: isFunction,
    isStream: isStream,
    isURLSearchParams: isURLSearchParams,
    isStandardBrowserEnv: isStandardBrowserEnv,
    forEach: forEach,
    merge: merge,
    extend: extend,
    trim: trim,
    stripBOM: stripBOM
};

},{"./helpers/bind":"2MGQn"}],"2MGQn":[function(require,module,exports) {
'use strict';
module.exports = function bind(fn, thisArg) {
    return function wrap() {
        var args = new Array(arguments.length);
        for(var i = 0; i < args.length; i++)args[i] = arguments[i];
        return fn.apply(thisArg, args);
    };
};

},{}],"l0T5T":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
var buildURL = require('../helpers/buildURL');
var InterceptorManager = require('./InterceptorManager');
var dispatchRequest = require('./dispatchRequest');
var mergeConfig = require('./mergeConfig');
var validator = require('../helpers/validator');
var validators = validator.validators;
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */ function Axios(instanceConfig) {
    this.defaults = instanceConfig;
    this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
    };
}
/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */ Axios.prototype.request = function request(config) {
    /*eslint no-param-reassign:0*/ // Allow for axios('example/url'[, config]) a la fetch API
    if (typeof config === 'string') {
        config = arguments[1] || {
        };
        config.url = arguments[0];
    } else config = config || {
    };
    config = mergeConfig(this.defaults, config);
    // Set config.method
    if (config.method) config.method = config.method.toLowerCase();
    else if (this.defaults.method) config.method = this.defaults.method.toLowerCase();
    else config.method = 'get';
    var transitional = config.transitional;
    if (transitional !== undefined) validator.assertOptions(transitional, {
        silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),
        forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),
        clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')
    }, false);
    // filter out skipped interceptors
    var requestInterceptorChain = [];
    var synchronousRequestInterceptors = true;
    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) return;
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
    });
    var responseInterceptorChain = [];
    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
    });
    var promise;
    if (!synchronousRequestInterceptors) {
        var chain = [
            dispatchRequest,
            undefined
        ];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while(chain.length)promise = promise.then(chain.shift(), chain.shift());
        return promise;
    }
    var newConfig = config;
    while(requestInterceptorChain.length){
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
            newConfig = onFulfilled(newConfig);
        } catch (error) {
            onRejected(error);
            break;
        }
    }
    try {
        promise = dispatchRequest(newConfig);
    } catch (error) {
        return Promise.reject(error);
    }
    while(responseInterceptorChain.length)promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
    return promise;
};
Axios.prototype.getUri = function getUri(config) {
    config = mergeConfig(this.defaults, config);
    return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};
// Provide aliases for supported request methods
utils.forEach([
    'delete',
    'get',
    'head',
    'options'
], function forEachMethodNoData(method) {
    /*eslint func-names:0*/ Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {
        }, {
            method: method,
            url: url,
            data: (config || {
            }).data
        }));
    };
});
utils.forEach([
    'post',
    'put',
    'patch'
], function forEachMethodWithData(method) {
    /*eslint func-names:0*/ Axios.prototype[method] = function(url, data, config) {
        return this.request(mergeConfig(config || {
        }, {
            method: method,
            url: url,
            data: data
        }));
    };
});
module.exports = Axios;

},{"./../utils":"7j2sX","../helpers/buildURL":"cn0Pq","./InterceptorManager":"612cW","./dispatchRequest":"8bI9r","./mergeConfig":"1LwUA","../helpers/validator":"8QOzn"}],"cn0Pq":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
function encode(val) {
    return encodeURIComponent(val).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
}
/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */ module.exports = function buildURL(url, params, paramsSerializer) {
    /*eslint no-param-reassign:0*/ if (!params) return url;
    var serializedParams;
    if (paramsSerializer) serializedParams = paramsSerializer(params);
    else if (utils.isURLSearchParams(params)) serializedParams = params.toString();
    else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
            if (val === null || typeof val === 'undefined') return;
            if (utils.isArray(val)) key = key + '[]';
            else val = [
                val
            ];
            utils.forEach(val, function parseValue(v) {
                if (utils.isDate(v)) v = v.toISOString();
                else if (utils.isObject(v)) v = JSON.stringify(v);
                parts.push(encode(key) + '=' + encode(v));
            });
        });
        serializedParams = parts.join('&');
    }
    if (serializedParams) {
        var hashmarkIndex = url.indexOf('#');
        if (hashmarkIndex !== -1) url = url.slice(0, hashmarkIndex);
        url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
    }
    return url;
};

},{"./../utils":"7j2sX"}],"612cW":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
function InterceptorManager() {
    this.handlers = [];
}
/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */ InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
    this.handlers.push({
        fulfilled: fulfilled,
        rejected: rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
    });
    return this.handlers.length - 1;
};
/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */ InterceptorManager.prototype.eject = function eject(id) {
    if (this.handlers[id]) this.handlers[id] = null;
};
/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */ InterceptorManager.prototype.forEach = function forEach(fn) {
    utils.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) fn(h);
    });
};
module.exports = InterceptorManager;

},{"./../utils":"7j2sX"}],"8bI9r":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
var transformData = require('./transformData');
var isCancel = require('../cancel/isCancel');
var defaults = require('../defaults');
/**
 * Throws a `Cancel` if cancellation has been requested.
 */ function throwIfCancellationRequested(config) {
    if (config.cancelToken) config.cancelToken.throwIfRequested();
}
/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */ module.exports = function dispatchRequest(config) {
    throwIfCancellationRequested(config);
    // Ensure headers exist
    config.headers = config.headers || {
    };
    // Transform request data
    config.data = transformData.call(config, config.data, config.headers, config.transformRequest);
    // Flatten headers
    config.headers = utils.merge(config.headers.common || {
    }, config.headers[config.method] || {
    }, config.headers);
    utils.forEach([
        'delete',
        'get',
        'head',
        'post',
        'put',
        'patch',
        'common'
    ], function cleanHeaderConfig(method) {
        delete config.headers[method];
    });
    var adapter = config.adapter || defaults.adapter;
    return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        // Transform response data
        response.data = transformData.call(config, response.data, response.headers, config.transformResponse);
        return response;
    }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
            throwIfCancellationRequested(config);
            // Transform response data
            if (reason && reason.response) reason.response.data = transformData.call(config, reason.response.data, reason.response.headers, config.transformResponse);
        }
        return Promise.reject(reason);
    });
};

},{"./../utils":"7j2sX","./transformData":"fw4v7","../cancel/isCancel":"5xIFF","../defaults":"4v7MY"}],"fw4v7":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
var defaults = require('./../defaults');
/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */ module.exports = function transformData(data, headers, fns) {
    var context = this || defaults;
    /*eslint no-param-reassign:0*/ utils.forEach(fns, function transform(fn) {
        data = fn.call(context, data, headers);
    });
    return data;
};

},{"./../utils":"7j2sX","./../defaults":"4v7MY"}],"4v7MY":[function(require,module,exports) {
var process = require("process");
'use strict';
var utils = require('./utils');
var normalizeHeaderName = require('./helpers/normalizeHeaderName');
var enhanceError = require('./core/enhanceError');
var DEFAULT_CONTENT_TYPE = {
    'Content-Type': 'application/x-www-form-urlencoded'
};
function setContentTypeIfUnset(headers, value) {
    if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) headers['Content-Type'] = value;
}
function getDefaultAdapter() {
    var adapter;
    if (typeof XMLHttpRequest !== 'undefined') // For browsers use XHR adapter
    adapter = require('./adapters/xhr');
    else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') // For node use HTTP adapter
    adapter = require('./adapters/http');
    return adapter;
}
function stringifySafely(rawValue, parser, encoder) {
    if (utils.isString(rawValue)) try {
        (parser || JSON.parse)(rawValue);
        return utils.trim(rawValue);
    } catch (e) {
        if (e.name !== 'SyntaxError') throw e;
    }
    return (encoder || JSON.stringify)(rawValue);
}
var defaults = {
    transitional: {
        silentJSONParsing: true,
        forcedJSONParsing: true,
        clarifyTimeoutError: false
    },
    adapter: getDefaultAdapter(),
    transformRequest: [
        function transformRequest(data, headers) {
            normalizeHeaderName(headers, 'Accept');
            normalizeHeaderName(headers, 'Content-Type');
            if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) return data;
            if (utils.isArrayBufferView(data)) return data.buffer;
            if (utils.isURLSearchParams(data)) {
                setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
                return data.toString();
            }
            if (utils.isObject(data) || headers && headers['Content-Type'] === 'application/json') {
                setContentTypeIfUnset(headers, 'application/json');
                return stringifySafely(data);
            }
            return data;
        }
    ],
    transformResponse: [
        function transformResponse(data) {
            var transitional = this.transitional;
            var silentJSONParsing = transitional && transitional.silentJSONParsing;
            var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
            var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';
            if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) try {
                return JSON.parse(data);
            } catch (e) {
                if (strictJSONParsing) {
                    if (e.name === 'SyntaxError') throw enhanceError(e, this, 'E_JSON_PARSE');
                    throw e;
                }
            }
            return data;
        }
    ],
    /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */ timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
    }
};
defaults.headers = {
    common: {
        'Accept': 'application/json, text/plain, */*'
    }
};
utils.forEach([
    'delete',
    'get',
    'head'
], function forEachMethodNoData(method) {
    defaults.headers[method] = {
    };
});
utils.forEach([
    'post',
    'put',
    'patch'
], function forEachMethodWithData(method) {
    defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});
module.exports = defaults;

},{"process":"djbKH","./utils":"7j2sX","./helpers/normalizeHeaderName":"jRgaY","./core/enhanceError":"iwqaA","./adapters/xhr":"a6lJL","./adapters/http":"a6lJL"}],"djbKH":[function(require,module,exports) {
// shim for using process in browser
var process = module.exports = {
};
// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var cachedSetTimeout;
var cachedClearTimeout;
function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout() {
    throw new Error('clearTimeout has not been defined');
}
(function() {
    try {
        if (typeof setTimeout === 'function') cachedSetTimeout = setTimeout;
        else cachedSetTimeout = defaultSetTimout;
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') cachedClearTimeout = clearTimeout;
        else cachedClearTimeout = defaultClearTimeout;
    } catch (e1) {
        cachedClearTimeout = defaultClearTimeout;
    }
})();
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) //normal enviroments in sane situations
    return setTimeout(fun, 0);
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) //normal enviroments in sane situations
    return clearTimeout(marker);
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;
function cleanUpNextTick() {
    if (!draining || !currentQueue) return;
    draining = false;
    if (currentQueue.length) queue = currentQueue.concat(queue);
    else queueIndex = -1;
    if (queue.length) drainQueue();
}
function drainQueue() {
    if (draining) return;
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;
    var len = queue.length;
    while(len){
        currentQueue = queue;
        queue = [];
        while(++queueIndex < len)if (currentQueue) currentQueue[queueIndex].run();
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}
process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) runTimeout(drainQueue);
};
// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function() {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {
};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {
};
function noop() {
}
process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;
process.listeners = function(name) {
    return [];
};
process.binding = function(name) {
    throw new Error('process.binding is not supported');
};
process.cwd = function() {
    return '/';
};
process.chdir = function(dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() {
    return 0;
};

},{}],"jRgaY":[function(require,module,exports) {
'use strict';
var utils = require('../utils');
module.exports = function normalizeHeaderName(headers, normalizedName) {
    utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
            headers[normalizedName] = value;
            delete headers[name];
        }
    });
};

},{"../utils":"7j2sX"}],"iwqaA":[function(require,module,exports) {
'use strict';
/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */ module.exports = function enhanceError(error, config, code, request, response) {
    error.config = config;
    if (code) error.code = code;
    error.request = request;
    error.response = response;
    error.isAxiosError = true;
    error.toJSON = function toJSON() {
        return {
            // Standard
            message: this.message,
            name: this.name,
            // Microsoft
            description: this.description,
            number: this.number,
            // Mozilla
            fileName: this.fileName,
            lineNumber: this.lineNumber,
            columnNumber: this.columnNumber,
            stack: this.stack,
            // Axios
            config: this.config,
            code: this.code
        };
    };
    return error;
};

},{}],"a6lJL":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
var settle = require('./../core/settle');
var cookies = require('./../helpers/cookies');
var buildURL = require('./../helpers/buildURL');
var buildFullPath = require('../core/buildFullPath');
var parseHeaders = require('./../helpers/parseHeaders');
var isURLSameOrigin = require('./../helpers/isURLSameOrigin');
var createError = require('../core/createError');
module.exports = function xhrAdapter(config) {
    return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        if (utils.isFormData(requestData)) delete requestHeaders['Content-Type']; // Let the browser set it
        var request = new XMLHttpRequest();
        // HTTP basic authentication
        if (config.auth) {
            var username = config.auth.username || '';
            var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
            requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
        // Set the request timeout in MS
        request.timeout = config.timeout;
        function onloadend() {
            if (!request) return;
            // Prepare the response
            var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
            var responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;
            var response = {
                data: responseData,
                status: request.status,
                statusText: request.statusText,
                headers: responseHeaders,
                config: config,
                request: request
            };
            settle(resolve, reject, response);
            // Clean up request
            request = null;
        }
        if ('onloadend' in request) // Use onloadend if available
        request.onloadend = onloadend;
        else // Listen for ready state to emulate onloadend
        request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) return;
            // The request errored out and we didn't get a response, this will be
            // handled by onerror instead
            // With one exception: request that using file: protocol, most browsers
            // will return status as 0 even though it's a successful request
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) return;
            // readystate handler is calling before onerror or ontimeout handlers,
            // so we should call onloadend on the next 'tick'
            setTimeout(onloadend);
        };
        // Handle browser request cancellation (as opposed to a manual cancellation)
        request.onabort = function handleAbort() {
            if (!request) return;
            reject(createError('Request aborted', config, 'ECONNABORTED', request));
            // Clean up request
            request = null;
        };
        // Handle low level network errors
        request.onerror = function handleError() {
            // Real errors are hidden from us by the browser
            // onerror should only fire if it's a network error
            reject(createError('Network Error', config, null, request));
            // Clean up request
            request = null;
        };
        // Handle timeout
        request.ontimeout = function handleTimeout() {
            var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
            if (config.timeoutErrorMessage) timeoutErrorMessage = config.timeoutErrorMessage;
            reject(createError(timeoutErrorMessage, config, config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED', request));
            // Clean up request
            request = null;
        };
        // Add xsrf header
        // This is only done if running in a standard browser environment.
        // Specifically not if we're in a web worker, or react-native.
        if (utils.isStandardBrowserEnv()) {
            // Add xsrf header
            var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;
            if (xsrfValue) requestHeaders[config.xsrfHeaderName] = xsrfValue;
        }
        // Add headers to the request
        if ('setRequestHeader' in request) utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') // Remove Content-Type if data is undefined
            delete requestHeaders[key];
            else // Otherwise add header to the request
            request.setRequestHeader(key, val);
        });
        // Add withCredentials to request if needed
        if (!utils.isUndefined(config.withCredentials)) request.withCredentials = !!config.withCredentials;
        // Add responseType to request if needed
        if (responseType && responseType !== 'json') request.responseType = config.responseType;
        // Handle progress if needed
        if (typeof config.onDownloadProgress === 'function') request.addEventListener('progress', config.onDownloadProgress);
        // Not all browsers support upload events
        if (typeof config.onUploadProgress === 'function' && request.upload) request.upload.addEventListener('progress', config.onUploadProgress);
        if (config.cancelToken) // Handle cancellation
        config.cancelToken.promise.then(function onCanceled(cancel) {
            if (!request) return;
            request.abort();
            reject(cancel);
            // Clean up request
            request = null;
        });
        if (!requestData) requestData = null;
        // Send the request
        request.send(requestData);
    });
};

},{"./../utils":"7j2sX","./../core/settle":"02E0A","./../helpers/cookies":"3mpAr","./../helpers/buildURL":"cn0Pq","../core/buildFullPath":"c6YQM","./../helpers/parseHeaders":"7HJ25","./../helpers/isURLSameOrigin":"aOu09","../core/createError":"5wshU"}],"02E0A":[function(require,module,exports) {
'use strict';
var createError = require('./createError');
/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */ module.exports = function settle(resolve, reject, response) {
    var validateStatus = response.config.validateStatus;
    if (!response.status || !validateStatus || validateStatus(response.status)) resolve(response);
    else reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));
};

},{"./createError":"5wshU"}],"5wshU":[function(require,module,exports) {
'use strict';
var enhanceError = require('./enhanceError');
/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */ module.exports = function createError(message, config, code, request, response) {
    var error = new Error(message);
    return enhanceError(error, config, code, request, response);
};

},{"./enhanceError":"iwqaA"}],"3mpAr":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs support document.cookie
(function standardBrowserEnv() {
    return {
        write: function write(name, value, expires, path, domain, secure) {
            var cookie = [];
            cookie.push(name + '=' + encodeURIComponent(value));
            if (utils.isNumber(expires)) cookie.push('expires=' + new Date(expires).toGMTString());
            if (utils.isString(path)) cookie.push('path=' + path);
            if (utils.isString(domain)) cookie.push('domain=' + domain);
            if (secure === true) cookie.push('secure');
            document.cookie = cookie.join('; ');
        },
        read: function read(name) {
            var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
            return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
            this.write(name, '', Date.now() - 86400000);
        }
    };
})() : // Non standard browser env (web workers, react-native) lack needed support.
(function nonStandardBrowserEnv() {
    return {
        write: function write() {
        },
        read: function read() {
            return null;
        },
        remove: function remove() {
        }
    };
})();

},{"./../utils":"7j2sX"}],"c6YQM":[function(require,module,exports) {
'use strict';
var isAbsoluteURL = require('../helpers/isAbsoluteURL');
var combineURLs = require('../helpers/combineURLs');
/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */ module.exports = function buildFullPath(baseURL, requestedURL) {
    if (baseURL && !isAbsoluteURL(requestedURL)) return combineURLs(baseURL, requestedURL);
    return requestedURL;
};

},{"../helpers/isAbsoluteURL":"iiOMS","../helpers/combineURLs":"7q5iY"}],"iiOMS":[function(require,module,exports) {
'use strict';
/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */ module.exports = function isAbsoluteURL(url) {
    // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
    // by any combination of letters, digits, plus, period, or hyphen.
    return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};

},{}],"7q5iY":[function(require,module,exports) {
'use strict';
/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */ module.exports = function combineURLs(baseURL, relativeURL) {
    return relativeURL ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '') : baseURL;
};

},{}],"7HJ25":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
    'age',
    'authorization',
    'content-length',
    'content-type',
    'etag',
    'expires',
    'from',
    'host',
    'if-modified-since',
    'if-unmodified-since',
    'last-modified',
    'location',
    'max-forwards',
    'proxy-authorization',
    'referer',
    'retry-after',
    'user-agent'
];
/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */ module.exports = function parseHeaders(headers) {
    var parsed = {
    };
    var key;
    var val;
    var i;
    if (!headers) return parsed;
    utils.forEach(headers.split('\n'), function parser(line) {
        i = line.indexOf(':');
        key = utils.trim(line.substr(0, i)).toLowerCase();
        val = utils.trim(line.substr(i + 1));
        if (key) {
            if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) return;
            if (key === 'set-cookie') parsed[key] = (parsed[key] ? parsed[key] : []).concat([
                val
            ]);
            else parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
        }
    });
    return parsed;
};

},{"./../utils":"7j2sX"}],"aOu09":[function(require,module,exports) {
'use strict';
var utils = require('./../utils');
module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
(function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;
    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */ function resolveURL(url) {
        var href = url;
        if (msie) {
            // IE needs attribute set twice to normalize properties
            urlParsingNode.setAttribute('href', href);
            href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute('href', href);
        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
            href: urlParsingNode.href,
            protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
            host: urlParsingNode.host,
            search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
            hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
            hostname: urlParsingNode.hostname,
            port: urlParsingNode.port,
            pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname
        };
    }
    originURL = resolveURL(window.location.href);
    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */ return function isURLSameOrigin(requestURL) {
        var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
    };
})() : // Non standard browser envs (web workers, react-native) lack needed support.
(function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
        return true;
    };
})();

},{"./../utils":"7j2sX"}],"5xIFF":[function(require,module,exports) {
'use strict';
module.exports = function isCancel(value) {
    return !!(value && value.__CANCEL__);
};

},{}],"1LwUA":[function(require,module,exports) {
'use strict';
var utils = require('../utils');
/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */ module.exports = function mergeConfig(config1, config2) {
    // eslint-disable-next-line no-param-reassign
    config2 = config2 || {
    };
    var config = {
    };
    var valueFromConfig2Keys = [
        'url',
        'method',
        'data'
    ];
    var mergeDeepPropertiesKeys = [
        'headers',
        'auth',
        'proxy',
        'params'
    ];
    var defaultToConfig2Keys = [
        'baseURL',
        'transformRequest',
        'transformResponse',
        'paramsSerializer',
        'timeout',
        'timeoutMessage',
        'withCredentials',
        'adapter',
        'responseType',
        'xsrfCookieName',
        'xsrfHeaderName',
        'onUploadProgress',
        'onDownloadProgress',
        'decompress',
        'maxContentLength',
        'maxBodyLength',
        'maxRedirects',
        'transport',
        'httpAgent',
        'httpsAgent',
        'cancelToken',
        'socketPath',
        'responseEncoding'
    ];
    var directMergeKeys = [
        'validateStatus'
    ];
    function getMergedValue(target, source) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) return utils.merge(target, source);
        else if (utils.isPlainObject(source)) return utils.merge({
        }, source);
        else if (utils.isArray(source)) return source.slice();
        return source;
    }
    function mergeDeepProperties(prop) {
        if (!utils.isUndefined(config2[prop])) config[prop] = getMergedValue(config1[prop], config2[prop]);
        else if (!utils.isUndefined(config1[prop])) config[prop] = getMergedValue(undefined, config1[prop]);
    }
    utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) config[prop] = getMergedValue(undefined, config2[prop]);
    });
    utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);
    utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) config[prop] = getMergedValue(undefined, config2[prop]);
        else if (!utils.isUndefined(config1[prop])) config[prop] = getMergedValue(undefined, config1[prop]);
    });
    utils.forEach(directMergeKeys, function merge(prop) {
        if (prop in config2) config[prop] = getMergedValue(config1[prop], config2[prop]);
        else if (prop in config1) config[prop] = getMergedValue(undefined, config1[prop]);
    });
    var axiosKeys = valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys).concat(directMergeKeys);
    var otherKeys = Object.keys(config1).concat(Object.keys(config2)).filter(function filterAxiosKeys(key) {
        return axiosKeys.indexOf(key) === -1;
    });
    utils.forEach(otherKeys, mergeDeepProperties);
    return config;
};

},{"../utils":"7j2sX"}],"8QOzn":[function(require,module,exports) {
'use strict';
var pkg = require('./../../package.json');
var validators = {
};
// eslint-disable-next-line func-names
[
    'object',
    'boolean',
    'number',
    'function',
    'string',
    'symbol'
].forEach(function(type, i) {
    validators[type] = function validator(thing) {
        return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
    };
});
var deprecatedWarnings = {
};
var currentVerArr = pkg.version.split('.');
/**
 * Compare package versions
 * @param {string} version
 * @param {string?} thanVersion
 * @returns {boolean}
 */ function isOlderVersion(version, thanVersion) {
    var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;
    var destVer = version.split('.');
    for(var i = 0; i < 3; i++){
        if (pkgVersionArr[i] > destVer[i]) return true;
        else if (pkgVersionArr[i] < destVer[i]) return false;
    }
    return false;
}
/**
 * Transitional option validator
 * @param {function|boolean?} validator
 * @param {string?} version
 * @param {string} message
 * @returns {function}
 */ validators.transitional = function transitional(validator, version, message) {
    var isDeprecated = version && isOlderVersion(version);
    function formatMessage(opt, desc) {
        return '[Axios v' + pkg.version + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
    }
    // eslint-disable-next-line func-names
    return function(value, opt, opts) {
        if (validator === false) throw new Error(formatMessage(opt, ' has been removed in ' + version));
        if (isDeprecated && !deprecatedWarnings[opt]) {
            deprecatedWarnings[opt] = true;
            // eslint-disable-next-line no-console
            console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));
        }
        return validator ? validator(value, opt, opts) : true;
    };
};
/**
 * Assert object's properties type
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 */ function assertOptions(options, schema, allowUnknown) {
    if (typeof options !== 'object') throw new TypeError('options must be an object');
    var keys = Object.keys(options);
    var i = keys.length;
    while(i-- > 0){
        var opt = keys[i];
        var validator = schema[opt];
        if (validator) {
            var value = options[opt];
            var result = value === undefined || validator(value, opt, options);
            if (result !== true) throw new TypeError('option ' + opt + ' must be ' + result);
            continue;
        }
        if (allowUnknown !== true) throw Error('Unknown option ' + opt);
    }
}
module.exports = {
    isOlderVersion: isOlderVersion,
    assertOptions: assertOptions,
    validators: validators
};

},{"./../../package.json":"ejjuf"}],"ejjuf":[function(require,module,exports) {
module.exports = JSON.parse("{\"name\":\"axios\",\"version\":\"0.21.4\",\"description\":\"Promise based HTTP client for the browser and node.js\",\"main\":\"index.js\",\"scripts\":{\"test\":\"grunt test\",\"start\":\"node ./sandbox/server.js\",\"build\":\"NODE_ENV=production grunt build\",\"preversion\":\"npm test\",\"version\":\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\",\"postversion\":\"git push && git push --tags\",\"examples\":\"node ./examples/server.js\",\"coveralls\":\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\"fix\":\"eslint --fix lib/**/*.js\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/axios/axios.git\"},\"keywords\":[\"xhr\",\"http\",\"ajax\",\"promise\",\"node\"],\"author\":\"Matt Zabriskie\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/axios/axios/issues\"},\"homepage\":\"https://axios-http.com\",\"devDependencies\":{\"coveralls\":\"^3.0.0\",\"es6-promise\":\"^4.2.4\",\"grunt\":\"^1.3.0\",\"grunt-banner\":\"^0.6.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-clean\":\"^1.1.0\",\"grunt-contrib-watch\":\"^1.0.0\",\"grunt-eslint\":\"^23.0.0\",\"grunt-karma\":\"^4.0.0\",\"grunt-mocha-test\":\"^0.13.3\",\"grunt-ts\":\"^6.0.0-beta.19\",\"grunt-webpack\":\"^4.0.2\",\"istanbul-instrumenter-loader\":\"^1.0.0\",\"jasmine-core\":\"^2.4.1\",\"karma\":\"^6.3.2\",\"karma-chrome-launcher\":\"^3.1.0\",\"karma-firefox-launcher\":\"^2.1.0\",\"karma-jasmine\":\"^1.1.1\",\"karma-jasmine-ajax\":\"^0.1.13\",\"karma-safari-launcher\":\"^1.0.0\",\"karma-sauce-launcher\":\"^4.3.6\",\"karma-sinon\":\"^1.0.5\",\"karma-sourcemap-loader\":\"^0.3.8\",\"karma-webpack\":\"^4.0.2\",\"load-grunt-tasks\":\"^3.5.2\",\"minimist\":\"^1.2.0\",\"mocha\":\"^8.2.1\",\"sinon\":\"^4.5.0\",\"terser-webpack-plugin\":\"^4.2.3\",\"typescript\":\"^4.0.5\",\"url-search-params\":\"^0.10.0\",\"webpack\":\"^4.44.2\",\"webpack-dev-server\":\"^3.11.0\"},\"browser\":{\"./lib/adapters/http.js\":\"./lib/adapters/xhr.js\"},\"jsdelivr\":\"dist/axios.min.js\",\"unpkg\":\"dist/axios.min.js\",\"typings\":\"./index.d.ts\",\"dependencies\":{\"follow-redirects\":\"^1.14.0\"},\"bundlesize\":[{\"path\":\"./dist/axios.min.js\",\"threshold\":\"5kB\"}]}");

},{}],"hWx5z":[function(require,module,exports) {
'use strict';
/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */ function Cancel(message) {
    this.message = message;
}
Cancel.prototype.toString = function toString() {
    return 'Cancel' + (this.message ? ': ' + this.message : '');
};
Cancel.prototype.__CANCEL__ = true;
module.exports = Cancel;

},{}],"SSxPe":[function(require,module,exports) {
'use strict';
var Cancel = require('./Cancel');
/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */ function CancelToken(executor) {
    if (typeof executor !== 'function') throw new TypeError('executor must be a function.');
    var resolvePromise;
    this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
    });
    var token = this;
    executor(function cancel(message) {
        if (token.reason) // Cancellation has already been requested
        return;
        token.reason = new Cancel(message);
        resolvePromise(token.reason);
    });
}
/**
 * Throws a `Cancel` if cancellation has been requested.
 */ CancelToken.prototype.throwIfRequested = function throwIfRequested() {
    if (this.reason) throw this.reason;
};
/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */ CancelToken.source = function source() {
    var cancel;
    var token = new CancelToken(function executor(c) {
        cancel = c;
    });
    return {
        token: token,
        cancel: cancel
    };
};
module.exports = CancelToken;

},{"./Cancel":"hWx5z"}],"6LGo5":[function(require,module,exports) {
'use strict';
/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */ module.exports = function spread(callback) {
    return function wrap(arr) {
        return callback.apply(null, arr);
    };
};

},{}],"kyEee":[function(require,module,exports) {
'use strict';
/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */ module.exports = function isAxiosError(payload) {
    return typeof payload === 'object' && payload.isAxiosError === true;
};

},{}],"3tjdD":[function(require,module,exports) {
'use strict';
var stringify = require('./stringify');
var parse = require('./parse');
var formats = require('./formats');
module.exports = {
    formats: formats,
    parse: parse,
    stringify: stringify
};

},{"./stringify":"dFoGI","./parse":"kbbGQ","./formats":"3mc1c"}],"dFoGI":[function(require,module,exports) {
'use strict';
var getSideChannel = require('side-channel');
var utils = require('./utils');
var formats = require('./formats');
var has = Object.prototype.hasOwnProperty;
var arrayPrefixGenerators = {
    brackets: function brackets(prefix) {
        return prefix + '[]';
    },
    comma: 'comma',
    indices: function indices(prefix, key) {
        return prefix + '[' + key + ']';
    },
    repeat: function repeat(prefix) {
        return prefix;
    }
};
var isArray = Array.isArray;
var push = Array.prototype.push;
var pushToArray = function(arr, valueOrArray) {
    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [
        valueOrArray
    ]);
};
var toISO = Date.prototype.toISOString;
var defaultFormat = formats['default'];
var defaults = {
    addQueryPrefix: false,
    allowDots: false,
    charset: 'utf-8',
    charsetSentinel: false,
    delimiter: '&',
    encode: true,
    encoder: utils.encode,
    encodeValuesOnly: false,
    format: defaultFormat,
    formatter: formats.formatters[defaultFormat],
    // deprecated
    indices: false,
    serializeDate: function serializeDate(date) {
        return toISO.call(date);
    },
    skipNulls: false,
    strictNullHandling: false
};
var isNonNullishPrimitive = function isNonNullishPrimitive(v) {
    return typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || typeof v === 'symbol' || typeof v === 'bigint';
};
var stringify1 = function stringify(object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {
    var obj = object;
    if (sideChannel.has(object)) throw new RangeError('Cyclic object value');
    if (typeof filter === 'function') obj = filter(prefix, obj);
    else if (obj instanceof Date) obj = serializeDate(obj);
    else if (generateArrayPrefix === 'comma' && isArray(obj)) obj = utils.maybeMap(obj, function(value) {
        if (value instanceof Date) return serializeDate(value);
        return value;
    });
    if (obj === null) {
        if (strictNullHandling) return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;
        obj = '';
    }
    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
        if (encoder) {
            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);
            return [
                formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))
            ];
        }
        return [
            formatter(prefix) + '=' + formatter(String(obj))
        ];
    }
    var values = [];
    if (typeof obj === 'undefined') return values;
    var objKeys;
    if (generateArrayPrefix === 'comma' && isArray(obj)) // we need to join elements in
    objKeys = [
        {
            value: obj.length > 0 ? obj.join(',') || null : undefined
        }
    ];
    else if (isArray(filter)) objKeys = filter;
    else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
    }
    for(var i = 0; i < objKeys.length; ++i){
        var key = objKeys[i];
        var value1 = typeof key === 'object' && key.value !== undefined ? key.value : obj[key];
        if (skipNulls && value1 === null) continue;
        var keyPrefix = isArray(obj) ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix : prefix + (allowDots ? '.' + key : '[' + key + ']');
        sideChannel.set(object, true);
        var valueSideChannel = getSideChannel();
        pushToArray(values, stringify(value1, keyPrefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));
    }
    return values;
};
var normalizeStringifyOptions = function normalizeStringifyOptions(opts) {
    if (!opts) return defaults;
    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') throw new TypeError('Encoder has to be a function.');
    var charset = opts.charset || defaults.charset;
    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
    var format = formats['default'];
    if (typeof opts.format !== 'undefined') {
        if (!has.call(formats.formatters, opts.format)) throw new TypeError('Unknown format option provided.');
        format = opts.format;
    }
    var formatter = formats.formatters[format];
    var filter = defaults.filter;
    if (typeof opts.filter === 'function' || isArray(opts.filter)) filter = opts.filter;
    return {
        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,
        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
        charset: charset,
        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,
        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
        filter: filter,
        format: format,
        formatter: formatter,
        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,
        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,
        sort: typeof opts.sort === 'function' ? opts.sort : null,
        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
    };
};
module.exports = function(object, opts) {
    var obj = object;
    var options = normalizeStringifyOptions(opts);
    var objKeys;
    var filter;
    if (typeof options.filter === 'function') {
        filter = options.filter;
        obj = filter('', obj);
    } else if (isArray(options.filter)) {
        filter = options.filter;
        objKeys = filter;
    }
    var keys = [];
    if (typeof obj !== 'object' || obj === null) return '';
    var arrayFormat;
    if (opts && opts.arrayFormat in arrayPrefixGenerators) arrayFormat = opts.arrayFormat;
    else if (opts && 'indices' in opts) arrayFormat = opts.indices ? 'indices' : 'repeat';
    else arrayFormat = 'indices';
    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
    if (!objKeys) objKeys = Object.keys(obj);
    if (options.sort) objKeys.sort(options.sort);
    var sideChannel = getSideChannel();
    for(var i = 0; i < objKeys.length; ++i){
        var key = objKeys[i];
        if (options.skipNulls && obj[key] === null) continue;
        pushToArray(keys, stringify1(obj[key], key, generateArrayPrefix, options.strictNullHandling, options.skipNulls, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));
    }
    var joined = keys.join(options.delimiter);
    var prefix = options.addQueryPrefix === true ? '?' : '';
    if (options.charsetSentinel) {
        if (options.charset === 'iso-8859-1') // encodeURIComponent('&#10003;'), the "numeric entity" representation of a checkmark
        prefix += 'utf8=%26%2310003%3B&';
        else // encodeURIComponent('✓')
        prefix += 'utf8=%E2%9C%93&';
    }
    return joined.length > 0 ? prefix + joined : '';
};

},{"side-channel":"dMOmf","./utils":"aTZ81","./formats":"3mc1c"}],"dMOmf":[function(require,module,exports) {
'use strict';
var GetIntrinsic = require('get-intrinsic');
var callBound = require('call-bind/callBound');
var inspect = require('object-inspect');
var $TypeError = GetIntrinsic('%TypeError%');
var $WeakMap = GetIntrinsic('%WeakMap%', true);
var $Map = GetIntrinsic('%Map%', true);
var $weakMapGet = callBound('WeakMap.prototype.get', true);
var $weakMapSet = callBound('WeakMap.prototype.set', true);
var $weakMapHas = callBound('WeakMap.prototype.has', true);
var $mapGet = callBound('Map.prototype.get', true);
var $mapSet = callBound('Map.prototype.set', true);
var $mapHas = callBound('Map.prototype.has', true);
/*
 * This function traverses the list returning the node corresponding to the
 * given key.
 *
 * That node is also moved to the head of the list, so that if it's accessed
 * again we don't need to traverse the whole list. By doing so, all the recently
 * used nodes can be accessed relatively quickly.
 */ var listGetNode = function(list, key) {
    for(var prev = list, curr; (curr = prev.next) !== null; prev = curr)if (curr.key === key) {
        prev.next = curr.next;
        curr.next = list.next;
        list.next = curr; // eslint-disable-line no-param-reassign
        return curr;
    }
};
var listGet = function(objects, key) {
    var node = listGetNode(objects, key);
    return node && node.value;
};
var listSet = function(objects, key, value) {
    var node = listGetNode(objects, key);
    if (node) node.value = value;
    else // Prepend the new node to the beginning of the list
    objects.next = {
        key: key,
        next: objects.next,
        value: value
    };
};
var listHas = function(objects, key) {
    return !!listGetNode(objects, key);
};
module.exports = function getSideChannel() {
    var $wm;
    var $m;
    var $o;
    var channel = {
        assert: function(key) {
            if (!channel.has(key)) throw new $TypeError('Side channel does not contain ' + inspect(key));
        },
        get: function(key) {
            if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
                if ($wm) return $weakMapGet($wm, key);
            } else if ($Map) {
                if ($m) return $mapGet($m, key);
            } else {
                if ($o) return listGet($o, key);
            }
        },
        has: function(key) {
            if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
                if ($wm) return $weakMapHas($wm, key);
            } else if ($Map) {
                if ($m) return $mapHas($m, key);
            } else {
                if ($o) return listHas($o, key);
            }
            return false;
        },
        set: function(key, value) {
            if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
                if (!$wm) $wm = new $WeakMap();
                $weakMapSet($wm, key, value);
            } else if ($Map) {
                if (!$m) $m = new $Map();
                $mapSet($m, key, value);
            } else {
                if (!$o) /*
					 * Initialize the linked list as an empty node, so that we don't have
					 * to special-case handling of the first node: we can always refer to
					 * it as (previous node).next, instead of something like (list).head
					 */ $o = {
                    key: {
                    },
                    next: null
                };
                listSet($o, key, value);
            }
        }
    };
    return channel;
};

},{"get-intrinsic":"8OKkp","call-bind/callBound":"fSqU3","object-inspect":"6hq5h"}],"8OKkp":[function(require,module,exports) {
'use strict';
var undefined;
var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;
// eslint-disable-next-line consistent-return
var getEvalledConstructor = function(expressionSyntax) {
    try {
        return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
    } catch (e) {
    }
};
var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) try {
    $gOPD({
    }, '');
} catch (e) {
    $gOPD = null; // this is IE 8, which has a broken gOPD
}
var throwTypeError = function() {
    throw new $TypeError();
};
var ThrowTypeError = $gOPD ? function() {
    try {
        // eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
        arguments.callee; // IE 8 does not throw here
        return throwTypeError;
    } catch (calleeThrows) {
        try {
            // IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
            return $gOPD(arguments, 'callee').get;
        } catch (gOPDthrows) {
            return throwTypeError;
        }
    }
}() : throwTypeError;
var hasSymbols = require('has-symbols')();
var getProto = Object.getPrototypeOf || function(x) {
    return x.__proto__;
}; // eslint-disable-line no-proto
var needsEval = {
};
var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);
var INTRINSICS = {
    '%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
    '%Array%': Array,
    '%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
    '%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
    '%AsyncFromSyncIteratorPrototype%': undefined,
    '%AsyncFunction%': needsEval,
    '%AsyncGenerator%': needsEval,
    '%AsyncGeneratorFunction%': needsEval,
    '%AsyncIteratorPrototype%': needsEval,
    '%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
    '%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
    '%Boolean%': Boolean,
    '%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
    '%Date%': Date,
    '%decodeURI%': decodeURI,
    '%decodeURIComponent%': decodeURIComponent,
    '%encodeURI%': encodeURI,
    '%encodeURIComponent%': encodeURIComponent,
    '%Error%': Error,
    '%eval%': eval,
    '%EvalError%': EvalError,
    '%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
    '%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
    '%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
    '%Function%': $Function,
    '%GeneratorFunction%': needsEval,
    '%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
    '%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
    '%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
    '%isFinite%': isFinite,
    '%isNaN%': isNaN,
    '%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
    '%JSON%': typeof JSON === 'object' ? JSON : undefined,
    '%Map%': typeof Map === 'undefined' ? undefined : Map,
    '%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
    '%Math%': Math,
    '%Number%': Number,
    '%Object%': Object,
    '%parseFloat%': parseFloat,
    '%parseInt%': parseInt,
    '%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
    '%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
    '%RangeError%': RangeError,
    '%ReferenceError%': ReferenceError,
    '%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
    '%RegExp%': RegExp,
    '%Set%': typeof Set === 'undefined' ? undefined : Set,
    '%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
    '%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
    '%String%': String,
    '%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
    '%Symbol%': hasSymbols ? Symbol : undefined,
    '%SyntaxError%': $SyntaxError,
    '%ThrowTypeError%': ThrowTypeError,
    '%TypedArray%': TypedArray,
    '%TypeError%': $TypeError,
    '%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
    '%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
    '%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
    '%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
    '%URIError%': URIError,
    '%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
    '%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
    '%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};
var doEval1 = function doEval(name) {
    var value;
    if (name === '%AsyncFunction%') value = getEvalledConstructor('async function () {}');
    else if (name === '%GeneratorFunction%') value = getEvalledConstructor('function* () {}');
    else if (name === '%AsyncGeneratorFunction%') value = getEvalledConstructor('async function* () {}');
    else if (name === '%AsyncGenerator%') {
        var fn = doEval('%AsyncGeneratorFunction%');
        if (fn) value = fn.prototype;
    } else if (name === '%AsyncIteratorPrototype%') {
        var gen = doEval('%AsyncGenerator%');
        if (gen) value = getProto(gen.prototype);
    }
    INTRINSICS[name] = value;
    return value;
};
var LEGACY_ALIASES = {
    '%ArrayBufferPrototype%': [
        'ArrayBuffer',
        'prototype'
    ],
    '%ArrayPrototype%': [
        'Array',
        'prototype'
    ],
    '%ArrayProto_entries%': [
        'Array',
        'prototype',
        'entries'
    ],
    '%ArrayProto_forEach%': [
        'Array',
        'prototype',
        'forEach'
    ],
    '%ArrayProto_keys%': [
        'Array',
        'prototype',
        'keys'
    ],
    '%ArrayProto_values%': [
        'Array',
        'prototype',
        'values'
    ],
    '%AsyncFunctionPrototype%': [
        'AsyncFunction',
        'prototype'
    ],
    '%AsyncGenerator%': [
        'AsyncGeneratorFunction',
        'prototype'
    ],
    '%AsyncGeneratorPrototype%': [
        'AsyncGeneratorFunction',
        'prototype',
        'prototype'
    ],
    '%BooleanPrototype%': [
        'Boolean',
        'prototype'
    ],
    '%DataViewPrototype%': [
        'DataView',
        'prototype'
    ],
    '%DatePrototype%': [
        'Date',
        'prototype'
    ],
    '%ErrorPrototype%': [
        'Error',
        'prototype'
    ],
    '%EvalErrorPrototype%': [
        'EvalError',
        'prototype'
    ],
    '%Float32ArrayPrototype%': [
        'Float32Array',
        'prototype'
    ],
    '%Float64ArrayPrototype%': [
        'Float64Array',
        'prototype'
    ],
    '%FunctionPrototype%': [
        'Function',
        'prototype'
    ],
    '%Generator%': [
        'GeneratorFunction',
        'prototype'
    ],
    '%GeneratorPrototype%': [
        'GeneratorFunction',
        'prototype',
        'prototype'
    ],
    '%Int8ArrayPrototype%': [
        'Int8Array',
        'prototype'
    ],
    '%Int16ArrayPrototype%': [
        'Int16Array',
        'prototype'
    ],
    '%Int32ArrayPrototype%': [
        'Int32Array',
        'prototype'
    ],
    '%JSONParse%': [
        'JSON',
        'parse'
    ],
    '%JSONStringify%': [
        'JSON',
        'stringify'
    ],
    '%MapPrototype%': [
        'Map',
        'prototype'
    ],
    '%NumberPrototype%': [
        'Number',
        'prototype'
    ],
    '%ObjectPrototype%': [
        'Object',
        'prototype'
    ],
    '%ObjProto_toString%': [
        'Object',
        'prototype',
        'toString'
    ],
    '%ObjProto_valueOf%': [
        'Object',
        'prototype',
        'valueOf'
    ],
    '%PromisePrototype%': [
        'Promise',
        'prototype'
    ],
    '%PromiseProto_then%': [
        'Promise',
        'prototype',
        'then'
    ],
    '%Promise_all%': [
        'Promise',
        'all'
    ],
    '%Promise_reject%': [
        'Promise',
        'reject'
    ],
    '%Promise_resolve%': [
        'Promise',
        'resolve'
    ],
    '%RangeErrorPrototype%': [
        'RangeError',
        'prototype'
    ],
    '%ReferenceErrorPrototype%': [
        'ReferenceError',
        'prototype'
    ],
    '%RegExpPrototype%': [
        'RegExp',
        'prototype'
    ],
    '%SetPrototype%': [
        'Set',
        'prototype'
    ],
    '%SharedArrayBufferPrototype%': [
        'SharedArrayBuffer',
        'prototype'
    ],
    '%StringPrototype%': [
        'String',
        'prototype'
    ],
    '%SymbolPrototype%': [
        'Symbol',
        'prototype'
    ],
    '%SyntaxErrorPrototype%': [
        'SyntaxError',
        'prototype'
    ],
    '%TypedArrayPrototype%': [
        'TypedArray',
        'prototype'
    ],
    '%TypeErrorPrototype%': [
        'TypeError',
        'prototype'
    ],
    '%Uint8ArrayPrototype%': [
        'Uint8Array',
        'prototype'
    ],
    '%Uint8ClampedArrayPrototype%': [
        'Uint8ClampedArray',
        'prototype'
    ],
    '%Uint16ArrayPrototype%': [
        'Uint16Array',
        'prototype'
    ],
    '%Uint32ArrayPrototype%': [
        'Uint32Array',
        'prototype'
    ],
    '%URIErrorPrototype%': [
        'URIError',
        'prototype'
    ],
    '%WeakMapPrototype%': [
        'WeakMap',
        'prototype'
    ],
    '%WeakSetPrototype%': [
        'WeakSet',
        'prototype'
    ]
};
var bind = require('function-bind');
var hasOwn = require('has');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */ var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */ 
var stringToPath = function stringToPath(string) {
    var first = $strSlice(string, 0, 1);
    var last = $strSlice(string, -1);
    if (first === '%' && last !== '%') throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
    else if (last === '%' && first !== '%') throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
    var result = [];
    $replace(string, rePropName, function(match, number, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
    });
    return result;
};
/* end adaptation */ var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
    var intrinsicName = name;
    var alias;
    if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = '%' + alias[0] + '%';
    }
    if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) value = doEval1(intrinsicName);
        if (typeof value === 'undefined' && !allowMissing) throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
        return {
            alias: alias,
            name: intrinsicName,
            value: value
        };
    }
    throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};
module.exports = function GetIntrinsic(name, allowMissing) {
    if (typeof name !== 'string' || name.length === 0) throw new $TypeError('intrinsic name must be a non-empty string');
    if (arguments.length > 1 && typeof allowMissing !== 'boolean') throw new $TypeError('"allowMissing" argument must be a boolean');
    var parts = stringToPath(name);
    var intrinsicBaseName = parts.length > 0 ? parts[0] : '';
    var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
    var intrinsicRealName = intrinsic.name;
    var value = intrinsic.value;
    var skipFurtherCaching = false;
    var alias = intrinsic.alias;
    if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([
            0,
            1
        ], alias));
    }
    for(var i = 1, isOwn = true; i < parts.length; i += 1){
        var part = parts[i];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === '`' || last === '"' || last === "'" || last === '`') && first !== last) throw new $SyntaxError('property names with quotes must have matching quotes');
        if (part === 'constructor' || !isOwn) skipFurtherCaching = true;
        intrinsicBaseName += '.' + part;
        intrinsicRealName = '%' + intrinsicBaseName + '%';
        if (hasOwn(INTRINSICS, intrinsicRealName)) value = INTRINSICS[intrinsicRealName];
        else if (value != null) {
            if (!(part in value)) {
                if (!allowMissing) throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
                return void 0;
            }
            if ($gOPD && i + 1 >= parts.length) {
                var desc = $gOPD(value, part);
                isOwn = !!desc;
                // By convention, when a data property is converted to an accessor
                // property to emulate a data property that does not suffer from
                // the override mistake, that accessor's getter is marked with
                // an `originalValue` property. Here, when we detect this, we
                // uphold the illusion by pretending to see that original data
                // property, i.e., returning the value rather than the getter
                // itself.
                if (isOwn && 'get' in desc && !('originalValue' in desc.get)) value = desc.get;
                else value = value[part];
            } else {
                isOwn = hasOwn(value, part);
                value = value[part];
            }
            if (isOwn && !skipFurtherCaching) INTRINSICS[intrinsicRealName] = value;
        }
    }
    return value;
};

},{"has-symbols":"atWBm","function-bind":"c9Nce","has":"elYSS"}],"atWBm":[function(require,module,exports) {
'use strict';
var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');
module.exports = function hasNativeSymbols() {
    if (typeof origSymbol !== 'function') return false;
    if (typeof Symbol !== 'function') return false;
    if (typeof origSymbol('foo') !== 'symbol') return false;
    if (typeof Symbol('bar') !== 'symbol') return false;
    return hasSymbolSham();
};

},{"./shams":"7p99v"}],"7p99v":[function(require,module,exports) {
'use strict';
/* eslint complexity: [2, 18], max-statements: [2, 33] */ module.exports = function hasSymbols() {
    if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') return false;
    if (typeof Symbol.iterator === 'symbol') return true;
    var obj = {
    };
    var sym = Symbol('test');
    var symObj = Object(sym);
    if (typeof sym === 'string') return false;
    if (Object.prototype.toString.call(sym) !== '[object Symbol]') return false;
    if (Object.prototype.toString.call(symObj) !== '[object Symbol]') return false;
    // temp disabled per https://github.com/ljharb/object.assign/issues/17
    // if (sym instanceof Symbol) { return false; }
    // temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
    // if (!(symObj instanceof Symbol)) { return false; }
    // if (typeof Symbol.prototype.toString !== 'function') { return false; }
    // if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }
    var symVal = 42;
    obj[sym] = symVal;
    for(sym in obj)return false;
     // eslint-disable-line no-restricted-syntax, no-unreachable-loop
    if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) return false;
    if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) return false;
    var syms = Object.getOwnPropertySymbols(obj);
    if (syms.length !== 1 || syms[0] !== sym) return false;
    if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) return false;
    if (typeof Object.getOwnPropertyDescriptor === 'function') {
        var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
        if (descriptor.value !== symVal || descriptor.enumerable !== true) return false;
    }
    return true;
};

},{}],"c9Nce":[function(require,module,exports) {
'use strict';
var implementation = require('./implementation');
module.exports = Function.prototype.bind || implementation;

},{"./implementation":"llBZg"}],"llBZg":[function(require,module,exports) {
'use strict';
/* eslint no-invalid-this: 1 */ var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';
module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) throw new TypeError(ERROR_MESSAGE + target);
    var args = slice.call(arguments, 1);
    var bound;
    var binder = function() {
        if (this instanceof bound) {
            var result = target.apply(this, args.concat(slice.call(arguments)));
            if (Object(result) === result) return result;
            return this;
        } else return target.apply(that, args.concat(slice.call(arguments)));
    };
    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for(var i = 0; i < boundLength; i++)boundArgs.push('$' + i);
    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);
    if (target.prototype) {
        var Empty = function Empty() {
        };
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }
    return bound;
};

},{}],"elYSS":[function(require,module,exports) {
'use strict';
var bind = require('function-bind');
module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":"c9Nce"}],"fSqU3":[function(require,module,exports) {
'use strict';
var GetIntrinsic = require('get-intrinsic');
var callBind = require('./');
var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));
module.exports = function callBoundIntrinsic(name, allowMissing) {
    var intrinsic = GetIntrinsic(name, !!allowMissing);
    if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) return callBind(intrinsic);
    return intrinsic;
};

},{"get-intrinsic":"8OKkp","./":"dE5Ve"}],"dE5Ve":[function(require,module,exports) {
'use strict';
var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');
var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);
var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');
if ($defineProperty) try {
    $defineProperty({
    }, 'a', {
        value: 1
    });
} catch (e) {
    // IE 8 has a broken defineProperty
    $defineProperty = null;
}
module.exports = function callBind(originalFunction) {
    var func = $reflectApply(bind, $call, arguments);
    if ($gOPD && $defineProperty) {
        var desc = $gOPD(func, 'length');
        if (desc.configurable) // original length, plus the receiver, minus any additional arguments (after the receiver)
        $defineProperty(func, 'length', {
            value: 1 + $max(0, originalFunction.length - (arguments.length - 1))
        });
    }
    return func;
};
var applyBind = function applyBind() {
    return $reflectApply(bind, $apply, arguments);
};
if ($defineProperty) $defineProperty(module.exports, 'apply', {
    value: applyBind
});
else module.exports.apply = applyBind;

},{"function-bind":"c9Nce","get-intrinsic":"8OKkp"}],"6hq5h":[function(require,module,exports) {
var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;
var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
var hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;
var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
var booleanValueOf = Boolean.prototype.valueOf;
var objectToString = Object.prototype.toString;
var functionToString = Function.prototype.toString;
var match = String.prototype.match;
var bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
var gOPS = Object.getOwnPropertySymbols;
var symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;
var hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';
var isEnumerable = Object.prototype.propertyIsEnumerable;
var gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype // eslint-disable-line no-proto
 ? function(O) {
    return O.__proto__; // eslint-disable-line no-proto
} : null);
var inspectCustom = require('./util.inspect').custom;
var inspectSymbol = inspectCustom && isSymbol(inspectCustom) ? inspectCustom : null;
var toStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag !== 'undefined' ? Symbol.toStringTag : null;
module.exports = function inspect_(obj, options, depth, seen) {
    var opts = options || {
    };
    if (has(opts, 'quoteStyle') && opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double') throw new TypeError('option "quoteStyle" must be "single" or "double"');
    if (has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number' ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity : opts.maxStringLength !== null)) throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;
    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') throw new TypeError('option "customInspect", if provided, must be `true`, `false`, or `\'symbol\'`');
    if (has(opts, 'indent') && opts.indent !== null && opts.indent !== '\t' && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)) throw new TypeError('options "indent" must be "\\t", an integer > 0, or `null`');
    if (typeof obj === 'undefined') return 'undefined';
    if (obj === null) return 'null';
    if (typeof obj === 'boolean') return obj ? 'true' : 'false';
    if (typeof obj === 'string') return inspectString(obj, opts);
    if (typeof obj === 'number') {
        if (obj === 0) return Infinity / obj > 0 ? '0' : '-0';
        return String(obj);
    }
    if (typeof obj === 'bigint') return String(obj) + 'n';
    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
    if (typeof depth === 'undefined') depth = 0;
    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') return isArray(obj) ? '[Array]' : '[Object]';
    var indent = getIndent(opts, depth);
    if (typeof seen === 'undefined') seen = [];
    else if (indexOf(seen, obj) >= 0) return '[Circular]';
    function inspect(value, from, noIndent) {
        if (from) {
            seen = seen.slice();
            seen.push(from);
        }
        if (noIndent) {
            var newOpts = {
                depth: opts.depth
            };
            if (has(opts, 'quoteStyle')) newOpts.quoteStyle = opts.quoteStyle;
            return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
    }
    if (typeof obj === 'function') {
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + keys.join(', ') + ' }' : '');
    }
    if (isSymbol(obj)) {
        var symString = hasShammedSymbols ? String(obj).replace(/^(Symbol\(.*\))_[^)]*$/, '$1') : symToString.call(obj);
        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;
    }
    if (isElement(obj)) {
        var s = '<' + String(obj.nodeName).toLowerCase();
        var attrs = obj.attributes || [];
        for(var i = 0; i < attrs.length; i++)s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);
        s += '>';
        if (obj.childNodes && obj.childNodes.length) s += '...';
        s += '</' + String(obj.nodeName).toLowerCase() + '>';
        return s;
    }
    if (isArray(obj)) {
        if (obj.length === 0) return '[]';
        var xs = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs)) return '[' + indentedJoin(xs, indent) + ']';
        return '[ ' + xs.join(', ') + ' ]';
    }
    if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (parts.length === 0) return '[' + String(obj) + ']';
        return '{ [' + String(obj) + '] ' + parts.join(', ') + ' }';
    }
    if (typeof obj === 'object' && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === 'function') return obj[inspectSymbol]();
        else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') return obj.inspect();
    }
    if (isMap(obj)) {
        var mapParts = [];
        mapForEach.call(obj, function(value, key) {
            mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));
        });
        return collectionOf('Map', mapSize.call(obj), mapParts, indent);
    }
    if (isSet(obj)) {
        var setParts = [];
        setForEach.call(obj, function(value) {
            setParts.push(inspect(value, obj));
        });
        return collectionOf('Set', setSize.call(obj), setParts, indent);
    }
    if (isWeakMap(obj)) return weakCollectionOf('WeakMap');
    if (isWeakSet(obj)) return weakCollectionOf('WeakSet');
    if (isWeakRef(obj)) return weakCollectionOf('WeakRef');
    if (isNumber(obj)) return markBoxed(inspect(Number(obj)));
    if (isBigInt(obj)) return markBoxed(inspect(bigIntValueOf.call(obj)));
    if (isBoolean(obj)) return markBoxed(booleanValueOf.call(obj));
    if (isString(obj)) return markBoxed(inspect(String(obj)));
    if (!isDate(obj) && !isRegExp(obj)) {
        var ys = arrObjKeys(obj, inspect);
        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? '' : 'null prototype';
        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? toStr(obj).slice(8, -1) : protoTag ? 'Object' : '';
        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';
        var tag = constructorTag + (stringTag || protoTag ? '[' + [].concat(stringTag || [], protoTag || []).join(': ') + '] ' : '');
        if (ys.length === 0) return tag + '{}';
        if (indent) return tag + '{' + indentedJoin(ys, indent) + '}';
        return tag + '{ ' + ys.join(', ') + ' }';
    }
    return String(obj);
};
function wrapQuotes(s, defaultStyle, opts) {
    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
    return quoteChar + s + quoteChar;
}
function quote(s) {
    return String(s).replace(/"/g, '&quot;');
}
function isArray(obj) {
    return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
function isDate(obj) {
    return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
function isRegExp(obj) {
    return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
function isError(obj) {
    return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
function isString(obj) {
    return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
function isNumber(obj) {
    return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
function isBoolean(obj) {
    return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj));
}
// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives
function isSymbol(obj) {
    if (hasShammedSymbols) return obj && typeof obj === 'object' && obj instanceof Symbol;
    if (typeof obj === 'symbol') return true;
    if (!obj || typeof obj !== 'object' || !symToString) return false;
    try {
        symToString.call(obj);
        return true;
    } catch (e) {
    }
    return false;
}
function isBigInt(obj) {
    if (!obj || typeof obj !== 'object' || !bigIntValueOf) return false;
    try {
        bigIntValueOf.call(obj);
        return true;
    } catch (e) {
    }
    return false;
}
var hasOwn = Object.prototype.hasOwnProperty || function(key) {
    return key in this;
};
function has(obj, key) {
    return hasOwn.call(obj, key);
}
function toStr(obj) {
    return objectToString.call(obj);
}
function nameOf(f) {
    if (f.name) return f.name;
    var m = match.call(functionToString.call(f), /^function\s*([\w$]+)/);
    if (m) return m[1];
    return null;
}
function indexOf(xs, x) {
    if (xs.indexOf) return xs.indexOf(x);
    for(var i = 0, l = xs.length; i < l; i++){
        if (xs[i] === x) return i;
    }
    return -1;
}
function isMap(x) {
    if (!mapSize || !x || typeof x !== 'object') return false;
    try {
        mapSize.call(x);
        try {
            setSize.call(x);
        } catch (s) {
            return true;
        }
        return x instanceof Map; // core-js workaround, pre-v2.5.0
    } catch (e) {
    }
    return false;
}
function isWeakMap(x) {
    if (!weakMapHas || !x || typeof x !== 'object') return false;
    try {
        weakMapHas.call(x, weakMapHas);
        try {
            weakSetHas.call(x, weakSetHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0
    } catch (e) {
    }
    return false;
}
function isWeakRef(x) {
    if (!weakRefDeref || !x || typeof x !== 'object') return false;
    try {
        weakRefDeref.call(x);
        return true;
    } catch (e) {
    }
    return false;
}
function isSet(x) {
    if (!setSize || !x || typeof x !== 'object') return false;
    try {
        setSize.call(x);
        try {
            mapSize.call(x);
        } catch (m) {
            return true;
        }
        return x instanceof Set; // core-js workaround, pre-v2.5.0
    } catch (e) {
    }
    return false;
}
function isWeakSet(x) {
    if (!weakSetHas || !x || typeof x !== 'object') return false;
    try {
        weakSetHas.call(x, weakSetHas);
        try {
            weakMapHas.call(x, weakMapHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0
    } catch (e) {
    }
    return false;
}
function isElement(x) {
    if (!x || typeof x !== 'object') return false;
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) return true;
    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';
}
function inspectString(str, opts) {
    if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
        return inspectString(str.slice(0, opts.maxStringLength), opts) + trailer;
    }
    // eslint-disable-next-line no-control-regex
    var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
    return wrapQuotes(s, 'single', opts);
}
function lowbyte(c) {
    var n = c.charCodeAt(0);
    var x = {
        8: 'b',
        9: 't',
        10: 'n',
        12: 'f',
        13: 'r'
    }[n];
    if (x) return '\\' + x;
    return '\\x' + (n < 16 ? '0' : '') + n.toString(16).toUpperCase();
}
function markBoxed(str) {
    return 'Object(' + str + ')';
}
function weakCollectionOf(type) {
    return type + ' { ? }';
}
function collectionOf(type, size, entries, indent) {
    var joinedEntries = indent ? indentedJoin(entries, indent) : entries.join(', ');
    return type + ' (' + size + ') {' + joinedEntries + '}';
}
function singleLineValues(xs) {
    for(var i = 0; i < xs.length; i++){
        if (indexOf(xs[i], '\n') >= 0) return false;
    }
    return true;
}
function getIndent(opts, depth) {
    var baseIndent;
    if (opts.indent === '\t') baseIndent = '\t';
    else if (typeof opts.indent === 'number' && opts.indent > 0) baseIndent = Array(opts.indent + 1).join(' ');
    else return null;
    return {
        base: baseIndent,
        prev: Array(depth + 1).join(baseIndent)
    };
}
function indentedJoin(xs, indent) {
    if (xs.length === 0) return '';
    var lineJoiner = '\n' + indent.prev + indent.base;
    return lineJoiner + xs.join(',' + lineJoiner) + '\n' + indent.prev;
}
function arrObjKeys(obj, inspect) {
    var isArr = isArray(obj);
    var xs = [];
    if (isArr) {
        xs.length = obj.length;
        for(var i = 0; i < obj.length; i++)xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
    }
    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];
    var symMap;
    if (hasShammedSymbols) {
        symMap = {
        };
        for(var k = 0; k < syms.length; k++)symMap['$' + syms[k]] = syms[k];
    }
    for(var key in obj){
        if (!has(obj, key)) continue;
         // eslint-disable-line no-restricted-syntax, no-continue
        if (isArr && String(Number(key)) === key && key < obj.length) continue;
         // eslint-disable-line no-restricted-syntax, no-continue
        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) continue; // eslint-disable-line no-restricted-syntax, no-continue
        else if (/[^\w$]/.test(key)) xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
        else xs.push(key + ': ' + inspect(obj[key], obj));
    }
    if (typeof gOPS === 'function') {
        for(var j = 0; j < syms.length; j++)if (isEnumerable.call(obj, syms[j])) xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));
    }
    return xs;
}

},{"./util.inspect":"ewjlR"}],"ewjlR":[function(require,module,exports) {
"use strict";

},{}],"aTZ81":[function(require,module,exports) {
'use strict';
var formats = require('./formats');
var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;
var hexTable = function() {
    var array = [];
    for(var i = 0; i < 256; ++i)array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
    return array;
}();
var compactQueue = function compactQueue(queue) {
    while(queue.length > 1){
        var item = queue.pop();
        var obj = item.obj[item.prop];
        if (isArray(obj)) {
            var compacted = [];
            for(var j = 0; j < obj.length; ++j)if (typeof obj[j] !== 'undefined') compacted.push(obj[j]);
            item.obj[item.prop] = compacted;
        }
    }
};
var arrayToObject = function arrayToObject(source, options) {
    var obj = options && options.plainObjects ? Object.create(null) : {
    };
    for(var i = 0; i < source.length; ++i)if (typeof source[i] !== 'undefined') obj[i] = source[i];
    return obj;
};
var merge1 = function merge(target, source, options) {
    /* eslint no-param-reassign: 0 */ if (!source) return target;
    if (typeof source !== 'object') {
        if (isArray(target)) target.push(source);
        else if (target && typeof target === 'object') {
            if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) target[source] = true;
        } else return [
            target,
            source
        ];
        return target;
    }
    if (!target || typeof target !== 'object') return [
        target
    ].concat(source);
    var mergeTarget = target;
    if (isArray(target) && !isArray(source)) mergeTarget = arrayToObject(target, options);
    if (isArray(target) && isArray(source)) {
        source.forEach(function(item, i) {
            if (has.call(target, i)) {
                var targetItem = target[i];
                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') target[i] = merge(targetItem, item, options);
                else target.push(item);
            } else target[i] = item;
        });
        return target;
    }
    return Object.keys(source).reduce(function(acc, key) {
        var value = source[key];
        if (has.call(acc, key)) acc[key] = merge(acc[key], value, options);
        else acc[key] = value;
        return acc;
    }, mergeTarget);
};
var assign = function assignSingleSource(target, source) {
    return Object.keys(source).reduce(function(acc, key) {
        acc[key] = source[key];
        return acc;
    }, target);
};
var decode = function(str, decoder, charset) {
    var strWithoutPlus = str.replace(/\+/g, ' ');
    if (charset === 'iso-8859-1') // unescape never throws, no try...catch needed:
    return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
    // utf-8
    try {
        return decodeURIComponent(strWithoutPlus);
    } catch (e) {
        return strWithoutPlus;
    }
};
var encode = function encode(str, defaultEncoder, charset, kind, format) {
    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
    // It has been adapted here for stricter adherence to RFC 3986
    if (str.length === 0) return str;
    var string = str;
    if (typeof str === 'symbol') string = Symbol.prototype.toString.call(str);
    else if (typeof str !== 'string') string = String(str);
    if (charset === 'iso-8859-1') return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {
        return '%26%23' + parseInt($0.slice(2), 16) + '%3B';
    });
    var out = '';
    for(var i = 0; i < string.length; ++i){
        var c = string.charCodeAt(i);
        if (c === 45 // -
         || c === 46 // .
         || c === 95 // _
         || c === 126 // ~
         || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122 || format === formats.RFC1738 && (c === 40 || c === 41) // ( )
        ) {
            out += string.charAt(i);
            continue;
        }
        if (c < 128) {
            out = out + hexTable[c];
            continue;
        }
        if (c < 2048) {
            out = out + (hexTable[192 | c >> 6] + hexTable[128 | c & 63]);
            continue;
        }
        if (c < 55296 || c >= 57344) {
            out = out + (hexTable[224 | c >> 12] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63]);
            continue;
        }
        i += 1;
        c = 65536 + ((c & 1023) << 10 | string.charCodeAt(i) & 1023);
        out += hexTable[240 | c >> 18] + hexTable[128 | c >> 12 & 63] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
    }
    return out;
};
var compact = function compact(value) {
    var queue = [
        {
            obj: {
                o: value
            },
            prop: 'o'
        }
    ];
    var refs = [];
    for(var i = 0; i < queue.length; ++i){
        var item = queue[i];
        var obj = item.obj[item.prop];
        var keys = Object.keys(obj);
        for(var j = 0; j < keys.length; ++j){
            var key = keys[j];
            var val = obj[key];
            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
                queue.push({
                    obj: obj,
                    prop: key
                });
                refs.push(val);
            }
        }
    }
    compactQueue(queue);
    return value;
};
var isRegExp = function isRegExp(obj) {
    return Object.prototype.toString.call(obj) === '[object RegExp]';
};
var isBuffer = function isBuffer(obj) {
    if (!obj || typeof obj !== 'object') return false;
    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};
var combine = function combine(a, b) {
    return [].concat(a, b);
};
var maybeMap = function maybeMap(val, fn) {
    if (isArray(val)) {
        var mapped = [];
        for(var i = 0; i < val.length; i += 1)mapped.push(fn(val[i]));
        return mapped;
    }
    return fn(val);
};
module.exports = {
    arrayToObject: arrayToObject,
    assign: assign,
    combine: combine,
    compact: compact,
    decode: decode,
    encode: encode,
    isBuffer: isBuffer,
    isRegExp: isRegExp,
    maybeMap: maybeMap,
    merge: merge1
};

},{"./formats":"3mc1c"}],"3mc1c":[function(require,module,exports) {
'use strict';
var replace = String.prototype.replace;
var percentTwenties = /%20/g;
var Format = {
    RFC1738: 'RFC1738',
    RFC3986: 'RFC3986'
};
module.exports = {
    'default': Format.RFC3986,
    formatters: {
        RFC1738: function(value) {
            return replace.call(value, percentTwenties, '+');
        },
        RFC3986: function(value) {
            return String(value);
        }
    },
    RFC1738: Format.RFC1738,
    RFC3986: Format.RFC3986
};

},{}],"kbbGQ":[function(require,module,exports) {
'use strict';
var utils = require('./utils');
var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;
var defaults = {
    allowDots: false,
    allowPrototypes: false,
    allowSparse: false,
    arrayLimit: 20,
    charset: 'utf-8',
    charsetSentinel: false,
    comma: false,
    decoder: utils.decode,
    delimiter: '&',
    depth: 5,
    ignoreQueryPrefix: false,
    interpretNumericEntities: false,
    parameterLimit: 1000,
    parseArrays: true,
    plainObjects: false,
    strictNullHandling: false
};
var interpretNumericEntities = function(str) {
    return str.replace(/&#(\d+);/g, function($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
    });
};
var parseArrayValue = function(val, options) {
    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) return val.split(',');
    return val;
};
// This is what browsers will submit when the ✓ character occurs in an
// application/x-www-form-urlencoded body and the encoding of the page containing
// the form is iso-8859-1, or when the submitted form has an accept-charset
// attribute of iso-8859-1. Presumably also with other charsets that do not contain
// the ✓ character, such as us-ascii.
var isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')
// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.
var charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')
var parseValues = function parseQueryStringValues(str, options) {
    var obj = {
    };
    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
    var parts = cleanStr.split(options.delimiter, limit);
    var skipIndex = -1; // Keep track of where the utf8 sentinel was found
    var i;
    var charset = options.charset;
    if (options.charsetSentinel) {
        for(i = 0; i < parts.length; ++i)if (parts[i].indexOf('utf8=') === 0) {
            if (parts[i] === charsetSentinel) charset = 'utf-8';
            else if (parts[i] === isoSentinel) charset = 'iso-8859-1';
            skipIndex = i;
            i = parts.length; // The eslint settings do not allow break;
        }
    }
    for(i = 0; i < parts.length; ++i){
        if (i === skipIndex) continue;
        var part = parts[i];
        var bracketEqualsPos = part.indexOf(']=');
        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;
        var key, val;
        if (pos === -1) {
            key = options.decoder(part, defaults.decoder, charset, 'key');
            val = options.strictNullHandling ? null : '';
        } else {
            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');
            val = utils.maybeMap(parseArrayValue(part.slice(pos + 1), options), function(encodedVal) {
                return options.decoder(encodedVal, defaults.decoder, charset, 'value');
            });
        }
        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') val = interpretNumericEntities(val);
        if (part.indexOf('[]=') > -1) val = isArray(val) ? [
            val
        ] : val;
        if (has.call(obj, key)) obj[key] = utils.combine(obj[key], val);
        else obj[key] = val;
    }
    return obj;
};
var parseObject = function(chain, val, options, valuesParsed) {
    var leaf = valuesParsed ? val : parseArrayValue(val, options);
    for(var i = chain.length - 1; i >= 0; --i){
        var obj;
        var root = chain[i];
        if (root === '[]' && options.parseArrays) obj = [].concat(leaf);
        else {
            obj = options.plainObjects ? Object.create(null) : {
            };
            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
            var index = parseInt(cleanRoot, 10);
            if (!options.parseArrays && cleanRoot === '') obj = {
                0: leaf
            };
            else if (!isNaN(index) && root !== cleanRoot && String(index) === cleanRoot && index >= 0 && options.parseArrays && index <= options.arrayLimit) {
                obj = [];
                obj[index] = leaf;
            } else obj[cleanRoot] = leaf;
        }
        leaf = obj;
    }
    return leaf;
};
var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
    if (!givenKey) return;
    // Transform dot notation to bracket notation
    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;
    // The regex chunks
    var brackets = /(\[[^[\]]*])/;
    var child = /(\[[^[\]]*])/g;
    // Get the parent
    var segment = options.depth > 0 && brackets.exec(key);
    var parent = segment ? key.slice(0, segment.index) : key;
    // Stash the parent if it exists
    var keys = [];
    if (parent) {
        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
            if (!options.allowPrototypes) return;
        }
        keys.push(parent);
    }
    // Loop through children appending to the array until we hit depth
    var i = 0;
    while(options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth){
        i += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
            if (!options.allowPrototypes) return;
        }
        keys.push(segment[1]);
    }
    // If there's a remainder, just add whatever is left
    if (segment) keys.push('[' + key.slice(segment.index) + ']');
    return parseObject(keys, val, options, valuesParsed);
};
var normalizeParseOptions = function normalizeParseOptions(opts) {
    if (!opts) return defaults;
    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') throw new TypeError('Decoder has to be a function.');
    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;
    return {
        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,
        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,
        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,
        charset: charset,
        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
        // eslint-disable-next-line no-implicit-coercion, no-extra-parens
        depth: typeof opts.depth === 'number' || opts.depth === false ? +opts.depth : defaults.depth,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,
        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
    };
};
module.exports = function(str, opts) {
    var options = normalizeParseOptions(opts);
    if (str === '' || str === null || typeof str === 'undefined') return options.plainObjects ? Object.create(null) : {
    };
    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {
    };
    // Iterate over the keys and setup the new object
    var keys = Object.keys(tempObj);
    for(var i = 0; i < keys.length; ++i){
        var key = keys[i];
        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');
        obj = utils.merge(obj, newObj, options);
    }
    if (options.allowSparse === true) return obj;
    return utils.compact(obj);
};

},{"./utils":"aTZ81"}],"9Im5o":[function(require,module,exports) {
'use strict';
var isMergeableObject = function isMergeableObject(value) {
    return isNonNullObject(value) && !isSpecial(value);
};
function isNonNullObject(value) {
    return !!value && typeof value === 'object';
}
function isSpecial(value) {
    var stringValue = Object.prototype.toString.call(value);
    return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);
}
// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 60103;
function isReactElement(value) {
    return value.$$typeof === REACT_ELEMENT_TYPE;
}
function emptyTarget(val) {
    return Array.isArray(val) ? [] : {
    };
}
function cloneUnlessOtherwiseSpecified(value, options) {
    return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
}
function defaultArrayMerge(target, source, options) {
    return target.concat(source).map(function(element) {
        return cloneUnlessOtherwiseSpecified(element, options);
    });
}
function getMergeFunction(key, options) {
    if (!options.customMerge) return deepmerge;
    var customMerge = options.customMerge(key);
    return typeof customMerge === 'function' ? customMerge : deepmerge;
}
function getEnumerableOwnPropertySymbols(target) {
    return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol) {
        return target.propertyIsEnumerable(symbol);
    }) : [];
}
function getKeys(target) {
    return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
}
function propertyIsOnObject(object, property) {
    try {
        return property in object;
    } catch (_) {
        return false;
    }
}
// Protects from prototype poisoning and unexpected merging up the prototype chain.
function propertyIsUnsafe(target, key) {
    return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,
     && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,
     && Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.
    ;
}
function mergeObject(target, source, options) {
    var destination = {
    };
    if (options.isMergeableObject(target)) getKeys(target).forEach(function(key) {
        destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
    });
    getKeys(source).forEach(function(key) {
        if (propertyIsUnsafe(target, key)) return;
        if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
        else destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
    });
    return destination;
}
function deepmerge(target, source, options) {
    options = options || {
    };
    options.arrayMerge = options.arrayMerge || defaultArrayMerge;
    options.isMergeableObject = options.isMergeableObject || isMergeableObject;
    // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()
    // implementations can use it. The caller may not replace it.
    options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
    var sourceIsArray = Array.isArray(source);
    var targetIsArray = Array.isArray(target);
    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
    if (!sourceAndTargetTypesMatch) return cloneUnlessOtherwiseSpecified(source, options);
    else if (sourceIsArray) return options.arrayMerge(target, source, options);
    else return mergeObject(target, source, options);
}
deepmerge.all = function deepmergeAll(array, options) {
    if (!Array.isArray(array)) throw new Error('first argument should be an array');
    return array.reduce(function(prev, next) {
        return deepmerge(prev, next, options);
    }, {
    });
};
var deepmerge_1 = deepmerge;
module.exports = deepmerge_1;

},{}],"bWSzr":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react-jsx-runtime.development.js');

},{"./cjs/react-jsx-runtime.development.js":"iCyUR"}],"iCyUR":[function(require,module,exports) {
/** @license React v17.0.2
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    var React = require('react');
    var _assign = require('object-assign');
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 60103;
    var REACT_PORTAL_TYPE = 60106;
    exports.Fragment = 60107;
    var REACT_STRICT_MODE_TYPE = 60108;
    var REACT_PROFILER_TYPE = 60114;
    var REACT_PROVIDER_TYPE = 60109;
    var REACT_CONTEXT_TYPE = 60110;
    var REACT_FORWARD_REF_TYPE = 60112;
    var REACT_SUSPENSE_TYPE = 60113;
    var REACT_SUSPENSE_LIST_TYPE = 60120;
    var REACT_MEMO_TYPE = 60115;
    var REACT_LAZY_TYPE = 60116;
    var REACT_BLOCK_TYPE = 60121;
    var REACT_SERVER_BLOCK_TYPE = 60122;
    var REACT_FUNDAMENTAL_TYPE = 60117;
    var REACT_SCOPE_TYPE = 60119;
    var REACT_OPAQUE_ID_TYPE = 60128;
    var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
    var REACT_OFFSCREEN_TYPE = 60130;
    var REACT_LEGACY_HIDDEN_TYPE = 60131;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor('react.element');
        REACT_PORTAL_TYPE = symbolFor('react.portal');
        exports.Fragment = symbolFor('react.fragment');
        REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
        REACT_PROFILER_TYPE = symbolFor('react.profiler');
        REACT_PROVIDER_TYPE = symbolFor('react.provider');
        REACT_CONTEXT_TYPE = symbolFor('react.context');
        REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
        REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
        REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
        REACT_MEMO_TYPE = symbolFor('react.memo');
        REACT_LAZY_TYPE = symbolFor('react.lazy');
        REACT_BLOCK_TYPE = symbolFor('react.block');
        REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
        REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
        REACT_SCOPE_TYPE = symbolFor('react.scope');
        REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
        REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
        REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }
    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning('error', format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        }
        var argsWithFormat = args.map(function(item) {
            return '' + item;
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    // Filter certain DOM attributes (e.g. src, href) if their values are empty strings.
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) return true;
        }
        return false;
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || '';
        return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }
    function getContextName(type) {
        return type.displayName || 'Context';
    }
    function getComponentName(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case exports.Fragment:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                return getComponentName(type.type);
            case REACT_BLOCK_TYPE:
                return getComponentName(type._render);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentName(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {
    }
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: _assign({
                }, props, {
                    value: prevLog
                }),
                info: _assign({
                }, props, {
                    value: prevInfo
                }),
                warn: _assign({
                }, props, {
                    value: prevWarn
                }),
                error: _assign({
                }, props, {
                    value: prevError
                }),
                group: _assign({
                }, props, {
                    value: prevGroup
                }),
                groupCollapsed: _assign({
                }, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: _assign({
                }, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0)
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_BLOCK_TYPE:
                return describeFunctionComponentFrame(type._render);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
        }
        return '';
    }
    var loggedTypeFailures = {
    };
    var ReactDebugCurrentFrame1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(Object.prototype.hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;
    var didWarnAboutStringRefs;
    didWarnAboutStringRefs = {
    };
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, 'ref')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, 'key')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function warnIfStringRefCannotBeAutoConverted(config, self) {
        if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
            var componentName = getComponentName(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error("Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref", getComponentName(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {
        }; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */ function jsxDEV(type, config, maybeKey, source, self) {
        var propName; // Reserved names are extracted
        var props = {
        };
        var key = null;
        var ref = null; // Currently, key can be spread in as a prop. This causes a potential
        // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
        // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
        // but as an intermediary step, we will use jsxDEV for everything except
        // <div {...props} key="Hi" />, because we aren't currently able to tell if
        // key is explicitly declared to be undefined or not.
        if (maybeKey !== undefined) key = '' + maybeKey;
        if (hasValidKey(config)) key = '' + config.key;
        if (hasValidRef(config)) {
            ref = config.ref;
            warnIfStringRefCannotBeAutoConverted(config, self);
        } // Remaining properties are added to a new props object
        for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
         // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner$1.current) {
            var name = getComponentName(ReactCurrentOwner$1.current.type);
            if (name) return '\n\nCheck the render method of `' + name + '`.';
        }
        return '';
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
        }
        return '';
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {
    };
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = '';
        if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error("Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.", currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== 'object') return;
        if (Array.isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === 'string') return;
        var propTypes;
        if (typeof type === 'function') propTypes = type.propTypes;
        else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentName(type);
            checkPropTypes(propTypes, element.props, 'prop', name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentName(type);
            error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
        }
        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== 'children' && key !== 'key') {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error('Invalid attribute `ref` supplied to `React.Fragment`.');
            setCurrentlyValidatingElement$1(null);
        }
    }
    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendum(source);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = 'null';
            else if (Array.isArray(type)) typeString = 'array';
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
                info = ' Did you accidentally export a JSX literal instead of a component?';
            } else typeString = typeof type;
            error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) {
            var children = props.children;
            if (children !== undefined) {
                if (isStaticChildren) {
                    if (Array.isArray(children)) {
                        for(var i = 0; i < children.length; i++)validateChildKeys(children[i], type);
                        if (Object.freeze) Object.freeze(children);
                    } else error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                } else validateChildKeys(children, type);
            }
        }
        if (type === exports.Fragment) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    } // These two functions exist to still get child warnings in dev
    // even with the prod transform. This means that jsxDEV is purely
    // opt-in behavior for better messages but that we won't stop
    // giving you warnings if you use production apis.
    function jsxWithValidationStatic(type, props, key) {
        return jsxWithValidation(type, props, key, true);
    }
    function jsxWithValidationDynamic(type, props, key) {
        return jsxWithValidation(type, props, key, false);
    }
    var jsx = jsxWithValidationDynamic; // we may want to special case jsxs internally to take advantage of static children.
    // for now we can ship identical prod functions
    var jsxs = jsxWithValidationStatic;
    exports.jsx = jsx;
    exports.jsxs = jsxs;
})();

},{"react":"6fep5","object-assign":"dDdxj"}],"7Hnvg":[function(require,module,exports) {
"use strict";
var Refresh = require('react-refresh/runtime');
function debounce(func, delay) {
    var args1;
    var timeout = undefined;
    return function(args) {
        clearTimeout(timeout);
        timeout = setTimeout(function() {
            timeout = undefined;
            func.call(null, args);
        }, delay);
    };
}
var enqueueUpdate = debounce(function() {
    Refresh.performReactRefresh();
}, 30); // Everthing below is either adapted or copied from
// https://github.com/facebook/metro/blob/61de16bd1edd7e738dd0311c89555a644023ab2d/packages/metro/src/lib/polyfills/require.js
// MIT License - Copyright (c) Facebook, Inc. and its affiliates.
module.exports.prelude = function(module) {
    window.$RefreshReg$ = function(type, id) {
        Refresh.register(type, module.id + ' ' + id);
    };
    window.$RefreshSig$ = Refresh.createSignatureFunctionForTransform;
};
module.exports.postlude = function(module) {
    if (isReactRefreshBoundary(module.exports)) {
        registerExportsForReactRefresh(module);
        if (module.hot) {
            module.hot.dispose(function(data) {
                if (Refresh.hasUnrecoverableErrors()) window.location.reload();
                data.prevExports = module.exports;
            });
            module.hot.accept(function(getParents) {
                var prevExports = module.hot.data.prevExports;
                var nextExports = module.exports; // Since we just executed the code for it, it's possible
                // that the new exports make it ineligible for being a boundary.
                var isNoLongerABoundary = !isReactRefreshBoundary(nextExports); // It can also become ineligible if its exports are incompatible
                // with the previous exports.
                // For example, if you add/remove/change exports, we'll want
                // to re-execute the importing modules, and force those components
                // to re-render. Similarly, if you convert a class component
                // to a function, we want to invalidate the boundary.
                var didInvalidate = shouldInvalidateReactRefreshBoundary(prevExports, nextExports);
                if (isNoLongerABoundary || didInvalidate) {
                    // We'll be conservative. The only case in which we won't do a full
                    // reload is if all parent modules are also refresh boundaries.
                    // In that case we'll add them to the current queue.
                    var parents = getParents();
                    if (parents.length === 0) {
                        // Looks like we bubbled to the root. Can't recover from that.
                        window.location.reload();
                        return;
                    }
                    return parents;
                }
                enqueueUpdate();
            });
        }
    }
};
function isReactRefreshBoundary(exports) {
    if (Refresh.isLikelyComponentType(exports)) return true;
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    return false;
    var hasExports = false;
    var areAllExportsComponents = true;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        hasExports = true;
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) // Don't invoke getters for CJS as they may have side effects.
        return false;
        var exportValue = exports[key];
        if (!Refresh.isLikelyComponentType(exportValue)) areAllExportsComponents = false;
    }
    return hasExports && areAllExportsComponents;
}
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
    var prevSignature = getRefreshBoundarySignature(prevExports);
    var nextSignature = getRefreshBoundarySignature(nextExports);
    if (prevSignature.length !== nextSignature.length) return true;
    for(var i = 0; i < nextSignature.length; i++){
        if (prevSignature[i] !== nextSignature[i]) return true;
    }
    return false;
} // When this signature changes, it's unsafe to stop at this refresh boundary.
function getRefreshBoundarySignature(exports) {
    var signature = [];
    signature.push(Refresh.getFamilyByType(exports));
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return signature;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        signature.push(key);
        signature.push(Refresh.getFamilyByType(exportValue));
    }
    return signature;
}
function registerExportsForReactRefresh(module) {
    var exports = module.exports, id = module.id;
    Refresh.register(exports, id + ' %exports%');
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        Refresh.register(exportValue, id + ' %exports% ' + key);
    }
}

},{"react-refresh/runtime":"7RKXB"}],"9mZXK":[function(require,module,exports) {
const _temp0 = require("./InertiaExample.js");
module.exports = {
    "InertiaExample.js": _temp0
};

},{"./InertiaExample.js":"1AeP0"}],"1AeP0":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$84e2 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$84e2.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxRuntime = require("react/jsx-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _enJson = require("@shopify/polaris/locales/en.json");
var _enJsonDefault = parcelHelpers.interopDefault(_enJson);
var _polaris = require("@shopify/polaris");
// import MyToggle from "~/Components/MyToggle";
const InertiaExample = ()=>/*#__PURE__*/ _jsxRuntime.jsx(_polaris.AppProvider, {
        i18n: _enJsonDefault.default,
        __source: {
            fileName: "app/Pages/InertiaExample.js",
            lineNumber: 7,
            columnNumber: 3
        },
        __self: undefined,
        children: /*#__PURE__*/ _jsxRuntime.jsx(_polaris.Page, {
            title: "Example app",
            __source: {
                fileName: "app/Pages/InertiaExample.js",
                lineNumber: 8,
                columnNumber: 5
            },
            __self: undefined,
            children: /*#__PURE__*/ _jsxRuntime.jsx(_polaris.Card, {
                sectioned: true,
                __source: {
                    fileName: "app/Pages/InertiaExample.js",
                    lineNumber: 9,
                    columnNumber: 7
                },
                __self: undefined,
                children: /*#__PURE__*/ _jsxRuntime.jsx(_polaris.Button, {
                    onClick: ()=>alert("Button clicked!")
                    ,
                    __source: {
                        fileName: "app/Pages/InertiaExample.js",
                        lineNumber: 10,
                        columnNumber: 9
                    },
                    __self: undefined,
                    children: "Example button"
                })
            })
        })
    })
;
_c = InertiaExample;
InertiaExample.layout = null;
exports.default = InertiaExample;
var _c;
$RefreshReg$(_c, "InertiaExample");

  $parcel$ReactRefreshHelpers$84e2.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-runtime":"bWSzr","react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7Hnvg","@shopify/polaris/locales/en.json":"2HzVe","@shopify/polaris":"kRkat"}],"8FsVl":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, '__esModule', {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"2HzVe":[function(require,module,exports) {
module.exports = JSON.parse("{\"Polaris\":{\"Actions\":{\"moreActions\":\"More actions\"},\"Avatar\":{\"label\":\"Avatar\",\"labelWithInitials\":\"Avatar with initials {initials}\"},\"Autocomplete\":{\"spinnerAccessibilityLabel\":\"Loading\",\"ellipsis\":\"{content}…\"},\"Badge\":{\"PROGRESS_LABELS\":{\"incomplete\":\"Incomplete\",\"partiallyComplete\":\"Partially complete\",\"complete\":\"Complete\"},\"STATUS_LABELS\":{\"info\":\"Info\",\"success\":\"Success\",\"warning\":\"Warning\",\"critical\":\"Critical\",\"attention\":\"Attention\",\"new\":\"New\"},\"progressAndStatus\":\"{statusLabel} {progressLabel}\"},\"Button\":{\"spinnerAccessibilityLabel\":\"Loading\",\"connectedDisclosureAccessibilityLabel\":\"Related actions\"},\"Common\":{\"checkbox\":\"checkbox\",\"undo\":\"Undo\",\"cancel\":\"Cancel\",\"newWindowAccessibilityHint\":\"(opens a new window)\",\"clear\":\"Clear\",\"close\":\"Close\",\"submit\":\"Submit\",\"more\":\"More\"},\"ContextualSaveBar\":{\"save\":\"Save\",\"discard\":\"Discard\"},\"DataTable\":{\"sortAccessibilityLabel\":\"sort {direction} by\",\"navAccessibilityLabel\":\"Scroll table {direction} one column\",\"totalsRowHeading\":\"Totals\",\"totalRowHeading\":\"Total\"},\"DatePicker\":{\"previousMonth\":\"Show previous month, {previousMonthName} {showPreviousYear}\",\"nextMonth\":\"Show next month, {nextMonth} {nextYear}\",\"today\":\"Today \",\"start\":\"Start of range\",\"end\":\"End of range\",\"months\":{\"january\":\"January\",\"february\":\"February\",\"march\":\"March\",\"april\":\"April\",\"may\":\"May\",\"june\":\"June\",\"july\":\"July\",\"august\":\"August\",\"september\":\"September\",\"october\":\"October\",\"november\":\"November\",\"december\":\"December\"},\"days\":{\"monday\":\"Monday\",\"tuesday\":\"Tuesday\",\"wednesday\":\"Wednesday\",\"thursday\":\"Thursday\",\"friday\":\"Friday\",\"saturday\":\"Saturday\",\"sunday\":\"Sunday\"},\"daysAbbreviated\":{\"monday\":\"Mo\",\"tuesday\":\"Tu\",\"wednesday\":\"We\",\"thursday\":\"Th\",\"friday\":\"Fr\",\"saturday\":\"Sa\",\"sunday\":\"Su\"}},\"DiscardConfirmationModal\":{\"title\":\"Discard all unsaved changes\",\"message\":\"If you discard changes, you’ll delete any edits you made since you last saved.\",\"primaryAction\":\"Discard changes\",\"secondaryAction\":\"Continue editing\"},\"DropZone\":{\"single\":{\"overlayTextFile\":\"Drop file to upload\",\"overlayTextImage\":\"Drop image to upload\",\"actionTitleFile\":\"Add file\",\"actionTitleImage\":\"Add image\",\"actionHintFile\":\"or drop file to upload\",\"actionHintImage\":\"or drop image to upload\",\"labelFile\":\"Upload file\",\"labelImage\":\"Upload image\"},\"allowMultiple\":{\"overlayTextFile\":\"Drop files to upload\",\"overlayTextImage\":\"Drop images to upload\",\"actionTitleFile\":\"Add files\",\"actionTitleImage\":\"Add images\",\"actionHintFile\":\"or drop files to upload\",\"actionHintImage\":\"or drop images to upload\",\"labelFile\":\"Upload files\",\"labelImage\":\"Upload images\"},\"errorOverlayTextFile\":\"File type is not valid\",\"errorOverlayTextImage\":\"Image type is not valid\"},\"EmptySearchResult\":{\"altText\":\"Empty search results\"},\"Frame\":{\"skipToContent\":\"Skip to content\",\"navigationLabel\":\"Navigation\",\"Navigation\":{\"closeMobileNavigationLabel\":\"Close navigation\"}},\"ActionMenu\":{\"RollupActions\":{\"rollupButton\":\"Actions\"}},\"Filters\":{\"moreFilters\":\"More filters\",\"moreFiltersWithCount\":\"More filters ({count})\",\"filter\":\"Filter {resourceName}\",\"noFiltersApplied\":\"No filters applied\",\"cancel\":\"Cancel\",\"done\":\"Done\",\"clearAllFilters\":\"Clear all filters\",\"clear\":\"Clear\",\"clearLabel\":\"Clear {filterName}\"},\"IndexProvider\":{\"defaultItemSingular\":\"Item\",\"defaultItemPlural\":\"Items\",\"allItemsSelected\":\"All {itemsLength}+ {resourceNamePlural} are selected.\",\"selected\":\"{selectedItemsCount} selected\",\"a11yCheckboxDeselectAllSingle\":\"Deselect {resourceNameSingular}\",\"a11yCheckboxSelectAllSingle\":\"Select {resourceNameSingular}\",\"a11yCheckboxDeselectAllMultiple\":\"Deselect all {itemsLength} {resourceNamePlural}\",\"a11yCheckboxSelectAllMultiple\":\"Select all {itemsLength} {resourceNamePlural}\"},\"IndexTable\":{\"emptySearchTitle\":\"No {resourceNamePlural} found\",\"emptySearchDescription\":\"Try changing the filters or search term\",\"onboardingBadgeText\":\"New\",\"resourceLoadingAccessibilityLabel\":\"Loading {resourceNamePlural}…\",\"selectAllLabel\":\"Select all {resourceNamePlural}\",\"selected\":\"{selectedItemsCount} selected\",\"undo\":\"Undo\",\"selectAllItems\":\"Select all {itemsLength}+ {resourceNamePlural}\",\"selectItem\":\"Select {resourceName}\",\"selectButtonText\":\"Select\"},\"Loading\":{\"label\":\"Page loading bar\"},\"Modal\":{\"iFrameTitle\":\"body markup\",\"modalWarning\":\"These required properties are missing from Modal: {missingProps}\"},\"Pagination\":{\"previous\":\"Previous\",\"next\":\"Next\",\"pagination\":\"Pagination\"},\"ProgressBar\":{\"negativeWarningMessage\":\"Values passed to the progress prop shouldn’t be negative. Resetting {progress} to 0.\",\"exceedWarningMessage\":\"Values passed to the progress prop shouldn’t exceed 100. Setting {progress} to 100.\"},\"ResourceList\":{\"sortingLabel\":\"Sort by\",\"defaultItemSingular\":\"item\",\"defaultItemPlural\":\"items\",\"showing\":\"Showing {itemsCount} {resource}\",\"showingTotalCount\":\"Showing {itemsCount} of {totalItemsCount} {resource}\",\"loading\":\"Loading {resource}\",\"selected\":\"{selectedItemsCount} selected\",\"allItemsSelected\":\"All {itemsLength}+ {resourceNamePlural} in your store are selected.\",\"allFilteredItemsSelected\":\"All {itemsLength}+ {resourceNamePlural} in this filter are selected.\",\"selectAllItems\":\"Select all {itemsLength}+ {resourceNamePlural} in your store\",\"selectAllFilteredItems\":\"Select all {itemsLength}+ {resourceNamePlural} in this filter\",\"emptySearchResultTitle\":\"No {resourceNamePlural} found\",\"emptySearchResultDescription\":\"Try changing the filters or search term\",\"selectButtonText\":\"Select\",\"a11yCheckboxDeselectAllSingle\":\"Deselect {resourceNameSingular}\",\"a11yCheckboxSelectAllSingle\":\"Select {resourceNameSingular}\",\"a11yCheckboxDeselectAllMultiple\":\"Deselect all {itemsLength} {resourceNamePlural}\",\"a11yCheckboxSelectAllMultiple\":\"Select all {itemsLength} {resourceNamePlural}\",\"ariaLiveSingular\":\"{itemsLength} item\",\"ariaLivePlural\":\"{itemsLength} items\",\"Item\":{\"actionsDropdownLabel\":\"Actions for {accessibilityLabel}\",\"actionsDropdown\":\"Actions dropdown\",\"viewItem\":\"View details for {itemName}\"},\"BulkActions\":{\"actionsActivatorLabel\":\"Actions\",\"moreActionsActivatorLabel\":\"More actions\",\"warningMessage\":\"To provide a better user experience. There should only be a maximum of {maxPromotedActions} promoted actions.\"},\"FilterCreator\":{\"filterButtonLabel\":\"Filter\",\"selectFilterKeyPlaceholder\":\"Select a filter…\",\"addFilterButtonLabel\":\"Add filter\",\"showAllWhere\":\"Show all {resourceNamePlural} where:\"},\"FilterControl\":{\"textFieldLabel\":\"Search {resourceNamePlural}\"},\"FilterValueSelector\":{\"selectFilterValuePlaceholder\":\"Select a filter…\"},\"DateSelector\":{\"dateFilterLabel\":\"Select a value\",\"dateValueLabel\":\"Date\",\"dateValueError\":\"Match YYYY-MM-DD format\",\"dateValuePlaceholder\":\"YYYY-MM-DD\",\"SelectOptions\":{\"PastWeek\":\"in the last week\",\"PastMonth\":\"in the last month\",\"PastQuarter\":\"in the last 3 months\",\"PastYear\":\"in the last year\",\"ComingWeek\":\"next week\",\"ComingMonth\":\"next month\",\"ComingQuarter\":\"in the next 3 months\",\"ComingYear\":\"in the next year\",\"OnOrBefore\":\"on or before\",\"OnOrAfter\":\"on or after\"},\"FilterLabelForValue\":{\"past_week\":\"in the last week\",\"past_month\":\"in the last month\",\"past_quarter\":\"in the last 3 months\",\"past_year\":\"in the last year\",\"coming_week\":\"next week\",\"coming_month\":\"next month\",\"coming_quarter\":\"in the next 3 months\",\"coming_year\":\"in the next year\",\"on_or_before\":\"before {date}\",\"on_or_after\":\"after {date}\"}}},\"SkeletonPage\":{\"loadingLabel\":\"Page loading\"},\"Tabs\":{\"toggleTabsLabel\":\"More tabs\"},\"Tag\":{\"ariaLabel\":\"Remove {children}\"},\"TextField\":{\"characterCount\":\"{count} characters\",\"characterCountWithMaxLength\":\"{count} of {limit} characters used\"},\"TooltipOverlay\":{\"accessibilityLabel\":\"Tooltip: {label}\"},\"TopBar\":{\"toggleMenuLabel\":\"Toggle menu\",\"SearchField\":{\"clearButtonLabel\":\"Clear\",\"search\":\"Search\"}},\"MediaCard\":{\"popoverButton\":\"Actions\"},\"VideoThumbnail\":{\"playButtonA11yLabel\":{\"default\":\"Play video\",\"defaultWithDuration\":\"Play video of length {duration}\",\"duration\":{\"hours\":{\"other\":{\"only\":\"{hourCount} hours\",\"andMinutes\":\"{hourCount} hours and {minuteCount} minutes\",\"andMinute\":\"{hourCount} hours and {minuteCount} minute\",\"minutesAndSeconds\":\"{hourCount} hours, {minuteCount} minutes, and {secondCount} seconds\",\"minutesAndSecond\":\"{hourCount} hours, {minuteCount} minutes, and {secondCount} second\",\"minuteAndSeconds\":\"{hourCount} hours, {minuteCount} minute, and {secondCount} seconds\",\"minuteAndSecond\":\"{hourCount} hours, {minuteCount} minute, and {secondCount} second\",\"andSeconds\":\"{hourCount} hours and {secondCount} seconds\",\"andSecond\":\"{hourCount} hours and {secondCount} second\"},\"one\":{\"only\":\"{hourCount} hour\",\"andMinutes\":\"{hourCount} hour and {minuteCount} minutes\",\"andMinute\":\"{hourCount} hour and {minuteCount} minute\",\"minutesAndSeconds\":\"{hourCount} hour, {minuteCount} minutes, and {secondCount} seconds\",\"minutesAndSecond\":\"{hourCount} hour, {minuteCount} minutes, and {secondCount} second\",\"minuteAndSeconds\":\"{hourCount} hour, {minuteCount} minute, and {secondCount} seconds\",\"minuteAndSecond\":\"{hourCount} hour, {minuteCount} minute, and {secondCount} second\",\"andSeconds\":\"{hourCount} hour and {secondCount} seconds\",\"andSecond\":\"{hourCount} hour and {secondCount} second\"}},\"minutes\":{\"other\":{\"only\":\"{minuteCount} minutes\",\"andSeconds\":\"{minuteCount} minutes and {secondCount} seconds\",\"andSecond\":\"{minuteCount} minutes and {secondCount} second\"},\"one\":{\"only\":\"{minuteCount} minute\",\"andSeconds\":\"{minuteCount} minute and {secondCount} seconds\",\"andSecond\":\"{minuteCount} minute and {secondCount} second\"}},\"seconds\":{\"other\":\"{secondCount} seconds\",\"one\":\"{secondCount} second\"}}}}}}");

},{}],"kRkat":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Key", ()=>_typesJs.Key
);
parcelHelpers.export(exports, "hsbToHex", ()=>_colorTransformersJs.hsbToHex
);
parcelHelpers.export(exports, "hsbToRgb", ()=>_colorTransformersJs.hsbToRgb
);
parcelHelpers.export(exports, "hslToRgb", ()=>_colorTransformersJs.hslToRgb
);
parcelHelpers.export(exports, "rgbString", ()=>_colorTransformersJs.rgbString
);
parcelHelpers.export(exports, "rgbToHex", ()=>_colorTransformersJs.rgbToHex
);
parcelHelpers.export(exports, "rgbToHsb", ()=>_colorTransformersJs.rgbToHsb
);
parcelHelpers.export(exports, "rgbToHsl", ()=>_colorTransformersJs.rgbToHsl
);
parcelHelpers.export(exports, "rgbaString", ()=>_colorTransformersJs.rgbaString
);
parcelHelpers.export(exports, "_SECRET_INTERNAL_WITHIN_CONTENT_CONTEXT", ()=>_withinContentContextJs.WithinContentContext
);
parcelHelpers.export(exports, "useIndexResourceState", ()=>_useIndexResourceStateJs.useIndexResourceState
);
parcelHelpers.export(exports, "_SECRET_INTERNAL_SCROLL_LOCK_MANAGER_CONTEXT", ()=>_contextJs.ScrollLockManagerContext
);
parcelHelpers.export(exports, "useIndexTableContainerScroll", ()=>_hooksJs.useContainerScroll
);
parcelHelpers.export(exports, "useIndexTableRowHovered", ()=>_hooksJs.useRowHovered
);
parcelHelpers.export(exports, "useIndexTableRowSelected", ()=>_hooksJs.useRowSelected
);
parcelHelpers.export(exports, "UNSTABLE_toCssCustomPropertySyntax", ()=>_utilsJs.toCssCustomPropertySyntax
);
parcelHelpers.export(exports, "UNSTABLE_Tokens", ()=>_tokensJs.Tokens
);
parcelHelpers.export(exports, "AppProvider", ()=>_appProviderJs.AppProvider
);
parcelHelpers.export(exports, "AccountConnection", ()=>_accountConnectionJs.AccountConnection
);
parcelHelpers.export(exports, "ActionList", ()=>_actionListJs.ActionList
);
parcelHelpers.export(exports, "ActionMenu", ()=>_actionMenuJs.ActionMenu
);
parcelHelpers.export(exports, "Autocomplete", ()=>_autocompleteJs.Autocomplete
);
parcelHelpers.export(exports, "Avatar", ()=>_avatarJs.Avatar
);
parcelHelpers.export(exports, "Backdrop", ()=>_backdropJs.Backdrop
);
parcelHelpers.export(exports, "Badge", ()=>_badgeJs.Badge
);
parcelHelpers.export(exports, "Banner", ()=>_bannerJs.Banner
);
parcelHelpers.export(exports, "Breadcrumbs", ()=>_breadcrumbsJs.Breadcrumbs
);
parcelHelpers.export(exports, "UnstableBulkActions", ()=>_bulkActionsJs.BulkActions
);
parcelHelpers.export(exports, "Button", ()=>_buttonJs.Button
);
parcelHelpers.export(exports, "buttonFrom", ()=>_utilsJs1.buttonFrom
);
parcelHelpers.export(exports, "buttonsFrom", ()=>_utilsJs1.buttonsFrom
);
parcelHelpers.export(exports, "ButtonGroup", ()=>_buttonGroupJs.ButtonGroup
);
parcelHelpers.export(exports, "CalloutCard", ()=>_calloutCardJs.CalloutCard
);
parcelHelpers.export(exports, "Caption", ()=>_captionJs.Caption
);
parcelHelpers.export(exports, "Card", ()=>_cardJs.Card
);
parcelHelpers.export(exports, "Checkbox", ()=>_checkboxJs.Checkbox
);
parcelHelpers.export(exports, "ChoiceList", ()=>_choiceListJs.ChoiceList
);
parcelHelpers.export(exports, "Collapsible", ()=>_collapsibleJs.Collapsible
);
parcelHelpers.export(exports, "ColorPicker", ()=>_colorPickerJs.ColorPicker
);
parcelHelpers.export(exports, "Combobox", ()=>_comboboxJs.Combobox
);
parcelHelpers.export(exports, "Connected", ()=>_connectedJs.Connected
);
parcelHelpers.export(exports, "ContextualSaveBar", ()=>_contextualSaveBarJs.ContextualSaveBar
);
parcelHelpers.export(exports, "DataTable", ()=>_dataTableJs.DataTable
);
parcelHelpers.export(exports, "DatePicker", ()=>_datePickerJs.DatePicker
);
parcelHelpers.export(exports, "DescriptionList", ()=>_descriptionListJs.DescriptionList
);
parcelHelpers.export(exports, "DisplayText", ()=>_displayTextJs.DisplayText
);
parcelHelpers.export(exports, "DropZone", ()=>_dropZoneJs.DropZone
);
parcelHelpers.export(exports, "EmptySearchResult", ()=>_emptySearchResultJs.EmptySearchResult
);
parcelHelpers.export(exports, "EmptyState", ()=>_emptyStateJs.EmptyState
);
parcelHelpers.export(exports, "EventListener", ()=>_eventListenerJs.EventListener
);
parcelHelpers.export(exports, "ExceptionList", ()=>_exceptionListJs.ExceptionList
);
parcelHelpers.export(exports, "Filters", ()=>_filtersJs.Filters
);
parcelHelpers.export(exports, "Focus", ()=>_focusJs.Focus
);
parcelHelpers.export(exports, "FooterHelp", ()=>_footerHelpJs.FooterHelp
);
parcelHelpers.export(exports, "Form", ()=>_formJs.Form
);
parcelHelpers.export(exports, "FormLayout", ()=>_formLayoutJs.FormLayout
);
parcelHelpers.export(exports, "Frame", ()=>_frameJs.Frame
);
parcelHelpers.export(exports, "DEFAULT_TOAST_DURATION", ()=>_toastJs.DEFAULT_TOAST_DURATION
);
parcelHelpers.export(exports, "DEFAULT_TOAST_DURATION_WITH_ACTION", ()=>_toastJs.DEFAULT_TOAST_DURATION_WITH_ACTION
);
parcelHelpers.export(exports, "Heading", ()=>_headingJs.Heading
);
parcelHelpers.export(exports, "Icon", ()=>_iconJs.Icon
);
parcelHelpers.export(exports, "Image", ()=>_imageJs.Image
);
parcelHelpers.export(exports, "IndexTable", ()=>_indexTableJs.IndexTable
);
parcelHelpers.export(exports, "Indicator", ()=>_indicatorJs.Indicator
);
parcelHelpers.export(exports, "InlineError", ()=>_inlineErrorJs.InlineError
);
parcelHelpers.export(exports, "errorTextID", ()=>_inlineErrorJs.errorTextID
);
parcelHelpers.export(exports, "KeyboardKey", ()=>_keyboardKeyJs.KeyboardKey
);
parcelHelpers.export(exports, "KeypressListener", ()=>_keypressListenerJs.KeypressListener
);
parcelHelpers.export(exports, "KonamiCode", ()=>_konamiCodeJs.KonamiCode
);
parcelHelpers.export(exports, "Label", ()=>_labelJs.Label
);
parcelHelpers.export(exports, "labelID", ()=>_labelJs.labelID
);
parcelHelpers.export(exports, "Labelled", ()=>_labelledJs.Labelled
);
parcelHelpers.export(exports, "Layout", ()=>_layoutJs.Layout
);
parcelHelpers.export(exports, "Link", ()=>_linkJs.Link
);
parcelHelpers.export(exports, "List", ()=>_listJs.List
);
parcelHelpers.export(exports, "Listbox", ()=>_listboxJs.Listbox
);
parcelHelpers.export(exports, "Loading", ()=>_loadingJs.Loading
);
parcelHelpers.export(exports, "MediaCard", ()=>_mediaCardJs.MediaCard
);
parcelHelpers.export(exports, "Modal", ()=>_modalJs.Modal
);
parcelHelpers.export(exports, "Navigation", ()=>_navigationJs.Navigation
);
parcelHelpers.export(exports, "isNavigationItemActive", ()=>_itemJs.isNavigationItemActive
);
parcelHelpers.export(exports, "OptionList", ()=>_optionListJs.OptionList
);
parcelHelpers.export(exports, "Page", ()=>_pageJs.Page
);
parcelHelpers.export(exports, "PageActions", ()=>_pageActionsJs.PageActions
);
parcelHelpers.export(exports, "Pagination", ()=>_paginationJs.Pagination
);
parcelHelpers.export(exports, "PolarisTestProvider", ()=>_polarisTestProviderJs.PolarisTestProvider
);
parcelHelpers.export(exports, "Popover", ()=>_popoverJs.Popover
);
parcelHelpers.export(exports, "PopoverCloseSource", ()=>_popoverOverlayJs.PopoverCloseSource
);
parcelHelpers.export(exports, "Portal", ()=>_portalJs.Portal
);
parcelHelpers.export(exports, "PortalsManager", ()=>_portalsManagerJs.PortalsManager
);
parcelHelpers.export(exports, "PositionedOverlay", ()=>_positionedOverlayJs.PositionedOverlay
);
parcelHelpers.export(exports, "ProgressBar", ()=>_progressBarJs.ProgressBar
);
parcelHelpers.export(exports, "RadioButton", ()=>_radioButtonJs.RadioButton
);
parcelHelpers.export(exports, "RangeSlider", ()=>_rangeSliderJs.RangeSlider
);
parcelHelpers.export(exports, "ResourceItem", ()=>_resourceItemJs.ResourceItem
);
parcelHelpers.export(exports, "ResourceList", ()=>_resourceListJs.ResourceList
);
parcelHelpers.export(exports, "_SECRET_INTERNAL_FilterControl", ()=>_filterControlJs.FilterControl
);
parcelHelpers.export(exports, "Scrollable", ()=>_scrollableJs.Scrollable
);
parcelHelpers.export(exports, "ScrollLock", ()=>_scrollLockJs.ScrollLock
);
parcelHelpers.export(exports, "Select", ()=>_selectJs.Select
);
parcelHelpers.export(exports, "SettingToggle", ()=>_settingToggleJs.SettingToggle
);
parcelHelpers.export(exports, "DATA_ATTRIBUTE", ()=>_sharedJs.DATA_ATTRIBUTE
);
parcelHelpers.export(exports, "Sheet", ()=>_sheetJs.Sheet
);
parcelHelpers.export(exports, "SkeletonBodyText", ()=>_skeletonBodyTextJs.SkeletonBodyText
);
parcelHelpers.export(exports, "SkeletonDisplayText", ()=>_skeletonDisplayTextJs.SkeletonDisplayText
);
parcelHelpers.export(exports, "SkeletonPage", ()=>_skeletonPageJs.SkeletonPage
);
parcelHelpers.export(exports, "SkeletonThumbnail", ()=>_skeletonThumbnailJs.SkeletonThumbnail
);
parcelHelpers.export(exports, "Spinner", ()=>_spinnerJs.Spinner
);
parcelHelpers.export(exports, "Stack", ()=>_stackJs.Stack
);
parcelHelpers.export(exports, "Sticky", ()=>_stickyJs.Sticky
);
parcelHelpers.export(exports, "Subheading", ()=>_subheadingJs.Subheading
);
parcelHelpers.export(exports, "Tabs", ()=>_tabsJs.Tabs
);
parcelHelpers.export(exports, "Tag", ()=>_tagJs.Tag
);
parcelHelpers.export(exports, "TextContainer", ()=>_textContainerJs.TextContainer
);
parcelHelpers.export(exports, "TextField", ()=>_textFieldJs.TextField
);
parcelHelpers.export(exports, "TextStyle", ()=>_textStyleJs.TextStyle
);
parcelHelpers.export(exports, "ThemeProvider", ()=>_themeProviderJs.ThemeProvider
);
parcelHelpers.export(exports, "Thumbnail", ()=>_thumbnailJs.Thumbnail
);
parcelHelpers.export(exports, "Toast", ()=>_toastJs1.Toast
);
parcelHelpers.export(exports, "Tooltip", ()=>_tooltipJs.Tooltip
);
parcelHelpers.export(exports, "TopBar", ()=>_topBarJs.TopBar
);
parcelHelpers.export(exports, "TrapFocus", ()=>_trapFocusJs.TrapFocus
);
parcelHelpers.export(exports, "Truncate", ()=>_truncateJs.Truncate
);
parcelHelpers.export(exports, "UnstyledButton", ()=>_unstyledButtonJs.UnstyledButton
);
parcelHelpers.export(exports, "unstyledButtonFrom", ()=>_utilsJs2.unstyledButtonFrom
);
parcelHelpers.export(exports, "UnstyledLink", ()=>_unstyledLinkJs.UnstyledLink
);
parcelHelpers.export(exports, "VideoThumbnail", ()=>_videoThumbnailJs.VideoThumbnail
);
parcelHelpers.export(exports, "VisuallyHidden", ()=>_visuallyHiddenJs.VisuallyHidden
);
var _configureJs = require("./configure.js");
var _typesJs = require("./types.js");
var _colorTransformersJs = require("./utilities/color-transformers.js");
var _withinContentContextJs = require("./utilities/within-content-context.js");
var _useIndexResourceStateJs = require("./utilities/use-index-resource-state.js");
var _contextJs = require("./utilities/scroll-lock-manager/context.js");
var _hooksJs = require("./utilities/index-table/hooks.js");
var _utilsJs = require("./utilities/theme/utils.js");
var _tokensJs = require("./utilities/theme/tokens.js");
var _appProviderJs = require("./components/AppProvider/AppProvider.js");
var _accountConnectionJs = require("./components/AccountConnection/AccountConnection.js");
var _actionListJs = require("./components/ActionList/ActionList.js");
var _actionMenuJs = require("./components/ActionMenu/ActionMenu.js");
var _autocompleteJs = require("./components/Autocomplete/Autocomplete.js");
var _avatarJs = require("./components/Avatar/Avatar.js");
var _backdropJs = require("./components/Backdrop/Backdrop.js");
var _badgeJs = require("./components/Badge/Badge.js");
var _bannerJs = require("./components/Banner/Banner.js");
var _breadcrumbsJs = require("./components/Breadcrumbs/Breadcrumbs.js");
var _bulkActionsJs = require("./components/BulkActions/BulkActions.js");
var _buttonJs = require("./components/Button/Button.js");
var _utilsJs1 = require("./components/Button/utils.js");
var _buttonGroupJs = require("./components/ButtonGroup/ButtonGroup.js");
var _calloutCardJs = require("./components/CalloutCard/CalloutCard.js");
var _captionJs = require("./components/Caption/Caption.js");
var _cardJs = require("./components/Card/Card.js");
var _checkboxJs = require("./components/Checkbox/Checkbox.js");
var _choiceListJs = require("./components/ChoiceList/ChoiceList.js");
var _collapsibleJs = require("./components/Collapsible/Collapsible.js");
var _colorPickerJs = require("./components/ColorPicker/ColorPicker.js");
var _comboboxJs = require("./components/Combobox/Combobox.js");
var _connectedJs = require("./components/Connected/Connected.js");
var _contextualSaveBarJs = require("./components/ContextualSaveBar/ContextualSaveBar.js");
var _dataTableJs = require("./components/DataTable/DataTable.js");
var _datePickerJs = require("./components/DatePicker/DatePicker.js");
var _descriptionListJs = require("./components/DescriptionList/DescriptionList.js");
var _displayTextJs = require("./components/DisplayText/DisplayText.js");
var _dropZoneJs = require("./components/DropZone/DropZone.js");
var _emptySearchResultJs = require("./components/EmptySearchResult/EmptySearchResult.js");
var _emptyStateJs = require("./components/EmptyState/EmptyState.js");
var _eventListenerJs = require("./components/EventListener/EventListener.js");
var _exceptionListJs = require("./components/ExceptionList/ExceptionList.js");
var _filtersJs = require("./components/Filters/Filters.js");
var _focusJs = require("./components/Focus/Focus.js");
var _footerHelpJs = require("./components/FooterHelp/FooterHelp.js");
var _formJs = require("./components/Form/Form.js");
var _formLayoutJs = require("./components/FormLayout/FormLayout.js");
var _frameJs = require("./components/Frame/Frame.js");
var _toastJs = require("./components/Frame/components/Toast/Toast.js");
var _headingJs = require("./components/Heading/Heading.js");
var _iconJs = require("./components/Icon/Icon.js");
var _imageJs = require("./components/Image/Image.js");
var _indexTableJs = require("./components/IndexTable/IndexTable.js");
var _indicatorJs = require("./components/Indicator/Indicator.js");
var _inlineErrorJs = require("./components/InlineError/InlineError.js");
var _keyboardKeyJs = require("./components/KeyboardKey/KeyboardKey.js");
var _keypressListenerJs = require("./components/KeypressListener/KeypressListener.js");
var _konamiCodeJs = require("./components/KonamiCode/KonamiCode.js");
var _labelJs = require("./components/Label/Label.js");
var _labelledJs = require("./components/Labelled/Labelled.js");
var _layoutJs = require("./components/Layout/Layout.js");
var _linkJs = require("./components/Link/Link.js");
var _listJs = require("./components/List/List.js");
var _listboxJs = require("./components/Listbox/Listbox.js");
var _loadingJs = require("./components/Loading/Loading.js");
var _mediaCardJs = require("./components/MediaCard/MediaCard.js");
var _modalJs = require("./components/Modal/Modal.js");
var _navigationJs = require("./components/Navigation/Navigation.js");
var _itemJs = require("./components/Navigation/components/Item/Item.js");
var _optionListJs = require("./components/OptionList/OptionList.js");
var _pageJs = require("./components/Page/Page.js");
var _pageActionsJs = require("./components/PageActions/PageActions.js");
var _paginationJs = require("./components/Pagination/Pagination.js");
var _polarisTestProviderJs = require("./components/PolarisTestProvider/PolarisTestProvider.js");
var _popoverJs = require("./components/Popover/Popover.js");
var _popoverOverlayJs = require("./components/Popover/components/PopoverOverlay/PopoverOverlay.js");
var _portalJs = require("./components/Portal/Portal.js");
var _portalsManagerJs = require("./components/PortalsManager/PortalsManager.js");
var _positionedOverlayJs = require("./components/PositionedOverlay/PositionedOverlay.js");
var _progressBarJs = require("./components/ProgressBar/ProgressBar.js");
var _radioButtonJs = require("./components/RadioButton/RadioButton.js");
var _rangeSliderJs = require("./components/RangeSlider/RangeSlider.js");
var _resourceItemJs = require("./components/ResourceItem/ResourceItem.js");
var _resourceListJs = require("./components/ResourceList/ResourceList.js");
var _filterControlJs = require("./components/ResourceList/components/FilterControl/FilterControl.js");
var _scrollableJs = require("./components/Scrollable/Scrollable.js");
var _scrollLockJs = require("./components/ScrollLock/ScrollLock.js");
var _selectJs = require("./components/Select/Select.js");
var _settingToggleJs = require("./components/SettingToggle/SettingToggle.js");
var _sharedJs = require("./components/shared.js");
var _sheetJs = require("./components/Sheet/Sheet.js");
var _skeletonBodyTextJs = require("./components/SkeletonBodyText/SkeletonBodyText.js");
var _skeletonDisplayTextJs = require("./components/SkeletonDisplayText/SkeletonDisplayText.js");
var _skeletonPageJs = require("./components/SkeletonPage/SkeletonPage.js");
var _skeletonThumbnailJs = require("./components/SkeletonThumbnail/SkeletonThumbnail.js");
var _spinnerJs = require("./components/Spinner/Spinner.js");
var _stackJs = require("./components/Stack/Stack.js");
var _stickyJs = require("./components/Sticky/Sticky.js");
var _subheadingJs = require("./components/Subheading/Subheading.js");
var _tabsJs = require("./components/Tabs/Tabs.js");
var _tagJs = require("./components/Tag/Tag.js");
var _textContainerJs = require("./components/TextContainer/TextContainer.js");
var _textFieldJs = require("./components/TextField/TextField.js");
var _textStyleJs = require("./components/TextStyle/TextStyle.js");
var _themeProviderJs = require("./components/ThemeProvider/ThemeProvider.js");
var _thumbnailJs = require("./components/Thumbnail/Thumbnail.js");
var _toastJs1 = require("./components/Toast/Toast.js");
var _tooltipJs = require("./components/Tooltip/Tooltip.js");
var _topBarJs = require("./components/TopBar/TopBar.js");
var _trapFocusJs = require("./components/TrapFocus/TrapFocus.js");
var _truncateJs = require("./components/Truncate/Truncate.js");
var _unstyledButtonJs = require("./components/UnstyledButton/UnstyledButton.js");
var _utilsJs2 = require("./components/UnstyledButton/utils.js");
var _unstyledLinkJs = require("./components/UnstyledLink/UnstyledLink.js");
var _videoThumbnailJs = require("./components/VideoThumbnail/VideoThumbnail.js");
var _visuallyHiddenJs = require("./components/VisuallyHidden/VisuallyHidden.js");

},{"./configure.js":"1DTvY","./types.js":"atQnH","./utilities/color-transformers.js":"gFZ96","./utilities/within-content-context.js":"8TZsv","./utilities/use-index-resource-state.js":"ai302","./utilities/scroll-lock-manager/context.js":"2vyo0","./utilities/index-table/hooks.js":"k0Mud","./utilities/theme/utils.js":"bnJU8","./utilities/theme/tokens.js":"k2L5m","./components/AppProvider/AppProvider.js":"eWrNz","./components/AccountConnection/AccountConnection.js":"in3n2","./components/ActionList/ActionList.js":"eTtta","./components/ActionMenu/ActionMenu.js":"20fgb","./components/Autocomplete/Autocomplete.js":"hrWIx","./components/Avatar/Avatar.js":"lS61i","./components/Backdrop/Backdrop.js":"8AIrG","./components/Badge/Badge.js":"hM2Xf","./components/Banner/Banner.js":"6pgy1","./components/Breadcrumbs/Breadcrumbs.js":"adsbe","./components/BulkActions/BulkActions.js":"1JynG","./components/Button/Button.js":"g06oC","./components/Button/utils.js":"9W95c","./components/ButtonGroup/ButtonGroup.js":"kXBsg","./components/CalloutCard/CalloutCard.js":"blkMu","./components/Caption/Caption.js":"eKCG1","./components/Card/Card.js":"kiG4Y","./components/Checkbox/Checkbox.js":"irP0n","./components/ChoiceList/ChoiceList.js":"hRJPO","./components/Collapsible/Collapsible.js":"g8OGv","./components/ColorPicker/ColorPicker.js":"jrkrJ","./components/Combobox/Combobox.js":"8lCNN","./components/Connected/Connected.js":"jBkqN","./components/ContextualSaveBar/ContextualSaveBar.js":"3p2VZ","./components/DataTable/DataTable.js":"fw6F1","./components/DatePicker/DatePicker.js":"46FyV","./components/DescriptionList/DescriptionList.js":"69uXx","./components/DisplayText/DisplayText.js":"hI3pV","./components/DropZone/DropZone.js":"7RuWV","./components/EmptySearchResult/EmptySearchResult.js":"gLMV0","./components/EmptyState/EmptyState.js":"iBhGq","./components/EventListener/EventListener.js":"gpcxo","./components/ExceptionList/ExceptionList.js":"gHhJU","./components/Filters/Filters.js":"gVnx9","./components/Focus/Focus.js":"2fzI2","./components/FooterHelp/FooterHelp.js":"MVYoJ","./components/Form/Form.js":"40EEc","./components/FormLayout/FormLayout.js":"9EoHh","./components/Frame/Frame.js":"iWzJD","./components/Frame/components/Toast/Toast.js":"8ymea","./components/Heading/Heading.js":"7PinN","./components/Icon/Icon.js":"flzpR","./components/Image/Image.js":"jekWJ","./components/IndexTable/IndexTable.js":"5KR5I","./components/Indicator/Indicator.js":"7sG3E","./components/InlineError/InlineError.js":"5VVez","./components/KeyboardKey/KeyboardKey.js":"iWaGx","./components/KeypressListener/KeypressListener.js":"2doU0","./components/KonamiCode/KonamiCode.js":"idT4A","./components/Label/Label.js":"c5NsR","./components/Labelled/Labelled.js":"1YPAe","./components/Layout/Layout.js":"eLnqB","./components/Link/Link.js":"lzVa9","./components/List/List.js":"clFDb","./components/Listbox/Listbox.js":"fqeV1","./components/Loading/Loading.js":"h1GHg","./components/MediaCard/MediaCard.js":"hQQYb","./components/Modal/Modal.js":"71bC3","./components/Navigation/Navigation.js":"36FaP","./components/Navigation/components/Item/Item.js":"fLCly","./components/OptionList/OptionList.js":"kpGWJ","./components/Page/Page.js":"hAAeL","./components/PageActions/PageActions.js":"jeBTf","./components/Pagination/Pagination.js":"lJxp1","./components/PolarisTestProvider/PolarisTestProvider.js":"bC3Vl","./components/Popover/Popover.js":"9ztCP","./components/Popover/components/PopoverOverlay/PopoverOverlay.js":"7M1Xa","./components/Portal/Portal.js":"6irv6","./components/PortalsManager/PortalsManager.js":"kxT8r","./components/PositionedOverlay/PositionedOverlay.js":"6aBMP","./components/ProgressBar/ProgressBar.js":"bryLy","./components/RadioButton/RadioButton.js":"d1svR","./components/RangeSlider/RangeSlider.js":"4GKCS","./components/ResourceItem/ResourceItem.js":"id4lv","./components/ResourceList/ResourceList.js":"4a21z","./components/ResourceList/components/FilterControl/FilterControl.js":"2PUT8","./components/Scrollable/Scrollable.js":"6lHzT","./components/ScrollLock/ScrollLock.js":"6Ygxi","./components/Select/Select.js":"i2qP0","./components/SettingToggle/SettingToggle.js":"7xKZd","./components/shared.js":"jYa7v","./components/Sheet/Sheet.js":"zIJMX","./components/SkeletonBodyText/SkeletonBodyText.js":"fJib9","./components/SkeletonDisplayText/SkeletonDisplayText.js":"43Cm8","./components/SkeletonPage/SkeletonPage.js":"f7sme","./components/SkeletonThumbnail/SkeletonThumbnail.js":"5O1c1","./components/Spinner/Spinner.js":"itKPn","./components/Stack/Stack.js":"g05gm","./components/Sticky/Sticky.js":"2AUGc","./components/Subheading/Subheading.js":"gntIW","./components/Tabs/Tabs.js":"ewS6k","./components/Tag/Tag.js":"b7k7E","./components/TextContainer/TextContainer.js":"TbRw7","./components/TextField/TextField.js":"bVuNq","./components/TextStyle/TextStyle.js":"cC66D","./components/ThemeProvider/ThemeProvider.js":"10qny","./components/Thumbnail/Thumbnail.js":"iXbvo","./components/Toast/Toast.js":"6FHAJ","./components/Tooltip/Tooltip.js":"891PK","./components/TopBar/TopBar.js":"aHbmI","./components/TrapFocus/TrapFocus.js":"kzCup","./components/Truncate/Truncate.js":"laK40","./components/UnstyledButton/UnstyledButton.js":"hdvaV","./components/UnstyledButton/utils.js":"9ddcn","./components/UnstyledLink/UnstyledLink.js":"8AMgX","./components/VideoThumbnail/VideoThumbnail.js":"kXJjb","./components/VisuallyHidden/VisuallyHidden.js":"fGCM0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1DTvY":[function(require,module,exports) {
if (typeof window !== 'undefined') {
    window.Polaris = window.Polaris || {
    };
    window.Polaris.VERSION = '7.4.0';
}

},{}],"atQnH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Key", ()=>Key1
);
let Key1;
(function(Key) {
    Key[Key["Backspace"] = 8] = "Backspace";
    Key[Key["Tab"] = 9] = "Tab";
    Key[Key["Enter"] = 13] = "Enter";
    Key[Key["Shift"] = 16] = "Shift";
    Key[Key["Ctrl"] = 17] = "Ctrl";
    Key[Key["Alt"] = 18] = "Alt";
    Key[Key["Pause"] = 19] = "Pause";
    Key[Key["CapsLock"] = 20] = "CapsLock";
    Key[Key["Escape"] = 27] = "Escape";
    Key[Key["Space"] = 32] = "Space";
    Key[Key["PageUp"] = 33] = "PageUp";
    Key[Key["PageDown"] = 34] = "PageDown";
    Key[Key["End"] = 35] = "End";
    Key[Key["Home"] = 36] = "Home";
    Key[Key["LeftArrow"] = 37] = "LeftArrow";
    Key[Key["UpArrow"] = 38] = "UpArrow";
    Key[Key["RightArrow"] = 39] = "RightArrow";
    Key[Key["DownArrow"] = 40] = "DownArrow";
    Key[Key["Insert"] = 45] = "Insert";
    Key[Key["Delete"] = 46] = "Delete";
    Key[Key["Key0"] = 48] = "Key0";
    Key[Key["Key1"] = 49] = "Key1";
    Key[Key["Key2"] = 50] = "Key2";
    Key[Key["Key3"] = 51] = "Key3";
    Key[Key["Key4"] = 52] = "Key4";
    Key[Key["Key5"] = 53] = "Key5";
    Key[Key["Key6"] = 54] = "Key6";
    Key[Key["Key7"] = 55] = "Key7";
    Key[Key["Key8"] = 56] = "Key8";
    Key[Key["Key9"] = 57] = "Key9";
    Key[Key["KeyA"] = 65] = "KeyA";
    Key[Key["KeyB"] = 66] = "KeyB";
    Key[Key["KeyC"] = 67] = "KeyC";
    Key[Key["KeyD"] = 68] = "KeyD";
    Key[Key["KeyE"] = 69] = "KeyE";
    Key[Key["KeyF"] = 70] = "KeyF";
    Key[Key["KeyG"] = 71] = "KeyG";
    Key[Key["KeyH"] = 72] = "KeyH";
    Key[Key["KeyI"] = 73] = "KeyI";
    Key[Key["KeyJ"] = 74] = "KeyJ";
    Key[Key["KeyK"] = 75] = "KeyK";
    Key[Key["KeyL"] = 76] = "KeyL";
    Key[Key["KeyM"] = 77] = "KeyM";
    Key[Key["KeyN"] = 78] = "KeyN";
    Key[Key["KeyO"] = 79] = "KeyO";
    Key[Key["KeyP"] = 80] = "KeyP";
    Key[Key["KeyQ"] = 81] = "KeyQ";
    Key[Key["KeyR"] = 82] = "KeyR";
    Key[Key["KeyS"] = 83] = "KeyS";
    Key[Key["KeyT"] = 84] = "KeyT";
    Key[Key["KeyU"] = 85] = "KeyU";
    Key[Key["KeyV"] = 86] = "KeyV";
    Key[Key["KeyW"] = 87] = "KeyW";
    Key[Key["KeyX"] = 88] = "KeyX";
    Key[Key["KeyY"] = 89] = "KeyY";
    Key[Key["KeyZ"] = 90] = "KeyZ";
    Key[Key["LeftMeta"] = 91] = "LeftMeta";
    Key[Key["RightMeta"] = 92] = "RightMeta";
    Key[Key["Select"] = 93] = "Select";
    Key[Key["Numpad0"] = 96] = "Numpad0";
    Key[Key["Numpad1"] = 97] = "Numpad1";
    Key[Key["Numpad2"] = 98] = "Numpad2";
    Key[Key["Numpad3"] = 99] = "Numpad3";
    Key[Key["Numpad4"] = 100] = "Numpad4";
    Key[Key["Numpad5"] = 101] = "Numpad5";
    Key[Key["Numpad6"] = 102] = "Numpad6";
    Key[Key["Numpad7"] = 103] = "Numpad7";
    Key[Key["Numpad8"] = 104] = "Numpad8";
    Key[Key["Numpad9"] = 105] = "Numpad9";
    Key[Key["Multiply"] = 106] = "Multiply";
    Key[Key["Add"] = 107] = "Add";
    Key[Key["Subtract"] = 109] = "Subtract";
    Key[Key["Decimal"] = 110] = "Decimal";
    Key[Key["Divide"] = 111] = "Divide";
    Key[Key["F1"] = 112] = "F1";
    Key[Key["F2"] = 113] = "F2";
    Key[Key["F3"] = 114] = "F3";
    Key[Key["F4"] = 115] = "F4";
    Key[Key["F5"] = 116] = "F5";
    Key[Key["F6"] = 117] = "F6";
    Key[Key["F7"] = 118] = "F7";
    Key[Key["F8"] = 119] = "F8";
    Key[Key["F9"] = 120] = "F9";
    Key[Key["F10"] = 121] = "F10";
    Key[Key["F11"] = 122] = "F11";
    Key[Key["F12"] = 123] = "F12";
    Key[Key["NumLock"] = 144] = "NumLock";
    Key[Key["ScrollLock"] = 145] = "ScrollLock";
    Key[Key["Semicolon"] = 186] = "Semicolon";
    Key[Key["Equals"] = 187] = "Equals";
    Key[Key["Comma"] = 188] = "Comma";
    Key[Key["Dash"] = 189] = "Dash";
    Key[Key["Period"] = 190] = "Period";
    Key[Key["ForwardSlash"] = 191] = "ForwardSlash";
    Key[Key["GraveAccent"] = 192] = "GraveAccent";
    Key[Key["OpenBracket"] = 219] = "OpenBracket";
    Key[Key["BackSlash"] = 220] = "BackSlash";
    Key[Key["CloseBracket"] = 221] = "CloseBracket";
    Key[Key["SingleQuote"] = 222] = "SingleQuote";
})(Key1 || (Key1 = {
}));

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gFZ96":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hsbToHex", ()=>hsbToHex
);
parcelHelpers.export(exports, "hsbToRgb", ()=>hsbToRgb
);
parcelHelpers.export(exports, "hslToRgb", ()=>hslToRgb
);
parcelHelpers.export(exports, "rgbString", ()=>rgbString
);
parcelHelpers.export(exports, "rgbToHex", ()=>rgbToHex
);
parcelHelpers.export(exports, "rgbToHsb", ()=>rgbToHsb
);
parcelHelpers.export(exports, "rgbToHsl", ()=>rgbToHsl
);
parcelHelpers.export(exports, "rgbaString", ()=>rgbaString
);
var _clampJs = require("./clamp.js");
var _roundNumberToDecimalPlacesJs = require("./roundNumberToDecimalPlaces.js");
function rgbString(color) {
    const { red , green , blue  } = color;
    if ('alpha' in color) return `rgba(${red}, ${green}, ${blue}, ${color.alpha})`;
    else return `rgb(${red}, ${green}, ${blue})`;
}
const rgbaString = rgbString;
function rgbToHex({ red , green , blue  }) {
    return `#${componentToHex(red)}${componentToHex(green)}${componentToHex(blue)}`;
}
function componentToHex(component) {
    const hex = component.toString(16);
    return hex.length === 1 ? `0${hex}` : hex;
}
function hsbToHex(color) {
    return rgbToHex(hsbToRgb(color));
}
function rgbFromHueAndChroma(hue, chroma) {
    const huePrime = hue / 60;
    const hueDelta = 1 - Math.abs(huePrime % 2 - 1);
    const intermediateValue = chroma * hueDelta;
    let red = 0;
    let green = 0;
    let blue = 0;
    if (huePrime >= 0 && huePrime <= 1) {
        red = chroma;
        green = intermediateValue;
        blue = 0;
    }
    if (huePrime >= 1 && huePrime <= 2) {
        red = intermediateValue;
        green = chroma;
        blue = 0;
    }
    if (huePrime >= 2 && huePrime <= 3) {
        red = 0;
        green = chroma;
        blue = intermediateValue;
    }
    if (huePrime >= 3 && huePrime <= 4) {
        red = 0;
        green = intermediateValue;
        blue = chroma;
    }
    if (huePrime >= 4 && huePrime <= 5) {
        red = intermediateValue;
        green = 0;
        blue = chroma;
    }
    if (huePrime >= 5 && huePrime <= 6) {
        red = chroma;
        green = 0;
        blue = intermediateValue;
    }
    return {
        red,
        green,
        blue
    };
} // implements https://en.wikipedia.org/wiki/HSL_and_HSV#From_HSV
function hsbToRgb(color) {
    const { hue , saturation , brightness , alpha =1  } = color;
    const chroma = brightness * saturation;
    let { red , green , blue  } = rgbFromHueAndChroma(hue, chroma);
    const chromaBrightnessDelta = brightness - chroma;
    red += chromaBrightnessDelta;
    green += chromaBrightnessDelta;
    blue += chromaBrightnessDelta;
    return {
        red: Math.round(red * 255),
        green: Math.round(green * 255),
        blue: Math.round(blue * 255),
        alpha
    };
} // implements https://en.wikipedia.org/wiki/HSL_and_HSV#From_HSV
function hslToRgb(color) {
    const { hue , saturation , lightness , alpha =1  } = color;
    const chroma = (1 - Math.abs(2 * (lightness / 100) - 1)) * (saturation / 100);
    let { red , green , blue  } = rgbFromHueAndChroma(hue, chroma);
    const lightnessVal = lightness / 100 - chroma / 2;
    red += lightnessVal;
    green += lightnessVal;
    blue += lightnessVal;
    return {
        red: Math.round(red * 255),
        green: Math.round(green * 255),
        blue: Math.round(blue * 255),
        alpha
    };
} // ref https://en.wikipedia.org/wiki/HSL_and_HSV
function rgbToHsbl(color, type = 'b') {
    const { alpha =1  } = color;
    const red = color.red / 255;
    const green = color.green / 255;
    const blue = color.blue / 255;
    const largestComponent = Math.max(red, green, blue);
    const smallestComponent = Math.min(red, green, blue);
    const delta = largestComponent - smallestComponent;
    const lightness = (largestComponent + smallestComponent) / 2;
    let saturation = 0;
    if (largestComponent === 0) saturation = 0;
    else if (type === 'b') saturation = delta / largestComponent;
    else if (type === 'l') {
        const baseSaturation = lightness > 0.5 ? delta / (2 - largestComponent - smallestComponent) : delta / (largestComponent + smallestComponent);
        saturation = isNaN(baseSaturation) ? 0 : baseSaturation;
    }
    let huePercentage = 0;
    switch(largestComponent){
        case red:
            huePercentage = (green - blue) / delta + (green < blue ? 6 : 0);
            break;
        case green:
            huePercentage = (blue - red) / delta + 2;
            break;
        case blue:
            huePercentage = (red - green) / delta + 4;
    }
    const hue = huePercentage / 6 * 360;
    const clampedHue = _clampJs.clamp(hue, 0, 360);
    return {
        hue: clampedHue ? _roundNumberToDecimalPlacesJs.roundNumberToDecimalPlaces(clampedHue, 2) : 0,
        saturation: _roundNumberToDecimalPlacesJs.roundNumberToDecimalPlaces(_clampJs.clamp(saturation, 0, 1), 4),
        brightness: _roundNumberToDecimalPlacesJs.roundNumberToDecimalPlaces(_clampJs.clamp(largestComponent, 0, 1), 4),
        lightness: _roundNumberToDecimalPlacesJs.roundNumberToDecimalPlaces(lightness, 4),
        alpha: _roundNumberToDecimalPlacesJs.roundNumberToDecimalPlaces(alpha, 4)
    };
}
function rgbToHsb(color) {
    const { hue , saturation , brightness , alpha =1  } = rgbToHsbl(color, 'b');
    return {
        hue,
        saturation,
        brightness,
        alpha
    };
}
function rgbToHsl(color) {
    const { hue , saturation: rawSaturation , lightness: rawLightness , alpha =1  } = rgbToHsbl(color, 'l');
    const saturation = _roundNumberToDecimalPlacesJs.roundNumberToDecimalPlaces(rawSaturation * 100, 2);
    const lightness = _roundNumberToDecimalPlacesJs.roundNumberToDecimalPlaces(rawLightness * 100, 2);
    return {
        hue,
        saturation,
        lightness,
        alpha
    };
}

},{"./clamp.js":"h5zK3","./roundNumberToDecimalPlaces.js":"lX9GQ","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"h5zK3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "clamp", ()=>clamp
);
function clamp(number, min, max) {
    if (number < min) return min;
    if (number > max) return max;
    return number;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lX9GQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "roundNumberToDecimalPlaces", ()=>roundNumberToDecimalPlaces
);
// Because everything is a float in JS, Number.toFixed sometimes rounds in the
// "wrong" direction because of float imprecision. For instance:
// `(1.005).toFixed(2)` is `1.00`, NOT `1.01` because 1.005 in floating point is
// actually 1.004999995. By using exponentiation tricks here we can work around
// this imprecision, so `roundNumberToDecimalPlaces(1.005)` returns the expected
// value of `1.01`
// See https://www.jacklmoore.com/notes/rounding-in-javascript/
function roundNumberToDecimalPlaces(value, decimals) {
    const exponent = Number(`${value}e${decimals}`);
    const roundedExponent = Math.round(exponent);
    const numberWithDecimalPlaces = Number(`${roundedExponent}e-${decimals}`);
    return numberWithDecimalPlaces;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8TZsv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "WithinContentContext", ()=>WithinContentContext
);
var _react = require("react");
const WithinContentContext = /*#__PURE__*/ _react.createContext(false);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ai302":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SelectionType", ()=>SelectionType1
);
parcelHelpers.export(exports, "useIndexResourceState", ()=>useIndexResourceState
);
var _react = require("react");
let SelectionType1;
(function(SelectionType) {
    SelectionType["All"] = "all";
    SelectionType["Page"] = "page";
    SelectionType["Multi"] = "multi";
    SelectionType["Single"] = "single";
})(SelectionType1 || (SelectionType1 = {
}));
function defaultResourceIDResolver(resource) {
    if ('id' in resource) return resource.id;
    throw new Error('Your resource does not directly contain an `id`. Pass a `resourceIDResolver` to `useIndexResourceState`');
}
function useIndexResourceState(resources, { selectedResources: initSelectedResources = [] , allResourcesSelected: initAllResourcesSelected = false , resourceIDResolver =defaultResourceIDResolver  } = {
    selectedResources: [],
    allResourcesSelected: false,
    resourceIDResolver: defaultResourceIDResolver
}) {
    const [selectedResources, setSelectedResources] = _react.useState(initSelectedResources);
    const [allResourcesSelected, setAllResourcesSelected] = _react.useState(initAllResourcesSelected);
    const handleSelectionChange = _react.useCallback((selectionType, isSelecting, selection)=>{
        if (selectionType === SelectionType1.All) setAllResourcesSelected(isSelecting);
        else if (allResourcesSelected) setAllResourcesSelected(false);
        switch(selectionType){
            case SelectionType1.Single:
                setSelectedResources((newSelectedResources)=>isSelecting ? [
                        ...newSelectedResources,
                        selection
                    ] : newSelectedResources.filter((id)=>id !== selection
                    )
                );
                break;
            case SelectionType1.All:
            case SelectionType1.Page:
                setSelectedResources(isSelecting ? resources.map(resourceIDResolver) : []);
                break;
            case SelectionType1.Multi:
                if (!selection) break;
                setSelectedResources((newSelectedResources)=>{
                    const ids = [];
                    for(let i = selection[0]; i <= selection[1]; i++){
                        const id = resourceIDResolver(resources[i]);
                        if (isSelecting && !newSelectedResources.includes(id) || !isSelecting && newSelectedResources.includes(id)) ids.push(id);
                    }
                    return isSelecting ? [
                        ...newSelectedResources,
                        ...ids
                    ] : newSelectedResources.filter((id)=>!ids.includes(id)
                    );
                });
                break;
        }
    }, [
        allResourcesSelected,
        resources,
        resourceIDResolver
    ]);
    return {
        selectedResources,
        allResourcesSelected,
        handleSelectionChange
    };
}

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2vyo0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ScrollLockManagerContext", ()=>ScrollLockManagerContext
);
var _react = require("react");
const ScrollLockManagerContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"k0Mud":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useContainerScroll", ()=>useContainerScroll
);
parcelHelpers.export(exports, "useRowHovered", ()=>useRowHovered
);
parcelHelpers.export(exports, "useRowSelected", ()=>useRowSelected
);
var _react = require("react");
var _contextJs = require("./context.js");
function useRowHovered() {
    const hovered = _react.useContext(_contextJs.RowHoveredContext);
    return hovered;
}
function useRowSelected() {
    const { selected  } = _react.useContext(_contextJs.RowContext);
    return selected;
}
function useContainerScroll() {
    const scrolledContainerRef = _react.useContext(_contextJs.ScrollContext);
    return scrolledContainerRef;
}

},{"react":"6fep5","./context.js":"jBnId","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jBnId":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RowContext", ()=>RowContext
);
parcelHelpers.export(exports, "RowHoveredContext", ()=>RowHoveredContext
);
parcelHelpers.export(exports, "ScrollContext", ()=>ScrollContext
);
parcelHelpers.export(exports, "scrollDefaultContext", ()=>scrollDefaultContext
);
var _react = require("react");
const RowContext = /*#__PURE__*/ _react.createContext({
});
const RowHoveredContext = /*#__PURE__*/ _react.createContext(undefined);
const scrollDefaultContext = {
    scrollableContainer: null,
    canScrollLeft: false,
    canScrollRight: false
};
const ScrollContext = /*#__PURE__*/ _react.createContext(scrollDefaultContext);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bnJU8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "buildCustomProperties", ()=>buildCustomProperties
);
parcelHelpers.export(exports, "buildCustomPropertiesNoMemo", ()=>buildCustomPropertiesNoMemo
);
parcelHelpers.export(exports, "buildThemeContext", ()=>buildThemeContext
);
parcelHelpers.export(exports, "toCssCustomPropertySyntax", ()=>toCssCustomPropertySyntax
);
parcelHelpers.export(exports, "toString", ()=>toString
);
var _distModern = require("@shopify/polaris-tokens/dist-modern");
var _base = require("@shopify/polaris-tokens/dist-modern/configs/base");
function buildCustomPropertiesNoMemo(themeConfig, tokens) {
    const { colors ={
    } , colorScheme , config: config$1 , frameOffset ='0px'  } = themeConfig;
    const mergedConfig = _distModern.mergeConfigs(_base.config, config$1 || {
    });
    return customPropertyTransformer({
        ..._distModern.colorFactory(colors, colorScheme, mergedConfig),
        ...tokens,
        frameOffset
    });
}
function buildThemeContext(themeConfig, cssCustomProperties) {
    const { logo , colors ={
    } , colorScheme  } = themeConfig;
    return {
        logo,
        cssCustomProperties: toString(cssCustomProperties),
        colors,
        colorScheme
    };
}
function toString(obj) {
    if (obj) return Object.entries(obj).map((pair)=>pair.join(':')
    ).join(';');
    else return '';
}
function customPropertyTransformer(properties) {
    return Object.entries(properties).reduce((transformed, [key, value])=>({
            ...transformed,
            [toCssCustomPropertySyntax(key)]: value
        })
    , {
    });
}
function toCssCustomPropertySyntax(camelCase) {
    return `--p-${camelCase.replace(/([A-Z0-9])/g, '-$1').toLowerCase()}`;
} // eslint-disable-next-line @typescript-eslint/ban-types
function memoize(fnToMemoize) {
    const cache = new Map();
    return function(...args) {
        const key = JSON.stringify([
            fnToMemoize.name,
            args
        ]);
        if (cache.get(key) === undefined) cache.set(key, fnToMemoize(...args));
        return cache.get(key);
    };
}
const buildCustomProperties = memoize(buildCustomPropertiesNoMemo);

},{"@shopify/polaris-tokens/dist-modern":"6aRh2","@shopify/polaris-tokens/dist-modern/configs/base":"crfZP","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6aRh2":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.mergeConfigs = exports.colorFactory = void 0;
var color_factory_1 = require("./color-factory");
Object.defineProperty(exports, "colorFactory", {
    enumerable: true,
    get: function() {
        return color_factory_1.colorFactory;
    }
});
var utils_1 = require("./utils");
Object.defineProperty(exports, "mergeConfigs", {
    enumerable: true,
    get: function() {
        return utils_1.mergeConfigs;
    }
});

},{"./color-factory":"6zWTO","./utils":"cUWF6"}],"6zWTO":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.colorFactory = void 0;
const tslib_1 = require("tslib");
const hsluv_1 = require("hsluv");
const base_1 = require("./configs/base");
function colorFactory(theme, scheme, config = base_1.config) {
    return Object.assign({
    }, ...Object.entries(theme).map(([role, hex])=>{
        if (typeof hex !== 'string') return null;
        const base = hsluv_1.hexToHsluv(hex);
        const variants = config[role] || [];
        return Object.assign({
        }, variants.reduce((accumulator, _a)=>{
            var { name  } = _a, settings = tslib_1.__rest(_a, [
                "name"
            ]);
            const { hue =base[0] , saturation =base[1] , lightness =base[2] , alpha =1 ,  } = settings[scheme];
            const resolve = (value, baseToResolve)=>{
                return typeof value === 'number' ? value : value(baseToResolve);
            };
            const [red, green, blue] = hsluv_1.hsluvToRgb([
                resolve(hue, base[0]),
                resolve(saturation, base[1]),
                resolve(lightness, base[2]), 
            ]).map((channel)=>Math.round(channel * 255)
            );
            return Object.assign(Object.assign({
            }, accumulator), {
                [name]: `rgba(${red}, ${green}, ${blue}, ${alpha})`
            });
        }, {
        }));
    }));
}
exports.colorFactory = colorFactory;

},{"tslib":"i4Itn","hsluv":"5DKL0","./configs/base":"crfZP"}],"i4Itn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__extends", ()=>__extends
);
parcelHelpers.export(exports, "__assign", ()=>__assign
);
parcelHelpers.export(exports, "__rest", ()=>__rest
);
parcelHelpers.export(exports, "__decorate", ()=>__decorate
);
parcelHelpers.export(exports, "__param", ()=>__param
);
parcelHelpers.export(exports, "__metadata", ()=>__metadata
);
parcelHelpers.export(exports, "__awaiter", ()=>__awaiter
);
parcelHelpers.export(exports, "__generator", ()=>__generator
);
parcelHelpers.export(exports, "__createBinding", ()=>__createBinding
);
parcelHelpers.export(exports, "__exportStar", ()=>__exportStar
);
parcelHelpers.export(exports, "__values", ()=>__values
);
parcelHelpers.export(exports, "__read", ()=>__read
);
parcelHelpers.export(exports, "__spread", ()=>__spread
);
parcelHelpers.export(exports, "__spreadArrays", ()=>__spreadArrays
);
parcelHelpers.export(exports, "__await", ()=>__await
);
parcelHelpers.export(exports, "__asyncGenerator", ()=>__asyncGenerator
);
parcelHelpers.export(exports, "__asyncDelegator", ()=>__asyncDelegator
);
parcelHelpers.export(exports, "__asyncValues", ()=>__asyncValues
);
parcelHelpers.export(exports, "__makeTemplateObject", ()=>__makeTemplateObject
);
parcelHelpers.export(exports, "__importStar", ()=>__importStar
);
parcelHelpers.export(exports, "__importDefault", ()=>__importDefault
);
parcelHelpers.export(exports, "__classPrivateFieldGet", ()=>__classPrivateFieldGet
);
parcelHelpers.export(exports, "__classPrivateFieldSet", ()=>__classPrivateFieldSet
);
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d1, b1) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];
    };
    return extendStatics(d1, b1);
};
function __extends(d, b) {
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {
    };
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
}
function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}
function __exportStar(m, exports) {
    for(var p in m)if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spread() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
}
function __spreadArrays() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    function verb(n) {
        if (g[n]) i[n] = function(v) {
            return new Promise(function(a, b) {
                q.push([
                    n,
                    v,
                    a,
                    b
                ]) > 1 || resume(n, v);
            });
        };
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
    return i = {
    }, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
}
function __asyncDelegator(o) {
    var i, p;
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: __await(o[n](v)),
                done: n === "return"
            } : f ? f(v) : v;
        } : f;
    }
    return i = {
    }, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
}
function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v1) {
        Promise.resolve(v1).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {
    }, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) Object.defineProperty(cooked, "raw", {
        value: raw
    });
    else cooked.raw = raw;
    return cooked;
}
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) {
        for(var k in mod)if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    }
    result.default = mod;
    return result;
}
function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) throw new TypeError("attempted to get private field on non-instance");
    return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) throw new TypeError("attempted to set private field on non-instance");
    privateMap.set(receiver, value);
    return value;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5DKL0":[function(require,module,exports) {
// Generated by Haxe 3.4.4
var hsluv = hsluv || {
};
hsluv.Geometry = function() {
};
hsluv.Geometry.intersectLineLine = function(a, b) {
    var x = (a.intercept - b.intercept) / (b.slope - a.slope);
    var y = a.slope * x + a.intercept;
    return {
        x: x,
        y: y
    };
};
hsluv.Geometry.distanceFromOrigin = function(point) {
    return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));
};
hsluv.Geometry.distanceLineFromOrigin = function(line) {
    return Math.abs(line.intercept) / Math.sqrt(Math.pow(line.slope, 2) + 1);
};
hsluv.Geometry.perpendicularThroughPoint = function(line, point) {
    var slope = -1 / line.slope;
    var intercept = point.y - slope * point.x;
    return {
        slope: slope,
        intercept: intercept
    };
};
hsluv.Geometry.angleFromOrigin = function(point) {
    return Math.atan2(point.y, point.x);
};
hsluv.Geometry.normalizeAngle = function(angle) {
    var m = 2 * Math.PI;
    return (angle % m + m) % m;
};
hsluv.Geometry.lengthOfRayUntilIntersect = function(theta, line) {
    return line.intercept / (Math.sin(theta) - line.slope * Math.cos(theta));
};
hsluv.Hsluv = function() {
};
hsluv.Hsluv.getBounds = function(L) {
    var result = [];
    var sub1 = Math.pow(L + 16, 3) / 1560896;
    var sub2 = sub1 > hsluv.Hsluv.epsilon ? sub1 : L / hsluv.Hsluv.kappa;
    var _g = 0;
    while(_g < 3){
        var c = _g++;
        var m1 = hsluv.Hsluv.m[c][0];
        var m2 = hsluv.Hsluv.m[c][1];
        var m3 = hsluv.Hsluv.m[c][2];
        var _g1 = 0;
        while(_g1 < 2){
            var t = _g1++;
            var top1 = (284517 * m1 - 94839 * m3) * sub2;
            var top2 = (838422 * m3 + 769860 * m2 + 731718 * m1) * L * sub2 - 769860 * t * L;
            var bottom = (632260 * m3 - 126452 * m2) * sub2 + 126452 * t;
            result.push({
                slope: top1 / bottom,
                intercept: top2 / bottom
            });
        }
    }
    return result;
};
hsluv.Hsluv.maxSafeChromaForL = function(L) {
    var bounds = hsluv.Hsluv.getBounds(L);
    var min = Infinity;
    var _g = 0;
    while(_g < bounds.length){
        var bound = bounds[_g];
        ++_g;
        var length = hsluv.Geometry.distanceLineFromOrigin(bound);
        min = Math.min(min, length);
    }
    return min;
};
hsluv.Hsluv.maxChromaForLH = function(L, H) {
    var hrad = H / 360 * Math.PI * 2;
    var bounds = hsluv.Hsluv.getBounds(L);
    var min = Infinity;
    var _g = 0;
    while(_g < bounds.length){
        var bound = bounds[_g];
        ++_g;
        var length = hsluv.Geometry.lengthOfRayUntilIntersect(hrad, bound);
        if (length >= 0) min = Math.min(min, length);
    }
    return min;
};
hsluv.Hsluv.dotProduct = function(a, b) {
    var sum = 0;
    var _g1 = 0;
    var _g = a.length;
    while(_g1 < _g){
        var i = _g1++;
        sum += a[i] * b[i];
    }
    return sum;
};
hsluv.Hsluv.fromLinear = function(c) {
    if (c <= 0.0031308) return 12.92 * c;
    else return 1.055 * Math.pow(c, 0.4166666666666667) - 0.055;
};
hsluv.Hsluv.toLinear = function(c) {
    if (c > 0.04045) return Math.pow((c + 0.055) / 1.055, 2.4);
    else return c / 12.92;
};
hsluv.Hsluv.xyzToRgb = function(tuple) {
    return [
        hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[0], tuple)),
        hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[1], tuple)),
        hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[2], tuple))
    ];
};
hsluv.Hsluv.rgbToXyz = function(tuple) {
    var rgbl = [
        hsluv.Hsluv.toLinear(tuple[0]),
        hsluv.Hsluv.toLinear(tuple[1]),
        hsluv.Hsluv.toLinear(tuple[2])
    ];
    return [
        hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[0], rgbl),
        hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[1], rgbl),
        hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[2], rgbl)
    ];
};
hsluv.Hsluv.yToL = function(Y) {
    if (Y <= hsluv.Hsluv.epsilon) return Y / hsluv.Hsluv.refY * hsluv.Hsluv.kappa;
    else return 116 * Math.pow(Y / hsluv.Hsluv.refY, 0.3333333333333333) - 16;
};
hsluv.Hsluv.lToY = function(L) {
    if (L <= 8) return hsluv.Hsluv.refY * L / hsluv.Hsluv.kappa;
    else return hsluv.Hsluv.refY * Math.pow((L + 16) / 116, 3);
};
hsluv.Hsluv.xyzToLuv = function(tuple) {
    var X = tuple[0];
    var Y = tuple[1];
    var Z = tuple[2];
    var divider = X + 15 * Y + 3 * Z;
    var varU = 4 * X;
    var varV = 9 * Y;
    if (divider != 0) {
        varU /= divider;
        varV /= divider;
    } else {
        varU = NaN;
        varV = NaN;
    }
    var L = hsluv.Hsluv.yToL(Y);
    if (L == 0) return [
        0,
        0,
        0
    ];
    var U = 13 * L * (varU - hsluv.Hsluv.refU);
    var V = 13 * L * (varV - hsluv.Hsluv.refV);
    return [
        L,
        U,
        V
    ];
};
hsluv.Hsluv.luvToXyz = function(tuple) {
    var L = tuple[0];
    var U = tuple[1];
    var V = tuple[2];
    if (L == 0) return [
        0,
        0,
        0
    ];
    var varU = U / (13 * L) + hsluv.Hsluv.refU;
    var varV = V / (13 * L) + hsluv.Hsluv.refV;
    var Y = hsluv.Hsluv.lToY(L);
    var X = 0 - 9 * Y * varU / ((varU - 4) * varV - varU * varV);
    var Z = (9 * Y - 15 * varV * Y - varV * X) / (3 * varV);
    return [
        X,
        Y,
        Z
    ];
};
hsluv.Hsluv.luvToLch = function(tuple) {
    var L = tuple[0];
    var U = tuple[1];
    var V = tuple[2];
    var C = Math.sqrt(U * U + V * V);
    var H;
    if (C < 0.00000001) H = 0;
    else {
        var Hrad = Math.atan2(V, U);
        H = Hrad * 180 / Math.PI;
        if (H < 0) H = 360 + H;
    }
    return [
        L,
        C,
        H
    ];
};
hsluv.Hsluv.lchToLuv = function(tuple) {
    var L = tuple[0];
    var C = tuple[1];
    var H = tuple[2];
    var Hrad = H / 360 * 2 * Math.PI;
    var U = Math.cos(Hrad) * C;
    var V = Math.sin(Hrad) * C;
    return [
        L,
        U,
        V
    ];
};
hsluv.Hsluv.hsluvToLch = function(tuple) {
    var H = tuple[0];
    var S = tuple[1];
    var L = tuple[2];
    if (L > 99.9999999) return [
        100,
        0,
        H
    ];
    if (L < 0.00000001) return [
        0,
        0,
        H
    ];
    var max = hsluv.Hsluv.maxChromaForLH(L, H);
    var C = max / 100 * S;
    return [
        L,
        C,
        H
    ];
};
hsluv.Hsluv.lchToHsluv = function(tuple) {
    var L = tuple[0];
    var C = tuple[1];
    var H = tuple[2];
    if (L > 99.9999999) return [
        H,
        0,
        100
    ];
    if (L < 0.00000001) return [
        H,
        0,
        0
    ];
    var max = hsluv.Hsluv.maxChromaForLH(L, H);
    var S = C / max * 100;
    return [
        H,
        S,
        L
    ];
};
hsluv.Hsluv.hpluvToLch = function(tuple) {
    var H = tuple[0];
    var S = tuple[1];
    var L = tuple[2];
    if (L > 99.9999999) return [
        100,
        0,
        H
    ];
    if (L < 0.00000001) return [
        0,
        0,
        H
    ];
    var max = hsluv.Hsluv.maxSafeChromaForL(L);
    var C = max / 100 * S;
    return [
        L,
        C,
        H
    ];
};
hsluv.Hsluv.lchToHpluv = function(tuple) {
    var L = tuple[0];
    var C = tuple[1];
    var H = tuple[2];
    if (L > 99.9999999) return [
        H,
        0,
        100
    ];
    if (L < 0.00000001) return [
        H,
        0,
        0
    ];
    var max = hsluv.Hsluv.maxSafeChromaForL(L);
    var S = C / max * 100;
    return [
        H,
        S,
        L
    ];
};
hsluv.Hsluv.rgbToHex = function(tuple) {
    var h = "#";
    var _g = 0;
    while(_g < 3){
        var i = _g++;
        var chan = tuple[i];
        var c = Math.round(chan * 255);
        var digit2 = c % 16;
        var digit1 = (c - digit2) / 16 | 0;
        h += hsluv.Hsluv.hexChars.charAt(digit1) + hsluv.Hsluv.hexChars.charAt(digit2);
    }
    return h;
};
hsluv.Hsluv.hexToRgb = function(hex) {
    hex = hex.toLowerCase();
    var ret = [];
    var _g = 0;
    while(_g < 3){
        var i = _g++;
        var digit1 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 1));
        var digit2 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 2));
        var n = digit1 * 16 + digit2;
        ret.push(n / 255);
    }
    return ret;
};
hsluv.Hsluv.lchToRgb = function(tuple) {
    return hsluv.Hsluv.xyzToRgb(hsluv.Hsluv.luvToXyz(hsluv.Hsluv.lchToLuv(tuple)));
};
hsluv.Hsluv.rgbToLch = function(tuple) {
    return hsluv.Hsluv.luvToLch(hsluv.Hsluv.xyzToLuv(hsluv.Hsluv.rgbToXyz(tuple)));
};
hsluv.Hsluv.hsluvToRgb = function(tuple) {
    return hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hsluvToLch(tuple));
};
hsluv.Hsluv.rgbToHsluv = function(tuple) {
    return hsluv.Hsluv.lchToHsluv(hsluv.Hsluv.rgbToLch(tuple));
};
hsluv.Hsluv.hpluvToRgb = function(tuple) {
    return hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hpluvToLch(tuple));
};
hsluv.Hsluv.rgbToHpluv = function(tuple) {
    return hsluv.Hsluv.lchToHpluv(hsluv.Hsluv.rgbToLch(tuple));
};
hsluv.Hsluv.hsluvToHex = function(tuple) {
    return hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hsluvToRgb(tuple));
};
hsluv.Hsluv.hpluvToHex = function(tuple) {
    return hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hpluvToRgb(tuple));
};
hsluv.Hsluv.hexToHsluv = function(s) {
    return hsluv.Hsluv.rgbToHsluv(hsluv.Hsluv.hexToRgb(s));
};
hsluv.Hsluv.hexToHpluv = function(s) {
    return hsluv.Hsluv.rgbToHpluv(hsluv.Hsluv.hexToRgb(s));
};
hsluv.Hsluv.m = [
    [
        3.240969941904521,
        -1.537383177570093,
        -0.498610760293
    ],
    [
        -0.96924363628087,
        1.87596750150772,
        0.041555057407175
    ],
    [
        0.055630079696993,
        -0.20397695888897,
        1.056971514242878
    ]
];
hsluv.Hsluv.minv = [
    [
        0.41239079926595,
        0.35758433938387,
        0.18048078840183
    ],
    [
        0.21263900587151,
        0.71516867876775,
        0.072192315360733
    ],
    [
        0.019330818715591,
        0.11919477979462,
        0.95053215224966
    ]
];
hsluv.Hsluv.refY = 1;
hsluv.Hsluv.refU = 0.19783000664283;
hsluv.Hsluv.refV = 0.46831999493879;
hsluv.Hsluv.kappa = 903.2962962;
hsluv.Hsluv.epsilon = 0.0088564516;
hsluv.Hsluv.hexChars = "0123456789abcdef";
var root = {
    "hsluvToRgb": hsluv.Hsluv.hsluvToRgb,
    "rgbToHsluv": hsluv.Hsluv.rgbToHsluv,
    "hpluvToRgb": hsluv.Hsluv.hpluvToRgb,
    "rgbToHpluv": hsluv.Hsluv.rgbToHpluv,
    "hsluvToHex": hsluv.Hsluv.hsluvToHex,
    "hexToHsluv": hsluv.Hsluv.hexToHsluv,
    "hpluvToHex": hsluv.Hsluv.hpluvToHex,
    "hexToHpluv": hsluv.Hsluv.hexToHpluv,
    "lchToHpluv": hsluv.Hsluv.lchToHpluv,
    "hpluvToLch": hsluv.Hsluv.hpluvToLch,
    "lchToHsluv": hsluv.Hsluv.lchToHsluv,
    "hsluvToLch": hsluv.Hsluv.hsluvToLch,
    "lchToLuv": hsluv.Hsluv.lchToLuv,
    "luvToLch": hsluv.Hsluv.luvToLch,
    "xyzToLuv": hsluv.Hsluv.xyzToLuv,
    "luvToXyz": hsluv.Hsluv.luvToXyz,
    "xyzToRgb": hsluv.Hsluv.xyzToRgb,
    "rgbToXyz": hsluv.Hsluv.rgbToXyz,
    "lchToRgb": hsluv.Hsluv.lchToRgb,
    "rgbToLch": hsluv.Hsluv.rgbToLch
};
module.exports = root;

},{}],"crfZP":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.config = void 0;
const utils_1 = require("../utils");
exports.config = {
    surface: [
        {
            name: 'background',
            description: 'For use as a background color, in components such as Page and Frame backgrounds.',
            light: {
                lightness: 97
            },
            dark: {
                lightness: 3.3
            },
            meta: {
                figmaName: 'Background/Default'
            }
        },
        {
            name: 'backgroundHovered',
            description: 'For use when an action or navigation is used on a background.',
            light: {
                lightness: 95.5
            },
            dark: {
                lightness: 3.3
            },
            meta: {
                figmaName: 'Background/Hovered'
            }
        },
        {
            name: 'backgroundPressed',
            description: 'For use when an action or navigation is used on a background.',
            light: {
                lightness: 94
            },
            dark: {
                lightness: 3.3
            },
            meta: {
                figmaName: 'Background/Pressed'
            }
        },
        {
            name: 'backgroundSelected',
            description: 'For use in the selected item in navigation',
            light: {
                lightness: 94
            },
            dark: {
                lightness: 3.3
            },
            meta: {
                figmaName: 'Background/Selected'
            }
        },
        {
            name: 'surface',
            description: 'For use as a background color, in components such as Card, Modal, and Popover.',
            light: {
                lightness: 100
            },
            dark: {
                lightness: 12.7
            },
            meta: {
                figmaName: 'Surface/Default'
            }
        },
        {
            name: 'surfaceNeutral',
            description: 'For use as a background color in neutral badges.',
            light: {
                lightness: 91
            },
            dark: {
                lightness: 21
            },
            meta: {
                figmaName: 'Surface Neutral/Default'
            }
        },
        {
            name: 'surfaceNeutralHovered',
            description: 'For use as a hovered background color in neutral badges.',
            light: {
                lightness: 88
            },
            dark: {
                lightness: 21
            },
            meta: {
                figmaName: 'Surface Neutral/Hovered'
            }
        },
        {
            name: 'surfaceNeutralPressed',
            description: 'For use as a pressed background color in neutral badges.',
            light: {
                lightness: 82
            },
            dark: {
                lightness: 21
            },
            meta: {
                figmaName: 'Surface Neutral/Pressed'
            }
        },
        {
            name: 'surfaceNeutralDisabled',
            description: 'For use as a disabled background color in neutral badges.',
            light: {
                lightness: 95.5
            },
            dark: {
                lightness: 21
            },
            meta: {
                figmaName: 'Surface Neutral/Disabled'
            }
        },
        {
            name: 'surfaceNeutralSubdued',
            description: 'For use as a background color in neutral banners.',
            light: {
                lightness: 97
            },
            dark: {
                lightness: 30
            },
            meta: {
                figmaName: 'Surface Neutral/Subdued'
            }
        },
        {
            name: 'surfaceSubdued',
            description: 'For use as a subdued background color, in components such as Card, Modal, and Popover.',
            light: {
                lightness: 98.5
            },
            dark: {
                lightness: 10
            },
            meta: {
                figmaName: 'Surface/Subdued'
            }
        },
        {
            name: 'surfaceDisabled',
            description: 'For use as a surface color on disabled interactive elements such as option list items and action list items when in a disabled state.',
            light: {
                lightness: 98.5
            },
            dark: {
                lightness: 10
            },
            meta: {
                figmaName: 'Surface/Disabled'
            }
        },
        {
            name: 'surfaceHovered',
            description: 'For use as a surface color on interactive elements such as resource list items and action list items when in a hovered state.',
            light: {
                lightness: 97
            },
            dark: {
                lightness: 20
            },
            meta: {
                figmaName: 'Surface/Hovered'
            }
        },
        {
            name: 'surfacePressed',
            description: 'For use as a surface color on interactive elements such as resource list items and action list items when in a pressed state.',
            light: {
                lightness: 95.5
            },
            dark: {
                lightness: 27
            },
            meta: {
                figmaName: 'Surface/Pressed'
            }
        },
        {
            name: 'surfaceDepressed',
            description: 'For use as a surface color on interactive elements such as resource list items and action list items when in a depressed state.',
            light: {
                lightness: 94
            },
            dark: {
                lightness: 35
            },
            meta: {
                figmaName: 'Surface/Depressed'
            }
        },
        {
            name: 'surfaceSearchField',
            description: 'For use as a background color, in components on surface elements such as SearchField',
            light: {
                lightness: 95.5
            },
            dark: {
                lightness: 20
            },
            meta: {
                figmaName: 'Surface/SearchField'
            }
        },
        {
            name: 'backdrop',
            description: 'For use as the background color of the backdrop component for navigation and modal. This color has an alpha of `0.5`.',
            light: {
                hue: 0,
                saturation: 0,
                lightness: 0,
                alpha: 0.5
            },
            dark: {
                hue: 0,
                saturation: 0,
                lightness: 0,
                alpha: 0.5
            },
            meta: {
                figmaName: 'Backdrop'
            }
        },
        {
            name: 'overlay',
            description: 'For use as the background color of elements which lay on top of surfaces to obscure their contents. This color has an alpha of `0.5`.',
            light: {
                hue: 0,
                saturation: 0,
                lightness: 100,
                alpha: 0.5
            },
            dark: {
                hue: 0,
                saturation: 0,
                lightness: 12.7,
                alpha: 0.5
            },
            meta: {
                figmaName: 'Overlay'
            }
        },
        {
            name: 'shadowFromDimLight',
            description: 'For use in building shadows for modals. This color has an alpha of `0.02`.',
            light: {
                lightness: 0,
                alpha: 0.2
            },
            dark: {
                lightness: 100,
                alpha: 0.2
            },
            meta: {
                figmaName: 'Shadow/From dim light'
            }
        },
        {
            name: 'shadowFromAmbientLight',
            description: 'For use in building shadows for popovers, and cards. This color has an alpha of `0.05`.',
            light: {
                hue: 180,
                saturation: 5,
                lightness: 8,
                alpha: 0.05
            },
            dark: {
                hue: 180,
                saturation: 5,
                lightness: 8,
                alpha: 0.05
            },
            meta: {
                figmaName: 'Shadow/From ambient light'
            }
        },
        {
            name: 'shadowFromDirectLight',
            description: 'For use in building shadows for popovers and cards. This color has an alpha of `0.15`.',
            light: {
                hue: 0,
                saturation: 0,
                lightness: 0,
                alpha: 0.15
            },
            dark: {
                hue: 0,
                saturation: 0,
                lightness: 100,
                alpha: 0.15
            },
            meta: {
                figmaName: 'Shadow/From direct light'
            }
        },
        {
            name: 'hintFromDirectLight',
            description: 'For use in building shadows scrollables.',
            light: {
                hue: 0,
                saturation: 0,
                lightness: 0,
                alpha: 0.15
            },
            dark: {
                hue: 0,
                saturation: 0,
                lightness: 75,
                alpha: 0.2
            },
            meta: {
                figmaName: 'Hint/From direct light'
            }
        }, 
    ],
    onSurface: [
        {
            name: 'border',
            description: 'For use as the default border on elements.',
            light: {
                lightness: 60
            },
            dark: {
                lightness: 35
            },
            meta: {
                figmaName: 'Border/Default'
            }
        },
        {
            name: 'borderNeutralSubdued',
            description: 'For use as the border on banners.',
            light: {
                lightness: 77
            },
            dark: {
                lightness: 56
            },
            meta: {
                figmaName: 'Border Neutral/Subdued'
            }
        },
        {
            name: 'borderHovered',
            description: 'Used for borders on hovered interactive elements',
            light: {
                lightness: 65
            },
            dark: {
                lightness: 35
            },
            meta: {
                figmaName: 'Border/Hovered'
            }
        },
        {
            name: 'borderDisabled',
            description: 'Used for disabled borders on interactive elements',
            light: {
                lightness: 85
            },
            dark: {
                lightness: 45
            },
            meta: {
                figmaName: 'Border/Disabled'
            }
        },
        {
            name: 'borderSubdued',
            description: 'For use as a subdued border on elements.',
            light: {
                saturation: utils_1.saturationAdjustmentFn(-1),
                lightness: 81.9
            },
            dark: {
                lightness: 56
            },
            meta: {
                figmaName: 'Border/Subdued'
            }
        },
        {
            name: 'borderDepressed',
            description: 'For use as a border on depressed elements.',
            light: {
                hue: utils_1.hueRotationFn(-45),
                saturation: utils_1.saturationAdjustmentFn(-4),
                lightness: 37.7
            },
            dark: {
                hue: utils_1.hueRotationFn(-45),
                saturation: utils_1.saturationAdjustmentFn(-4),
                lightness: 60
            },
            meta: {
                figmaName: 'Border/Depressed'
            }
        },
        {
            name: 'borderShadow',
            description: 'For use as an additional bottom border on elements.',
            light: {
                lightness: 73
            },
            dark: {
                lightness: 40
            },
            meta: {
                figmaName: 'BorderShadow'
            }
        },
        {
            name: 'borderShadowSubdued',
            description: 'For use as an additional, subdued bottom border on elements.',
            light: {
                lightness: 77.1
            },
            dark: {
                lightness: 56
            },
            meta: {
                figmaName: 'BorderShadow/Subdued'
            }
        },
        {
            name: 'divider',
            description: 'For use as a divider between elements.',
            light: {
                saturation: utils_1.saturationAdjustmentFn(-1),
                lightness: 90.1
            },
            dark: {
                saturation: utils_1.saturationAdjustmentFn(-1),
                lightness: 30
            },
            meta: {
                figmaName: 'Divider'
            }
        },
        {
            name: 'icon',
            description: 'For use as the fill color of icons.',
            light: {
                lightness: 40.1
            },
            dark: {
                lightness: 70.1
            },
            meta: {
                figmaName: 'Icon/Default'
            }
        },
        {
            name: 'iconHovered',
            description: 'For use as the fill color of hovered icons.',
            light: {
                lightness: 10
            },
            dark: {
                lightness: 90
            },
            meta: {
                figmaName: 'Icon/Hovered'
            }
        },
        {
            name: 'iconPressed',
            description: 'For use as the fill color of pressed icons.',
            light: {
                lightness: 30
            },
            dark: {
                lightness: 70
            },
            meta: {
                figmaName: 'Icon/Pressed'
            }
        },
        {
            name: 'iconDisabled',
            description: 'For use as the fill color of disabled icons.',
            light: {
                lightness: 76.9
            },
            dark: {
                lightness: 36.8
            },
            meta: {
                figmaName: 'Icon/Disabled'
            }
        },
        {
            name: 'iconSubdued',
            description: 'For use as the fill color of subdued icons.',
            light: {
                lightness: 59.8
            },
            dark: {
                lightness: 52.1
            },
            meta: {
                figmaName: 'Icon/Subdued'
            }
        },
        {
            name: 'text',
            description: 'For use as a text color.',
            light: {
                lightness: 13.1
            },
            dark: {
                lightness: 90.8
            },
            meta: {
                figmaName: 'Text/Default'
            }
        },
        {
            name: 'textDisabled',
            description: 'For use as a disabled text color and as a placeholder text color.',
            light: {
                lightness: 60
            },
            dark: {
                lightness: 48.2
            },
            meta: {
                figmaName: 'Text/Disabled'
            }
        },
        {
            name: 'textSubdued',
            description: 'For use as a subdued text color.',
            light: {
                lightness: 47.4
            },
            dark: {
                lightness: 65.1
            },
            meta: {
                figmaName: 'Text/Subdued'
            }
        }, 
    ],
    interactive: [
        {
            name: 'interactive',
            description: 'Used for links, plain buttons, and as the fill color for selected checkboxes and radio buttons.',
            light: {
                lightness: 47
            },
            dark: {
                lightness: 65,
                saturation: utils_1.saturationAdjustmentFn(11.2),
                hue: utils_1.hueRotationFn(-7.1)
            },
            meta: {
                figmaName: 'Interactive/Default'
            }
        },
        {
            name: 'interactiveDisabled',
            description: 'Used for disabled links and plain buttons.',
            light: {
                lightness: 78,
                saturation: 17
            },
            dark: {
                lightness: 42
            },
            meta: {
                figmaName: 'Interactive/Disabled'
            }
        },
        {
            name: 'interactiveHovered',
            description: 'Used for hovered links and plain buttons.',
            light: {
                lightness: 35
            },
            dark: {
                lightness: 70,
                saturation: utils_1.saturationAdjustmentFn(11.2),
                hue: utils_1.hueRotationFn(-7.1)
            },
            meta: {
                figmaName: 'Interactive/Hovered'
            }
        },
        {
            name: 'interactivePressed',
            description: 'Used for pressed links and plain buttons.',
            light: {
                lightness: 21
            },
            dark: {
                lightness: 75,
                saturation: utils_1.saturationAdjustmentFn(11.2),
                hue: utils_1.hueRotationFn(-7.1)
            },
            meta: {
                figmaName: 'Interactive/Pressed'
            }
        },
        {
            name: 'iconInteractive',
            description: 'For use as an interactive icon fill color',
            light: {
                lightness: 47
            },
            dark: {
                lightness: 65,
                saturation: utils_1.saturationAdjustmentFn(11.2),
                hue: utils_1.hueRotationFn(-7.1)
            },
            meta: {
                figmaName: 'Icon/Interactive'
            }
        },
        {
            name: 'focused',
            description: 'For use in the focus ring on interactive elements.',
            light: {
                lightness: 60,
                saturation: utils_1.saturationAdjustmentFn(11.2)
            },
            dark: {
                lightness: 42
            },
            meta: {
                figmaName: 'Focused/Default'
            }
        },
        {
            name: 'surfaceSelected',
            description: 'For use as a surface color in selected interactive elements, in components such as action list and resource list.',
            light: {
                lightness: 97,
                hue: utils_1.hueRotationFn(-12)
            },
            dark: {
                lightness: 4
            },
            meta: {
                figmaName: 'Surface Selected/Default'
            }
        },
        {
            name: 'surfaceSelectedHovered',
            description: 'For use as a surface color in selected interactive elements that are hovered, in components such as action list and resource list.',
            light: {
                lightness: 96,
                hue: utils_1.hueRotationFn(-12)
            },
            dark: {
                lightness: 11
            },
            meta: {
                figmaName: 'Surface Selected/Hovered'
            }
        },
        {
            name: 'surfaceSelectedPressed',
            description: 'For use as a surface color in selected interactive elements that are pressed, in components such as action list and resource list.',
            light: {
                lightness: 94,
                hue: utils_1.hueRotationFn(-10)
            },
            dark: {
                lightness: 18
            },
            meta: {
                figmaName: 'Surface Selected/Pressed'
            }
        },
        {
            name: 'iconOnInteractive',
            description: 'For use as a fill color for icons on interactive elements.',
            light: {
                lightness: 100
            },
            dark: {
                lightness: 100
            },
            meta: {
                figmaName: 'Icon On/Interactive'
            }
        },
        {
            name: 'textOnInteractive',
            description: 'For use as a text color on interactive elements.',
            light: {
                lightness: 100
            },
            dark: {
                lightness: 100
            },
            meta: {
                figmaName: 'Text On/Interactive'
            }
        }, 
    ],
    secondary: [
        {
            name: 'actionSecondary',
            description: 'Used for secondary buttons and tertiary buttons, as well as in form elements as a background color and pontentially other secondary surfaces.',
            light: {
                lightness: 100
            },
            dark: {
                lightness: 34
            },
            meta: {
                figmaName: 'Action Secondary/Default'
            }
        },
        {
            name: 'actionSecondaryDisabled',
            description: 'Used as a disabled state for secondary buttons',
            light: {
                lightness: 100
            },
            dark: {
                lightness: 13
            },
            meta: {
                figmaName: 'Action Secondary/Disabled'
            }
        },
        {
            name: 'actionSecondaryHovered',
            description: 'Used as a hovered state for secondary buttons',
            light: {
                lightness: 97
            },
            dark: {
                lightness: 37
            },
            meta: {
                figmaName: 'Action Secondary/Hovered'
            }
        },
        {
            name: 'actionSecondaryPressed',
            description: 'Used as a pressed state for secondary buttons',
            light: {
                lightness: 95.5
            },
            dark: {
                lightness: 42
            },
            meta: {
                figmaName: 'Action Secondary/Pressed'
            }
        },
        {
            name: 'actionSecondaryDepressed',
            description: 'Used as a depressed state for secondary buttons',
            light: {
                hue: utils_1.hueRotationFn(4),
                lightness: 47.4
            },
            dark: {
                hue: utils_1.hueRotationFn(4),
                lightness: 53
            },
            meta: {
                figmaName: 'Action Secondary/Depressed'
            }
        }, 
    ],
    primary: [
        {
            name: 'actionPrimary',
            description: 'Used as the background color for primary actions, and as the fill color for icons and the text color in navigation and tabs to communicate interaction states.',
            light: {
                lightness: 47.3
            },
            dark: {
                lightness: 47.3
            },
            meta: {
                figmaName: 'Action Primary/Default'
            }
        },
        {
            name: 'actionPrimaryDisabled',
            description: 'Used as the background color for disabled primary actions, and as the fill color for icons and the text color in navigation and tabs to communicate interaction states.',
            light: {
                lightness: 95,
                saturation: 0
            },
            dark: {
                lightness: 32
            },
            meta: {
                figmaName: 'Action Primary/Disabled'
            }
        },
        {
            name: 'actionPrimaryHovered',
            description: 'Used as the background color for hovered primary actions, and as the fill color for icons and the text color in navigation and tabs to communicate interaction states.',
            light: {
                lightness: 41
            },
            dark: {
                lightness: 55
            },
            meta: {
                figmaName: 'Action Primary/Hovered'
            }
        },
        {
            name: 'actionPrimaryPressed',
            description: 'Used as the background color for pressed primary actions, and as the fill color for icons and the text color in navigation and tabs to communicate interaction states.',
            light: {
                lightness: 35
            },
            dark: {
                lightness: 60
            },
            meta: {
                figmaName: 'Action Primary/Pressed'
            }
        },
        {
            name: 'actionPrimaryDepressed',
            description: 'Used as the background color for pressed primary actions, and as the fill color for icons and the text color in navigation and tabs to communicate interaction states.',
            light: {
                lightness: 22
            },
            dark: {
                lightness: 65
            },
            meta: {
                figmaName: 'Action Primary/Depressed'
            }
        },
        {
            name: 'iconOnPrimary',
            description: 'For use as a fill color for icons on primary actions. Not for use in icons on navigation and tabs.',
            light: {
                lightness: 100
            },
            dark: {
                lightness: 98
            },
            meta: {
                figmaName: 'Icon On/Primary'
            }
        },
        {
            name: 'textOnPrimary',
            description: 'For use as a text color on primary actions. Not for use in text on navigation and tabs.',
            light: {
                lightness: 100
            },
            dark: {
                lightness: 100
            },
            meta: {
                figmaName: 'Text On/Primary'
            }
        },
        {
            name: 'textPrimary',
            description: 'For use as primary text color on background. For use in text in components such as Navigation.',
            light: {
                lightness: 45.7
            },
            dark: {
                lightness: 52
            },
            meta: {
                figmaName: 'Text Primary/Default'
            }
        },
        {
            name: 'textPrimaryHovered',
            description: 'For use as primary hovered text color on background. For use in text in components such as Navigation.',
            light: {
                lightness: 40
            },
            dark: {
                lightness: 58
            },
            meta: {
                figmaName: 'Text Primary/hover'
            }
        },
        {
            name: 'textPrimaryPressed',
            description: 'For use as primary pressed text color on background. For use in text in components such as Navigation.',
            light: {
                lightness: 34
            },
            dark: {
                lightness: 64
            },
            meta: {
                figmaName: 'Text Primary/Pressed'
            }
        },
        {
            name: 'surfacePrimarySelected',
            description: 'Used as a surface color to indicate selected interactive states in navigation and tabs.',
            light: {
                lightness: 97,
                saturation: 20
            },
            dark: {
                lightness: 5,
                saturation: 30
            },
            meta: {
                figmaName: 'Surface Primary/Selected'
            }
        },
        {
            name: 'surfacePrimarySelectedHovered',
            description: 'Used as a surface color to indicate selected interactive states that are hovered in navigation and tabs.',
            light: {
                lightness: 81,
                saturation: 22
            },
            dark: {
                lightness: 19,
                saturation: 22
            },
            meta: {
                figmaName: 'Surface Primary/Selected Hovered'
            }
        },
        {
            name: 'surfacePrimarySelectedPressed',
            description: 'Used as a surface color to indicate selected interactive states that are pressed in navigation and tabs.',
            light: {
                lightness: 74,
                saturation: 22
            },
            dark: {
                lightness: 26,
                saturation: 22
            },
            meta: {
                figmaName: 'Surface Primary/Selected Pressed'
            }
        }, 
    ],
    critical: [
        {
            name: 'borderCritical',
            description: 'For use as a border on critical components such as an outline on interactive elements in an error state.',
            light: {
                lightness: 60
            },
            dark: {
                lightness: 50
            },
            meta: {
                figmaName: 'Border Critical/Default'
            }
        },
        {
            name: 'borderCriticalSubdued',
            description: 'For use as a border on critical components such as banners.',
            light: {
                lightness: 77,
                saturation: utils_1.saturationAdjustmentFn(-50)
            },
            dark: {
                lightness: 50
            },
            meta: {
                figmaName: 'Border Critical/Subdued'
            }
        },
        {
            name: 'borderCriticalDisabled',
            description: 'For use as a disabled border on critical components such as banners, and as an outline on interactive elements in an error state.',
            light: {
                lightness: 77,
                saturation: utils_1.saturationAdjustmentFn(2.7)
            },
            dark: {
                lightness: 28
            },
            meta: {
                figmaName: 'Border Critical/Disabled'
            }
        },
        {
            name: 'iconCritical',
            description: 'For use as an icon fill color on top of critical elements.',
            light: {
                lightness: 47.3
            },
            dark: {
                lightness: 48
            },
            meta: {
                figmaName: 'Icon/Critical'
            }
        },
        {
            name: 'surfaceCritical',
            description: 'For use as a surface color on critical elements including badges.',
            light: {
                lightness: 88
            },
            dark: {
                lightness: 12
            },
            meta: {
                figmaName: 'Surface Critical/Default'
            }
        },
        {
            name: 'surfaceCriticalSubdued',
            description: 'For use as a subdued surface color on critical elements including banners.',
            light: {
                lightness: 97
            },
            dark: {
                lightness: 12
            },
            meta: {
                figmaName: 'Surface Critical/Subdued'
            }
        },
        {
            name: 'surfaceCriticalSubduedHovered',
            description: 'For use as a surface color on critical interactive elements including action list items in a hovered state.',
            light: {
                lightness: 96
            },
            dark: {
                lightness: 15,
                saturation: 60
            },
            meta: {
                figmaName: 'Surface Critical/Subdued Hovered',
                figmaDescription: 'Used on action lists'
            }
        },
        {
            name: 'surfaceCriticalSubduedPressed',
            description: 'For use as a surface color on critical interactive elements including action list items in a pressed state.',
            light: {
                lightness: 94
            },
            dark: {
                lightness: 22
            },
            meta: {
                figmaName: 'Surface Critical/Subdued Pressed'
            }
        },
        {
            name: 'surfaceCriticalSubduedDepressed',
            description: 'For use as a surface color on critical interactive elements including action list items in a depressed state.',
            light: {
                lightness: 82
            },
            dark: {
                lightness: 29
            },
            meta: {
                figmaName: 'Surface Critical/Subdued Depressed'
            }
        },
        {
            name: 'textCritical',
            description: 'For use as a text color in inert critical elements such as exception list. Not for use as a text color on banners and badges.',
            light: {
                lightness: 47.3
            },
            dark: {
                lightness: 65,
                saturation: 70
            },
            meta: {
                figmaName: 'Text/Critical'
            }
        },
        {
            name: 'actionCritical',
            description: 'For use as the background color for destructive buttons, and as the background color for error toast messages.',
            light: {
                lightness: 47.5
            },
            dark: {
                lightness: 45
            },
            meta: {
                figmaName: 'Action Critical/Default'
            }
        },
        {
            name: 'actionCriticalDisabled',
            description: 'For use as the background color for disabled destructive buttons, and as the background color for error toast messages.',
            light: {
                lightness: 95,
                saturation: 0
            },
            dark: {
                lightness: 41
            },
            meta: {
                figmaName: 'Action Critical/Disabled'
            }
        },
        {
            name: 'actionCriticalHovered',
            description: 'For use as the background color for hovered destructive buttons, and as the background color for error toast messages.',
            light: {
                lightness: 41,
                saturation: utils_1.saturationAdjustmentFn(2.7)
            },
            dark: {
                lightness: 50
            },
            meta: {
                figmaName: 'Action Critical/Hovered'
            }
        },
        {
            name: 'actionCriticalPressed',
            description: 'For use as the background color for pressed destructive buttons, and as the background color for error toast messages.',
            light: {
                lightness: 35,
                saturation: utils_1.saturationAdjustmentFn(2.7)
            },
            dark: {
                lightness: 55
            },
            meta: {
                figmaName: 'Action Critical/Pressed'
            }
        },
        {
            name: 'actionCriticalDepressed',
            description: 'For use as the background color for depressed destructive buttons, and as the background color for error toast messages.',
            light: {
                lightness: 22,
                saturation: utils_1.saturationAdjustmentFn(2.7)
            },
            dark: {
                lightness: 60
            },
            meta: {
                figmaName: 'Action Critical/Depressed'
            }
        },
        {
            name: 'iconOnCritical',
            description: 'For use as a fill color for icons on critical actions.',
            light: {
                lightness: 100
            },
            dark: {
                lightness: 98
            },
            meta: {
                figmaName: 'Icon On/Critical'
            }
        },
        {
            name: 'textOnCritical',
            description: 'For use as a text color on critical actions.',
            light: {
                lightness: 100
            },
            dark: {
                lightness: 100
            },
            meta: {
                figmaName: 'Text On/Critical'
            }
        },
        {
            name: 'interactiveCritical',
            description: 'For use as the text color for destructive interactive elements: links, plain buttons, error state of selected checkboxes and radio buttons, as well as a text color on destructive action list items. Not for use on critical banners and badges.',
            light: {
                lightness: 47.5
            },
            dark: {
                lightness: 65
            },
            meta: {
                figmaName: 'Interactive/Critical'
            }
        },
        {
            name: 'interactiveCriticalDisabled',
            description: 'For use as a text color in disabled destructive plain buttons, as well as a text color on destructive action list items. Not for use on critical banners and badges.',
            light: {
                lightness: 72
            },
            dark: {
                lightness: 78
            },
            meta: {
                figmaName: 'Interactive/Critical Disabled'
            }
        },
        {
            name: 'interactiveCriticalHovered',
            description: 'For use as a text color in hovered destructive plain buttons, as well as a text color on destructive action list items. Not for use on critical banners and badges.',
            light: {
                lightness: 45
            },
            dark: {
                lightness: 70
            },
            meta: {
                figmaName: 'Interactive/Critical Hovered'
            }
        },
        {
            name: 'interactiveCriticalPressed',
            description: 'For use as a text color in pressed destructive plain buttons, as well as a text color on destructive action list items. Not for use on critical banners and badges.',
            light: {
                lightness: 21
            },
            dark: {
                lightness: 75
            },
            meta: {
                figmaName: 'Interactive/Critical Pressed'
            }
        }, 
    ],
    warning: [
        {
            name: 'borderWarning',
            description: 'For use as a border on warning components such as...',
            light: {
                lightness: 60
            },
            dark: {
                lightness: 50
            },
            meta: {
                figmaName: 'Border Warning/Default'
            }
        },
        {
            name: 'borderWarningSubdued',
            description: 'For use as a border on warning components such as banners.',
            light: {
                lightness: 77,
                saturation: utils_1.saturationAdjustmentFn(-40)
            },
            dark: {
                lightness: 50
            },
            meta: {
                figmaName: 'Border Warning/Subdued'
            }
        },
        {
            name: 'iconWarning',
            description: 'For use as an icon fill color on top of warning elements.',
            light: {
                lightness: 60
            },
            dark: {
                lightness: 34
            },
            meta: {
                figmaName: 'Icon/Warning'
            }
        },
        {
            name: 'surfaceWarning',
            description: 'For use as a surface color on warning elements including badges.',
            light: {
                lightness: 88
            },
            dark: {
                lightness: 50
            },
            meta: {
                figmaName: 'Surface Warning/Default',
                figmaDescription: 'Use for badges'
            }
        },
        {
            name: 'surfaceWarningSubdued',
            description: 'For use as a subdued surface color on warning elements including banners.',
            light: {
                lightness: 97
            },
            dark: {
                lightness: 26,
                saturation: 71
            },
            meta: {
                figmaName: 'Surface Warning/Subdued',
                figmaDescription: 'Used for banners'
            }
        },
        {
            name: 'surfaceWarningSubduedHovered',
            description: 'For use as a subdued surface color on warning elements including banners.',
            light: {
                lightness: 96
            },
            dark: {
                lightness: 28,
                saturation: 71
            },
            meta: {
                figmaName: 'Surface Warning/Subdued Hovered',
                figmaDescription: 'Used for banners'
            }
        },
        {
            name: 'surfaceWarningSubduedPressed',
            description: 'For use as a subdued surface color on warning elements including banners.',
            light: {
                lightness: 94
            },
            dark: {
                lightness: 30,
                saturation: 71
            },
            meta: {
                figmaName: 'Surface Warning/Subdued Pressed',
                figmaDescription: 'Used for banners'
            }
        },
        {
            name: 'textWarning',
            description: 'For use as a text color in inert critical elements such as exception list. Not for use as a text color on banners and badges.',
            light: {
                lightness: 47.4
            },
            dark: {
                lightness: 64.9
            },
            meta: {
                figmaName: 'Text/Warning'
            }
        }, 
    ],
    highlight: [
        {
            name: 'borderHighlight',
            description: 'For use as a border on informational components such as...',
            light: {
                lightness: 60
            },
            dark: {
                lightness: 60
            },
            meta: {
                figmaName: 'Border Highlight/Default'
            }
        },
        {
            name: 'borderHighlightSubdued',
            description: 'For use as a border on informational components such as banners.',
            light: {
                lightness: 77,
                saturation: utils_1.saturationAdjustmentFn(-40)
            },
            dark: {
                lightness: 60
            },
            meta: {
                figmaName: 'Border Highlight/Subdued'
            }
        },
        {
            name: 'iconHighlight',
            description: 'For use as an icon fill color on top of informational elements.',
            light: {
                lightness: 60,
                saturation: utils_1.saturationAdjustmentFn(19.6)
            },
            dark: {
                lightness: 42
            },
            meta: {
                figmaName: 'Icon/Highlight'
            }
        },
        {
            name: 'surfaceHighlight',
            description: 'For use as a surface color on information elements including badges.',
            light: {
                lightness: 88,
                saturation: utils_1.saturationAdjustmentFn(-20.4)
            },
            dark: {
                lightness: 40,
                saturation: 100
            },
            meta: {
                figmaName: 'Surface Highlight/Default'
            }
        },
        {
            name: 'surfaceHighlightSubdued',
            description: 'For use as a surface color on information elements including banners.',
            light: {
                lightness: 97,
                saturation: utils_1.saturationAdjustmentFn(-20.4)
            },
            dark: {
                lightness: 20
            },
            meta: {
                figmaName: 'Surface Highlight/Subdued'
            }
        },
        {
            name: 'surfaceHighlightSubduedHovered',
            description: 'For use as a surface color on information elements including banners.',
            light: {
                lightness: 96,
                saturation: utils_1.saturationAdjustmentFn(-20.4)
            },
            dark: {
                lightness: 22
            },
            meta: {
                figmaName: 'Surface Highlight/Subdued Hovered'
            }
        },
        {
            name: 'surfaceHighlightSubduedPressed',
            description: 'For use as a surface color on information elements including banners.',
            light: {
                lightness: 94,
                saturation: utils_1.saturationAdjustmentFn(-20.4)
            },
            dark: {
                lightness: 25
            },
            meta: {
                figmaName: 'Surface Highlight/Subdued Pressed'
            }
        },
        {
            name: 'textHighlight',
            description: 'For use as a text color in inert informational elements. Not for use as a text color on banners and badges.',
            light: {
                lightness: 48
            },
            dark: {
                lightness: 90
            },
            meta: {
                figmaName: 'Text/Highlight'
            }
        }, 
    ],
    success: [
        {
            name: 'borderSuccess',
            description: 'For use as a border on success components such as text inputs.',
            light: {
                lightness: 60
            },
            dark: {
                lightness: 50
            },
            meta: {
                figmaName: 'Border Success/Default'
            }
        },
        {
            name: 'borderSuccessSubdued',
            description: 'For use as a border on success components such as banners.',
            light: {
                lightness: 77,
                saturation: utils_1.saturationAdjustmentFn(-60)
            },
            dark: {
                lightness: 50
            },
            meta: {
                figmaName: 'Border Success/Subdued'
            }
        },
        {
            name: 'iconSuccess',
            description: 'For use as an icon fill color on top of success elements.',
            light: {
                lightness: 47
            },
            dark: {
                lightness: 35
            },
            meta: {
                figmaName: 'Icon/Success'
            }
        },
        {
            name: 'surfaceSuccess',
            description: 'For use as a surface color on success elements including badges.',
            light: {
                lightness: 88,
                saturation: utils_1.saturationAdjustmentFn(-60)
            },
            dark: {
                lightness: 35
            },
            meta: {
                figmaName: 'Surface Success/Default'
            }
        },
        {
            name: 'surfaceSuccessSubdued',
            description: 'For use as a surface color on information elements including banners.',
            light: {
                lightness: 97,
                saturation: utils_1.saturationAdjustmentFn(-80)
            },
            dark: {
                lightness: 20,
                saturation: utils_1.saturationAdjustmentFn(-40)
            },
            meta: {
                figmaName: 'Surface Success/Subdued'
            }
        },
        {
            name: 'surfaceSuccessSubduedHovered',
            description: 'For use as a surface color on information elements including banners.',
            light: {
                lightness: 96,
                saturation: utils_1.saturationAdjustmentFn(-80)
            },
            dark: {
                lightness: 22,
                saturation: utils_1.saturationAdjustmentFn(-40)
            },
            meta: {
                figmaName: 'Surface Success/Subdued Hovered'
            }
        },
        {
            name: 'surfaceSuccessSubduedPressed',
            description: 'For use as a surface color on information elements including banners.',
            light: {
                lightness: 94,
                saturation: utils_1.saturationAdjustmentFn(-80)
            },
            dark: {
                lightness: 25,
                saturation: utils_1.saturationAdjustmentFn(-40)
            },
            meta: {
                figmaName: 'Surface Success/Subdued Pressed'
            }
        },
        {
            name: 'textSuccess',
            description: 'For use as a text color in inert success elements. Not for use as a text color on banners and badges.',
            light: {
                lightness: 47.3
            },
            dark: {
                lightness: 65,
                saturation: utils_1.saturationAdjustmentFn(-30)
            },
            meta: {
                figmaName: 'Text/Success'
            }
        }, 
    ],
    decorative: [
        {
            name: 'decorativeOneIcon',
            description: 'For use as a decorative icon color that is applied on a decorative surface.',
            light: {
                hue: utils_1.hueRotationFn(-4.5),
                lightness: 40
            },
            dark: {
                hue: utils_1.hueRotationFn(-4.5),
                lightness: 80
            },
            meta: {
                figmaName: 'Decorative/Icon/One'
            }
        },
        {
            name: 'decorativeOneSurface',
            description: 'For use as a decorative surface color.',
            light: {
                lightness: 84
            },
            dark: {
                hue: utils_1.hueRotationFn(-2.5),
                saturation: utils_1.saturationAdjustmentFn(-2),
                lightness: 46
            },
            meta: {
                figmaName: 'Decorative/Surface/One'
            }
        },
        {
            name: 'decorativeOneText',
            description: 'For use as a decorative text color that is applied on a decorative surface.',
            light: {
                hue: utils_1.hueRotationFn(-4.5),
                lightness: 18
            },
            dark: {
                lightness: 100
            },
            meta: {
                figmaName: 'Decorative/Text/One'
            }
        },
        {
            name: 'decorativeTwoIcon',
            description: 'For use as a decorative icon color that is applied on a decorative surface.',
            light: {
                hue: utils_1.hueRotationFn(305.5),
                saturation: utils_1.saturationAdjustmentFn(-20),
                lightness: 40
            },
            dark: {
                hue: utils_1.hueRotationFn(305.5),
                saturation: utils_1.saturationAdjustmentFn(-20),
                lightness: 80
            },
            meta: {
                figmaName: 'Decorative/Icon/Two'
            }
        },
        {
            name: 'decorativeTwoSurface',
            description: 'For use as a decorative surface color.',
            light: {
                hue: utils_1.hueRotationFn(-26.5),
                lightness: 84
            },
            dark: {
                hue: utils_1.hueRotationFn(-32.5),
                saturation: utils_1.saturationAdjustmentFn(-4),
                lightness: 52
            },
            meta: {
                figmaName: 'Decorative/Surface/Two'
            }
        },
        {
            name: 'decorativeTwoText',
            description: 'For use as a decorative text color that is applied on a decorative surface.',
            light: {
                hue: utils_1.hueRotationFn(305.5),
                saturation: utils_1.saturationAdjustmentFn(-20),
                lightness: 14
            },
            dark: {
                lightness: 100
            },
            meta: {
                figmaName: 'Decorative/Text/Two'
            }
        },
        {
            name: 'decorativeThreeIcon',
            description: 'For use as a decorative icon color that is applied on a decorative surface.',
            light: {
                hue: utils_1.hueRotationFn(87.5),
                lightness: 40
            },
            dark: {
                hue: utils_1.hueRotationFn(87.5),
                lightness: 80
            },
            meta: {
                figmaName: 'Decorative/Icon/Three'
            }
        },
        {
            name: 'decorativeThreeSurface',
            description: 'For use as a decorative surface color.',
            light: {
                hue: utils_1.hueRotationFn(87.5),
                saturation: utils_1.saturationAdjustmentFn(-46),
                lightness: 85
            },
            dark: {
                hue: utils_1.hueRotationFn(97.5),
                lightness: 46
            },
            meta: {
                figmaName: 'Decorative/Surface/Three'
            }
        },
        {
            name: 'decorativeThreeText',
            description: 'For use as a decorative text color that is applied on a decorative surface.',
            light: {
                hue: utils_1.hueRotationFn(87.5),
                lightness: 16
            },
            dark: {
                lightness: 100
            },
            meta: {
                figmaName: 'Decorative/Text/Three'
            }
        },
        {
            name: 'decorativeFourIcon',
            description: 'For use as a decorative icon color that is applied on a decorative surface.',
            light: {
                hue: utils_1.hueRotationFn(133.5),
                lightness: 40
            },
            dark: {
                hue: utils_1.hueRotationFn(133.5),
                lightness: 80
            },
            meta: {
                figmaName: 'Decorative/Icon/Four'
            }
        },
        {
            name: 'decorativeFourSurface',
            description: 'For use as a decorative surface color.',
            light: {
                hue: utils_1.hueRotationFn(123.5),
                saturation: utils_1.saturationAdjustmentFn(-44),
                lightness: 84
            },
            dark: {
                hue: utils_1.hueRotationFn(131.5),
                saturation: utils_1.saturationAdjustmentFn(-5),
                lightness: 47
            },
            meta: {
                figmaName: 'Decorative/Surface/Four'
            }
        },
        {
            name: 'decorativeFourText',
            description: 'For use as a decorative text color that is applied on a decorative surface.',
            light: {
                hue: utils_1.hueRotationFn(133.5),
                lightness: 16
            },
            dark: {
                lightness: 100
            },
            meta: {
                figmaName: 'Decorative/Text/Four'
            }
        },
        {
            name: 'decorativeFiveIcon',
            description: 'For use as a decorative icon color that is applied on a decorative surface.',
            light: {
                hue: utils_1.hueRotationFn(306.5),
                saturation: utils_1.saturationAdjustmentFn(-22),
                lightness: 40
            },
            dark: {
                hue: utils_1.hueRotationFn(306.5),
                saturation: utils_1.saturationAdjustmentFn(-22),
                lightness: 80
            },
            meta: {
                figmaName: 'Decorative/Icon/Five'
            }
        },
        {
            name: 'decorativeFiveSurface',
            description: 'For use as a decorative surface color.',
            light: {
                hue: utils_1.hueRotationFn(-53.4),
                saturation: utils_1.saturationAdjustmentFn(-5.4),
                lightness: 85.6
            },
            dark: {
                hue: utils_1.hueRotationFn(306.5),
                saturation: utils_1.saturationAdjustmentFn(-23),
                lightness: 45
            },
            meta: {
                figmaName: 'Decorative/Surface/Five'
            }
        },
        {
            name: 'decorativeFiveText',
            description: 'For use as a decorative text color that is applied on a decorative surface.',
            light: {
                hue: utils_1.hueRotationFn(306.5),
                saturation: utils_1.saturationAdjustmentFn(-22),
                lightness: 16
            },
            dark: {
                lightness: 100
            },
            meta: {
                figmaName: 'Decorative/Text/Five'
            }
        }, 
    ]
};

},{"../utils":"cUWF6"}],"cUWF6":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.mergeConfigs = exports.saturationAdjustmentFn = exports.hueRotationFn = void 0;
function hueRotationFn(rotation) {
    return (hue)=>(360 + hue + rotation) % 360
    ;
}
exports.hueRotationFn = hueRotationFn;
function saturationAdjustmentFn(adjustment) {
    return (saturation)=>Math.min(Math.max(saturation + adjustment, 0), 100)
    ;
}
exports.saturationAdjustmentFn = saturationAdjustmentFn;
function mergeConfigs(base, extended) {
    return Object.entries(base).reduce((accumulator, [role, variants])=>{
        const extendedVariants = extended[role];
        const mergedVariants = [
            ...variants
        ];
        if (extendedVariants != null) extendedVariants.forEach((variant)=>{
            const { name  } = variant;
            const indexToReplace = mergedVariants.findIndex((baseVariant)=>baseVariant.name === name
            );
            if (indexToReplace === -1) mergedVariants.push(variant);
            else mergedVariants.splice(indexToReplace, 1, variant);
        });
        return Object.assign(Object.assign({
        }, accumulator), {
            [role]: mergedVariants
        });
    }, {
    });
}
exports.mergeConfigs = mergeConfigs;

},{}],"k2L5m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tokens", ()=>Tokens
);
const Tokens = {
    // Border Radiuses
    borderRadiusSlim: rem('2px'),
    borderRadiusBase: rem('4px'),
    borderRadiusWide: rem('8px'),
    borderRadiusFull: '50%',
    // Shadows
    cardShadow: '0px 0px 5px var(--p-shadow-from-ambient-light), 0px 1px 2px var(--p-shadow-from-direct-light)',
    popoverShadow: '-1px 0px 20px var(--p-shadow-from-ambient-light), 0px 1px 5px var(--p-shadow-from-direct-light)',
    modalShadow: '0px 26px 80px var(--p-shadow-from-dim-light), 0px 0px 1px var(--p-shadow-from-dim-light)',
    topBarShadow: '0 2px 2px -1px var(--p-shadow-from-direct-light)',
    buttonDropShadow: '0 1px 0 rgba(0, 0, 0, 0.05)',
    buttonInnerShadow: 'inset 0 -1px 0 rgba(0, 0, 0, 0.2)',
    buttonPressedInnerShadow: 'inset 0 1px 0 rgba(0, 0, 0, 0.15)',
    // Overrides
    overrideLoadingZIndex: '514',
    choiceSize: rem('20px'),
    iconSize: rem('10px'),
    choiceMargin: rem('1px'),
    controlBorderWidth: rem('2px'),
    bannerBorderDefault: buildBannerBorder('--p-border-neutral-subdued'),
    bannerBorderSuccess: buildBannerBorder('--p-border-success-subdued'),
    bannerBorderHighlight: buildBannerBorder('--p-border-highlight-subdued'),
    bannerBorderWarning: buildBannerBorder('--p-border-warning-subdued'),
    bannerBorderCritical: buildBannerBorder('--p-border-critical-subdued'),
    thinBorderSubdued: `${rem('1px')} solid var(--p-border-subdued)`,
    textFieldSpinnerOffset: rem('2px'),
    textFieldFocusRingOffset: rem('-4px'),
    textFieldFocusRingBorderRadius: rem('7px'),
    buttonGroupItemSpacing: rem('-1px'),
    duration100: '100ms',
    duration150: '150ms',
    easeIn: 'cubic-bezier(0.5, 0.1, 1, 1)',
    ease: 'cubic-bezier(0.4, 0.22, 0.28, 1)',
    rangeSliderThumbSizeBase: rem('16px'),
    rangeSliderThumbSizeActive: rem('24px')
};
function rem(px) {
    const baseFontSize = 10;
    return `${parseInt(px, 10) / baseFontSize}rem`;
}
function buildBannerBorder(cssVar) {
    return `inset 0 ${rem('1px')} 0 0 var(${cssVar}), inset 0 0 0 ${rem('1px')} var(${cssVar})`;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eWrNz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AppProvider", ()=>AppProvider
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _focusVisible = require("focus-visible/dist/focus-visible");
var _appProviderScssJs = require("./AppProvider.scss.js");
var _stickyManagerJs = require("../../utilities/sticky-manager/sticky-manager.js");
var _scrollLockManagerJs = require("../../utilities/scroll-lock-manager/scroll-lock-manager.js");
var _uniqueIdFactoryJs = require("../../utilities/unique-id/unique-id-factory.js");
var _i18NJs = require("../../utilities/i18n/I18n.js");
var _contextJs = require("../../utilities/features/context.js");
var _contextJs1 = require("../../utilities/i18n/context.js");
var _contextJs2 = require("../../utilities/scroll-lock-manager/context.js");
var _contextJs3 = require("../../utilities/sticky-manager/context.js");
var _contextJs4 = require("../../utilities/unique-id/context.js");
var _contextJs5 = require("../../utilities/link/context.js");
var _themeProviderJs = require("../ThemeProvider/ThemeProvider.js");
var _mediaQueryProviderJs = require("../MediaQueryProvider/MediaQueryProvider.js");
var _portalsManagerJs = require("../PortalsManager/PortalsManager.js");
var _focusManagerJs = require("../FocusManager/FocusManager.js");
class AppProvider extends _react.Component {
    constructor(props){
        super(props);
        this.stickyManager = void 0;
        this.scrollLockManager = void 0;
        this.uniqueIdFactory = void 0;
        this.stickyManager = new _stickyManagerJs.StickyManager();
        this.scrollLockManager = new _scrollLockManagerJs.ScrollLockManager();
        this.uniqueIdFactory = new _uniqueIdFactoryJs.UniqueIdFactory(_uniqueIdFactoryJs.globalIdGeneratorFactory);
        const { i18n , linkComponent  } = this.props; // eslint-disable-next-line react/state-in-constructor
        this.state = {
            link: linkComponent,
            intl: new _i18NJs.I18n(i18n)
        };
    }
    componentDidMount() {
        if (document != null) this.stickyManager.setContainer(document);
    }
    componentDidUpdate({ i18n: prevI18n , linkComponent: prevLinkComponent  }) {
        const { i18n , linkComponent  } = this.props;
        if (i18n === prevI18n && linkComponent === prevLinkComponent) return;
         // eslint-disable-next-line react/no-did-update-set-state
        this.setState({
            link: linkComponent,
            intl: new _i18NJs.I18n(i18n)
        });
    }
    render() {
        const { theme ={
        } , children  } = this.props;
        const { intl , link  } = this.state;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.FeaturesContext.Provider, {
            value: this.props.features || {
            }
        }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs1.I18nContext.Provider, {
            value: intl
        }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs2.ScrollLockManagerContext.Provider, {
            value: this.scrollLockManager
        }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs3.StickyManagerContext.Provider, {
            value: this.stickyManager
        }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs4.UniqueIdFactoryContext.Provider, {
            value: this.uniqueIdFactory
        }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs5.LinkContext.Provider, {
            value: link
        }, /*#__PURE__*/ _reactDefault.default.createElement(_themeProviderJs.ThemeProvider, {
            theme: theme
        }, /*#__PURE__*/ _reactDefault.default.createElement(_mediaQueryProviderJs.MediaQueryProvider, null, /*#__PURE__*/ _reactDefault.default.createElement(_portalsManagerJs.PortalsManager, null, /*#__PURE__*/ _reactDefault.default.createElement(_focusManagerJs.FocusManager, null, children)))))))))));
    }
}

},{"react":"6fep5","focus-visible/dist/focus-visible":"dHCKn","./AppProvider.scss.js":"dBUvP","../../utilities/sticky-manager/sticky-manager.js":"97nir","../../utilities/scroll-lock-manager/scroll-lock-manager.js":"lW8Vw","../../utilities/unique-id/unique-id-factory.js":"cEi6z","../../utilities/i18n/I18n.js":"eGlQG","../../utilities/features/context.js":"2vGa7","../../utilities/i18n/context.js":"jLNtz","../../utilities/scroll-lock-manager/context.js":"2vyo0","../../utilities/sticky-manager/context.js":"2p59M","../../utilities/unique-id/context.js":"5eXfO","../../utilities/link/context.js":"9F4RK","../ThemeProvider/ThemeProvider.js":"10qny","../MediaQueryProvider/MediaQueryProvider.js":"kLsAr","../PortalsManager/PortalsManager.js":"kxT8r","../FocusManager/FocusManager.js":"dn7ah","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dHCKn":[function(require,module,exports) {
(function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory() : typeof define === 'function' && define.amd ? define(factory) : factory();
})(this, function() {
    'use strict';
    /**
   * Applies the :focus-visible polyfill at the given scope.
   * A scope in this case is either the top-level Document or a Shadow Root.
   *
   * @param {(Document|ShadowRoot)} scope
   * @see https://github.com/WICG/focus-visible
   */ function applyFocusVisiblePolyfill(scope) {
        var hadKeyboardEvent = true;
        var hadFocusVisibleRecently = false;
        var hadFocusVisibleRecentlyTimeout = null;
        var inputTypesAllowlist = {
            text: true,
            search: true,
            url: true,
            tel: true,
            email: true,
            password: true,
            number: true,
            date: true,
            month: true,
            week: true,
            time: true,
            datetime: true,
            'datetime-local': true
        };
        /**
     * Helper function for legacy browsers and iframes which sometimes focus
     * elements like document, body, and non-interactive SVG.
     * @param {Element} el
     */ function isValidFocusTarget(el) {
            if (el && el !== document && el.nodeName !== 'HTML' && el.nodeName !== 'BODY' && 'classList' in el && 'contains' in el.classList) return true;
            return false;
        }
        /**
     * Computes whether the given element should automatically trigger the
     * `focus-visible` class being added, i.e. whether it should always match
     * `:focus-visible` when focused.
     * @param {Element} el
     * @return {boolean}
     */ function focusTriggersKeyboardModality(el) {
            var type = el.type;
            var tagName = el.tagName;
            if (tagName === 'INPUT' && inputTypesAllowlist[type] && !el.readOnly) return true;
            if (tagName === 'TEXTAREA' && !el.readOnly) return true;
            if (el.isContentEditable) return true;
            return false;
        }
        /**
     * Add the `focus-visible` class to the given element if it was not added by
     * the author.
     * @param {Element} el
     */ function addFocusVisibleClass(el) {
            if (el.classList.contains('focus-visible')) return;
            el.classList.add('focus-visible');
            el.setAttribute('data-focus-visible-added', '');
        }
        /**
     * Remove the `focus-visible` class from the given element if it was not
     * originally added by the author.
     * @param {Element} el
     */ function removeFocusVisibleClass(el) {
            if (!el.hasAttribute('data-focus-visible-added')) return;
            el.classList.remove('focus-visible');
            el.removeAttribute('data-focus-visible-added');
        }
        /**
     * If the most recent user interaction was via the keyboard;
     * and the key press did not include a meta, alt/option, or control key;
     * then the modality is keyboard. Otherwise, the modality is not keyboard.
     * Apply `focus-visible` to any current active element and keep track
     * of our keyboard modality state with `hadKeyboardEvent`.
     * @param {KeyboardEvent} e
     */ function onKeyDown(e) {
            if (e.metaKey || e.altKey || e.ctrlKey) return;
            if (isValidFocusTarget(scope.activeElement)) addFocusVisibleClass(scope.activeElement);
            hadKeyboardEvent = true;
        }
        /**
     * If at any point a user clicks with a pointing device, ensure that we change
     * the modality away from keyboard.
     * This avoids the situation where a user presses a key on an already focused
     * element, and then clicks on a different element, focusing it with a
     * pointing device, while we still think we're in keyboard modality.
     * @param {Event} e
     */ function onPointerDown(e) {
            hadKeyboardEvent = false;
        }
        /**
     * On `focus`, add the `focus-visible` class to the target if:
     * - the target received focus as a result of keyboard navigation, or
     * - the event target is an element that will likely require interaction
     *   via the keyboard (e.g. a text box)
     * @param {Event} e
     */ function onFocus(e) {
            // Prevent IE from focusing the document or HTML element.
            if (!isValidFocusTarget(e.target)) return;
            if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) addFocusVisibleClass(e.target);
        }
        /**
     * On `blur`, remove the `focus-visible` class from the target.
     * @param {Event} e
     */ function onBlur(e) {
            if (!isValidFocusTarget(e.target)) return;
            if (e.target.classList.contains('focus-visible') || e.target.hasAttribute('data-focus-visible-added')) {
                // To detect a tab/window switch, we look for a blur event followed
                // rapidly by a visibility change.
                // If we don't see a visibility change within 100ms, it's probably a
                // regular focus change.
                hadFocusVisibleRecently = true;
                window.clearTimeout(hadFocusVisibleRecentlyTimeout);
                hadFocusVisibleRecentlyTimeout = window.setTimeout(function() {
                    hadFocusVisibleRecently = false;
                }, 100);
                removeFocusVisibleClass(e.target);
            }
        }
        /**
     * If the user changes tabs, keep track of whether or not the previously
     * focused element had .focus-visible.
     * @param {Event} e
     */ function onVisibilityChange(e) {
            if (document.visibilityState === 'hidden') {
                // If the tab becomes active again, the browser will handle calling focus
                // on the element (Safari actually calls it twice).
                // If this tab change caused a blur on an element with focus-visible,
                // re-apply the class when the user switches back to the tab.
                if (hadFocusVisibleRecently) hadKeyboardEvent = true;
                addInitialPointerMoveListeners();
            }
        }
        /**
     * Add a group of listeners to detect usage of any pointing devices.
     * These listeners will be added when the polyfill first loads, and anytime
     * the window is blurred, so that they are active when the window regains
     * focus.
     */ function addInitialPointerMoveListeners() {
            document.addEventListener('mousemove', onInitialPointerMove);
            document.addEventListener('mousedown', onInitialPointerMove);
            document.addEventListener('mouseup', onInitialPointerMove);
            document.addEventListener('pointermove', onInitialPointerMove);
            document.addEventListener('pointerdown', onInitialPointerMove);
            document.addEventListener('pointerup', onInitialPointerMove);
            document.addEventListener('touchmove', onInitialPointerMove);
            document.addEventListener('touchstart', onInitialPointerMove);
            document.addEventListener('touchend', onInitialPointerMove);
        }
        function removeInitialPointerMoveListeners() {
            document.removeEventListener('mousemove', onInitialPointerMove);
            document.removeEventListener('mousedown', onInitialPointerMove);
            document.removeEventListener('mouseup', onInitialPointerMove);
            document.removeEventListener('pointermove', onInitialPointerMove);
            document.removeEventListener('pointerdown', onInitialPointerMove);
            document.removeEventListener('pointerup', onInitialPointerMove);
            document.removeEventListener('touchmove', onInitialPointerMove);
            document.removeEventListener('touchstart', onInitialPointerMove);
            document.removeEventListener('touchend', onInitialPointerMove);
        }
        /**
     * When the polfyill first loads, assume the user is in keyboard modality.
     * If any event is received from a pointing device (e.g. mouse, pointer,
     * touch), turn off keyboard modality.
     * This accounts for situations where focus enters the page from the URL bar.
     * @param {Event} e
     */ function onInitialPointerMove(e) {
            // Work around a Safari quirk that fires a mousemove on <html> whenever the
            // window blurs, even if you're tabbing out of the page. ¯\_(ツ)_/¯
            if (e.target.nodeName && e.target.nodeName.toLowerCase() === 'html') return;
            hadKeyboardEvent = false;
            removeInitialPointerMoveListeners();
        }
        // For some kinds of state, we are interested in changes at the global scope
        // only. For example, global pointer input, global key presses and global
        // visibility change should affect the state at every scope:
        document.addEventListener('keydown', onKeyDown, true);
        document.addEventListener('mousedown', onPointerDown, true);
        document.addEventListener('pointerdown', onPointerDown, true);
        document.addEventListener('touchstart', onPointerDown, true);
        document.addEventListener('visibilitychange', onVisibilityChange, true);
        addInitialPointerMoveListeners();
        // For focus and blur, we specifically care about state changes in the local
        // scope. This is because focus / blur events that originate from within a
        // shadow root are not re-dispatched from the host element if it was already
        // the active element in its own scope:
        scope.addEventListener('focus', onFocus, true);
        scope.addEventListener('blur', onBlur, true);
        // We detect that a node is a ShadowRoot by ensuring that it is a
        // DocumentFragment and also has a host property. This check covers native
        // implementation and polyfill implementation transparently. If we only cared
        // about the native implementation, we could just check if the scope was
        // an instance of a ShadowRoot.
        if (scope.nodeType === Node.DOCUMENT_FRAGMENT_NODE && scope.host) // Since a ShadowRoot is a special kind of DocumentFragment, it does not
        // have a root element to add a class to. So, we add this attribute to the
        // host element instead:
        scope.host.setAttribute('data-js-focus-visible', '');
        else if (scope.nodeType === Node.DOCUMENT_NODE) {
            document.documentElement.classList.add('js-focus-visible');
            document.documentElement.setAttribute('data-js-focus-visible', '');
        }
    }
    // It is important to wrap all references to global window and document in
    // these checks to support server-side rendering use cases
    // @see https://github.com/WICG/focus-visible/issues/199
    if (typeof window !== 'undefined' && typeof document !== 'undefined') {
        // Make the polyfill helper globally available. This can be used as a signal
        // to interested libraries that wish to coordinate with the polyfill for e.g.,
        // applying the polyfill to a shadow root:
        window.applyFocusVisiblePolyfill = applyFocusVisiblePolyfill;
        // Notify interested libraries of the polyfill's presence, in case the
        // polyfill was loaded lazily:
        var event;
        try {
            event = new CustomEvent('focus-visible-polyfill-ready');
        } catch (error) {
            // IE11 does not support using CustomEvent as a constructor directly:
            event = document.createEvent('CustomEvent');
            event.initCustomEvent('focus-visible-polyfill-ready', false, false, {
            });
        }
        window.dispatchEvent(event);
    }
    if (typeof document !== 'undefined') // Apply the polyfill to the global document, so that no JavaScript
    // coordination is required to use the polyfill in the top-level document:
    applyFocusVisiblePolyfill(document);
});

},{}],"dBUvP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>AppProvider
);
var AppProvider = {
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"97nir":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StickyManager", ()=>StickyManager
);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _polarisTokens = require("@shopify/polaris-tokens");
var _sharedJs = require("../../components/shared.js");
var _breakpointsJs = require("../breakpoints.js");
var _geometryJs = require("../geometry.js");
const SIXTY_FPS = 1000 / 60;
class StickyManager {
    constructor(container2){
        this.stickyItems = [];
        this.stuckItems = [];
        this.container = null;
        this.topBarOffset = 0;
        this.handleResize = _debounceDefault.default(()=>{
            this.manageStickyItems();
        }, SIXTY_FPS, {
            leading: true,
            trailing: true,
            maxWait: SIXTY_FPS
        });
        this.handleScroll = _debounceDefault.default(()=>{
            this.manageStickyItems();
        }, SIXTY_FPS, {
            leading: true,
            trailing: true,
            maxWait: SIXTY_FPS
        });
        if (container2) this.setContainer(container2);
    }
    registerStickyItem(stickyItem1) {
        this.stickyItems.push(stickyItem1);
    }
    unregisterStickyItem(nodeToRemove) {
        const nodeIndex = this.stickyItems.findIndex(({ stickyNode  })=>nodeToRemove === stickyNode
        );
        this.stickyItems.splice(nodeIndex, 1);
    }
    setContainer(el) {
        this.container = el;
        if (isDocument(el)) this.setTopBarOffset(el);
        this.container.addEventListener('scroll', this.handleScroll);
        window.addEventListener('resize', this.handleResize);
        this.manageStickyItems();
    }
    removeScrollListener() {
        if (this.container) {
            this.container.removeEventListener('scroll', this.handleScroll);
            window.removeEventListener('resize', this.handleResize);
        }
    }
    manageStickyItems() {
        if (this.stickyItems.length <= 0) return;
        const scrollTop = this.container ? scrollTopFor(this.container) : 0;
        const containerTop = _geometryJs.getRectForNode(this.container).top + this.topBarOffset;
        this.stickyItems.forEach((stickyItem)=>{
            const { handlePositioning  } = stickyItem;
            const { sticky , top , left , width  } = this.evaluateStickyItem(stickyItem, scrollTop, containerTop);
            this.updateStuckItems(stickyItem, sticky);
            handlePositioning(sticky, top, left, width);
        });
    }
    evaluateStickyItem(stickyItem, scrollTop, containerTop) {
        const { stickyNode , placeHolderNode , boundingElement , offset , disableWhenStacked  } = stickyItem;
        if (disableWhenStacked && _breakpointsJs.stackedContent().matches) return {
            sticky: false,
            top: 0,
            left: 0,
            width: 'auto'
        };
        const stickyOffset = offset ? this.getOffset(stickyNode) + parseInt(_polarisTokens.spacingLoose, 10) : this.getOffset(stickyNode);
        const scrollPosition = scrollTop + stickyOffset;
        const placeHolderNodeCurrentTop = placeHolderNode.getBoundingClientRect().top - containerTop + scrollTop;
        const top = containerTop + stickyOffset;
        const width = placeHolderNode.getBoundingClientRect().width;
        const left = placeHolderNode.getBoundingClientRect().left;
        let sticky;
        if (boundingElement == null) sticky = scrollPosition >= placeHolderNodeCurrentTop;
        else {
            var _stickyNode$firstElem;
            const stickyItemHeight = stickyNode.getBoundingClientRect().height || ((_stickyNode$firstElem = stickyNode.firstElementChild) === null || _stickyNode$firstElem === void 0 ? void 0 : _stickyNode$firstElem.getBoundingClientRect().height) || 0;
            const stickyItemBottomPosition = boundingElement.getBoundingClientRect().bottom - stickyItemHeight + scrollTop - containerTop;
            sticky = scrollPosition >= placeHolderNodeCurrentTop && scrollPosition < stickyItemBottomPosition;
        }
        return {
            sticky,
            top,
            left,
            width
        };
    }
    updateStuckItems(item, sticky) {
        const { stickyNode  } = item;
        if (sticky && !this.isNodeStuck(stickyNode)) this.addStuckItem(item);
        else if (!sticky && this.isNodeStuck(stickyNode)) this.removeStuckItem(item);
    }
    addStuckItem(stickyItem2) {
        this.stuckItems.push(stickyItem2);
    }
    removeStuckItem(stickyItem3) {
        const { stickyNode: nodeToRemove  } = stickyItem3;
        const nodeIndex = this.stuckItems.findIndex(({ stickyNode  })=>nodeToRemove === stickyNode
        );
        this.stuckItems.splice(nodeIndex, 1);
    }
    getOffset(node2) {
        if (this.stuckItems.length === 0) return 0;
        let offset = 0;
        let count = 0;
        const stuckNodesLength = this.stuckItems.length;
        const nodeRect = _geometryJs.getRectForNode(node2);
        while(count < stuckNodesLength){
            const stuckNode = this.stuckItems[count].stickyNode;
            if (stuckNode !== node2) {
                const stuckNodeRect = _geometryJs.getRectForNode(stuckNode);
                if (!horizontallyOverlaps(nodeRect, stuckNodeRect)) offset += _geometryJs.getRectForNode(stuckNode).height;
            } else break;
            count++;
        }
        return offset;
    }
    isNodeStuck(node1) {
        const nodeFound = this.stuckItems.findIndex(({ stickyNode  })=>node1 === stickyNode
        );
        return nodeFound >= 0;
    }
    setTopBarOffset(container1) {
        const topbarElement = container1.querySelector(`:not(${_sharedJs.scrollable.selector}) ${_sharedJs.dataPolarisTopBar.selector}`);
        this.topBarOffset = topbarElement ? topbarElement.clientHeight : 0;
    }
}
function isDocument(node) {
    return node === document;
}
function scrollTopFor(container) {
    return isDocument(container) ? document.body.scrollTop || document.documentElement.scrollTop : container.scrollTop;
}
function horizontallyOverlaps(rect1, rect2) {
    const rect1Left = rect1.left;
    const rect1Right = rect1.left + rect1.width;
    const rect2Left = rect2.left;
    const rect2Right = rect2.left + rect2.width;
    return rect2Right < rect1Left || rect1Right < rect2Left;
}

},{"lodash/debounce":"a9ymG","@shopify/polaris-tokens":"lyXEP","../../components/shared.js":"jYa7v","../breakpoints.js":"5acRx","../geometry.js":"jJS9C","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"a9ymG":[function(require,module,exports) {
var isObject = require('./isObject'), now = require('./now'), toNumber = require('./toNumber');
/** Error message constants. */ var FUNC_ERROR_TEXT = 'Expected a function';
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeMax = Math.max, nativeMin = Math.min;
/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */ function debounce(func, wait, options) {
    var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
    if (typeof func != 'function') throw new TypeError(FUNC_ERROR_TEXT);
    wait = toNumber(wait) || 0;
    if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
    }
    function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
    }
    function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
    }
    function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
    }
    function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
    }
    function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) return trailingEdge(time);
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
    }
    function trailingEdge(time) {
        timerId = undefined;
        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) return invokeFunc(time);
        lastArgs = lastThis = undefined;
        return result;
    }
    function cancel() {
        if (timerId !== undefined) clearTimeout(timerId);
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
    }
    function flush() {
        return timerId === undefined ? result : trailingEdge(now());
    }
    function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
            if (timerId === undefined) return leadingEdge(lastCallTime);
            if (maxing) {
                // Handle invocations in a tight loop.
                clearTimeout(timerId);
                timerId = setTimeout(timerExpired, wait);
                return invokeFunc(lastCallTime);
            }
        }
        if (timerId === undefined) timerId = setTimeout(timerExpired, wait);
        return result;
    }
    debounced.cancel = cancel;
    debounced.flush = flush;
    return debounced;
}
module.exports = debounce;

},{"./isObject":"3uAyC","./now":"jmpER","./toNumber":"k3cMW"}],"3uAyC":[function(require,module,exports) {
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */ function isObject(value) {
    var type = typeof value;
    return value != null && (type == 'object' || type == 'function');
}
module.exports = isObject;

},{}],"jmpER":[function(require,module,exports) {
var root = require('./_root');
/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */ var now = function() {
    return root.Date.now();
};
module.exports = now;

},{"./_root":"ideFj"}],"ideFj":[function(require,module,exports) {
var freeGlobal = require('./_freeGlobal');
/** Detect free variable `self`. */ var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
/** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function('return this')();
module.exports = root;

},{"./_freeGlobal":"azLCA"}],"azLCA":[function(require,module,exports) {
var global = arguments[3];
/** Detect free variable `global` from Node.js. */ var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
module.exports = freeGlobal;

},{}],"k3cMW":[function(require,module,exports) {
var baseTrim = require('./_baseTrim'), isObject = require('./isObject'), isSymbol = require('./isSymbol');
/** Used as references for various `Number` constants. */ var NAN = 0 / 0;
/** Used to detect bad signed hexadecimal string values. */ var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
/** Used to detect binary string values. */ var reIsBinary = /^0b[01]+$/i;
/** Used to detect octal string values. */ var reIsOctal = /^0o[0-7]+$/i;
/** Built-in method references without a dependency on `root`. */ var freeParseInt = parseInt;
/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */ function toNumber(value) {
    if (typeof value == 'number') return value;
    if (isSymbol(value)) return NAN;
    if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? other + '' : other;
    }
    if (typeof value != 'string') return value === 0 ? value : +value;
    value = baseTrim(value);
    var isBinary = reIsBinary.test(value);
    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}
module.exports = toNumber;

},{"./_baseTrim":"jBM9g","./isObject":"3uAyC","./isSymbol":"9RBsP"}],"jBM9g":[function(require,module,exports) {
var trimmedEndIndex = require('./_trimmedEndIndex');
/** Used to match leading whitespace. */ var reTrimStart = /^\s+/;
/**
 * The base implementation of `_.trim`.
 *
 * @private
 * @param {string} string The string to trim.
 * @returns {string} Returns the trimmed string.
 */ function baseTrim(string) {
    return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '') : string;
}
module.exports = baseTrim;

},{"./_trimmedEndIndex":"1e8EL"}],"1e8EL":[function(require,module,exports) {
/** Used to match a single whitespace character. */ var reWhitespace = /\s/;
/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */ function trimmedEndIndex(string) {
    var index = string.length;
    while(index-- && reWhitespace.test(string.charAt(index)));
    return index;
}
module.exports = trimmedEndIndex;

},{}],"9RBsP":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'), isObjectLike = require('./isObjectLike');
/** `Object#toString` result references. */ var symbolTag = '[object Symbol]';
/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */ function isSymbol(value) {
    return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
}
module.exports = isSymbol;

},{"./_baseGetTag":"h1yAb","./isObjectLike":"9omfG"}],"h1yAb":[function(require,module,exports) {
var Symbol = require('./_Symbol'), getRawTag = require('./_getRawTag'), objectToString = require('./_objectToString');
/** `Object#toString` result references. */ var nullTag = '[object Null]', undefinedTag = '[object Undefined]';
/** Built-in value references. */ var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */ function baseGetTag(value) {
    if (value == null) return value === undefined ? undefinedTag : nullTag;
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}
module.exports = baseGetTag;

},{"./_Symbol":"73arO","./_getRawTag":"kGiKz","./_objectToString":"6SMQt"}],"73arO":[function(require,module,exports) {
var root = require('./_root');
/** Built-in value references. */ var Symbol = root.Symbol;
module.exports = Symbol;

},{"./_root":"ideFj"}],"kGiKz":[function(require,module,exports) {
var Symbol = require('./_Symbol');
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */ var nativeObjectToString = objectProto.toString;
/** Built-in value references. */ var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */ function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
    try {
        value[symToStringTag] = undefined;
        var unmasked = true;
    } catch (e) {
    }
    var result = nativeObjectToString.call(value);
    if (unmasked) {
        if (isOwn) value[symToStringTag] = tag;
        else delete value[symToStringTag];
    }
    return result;
}
module.exports = getRawTag;

},{"./_Symbol":"73arO"}],"6SMQt":[function(require,module,exports) {
/** Used for built-in method references. */ var objectProto = Object.prototype;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */ var nativeObjectToString = objectProto.toString;
/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */ function objectToString(value) {
    return nativeObjectToString.call(value);
}
module.exports = objectToString;

},{}],"9omfG":[function(require,module,exports) {
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */ function isObjectLike(value) {
    return value != null && typeof value == 'object';
}
module.exports = isObjectLike;

},{}],"lyXEP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "colorPurpleText", ()=>colorPurpleText
);
parcelHelpers.export(exports, "colorPurpleDarker", ()=>colorPurpleDarker
);
parcelHelpers.export(exports, "colorPurpleDark", ()=>colorPurpleDark
);
parcelHelpers.export(exports, "colorPurple", ()=>colorPurple
);
parcelHelpers.export(exports, "colorPurpleLight", ()=>colorPurpleLight
);
parcelHelpers.export(exports, "colorPurpleLighter", ()=>colorPurpleLighter
);
parcelHelpers.export(exports, "colorIndigoText", ()=>colorIndigoText
);
parcelHelpers.export(exports, "colorIndigoDarker", ()=>colorIndigoDarker
);
parcelHelpers.export(exports, "colorIndigoDark", ()=>colorIndigoDark
);
parcelHelpers.export(exports, "colorIndigo", ()=>colorIndigo
);
parcelHelpers.export(exports, "colorIndigoLight", ()=>colorIndigoLight
);
parcelHelpers.export(exports, "colorIndigoLighter", ()=>colorIndigoLighter
);
parcelHelpers.export(exports, "colorBlueText", ()=>colorBlueText
);
parcelHelpers.export(exports, "colorBlueDarker", ()=>colorBlueDarker
);
parcelHelpers.export(exports, "colorBlueDark", ()=>colorBlueDark
);
parcelHelpers.export(exports, "colorBlue", ()=>colorBlue
);
parcelHelpers.export(exports, "colorBlueLight", ()=>colorBlueLight
);
parcelHelpers.export(exports, "colorBlueLighter", ()=>colorBlueLighter
);
parcelHelpers.export(exports, "colorTealText", ()=>colorTealText
);
parcelHelpers.export(exports, "colorTealDarker", ()=>colorTealDarker
);
parcelHelpers.export(exports, "colorTealDark", ()=>colorTealDark
);
parcelHelpers.export(exports, "colorTeal", ()=>colorTeal
);
parcelHelpers.export(exports, "colorTealLight", ()=>colorTealLight
);
parcelHelpers.export(exports, "colorTealLighter", ()=>colorTealLighter
);
parcelHelpers.export(exports, "colorGreenText", ()=>colorGreenText
);
parcelHelpers.export(exports, "colorGreenDarker", ()=>colorGreenDarker
);
parcelHelpers.export(exports, "colorGreenDark", ()=>colorGreenDark
);
parcelHelpers.export(exports, "colorGreen", ()=>colorGreen
);
parcelHelpers.export(exports, "colorGreenLight", ()=>colorGreenLight
);
parcelHelpers.export(exports, "colorGreenLighter", ()=>colorGreenLighter
);
parcelHelpers.export(exports, "colorYellowText", ()=>colorYellowText
);
parcelHelpers.export(exports, "colorYellowDarker", ()=>colorYellowDarker
);
parcelHelpers.export(exports, "colorYellowDark", ()=>colorYellowDark
);
parcelHelpers.export(exports, "colorYellow", ()=>colorYellow
);
parcelHelpers.export(exports, "colorYellowLight", ()=>colorYellowLight
);
parcelHelpers.export(exports, "colorYellowLighter", ()=>colorYellowLighter
);
parcelHelpers.export(exports, "colorOrangeText", ()=>colorOrangeText
);
parcelHelpers.export(exports, "colorOrangeDarker", ()=>colorOrangeDarker
);
parcelHelpers.export(exports, "colorOrangeDark", ()=>colorOrangeDark
);
parcelHelpers.export(exports, "colorOrange", ()=>colorOrange
);
parcelHelpers.export(exports, "colorOrangeLight", ()=>colorOrangeLight
);
parcelHelpers.export(exports, "colorOrangeLighter", ()=>colorOrangeLighter
);
parcelHelpers.export(exports, "colorRedText", ()=>colorRedText
);
parcelHelpers.export(exports, "colorRedDarker", ()=>colorRedDarker
);
parcelHelpers.export(exports, "colorRedDark", ()=>colorRedDark
);
parcelHelpers.export(exports, "colorRed", ()=>colorRed
);
parcelHelpers.export(exports, "colorRedLight", ()=>colorRedLight
);
parcelHelpers.export(exports, "colorRedLighter", ()=>colorRedLighter
);
parcelHelpers.export(exports, "colorInk", ()=>colorInk
);
parcelHelpers.export(exports, "colorInkLight", ()=>colorInkLight
);
parcelHelpers.export(exports, "colorInkLighter", ()=>colorInkLighter
);
parcelHelpers.export(exports, "colorInkLightest", ()=>colorInkLightest
);
parcelHelpers.export(exports, "colorSkyDark", ()=>colorSkyDark
);
parcelHelpers.export(exports, "colorSky", ()=>colorSky
);
parcelHelpers.export(exports, "colorSkyLight", ()=>colorSkyLight
);
parcelHelpers.export(exports, "colorSkyLighter", ()=>colorSkyLighter
);
parcelHelpers.export(exports, "colorBlack", ()=>colorBlack
);
parcelHelpers.export(exports, "colorWhite", ()=>colorWhite
);
parcelHelpers.export(exports, "durationNone", ()=>durationNone
);
parcelHelpers.export(exports, "durationFast", ()=>durationFast
);
parcelHelpers.export(exports, "durationBase", ()=>durationBase
);
parcelHelpers.export(exports, "durationSlow", ()=>durationSlow
);
parcelHelpers.export(exports, "durationSlower", ()=>durationSlower
);
parcelHelpers.export(exports, "durationSlowest", ()=>durationSlowest
);
parcelHelpers.export(exports, "spacingNone", ()=>spacingNone
);
parcelHelpers.export(exports, "spacingExtraTight", ()=>spacingExtraTight
);
parcelHelpers.export(exports, "spacingTight", ()=>spacingTight
);
parcelHelpers.export(exports, "spacingBaseTight", ()=>spacingBaseTight
);
parcelHelpers.export(exports, "spacingBase", ()=>spacingBase
);
parcelHelpers.export(exports, "spacingLoose", ()=>spacingLoose
);
parcelHelpers.export(exports, "spacingExtraLoose", ()=>spacingExtraLoose
);
parcelHelpers.export(exports, "fontStackBase", ()=>fontStackBase
);
parcelHelpers.export(exports, "fontStackMonospace", ()=>fontStackMonospace
);
const colorPurpleText = 'rgb(80, 73, 90)';
const colorPurpleDarker = 'rgb(35, 0, 81)';
const colorPurpleDark = 'rgb(80, 36, 143)';
const colorPurple = 'rgb(156, 106, 222)';
const colorPurpleLight = 'rgb(227, 208, 255)';
const colorPurpleLighter = 'rgb(246, 240, 253)';
const colorIndigoText = 'rgb(62, 65, 85)';
const colorIndigoDarker = 'rgb(0, 6, 57)';
const colorIndigoDark = 'rgb(32, 46, 120)';
const colorIndigo = 'rgb(92, 106, 196)';
const colorIndigoLight = 'rgb(179, 188, 245)';
const colorIndigoLighter = 'rgb(244, 245, 250)';
const colorBlueText = 'rgb(62, 78, 87)';
const colorBlueDarker = 'rgb(0, 20, 41)';
const colorBlueDark = 'rgb(8, 78, 138)';
const colorBlue = 'rgb(0, 111, 187)';
const colorBlueLight = 'rgb(180, 225, 250)';
const colorBlueLighter = 'rgb(235, 245, 250)';
const colorTealText = 'rgb(64, 83, 82)';
const colorTealDarker = 'rgb(0, 49, 53)';
const colorTealDark = 'rgb(0, 132, 142)';
const colorTeal = 'rgb(71, 193, 191)';
const colorTealLight = 'rgb(183, 236, 236)';
const colorTealLighter = 'rgb(224, 245, 245)';
const colorGreenText = 'rgb(65, 79, 62)';
const colorGreenDarker = 'rgb(23, 54, 48)';
const colorGreenDark = 'rgb(16, 128, 67)';
const colorGreen = 'rgb(80, 184, 60)';
const colorGreenLight = 'rgb(187, 229, 179)';
const colorGreenLighter = 'rgb(227, 241, 223)';
const colorYellowText = 'rgb(89, 81, 48)';
const colorYellowDarker = 'rgb(87, 59, 0)';
const colorYellowDark = 'rgb(138, 97, 22)';
const colorYellow = 'rgb(238, 194, 0)';
const colorYellowLight = 'rgb(255, 234, 138)';
const colorYellowLighter = 'rgb(252, 241, 205)';
const colorOrangeText = 'rgb(89, 68, 48)';
const colorOrangeDarker = 'rgb(74, 21, 4)';
const colorOrangeDark = 'rgb(192, 87, 23)';
const colorOrange = 'rgb(244, 147, 66)';
const colorOrangeLight = 'rgb(255, 197, 139)';
const colorOrangeLighter = 'rgb(252, 235, 219)';
const colorRedText = 'rgb(88, 60, 53)';
const colorRedDarker = 'rgb(51, 1, 1)';
const colorRedDark = 'rgb(191, 7, 17)';
const colorRed = 'rgb(222, 54, 24)';
const colorRedLight = 'rgb(254, 173, 154)';
const colorRedLighter = 'rgb(251, 234, 229)';
const colorInk = 'rgb(33, 43, 54)';
const colorInkLight = 'rgb(69, 79, 91)';
const colorInkLighter = 'rgb(99, 115, 129)';
const colorInkLightest = 'rgb(145, 158, 171)';
const colorSkyDark = 'rgb(196, 205, 213)';
const colorSky = 'rgb(223, 227, 232)';
const colorSkyLight = 'rgb(244, 246, 248)';
const colorSkyLighter = 'rgb(249, 250, 251)';
const colorBlack = 'rgb(0, 0, 0)';
const colorWhite = 'rgb(255, 255, 255)';
const durationNone = 0;
const durationFast = 100;
const durationBase = 200;
const durationSlow = 300;
const durationSlower = 400;
const durationSlowest = 500;
const spacingNone = 0;
const spacingExtraTight = '4px';
const spacingTight = '8px';
const spacingBaseTight = '12px';
const spacingBase = '16px';
const spacingLoose = '20px';
const spacingExtraLoose = '32px';
const fontStackBase = "-apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif";
const fontStackMonospace = "Monaco, Consolas, 'Lucida Console', monospace";
exports.default = {
    colorPurpleText,
    colorPurpleDarker,
    colorPurpleDark,
    colorPurple,
    colorPurpleLight,
    colorPurpleLighter,
    colorIndigoText,
    colorIndigoDarker,
    colorIndigoDark,
    colorIndigo,
    colorIndigoLight,
    colorIndigoLighter,
    colorBlueText,
    colorBlueDarker,
    colorBlueDark,
    colorBlue,
    colorBlueLight,
    colorBlueLighter,
    colorTealText,
    colorTealDarker,
    colorTealDark,
    colorTeal,
    colorTealLight,
    colorTealLighter,
    colorGreenText,
    colorGreenDarker,
    colorGreenDark,
    colorGreen,
    colorGreenLight,
    colorGreenLighter,
    colorYellowText,
    colorYellowDarker,
    colorYellowDark,
    colorYellow,
    colorYellowLight,
    colorYellowLighter,
    colorOrangeText,
    colorOrangeDarker,
    colorOrangeDark,
    colorOrange,
    colorOrangeLight,
    colorOrangeLighter,
    colorRedText,
    colorRedDarker,
    colorRedDark,
    colorRed,
    colorRedLight,
    colorRedLighter,
    colorInk,
    colorInkLight,
    colorInkLighter,
    colorInkLightest,
    colorSkyDark,
    colorSky,
    colorSkyLight,
    colorSkyLighter,
    colorBlack,
    colorWhite,
    durationNone,
    durationFast,
    durationBase,
    durationSlow,
    durationSlower,
    durationSlowest,
    spacingNone,
    spacingExtraTight,
    spacingTight,
    spacingBaseTight,
    spacingBase,
    spacingLoose,
    spacingExtraLoose,
    fontStackBase,
    fontStackMonospace
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jYa7v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DATA_ATTRIBUTE", ()=>DATA_ATTRIBUTE
);
parcelHelpers.export(exports, "dataPolarisTopBar", ()=>dataPolarisTopBar
);
parcelHelpers.export(exports, "headerCell", ()=>headerCell
);
parcelHelpers.export(exports, "layer", ()=>layer
);
parcelHelpers.export(exports, "overlay", ()=>overlay
);
parcelHelpers.export(exports, "portal", ()=>portal
);
parcelHelpers.export(exports, "scrollable", ()=>scrollable
);
parcelHelpers.export(exports, "unstyled", ()=>unstyled
);
const scrollable = {
    props: {
        'data-polaris-scrollable': true
    },
    selector: '[data-polaris-scrollable]'
};
const overlay = {
    props: {
        'data-polaris-overlay': true
    },
    selector: '[data-polaris-overlay]'
};
const layer = {
    props: {
        'data-polaris-layer': true
    },
    selector: '[data-polaris-layer]'
};
const unstyled = {
    props: {
        'data-polaris-unstyled': true
    },
    selector: '[data-polaris-unstyled]'
};
const dataPolarisTopBar = {
    props: {
        'data-polaris-top-bar': true
    },
    selector: '[data-polaris-top-bar]'
};
const headerCell = {
    props: {
        'data-polaris-header-cell': true
    },
    selector: '[data-polaris-header-cell]'
};
const portal = {
    props: [
        'data-portal-id'
    ],
    selector: '[data-portal-id]'
};
const DATA_ATTRIBUTE = {
    overlay,
    layer
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5acRx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "navigationBarCollapsed", ()=>navigationBarCollapsed
);
parcelHelpers.export(exports, "stackedContent", ()=>stackedContent
);
const Breakpoints = {
    navigationBarCollapsed: '768px',
    stackedContent: '1043px'
};
const noWindowMatches = {
    media: '',
    addListener: noop,
    removeListener: noop,
    matches: false,
    onchange: noop,
    addEventListener: noop,
    removeEventListener: noop,
    dispatchEvent: (_)=>true
};
function noop() {
}
function navigationBarCollapsed() {
    return typeof window === 'undefined' ? noWindowMatches : window.matchMedia(`(max-width: ${Breakpoints.navigationBarCollapsed})`);
}
function stackedContent() {
    return typeof window === 'undefined' ? noWindowMatches : window.matchMedia(`(max-width: ${Breakpoints.stackedContent})`);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jJS9C":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Rect", ()=>Rect
);
parcelHelpers.export(exports, "getRectForNode", ()=>getRectForNode
);
class Rect {
    static get zero() {
        return new Rect();
    }
    constructor({ top =0 , left =0 , width =0 , height =0  } = {
    }){
        this.top = void 0;
        this.left = void 0;
        this.width = void 0;
        this.height = void 0;
        this.top = top;
        this.left = left;
        this.width = width;
        this.height = height;
    }
    get center() {
        return {
            x: this.left + this.width / 2,
            y: this.top + this.height / 2
        };
    }
}
function getRectForNode(node) {
    if (!(node instanceof Element)) return new Rect({
        width: window.innerWidth,
        height: window.innerHeight
    });
    const rect = node.getBoundingClientRect();
    return new Rect({
        top: rect.top,
        left: rect.left,
        width: rect.width,
        height: rect.height
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lW8Vw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SCROLL_LOCKING_ATTRIBUTE", ()=>SCROLL_LOCKING_ATTRIBUTE
);
parcelHelpers.export(exports, "ScrollLockManager", ()=>ScrollLockManager
);
var _targetJs = require("../target.js");
const SCROLL_LOCKING_ATTRIBUTE = 'data-lock-scrolling';
const SCROLL_LOCKING_WRAPPER_ATTRIBUTE = 'data-lock-scrolling-wrapper';
let scrollPosition = 0;
class ScrollLockManager {
    constructor(){
        this.scrollLocks = 0;
        this.locked = false;
    }
    registerScrollLock() {
        this.scrollLocks += 1;
        this.handleScrollLocking();
    }
    unregisterScrollLock() {
        this.scrollLocks -= 1;
        this.handleScrollLocking();
    }
    handleScrollLocking() {
        if (_targetJs.isServer) return;
        const { scrollLocks  } = this;
        const { body  } = document;
        const wrapper = body.firstElementChild;
        if (scrollLocks === 0) {
            body.removeAttribute(SCROLL_LOCKING_ATTRIBUTE);
            if (wrapper) wrapper.removeAttribute(SCROLL_LOCKING_WRAPPER_ATTRIBUTE);
            window.scroll(0, scrollPosition);
            this.locked = false;
        } else if (scrollLocks > 0 && !this.locked) {
            scrollPosition = window.pageYOffset;
            body.setAttribute(SCROLL_LOCKING_ATTRIBUTE, '');
            if (wrapper) {
                wrapper.setAttribute(SCROLL_LOCKING_WRAPPER_ATTRIBUTE, '');
                wrapper.scrollTop = scrollPosition;
            }
            this.locked = true;
        }
    }
    resetScrollPosition() {
        scrollPosition = 0;
    }
}

},{"../target.js":"gqfy9","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gqfy9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isServer", ()=>isServer
);
const isServer = typeof window === 'undefined' || typeof document === 'undefined';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cEi6z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "UniqueIdFactory", ()=>UniqueIdFactory
);
parcelHelpers.export(exports, "globalIdGeneratorFactory", ()=>globalIdGeneratorFactory
);
class UniqueIdFactory {
    constructor(idGeneratorFactory){
        this.idGeneratorFactory = void 0;
        this.idGenerators = {
        };
        this.idGeneratorFactory = idGeneratorFactory;
    }
    nextId(prefix1) {
        if (!this.idGenerators[prefix1]) this.idGenerators[prefix1] = this.idGeneratorFactory(prefix1);
        return this.idGenerators[prefix1]();
    }
}
function globalIdGeneratorFactory(prefix = '') {
    let index = 1;
    return ()=>`Polaris${prefix}${index++}`
    ;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eGlQG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "I18n", ()=>I18n
);
var _getJs = require("../get.js");
var _mergeJs = require("../merge.js");
const REPLACE_REGEX = /{([^}]*)}/g;
class I18n {
    /**
   * @param translation A locale object or array of locale objects that overrides default translations. If specifying an array then your desired language dictionary should come first, followed by your fallback language dictionaries
   */ constructor(translation){
        this.translation = {
        };
        // slice the array to make a shallow copy of it, so we don't accidentally
        // modify the original translation array
        this.translation = Array.isArray(translation) ? _mergeJs.merge(...translation.slice().reverse()) : translation;
    }
    translate(id, replacements) {
        const text = _getJs.get(this.translation, id, '');
        if (!text) return '';
        if (replacements) return text.replace(REPLACE_REGEX, (match)=>{
            const replacement = match.substring(1, match.length - 1);
            if (replacements[replacement] === undefined) {
                const replacementData = JSON.stringify(replacements);
                throw new Error(`Error in translation for key '${id}'. No replacement found for key '${replacement}'. The following replacements were passed: '${replacementData}'`);
            } // This could be a string or a number, but JS doesn't mind which it gets
            // and can handle that cast internally. So let it, to save us calling
            // toString() on what's already a string in 90% of cases.
            return replacements[replacement];
        });
        return text;
    }
    translationKeyExists(path) {
        return Boolean(_getJs.get(this.translation, path));
    }
}

},{"../get.js":"bHf2E","../merge.js":"84ELp","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bHf2E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "get", ()=>get
);
const OBJECT_NOTATION_MATCHER = /\[(.*?)\]|(\w+)/g;
function get(obj, keypath, defaultValue) {
    if (obj == null) return undefined;
    const keys = Array.isArray(keypath) ? keypath : getKeypath(keypath);
    let acc = obj; // eslint-disable-next-line @typescript-eslint/prefer-for-of
    for(let i = 0; i < keys.length; i++){
        const val = acc[keys[i]];
        if (val === undefined) return defaultValue;
        acc = val;
    }
    return acc;
}
function getKeypath(str) {
    const path = [];
    let result;
    while(result = OBJECT_NOTATION_MATCHER.exec(str)){
        const [, first, second] = result;
        path.push(first || second);
    }
    return path;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"84ELp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "merge", ()=>merge
);
// Unfortunately, this is how we have to type this at the moment.
// There is currently a proposal to support variadic kinds.
// https://github.com/Microsoft/TypeScript/issues/5453
function merge(...objs) {
    let final = {
    };
    for (const obj of objs)final = mergeRecursively(final, obj);
    return final;
}
function mergeRecursively(inputObjA, objB) {
    const objA = Array.isArray(inputObjA) ? [
        ...inputObjA
    ] : {
        ...inputObjA
    };
    for(const key in objB){
        if (!Object.prototype.hasOwnProperty.call(objB, key)) continue;
        else if (isMergeableValue(objB[key]) && isMergeableValue(objA[key])) objA[key] = mergeRecursively(objA[key], objB[key]);
        else objA[key] = objB[key];
    }
    return objA;
}
function isMergeableValue(value) {
    return value !== null && typeof value === 'object';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2vGa7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FeaturesContext", ()=>FeaturesContext
);
var _react = require("react");
const FeaturesContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jLNtz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "I18nContext", ()=>I18nContext
);
var _react = require("react");
const I18nContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2p59M":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StickyManagerContext", ()=>StickyManagerContext
);
var _react = require("react");
const StickyManagerContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5eXfO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "UniqueIdFactoryContext", ()=>UniqueIdFactoryContext
);
var _react = require("react");
const UniqueIdFactoryContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9F4RK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LinkContext", ()=>LinkContext
);
var _react = require("react");
const LinkContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"10qny":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ThemeProvider", ()=>ThemeProvider
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _baseJson = require("@shopify/polaris-tokens/dist-modern/theme/base.json");
var _baseJsonDefault = parcelHelpers.interopDefault(_baseJson);
var _contextJs = require("../../utilities/theme/context.js");
var _utilsJs = require("../../utilities/theme/utils.js");
var _tokensJs = require("../../utilities/theme/tokens.js");
function ThemeProvider({ theme: themeConfig = {
} , alwaysRenderCustomProperties =false , children  }) {
    const parentContext = _react.useContext(_contextJs.ThemeContext);
    const isParentThemeProvider = parentContext === undefined;
    const parentColorScheme = parentContext && parentContext.colorScheme && parentContext.colorScheme;
    const parentColors = parentContext && parentContext.colors && parentContext.colors;
    const [customProperties1, theme1] = _react.useMemo(()=>{
        const { colors , colorScheme , ...rest } = themeConfig;
        const processedThemeConfig = {
            ...rest,
            colorScheme: getColorScheme(colorScheme, parentColorScheme),
            colors: {
                ...isParentThemeProvider && _baseJsonDefault.default,
                ...parentColors != null && parentColors,
                ...colors
            }
        };
        const customProperties = _utilsJs.buildCustomProperties(processedThemeConfig, _tokensJs.Tokens);
        const theme = _utilsJs.buildThemeContext(processedThemeConfig, customProperties);
        return [
            customProperties,
            theme
        ];
    }, [
        isParentThemeProvider,
        parentColorScheme,
        parentColors,
        themeConfig
    ]); // We want these values to be empty string instead of `undefined` when not set.
    // Otherwise, setting a style property to `undefined` does not remove it from the DOM.
    const backgroundColor = customProperties1['--p-background'] || '';
    const color = customProperties1['--p-text'] || '';
    _react.useEffect(()=>{
        if (isParentThemeProvider) {
            document.body.style.backgroundColor = backgroundColor;
            document.body.style.color = color;
        }
    }, [
        backgroundColor,
        color,
        isParentThemeProvider
    ]);
    let style;
    if (isParentThemeProvider) style = customProperties1;
    else if (alwaysRenderCustomProperties || !isParentThemeProvider && parentContext.cssCustomProperties !== _utilsJs.toString(customProperties1)) style = {
        ...customProperties1,
        color
    };
    else style = {
        color
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.ThemeContext.Provider, {
        value: theme1
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        style: style
    }, children)));
}
function getColorScheme(colorScheme, parentColorScheme) {
    if (colorScheme == null) return parentColorScheme || 'light';
    else if (colorScheme === 'inverse') return parentColorScheme === 'dark' || parentColorScheme === undefined ? 'light' : 'dark';
    else return colorScheme;
}

},{"react":"6fep5","@shopify/polaris-tokens/dist-modern/theme/base.json":"1usPj","../../utilities/theme/context.js":"5MoSS","../../utilities/theme/utils.js":"bnJU8","../../utilities/theme/tokens.js":"k2L5m","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1usPj":[function(require,module,exports) {
module.exports = JSON.parse("{\"surface\":\"#111213\",\"onSurface\":\"#111213\",\"interactive\":\"#2e72d2\",\"secondary\":\"#111213\",\"primary\":\"#008060\",\"critical\":\"#d82c0d\",\"warning\":\"#ffc453\",\"highlight\":\"#5bcdda\",\"success\":\"#008060\",\"decorative\":\"#ffc96b\"}");

},{}],"5MoSS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ThemeContext", ()=>ThemeContext
);
var _react = require("react");
const ThemeContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kLsAr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MediaQueryProvider", ()=>MediaQueryProvider
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _breakpointsJs = require("../../utilities/breakpoints.js");
var _contextJs = require("../../utilities/media-query/context.js");
var _eventListenerJs = require("../EventListener/EventListener.js");
const MediaQueryProvider = function MediaQueryProvider({ children  }) {
    const [isNavigationCollapsed, setIsNavigationCollapsed] = _react.useState(_breakpointsJs.navigationBarCollapsed().matches); // eslint-disable-next-line react-hooks/exhaustive-deps
    const handleResize = _react.useCallback(_debounceDefault.default(()=>{
        if (isNavigationCollapsed !== _breakpointsJs.navigationBarCollapsed().matches) setIsNavigationCollapsed(!isNavigationCollapsed);
    }, 40, {
        trailing: true,
        leading: true,
        maxWait: 40
    }), [
        isNavigationCollapsed
    ]);
    _react.useEffect(()=>{
        setIsNavigationCollapsed(_breakpointsJs.navigationBarCollapsed().matches);
    }, []);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.MediaQueryContext.Provider, {
        value: {
            isNavigationCollapsed
        }
    }, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
        event: "resize",
        handler: handleResize
    }), children));
};

},{"react":"6fep5","lodash/debounce":"a9ymG","../../utilities/breakpoints.js":"5acRx","../../utilities/media-query/context.js":"epjLA","../EventListener/EventListener.js":"gpcxo","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"epjLA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MediaQueryContext", ()=>MediaQueryContext
);
var _react = require("react");
const MediaQueryContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gpcxo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EventListener", ()=>EventListener
);
var _react = require("react");
// see https://github.com/oliviertassinari/react-event-listener/
class EventListener extends _react.PureComponent {
    componentDidMount() {
        this.attachListener();
    }
    componentDidUpdate({ passive , ...detachProps }) {
        this.detachListener(detachProps);
        this.attachListener();
    }
    componentWillUnmount() {
        this.detachListener();
    }
    render() {
        return null;
    }
    attachListener() {
        const { event , handler , capture , passive  } = this.props;
        window.addEventListener(event, handler, {
            capture,
            passive
        });
    }
    detachListener(prevProps) {
        const { event , handler , capture  } = prevProps || this.props;
        window.removeEventListener(event, handler, capture);
    }
}

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kxT8r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PortalsManager", ()=>PortalsManager
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _contextJs = require("../../utilities/portals/context.js");
var _portalsContainerJs = require("./components/PortalsContainer/PortalsContainer.js");
function PortalsManager({ children , container  }) {
    const [portalContainerElement, setPortalContainerElement] = _react.useState(null);
    const currentContainer = container !== null && container !== void 0 ? container : portalContainerElement;
    const contextValue = _react.useMemo(()=>({
            container: currentContainer
        })
    , [
        currentContainer
    ]);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.PortalsManagerContext.Provider, {
        value: contextValue
    }, children, container ? null : /*#__PURE__*/ _reactDefault.default.createElement(_portalsContainerJs.PortalsContainer, {
        ref: setPortalContainerElement
    })));
}

},{"react":"6fep5","../../utilities/portals/context.js":"8cyRL","./components/PortalsContainer/PortalsContainer.js":"iXVKy","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8cyRL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PortalsManagerContext", ()=>PortalsManagerContext
);
var _react = require("react");
const PortalsManagerContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iXVKy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PortalsContainer", ()=>PortalsContainer
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
function PortalsContainerComponent(_props, ref) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        id: "PolarisPortalsContainer",
        ref: ref
    }));
}
const PortalsContainer = /*#__PURE__*/ _react.forwardRef(PortalsContainerComponent);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dn7ah":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FocusManager", ()=>FocusManager
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _contextJs = require("../../utilities/focus-manager/context.js");
function FocusManager({ children  }) {
    const [trapFocusList, setTrapFocusList] = _react.useState([]);
    const add = _react.useCallback((id)=>{
        setTrapFocusList((list)=>[
                ...list,
                id
            ]
        );
    }, []);
    const remove = _react.useCallback((id)=>{
        let removed = true;
        setTrapFocusList((list)=>{
            const clone = [
                ...list
            ];
            const index = clone.indexOf(id);
            if (index === -1) removed = false;
            else clone.splice(index, 1);
            return clone;
        });
        return removed;
    }, []);
    const value = _react.useMemo(()=>({
            trapFocusList,
            add,
            remove
        })
    , [
        add,
        trapFocusList,
        remove
    ]);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.FocusManagerContext.Provider, {
        value: value
    }, children));
}

},{"react":"6fep5","../../utilities/focus-manager/context.js":"bTOSB","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bTOSB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FocusManagerContext", ()=>FocusManagerContext
);
var _react = require("react");
const FocusManagerContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"in3n2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AccountConnection", ()=>AccountConnection
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _accountConnectionScssJs = require("./AccountConnection.scss.js");
var _accountConnectionScssJsDefault = parcelHelpers.interopDefault(_accountConnectionScssJs);
var _cardJs = require("../Card/Card.js");
var _settingActionJs = require("../SettingAction/SettingAction.js");
var _avatarJs = require("../Avatar/Avatar.js");
var _utilsJs = require("../Button/utils.js");
var _stackJs = require("../Stack/Stack.js");
var _textStyleJs = require("../TextStyle/TextStyle.js");
function AccountConnection({ connected =false , action , avatarUrl , accountName ='' , title , details , termsOfService  }) {
    const initials = accountName ? accountName.split(/\s+/).map((name)=>name[0]
    ).join('') : undefined;
    const avatarMarkup = connected ? /*#__PURE__*/ _reactDefault.default.createElement(_avatarJs.Avatar, {
        accessibilityLabel: "",
        name: accountName,
        initials: initials,
        source: avatarUrl
    }) : null;
    let titleMarkup = null;
    if (title) titleMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", null, title);
    else if (accountName) titleMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", null, accountName);
    const detailsMarkup = details ? /*#__PURE__*/ _reactDefault.default.createElement("div", null, /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, {
        variation: "subdued"
    }, details)) : null;
    const termsOfServiceMarkup = termsOfService ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _accountConnectionScssJsDefault.default.TermsOfService
    }, termsOfService) : null;
    const actionElement = action ? _utilsJs.buttonFrom(action, {
        primary: !connected
    }) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement(_cardJs.Card, {
        sectioned: true
    }, /*#__PURE__*/ _reactDefault.default.createElement(_settingActionJs.SettingAction, {
        action: actionElement
    }, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, null, avatarMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack.Item, {
        fill: true
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _accountConnectionScssJsDefault.default.Content
    }, titleMarkup, detailsMarkup)))), termsOfServiceMarkup));
}

},{"react":"6fep5","./AccountConnection.scss.js":"aKpZx","../Card/Card.js":"kiG4Y","../SettingAction/SettingAction.js":"kBX2S","../Avatar/Avatar.js":"lS61i","../Button/utils.js":"9W95c","../Stack/Stack.js":"g05gm","../TextStyle/TextStyle.js":"cC66D","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aKpZx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "TermsOfService": "Polaris-AccountConnection__TermsOfService",
    "Content": "Polaris-AccountConnection__Content"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kiG4Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Card", ()=>Card
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _useToggleJs = require("../../utilities/use-toggle.js");
var _withinContentContextJs = require("../../utilities/within-content-context.js");
var _cardScssJs = require("./Card.scss.js");
var _cardScssJsDefault = parcelHelpers.interopDefault(_cardScssJs);
var _utilsJs = require("../Button/utils.js");
var _buttonJs = require("../Button/Button.js");
var _headerJs = require("./components/Header/Header.js");
var _sectionJs = require("./components/Section/Section.js");
var _subsectionJs = require("./components/Subsection/Subsection.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _popoverJs = require("../Popover/Popover.js");
var _actionListJs = require("../ActionList/ActionList.js");
var _buttonGroupJs = require("../ButtonGroup/ButtonGroup.js");
// TypeScript can't generate types that correctly infer the typing of
// subcomponents so explicitly state the subcomponents in the type definition.
// Letting this be implicit works in this project but fails in projects that use
// generated *.d.ts files.
const Card = function Card({ children , hideOnPrint , title , subdued , sectioned , actions , primaryFooterAction , secondaryFooterActions , secondaryFooterActionsDisclosureText , footerActionAlignment ='right'  }) {
    const i18n = _hooksJs.useI18n();
    const { value: secondaryActionsPopoverOpen , toggle: toggleSecondaryActionsPopoverOpen  } = _useToggleJs.useToggle(false);
    const className = _cssJs.classNames(_cardScssJsDefault.default.Card, subdued && _cardScssJsDefault.default.subdued, hideOnPrint && _cardScssJsDefault.default.hideOnPrint);
    const headerMarkup = title || actions ? /*#__PURE__*/ _reactDefault.default.createElement(_headerJs.Header, {
        actions: actions,
        title: title
    }) : null;
    const content = sectioned ? /*#__PURE__*/ _reactDefault.default.createElement(_sectionJs.Section, null, children) : children;
    const primaryFooterActionMarkup = primaryFooterAction ? _utilsJs.buttonFrom(primaryFooterAction, {
        primary: true
    }) : null;
    let secondaryFooterActionsMarkup = null;
    if (secondaryFooterActions && secondaryFooterActions.length) {
        if (secondaryFooterActions.length === 1) secondaryFooterActionsMarkup = _utilsJs.buttonFrom(secondaryFooterActions[0]);
        else secondaryFooterActionsMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
            active: secondaryActionsPopoverOpen,
            activator: /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
                disclosure: true,
                onClick: toggleSecondaryActionsPopoverOpen
            }, secondaryFooterActionsDisclosureText || i18n.translate('Polaris.Common.more')),
            onClose: toggleSecondaryActionsPopoverOpen
        }, /*#__PURE__*/ _reactDefault.default.createElement(_actionListJs.ActionList, {
            items: secondaryFooterActions
        })));
    }
    const footerMarkup = primaryFooterActionMarkup || secondaryFooterActionsMarkup ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _cssJs.classNames(_cardScssJsDefault.default.Footer, footerActionAlignment === 'left' && _cardScssJsDefault.default.LeftJustified)
    }, footerActionAlignment === 'right' ? /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, null, secondaryFooterActionsMarkup, primaryFooterActionMarkup) : /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, null, primaryFooterActionMarkup, secondaryFooterActionsMarkup)) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement(_withinContentContextJs.WithinContentContext.Provider, {
        value: true
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, headerMarkup, content, footerMarkup)));
};
Card.Header = _headerJs.Header;
Card.Section = _sectionJs.Section;
Card.Subsection = _subsectionJs.Subsection;

},{"react":"6fep5","../../utilities/css.js":"kYdwV","../../utilities/use-toggle.js":"jHDnh","../../utilities/within-content-context.js":"8TZsv","./Card.scss.js":"gDLDM","../Button/utils.js":"9W95c","../Button/Button.js":"g06oC","./components/Header/Header.js":"3tKAI","./components/Section/Section.js":"aN6b9","./components/Subsection/Subsection.js":"kJwJS","../../utilities/i18n/hooks.js":"hHpYD","../Popover/Popover.js":"9ztCP","../ActionList/ActionList.js":"eTtta","../ButtonGroup/ButtonGroup.js":"kXBsg","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kYdwV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "classNames", ()=>classNames
);
parcelHelpers.export(exports, "variationName", ()=>variationName
);
function classNames(...classes) {
    return classes.filter(Boolean).join(' ');
}
function variationName(name, value) {
    return `${name}${value.charAt(0).toUpperCase()}${value.slice(1)}`;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jHDnh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useToggle", ()=>useToggle
);
var _react = require("react");
/**
 * Returns a stateful value, and a set of memoized functions to toggle it,
 * set it to true and set it to false
 */ function useToggle(initialState) {
    const [value, setState] = _react.useState(initialState);
    return {
        value,
        toggle: _react.useCallback(()=>setState((state)=>!state
            )
        , []),
        setTrue: _react.useCallback(()=>setState(true)
        , []),
        setFalse: _react.useCallback(()=>setState(false)
        , [])
    };
}

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gDLDM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Card": "Polaris-Card",
    "subdued": "Polaris-Card--subdued",
    "Section-hideOnPrint": "Polaris-Card__Section--hideOnPrint",
    "hideOnPrint": "Polaris-Card--hideOnPrint",
    "Header": "Polaris-Card__Header",
    "Section": "Polaris-Card__Section",
    "Section-fullWidth": "Polaris-Card__Section--fullWidth",
    "Section-flush": "Polaris-Card__Section--flush",
    "Section-subdued": "Polaris-Card__Section--subdued",
    "SectionHeader": "Polaris-Card__SectionHeader",
    "Subsection": "Polaris-Card__Subsection",
    "Footer": "Polaris-Card__Footer",
    "LeftJustified": "Polaris-Card__LeftJustified"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9W95c":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "buttonFrom", ()=>buttonFrom
);
parcelHelpers.export(exports, "buttonsFrom", ()=>buttonsFrom
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _buttonJs = require("./Button.js");
function buttonsFrom(actions, overrides = {
}) {
    if (Array.isArray(actions)) return actions.map((action, index)=>buttonFrom(action, overrides, index)
    );
    else {
        const action = actions;
        return buttonFrom(action, overrides);
    }
}
function buttonFrom({ content , onAction , ...action }, overrides, key) {
    return(/*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, Object.assign({
        key: key,
        onClick: onAction
    }, action, overrides), content));
}

},{"react":"6fep5","./Button.js":"g06oC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"g06oC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Button", ()=>Button
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _focusJs = require("../../utilities/focus.js");
var _buttonScssJs = require("./Button.scss.js");
var _buttonScssJsDefault = parcelHelpers.interopDefault(_buttonScssJs);
var _spinnerJs = require("../Spinner/Spinner.js");
var _popoverJs = require("../Popover/Popover.js");
var _actionListJs = require("../ActionList/ActionList.js");
var _unstyledButtonJs = require("../UnstyledButton/UnstyledButton.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _iconJs = require("../Icon/Icon.js");
const DEFAULT_SIZE = 'medium';
function Button({ id , children , url , disabled , external , download , submit , loading , pressed , accessibilityLabel , role , ariaControls , ariaExpanded , ariaDescribedBy , onClick , onFocus , onBlur , onKeyDown , onKeyPress , onKeyUp , onMouseEnter , onTouchStart , icon , primary , outline , destructive , disclosure , plain , monochrome , removeUnderline , size =DEFAULT_SIZE , textAlign , fullWidth , connectedDisclosure  }) {
    const i18n = _hooksJs.useI18n();
    const isDisabled = disabled || loading;
    const className = _cssJs.classNames(_buttonScssJsDefault.default.Button, primary && _buttonScssJsDefault.default.primary, outline && _buttonScssJsDefault.default.outline, destructive && _buttonScssJsDefault.default.destructive, isDisabled && _buttonScssJsDefault.default.disabled, loading && _buttonScssJsDefault.default.loading, plain && _buttonScssJsDefault.default.plain, pressed && !disabled && !url && _buttonScssJsDefault.default.pressed, monochrome && _buttonScssJsDefault.default.monochrome, size && size !== DEFAULT_SIZE && _buttonScssJsDefault.default[_cssJs.variationName('size', size)], textAlign && _buttonScssJsDefault.default[_cssJs.variationName('textAlign', textAlign)], fullWidth && _buttonScssJsDefault.default.fullWidth, icon && children == null && _buttonScssJsDefault.default.iconOnly, connectedDisclosure && _buttonScssJsDefault.default.connectedDisclosure, removeUnderline && _buttonScssJsDefault.default.removeUnderline);
    const disclosureMarkup = disclosure ? /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _buttonScssJsDefault.default.Icon
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _cssJs.classNames(_buttonScssJsDefault.default.DisclosureIcon, loading && _buttonScssJsDefault.default.hidden)
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: loading ? 'placeholder' : getDisclosureIconSource(disclosure)
    }))) : null;
    const iconSource = isIconSource(icon) ? /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: loading ? 'placeholder' : icon
    }) : icon;
    const iconMarkup = iconSource ? /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _cssJs.classNames(_buttonScssJsDefault.default.Icon, loading && _buttonScssJsDefault.default.hidden)
    }, iconSource) : null;
    const childMarkup = children ? /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _cssJs.classNames(_buttonScssJsDefault.default.Text, removeUnderline && _buttonScssJsDefault.default.removeUnderline) // Fixes Safari bug that doesn't re-render button text to correct color
        ,
        key: disabled ? 'text-disabled' : 'text'
    }, children) : null;
    const spinnerSVGMarkup = loading ? /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _buttonScssJsDefault.default.Spinner
    }, /*#__PURE__*/ _reactDefault.default.createElement(_spinnerJs.Spinner, {
        size: "small",
        accessibilityLabel: i18n.translate('Polaris.Button.spinnerAccessibilityLabel')
    })) : null;
    const [disclosureActive1, setDisclosureActive] = _react.useState(false);
    const toggleDisclosureActive = _react.useCallback(()=>{
        setDisclosureActive((disclosureActive)=>!disclosureActive
        );
    }, []);
    let connectedDisclosureMarkup;
    if (connectedDisclosure) {
        const connectedDisclosureClassName = _cssJs.classNames(_buttonScssJsDefault.default.Button, primary && _buttonScssJsDefault.default.primary, outline && _buttonScssJsDefault.default.outline, size && size !== DEFAULT_SIZE && _buttonScssJsDefault.default[_cssJs.variationName('size', size)], textAlign && _buttonScssJsDefault.default[_cssJs.variationName('textAlign', textAlign)], destructive && _buttonScssJsDefault.default.destructive, connectedDisclosure.disabled && _buttonScssJsDefault.default.disabled, _buttonScssJsDefault.default.iconOnly, _buttonScssJsDefault.default.ConnectedDisclosure, monochrome && _buttonScssJsDefault.default.monochrome);
        const defaultLabel = i18n.translate('Polaris.Button.connectedDisclosureAccessibilityLabel');
        const { disabled , accessibilityLabel: disclosureLabel = defaultLabel  } = connectedDisclosure;
        const connectedDisclosureActivator = /*#__PURE__*/ _reactDefault.default.createElement("button", {
            type: "button",
            className: connectedDisclosureClassName,
            disabled: disabled,
            "aria-label": disclosureLabel,
            "aria-describedby": ariaDescribedBy,
            onClick: toggleDisclosureActive,
            onMouseUp: _focusJs.handleMouseUpByBlurring
        }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: _buttonScssJsDefault.default.Icon
        }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
            source: _polarisIcons.CaretDownMinor
        })));
        connectedDisclosureMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
            active: disclosureActive1,
            onClose: toggleDisclosureActive,
            activator: connectedDisclosureActivator,
            preferredAlignment: "right"
        }, /*#__PURE__*/ _reactDefault.default.createElement(_actionListJs.ActionList, {
            items: connectedDisclosure.actions,
            onActionAnyItem: toggleDisclosureActive
        }));
    }
    const commonProps = {
        id,
        className,
        accessibilityLabel,
        ariaDescribedBy,
        role,
        onClick,
        onFocus,
        onBlur,
        onMouseUp: _focusJs.handleMouseUpByBlurring,
        onMouseEnter,
        onTouchStart
    };
    const linkProps = {
        url,
        external,
        download
    };
    const actionProps = {
        submit,
        disabled: isDisabled,
        loading,
        ariaControls,
        ariaExpanded,
        pressed,
        onKeyDown,
        onKeyUp,
        onKeyPress
    };
    const buttonMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_unstyledButtonJs.UnstyledButton, Object.assign({
    }, commonProps, linkProps, actionProps), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _buttonScssJsDefault.default.Content
    }, spinnerSVGMarkup, iconMarkup, childMarkup, disclosureMarkup));
    return connectedDisclosureMarkup ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _buttonScssJsDefault.default.ConnectedDisclosureWrapper
    }, buttonMarkup, connectedDisclosureMarkup) : buttonMarkup;
}
function isIconSource(x) {
    return typeof x === 'string' || typeof x === 'object' && x.body || typeof x === 'function';
}
function getDisclosureIconSource(disclosure) {
    if (disclosure === 'select') return _polarisIcons.SelectMinor;
    return disclosure === 'up' ? _polarisIcons.CaretUpMinor : _polarisIcons.CaretDownMinor;
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","../../utilities/focus.js":"gLDAi","./Button.scss.js":"e8o7g","../Spinner/Spinner.js":"itKPn","../Popover/Popover.js":"9ztCP","../ActionList/ActionList.js":"eTtta","../UnstyledButton/UnstyledButton.js":"hdvaV","../../utilities/i18n/hooks.js":"hHpYD","../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4Apua":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AbandonedCartMajor", ()=>_abandonedCartMajorSvgMjs.S
);
parcelHelpers.export(exports, "AccessibilityMajor", ()=>_accessibilityMajorSvgMjs.S
);
parcelHelpers.export(exports, "ActivitiesMajor", ()=>_activitiesMajorSvgMjs.S
);
parcelHelpers.export(exports, "AddCodeMajor", ()=>_addCodeMajorSvgMjs.S
);
parcelHelpers.export(exports, "AddImageMajor", ()=>_addImageMajorSvgMjs.S
);
parcelHelpers.export(exports, "AddMajor", ()=>_addMajorSvgMjs.S
);
parcelHelpers.export(exports, "AddNoteMajor", ()=>_addNoteMajorSvgMjs.S
);
parcelHelpers.export(exports, "AddProductMajor", ()=>_addProductMajorSvgMjs.S
);
parcelHelpers.export(exports, "AffiliateMajor", ()=>_affiliateMajorSvgMjs.S
);
parcelHelpers.export(exports, "AlertMinor", ()=>_alertMinorSvgMjs.S
);
parcelHelpers.export(exports, "AnalyticsMajor", ()=>_analyticsMajorSvgMjs.S
);
parcelHelpers.export(exports, "AppExtensionMinor", ()=>_appExtensionMinorSvgMjs.S
);
parcelHelpers.export(exports, "AppsMajor", ()=>_appsMajorSvgMjs.S
);
parcelHelpers.export(exports, "ArchiveMajor", ()=>_archiveMajorSvgMjs.S
);
parcelHelpers.export(exports, "ArchiveMinor", ()=>_archiveMinorSvgMjs.S
);
parcelHelpers.export(exports, "ArrowDownMinor", ()=>_arrowDownMinorSvgMjs.S
);
parcelHelpers.export(exports, "ArrowLeftMinor", ()=>_arrowLeftMinorSvgMjs.S
);
parcelHelpers.export(exports, "ArrowRightMinor", ()=>_arrowRightMinorSvgMjs.S
);
parcelHelpers.export(exports, "ArrowUpMinor", ()=>_arrowUpMinorSvgMjs.S
);
parcelHelpers.export(exports, "AttachmentMajor", ()=>_attachmentMajorSvgMjs.S
);
parcelHelpers.export(exports, "AutomationMajor", ()=>_automationMajorSvgMjs.S
);
parcelHelpers.export(exports, "BackspaceMajor", ()=>_backspaceMajorSvgMjs.S
);
parcelHelpers.export(exports, "BalanceMajor", ()=>_balanceMajorSvgMjs.S
);
parcelHelpers.export(exports, "BankMajor", ()=>_bankMajorSvgMjs.S
);
parcelHelpers.export(exports, "BarcodeMajor", ()=>_barcodeMajorSvgMjs.S
);
parcelHelpers.export(exports, "BehaviorMajor", ()=>_behaviorMajorSvgMjs.S
);
parcelHelpers.export(exports, "BillingStatementDollarMajor", ()=>_billingStatementDollarMajorSvgMjs.S
);
parcelHelpers.export(exports, "BillingStatementEuroMajor", ()=>_billingStatementEuroMajorSvgMjs.S
);
parcelHelpers.export(exports, "BillingStatementPoundMajor", ()=>_billingStatementPoundMajorSvgMjs.S
);
parcelHelpers.export(exports, "BillingStatementRupeeMajor", ()=>_billingStatementRupeeMajorSvgMjs.S
);
parcelHelpers.export(exports, "BillingStatementYenMajor", ()=>_billingStatementYenMajorSvgMjs.S
);
parcelHelpers.export(exports, "BlockMinor", ()=>_blockMinorSvgMjs.S
);
parcelHelpers.export(exports, "BlockquoteMajor", ()=>_blockquoteMajorSvgMjs.S
);
parcelHelpers.export(exports, "BlogMajor", ()=>_blogMajorSvgMjs.S
);
parcelHelpers.export(exports, "BugMajor", ()=>_bugMajorSvgMjs.S
);
parcelHelpers.export(exports, "ButtonCornerPillMajor", ()=>_buttonCornerPillMajorSvgMjs.S
);
parcelHelpers.export(exports, "ButtonCornerRoundedMajor", ()=>_buttonCornerRoundedMajorSvgMjs.S
);
parcelHelpers.export(exports, "ButtonCornerSquareMajor", ()=>_buttonCornerSquareMajorSvgMjs.S
);
parcelHelpers.export(exports, "ButtonMinor", ()=>_buttonMinorSvgMjs.S
);
parcelHelpers.export(exports, "BuyButtonButtonLayoutMajor", ()=>_buyButtonButtonLayoutMajorSvgMjs.S
);
parcelHelpers.export(exports, "BuyButtonHorizontalLayoutMajor", ()=>_buyButtonHorizontalLayoutMajorSvgMjs.S
);
parcelHelpers.export(exports, "BuyButtonMajor", ()=>_buyButtonMajorSvgMjs.S
);
parcelHelpers.export(exports, "BuyButtonVerticalLayoutMajor", ()=>_buyButtonVerticalLayoutMajorSvgMjs.S
);
parcelHelpers.export(exports, "CalendarMajor", ()=>_calendarMajorSvgMjs.S
);
parcelHelpers.export(exports, "CalendarMinor", ()=>_calendarMinorSvgMjs.S
);
parcelHelpers.export(exports, "CalendarTickMajor", ()=>_calendarTickMajorSvgMjs.S
);
parcelHelpers.export(exports, "CameraMajor", ()=>_cameraMajorSvgMjs.S
);
parcelHelpers.export(exports, "CancelSmallMinor", ()=>_cancelSmallMinorSvgMjs.S
);
parcelHelpers.export(exports, "CapitalMajor", ()=>_capitalMajorSvgMjs.S
);
parcelHelpers.export(exports, "CapturePaymentMinor", ()=>_capturePaymentMinorSvgMjs.S
);
parcelHelpers.export(exports, "CardReaderChipMajor", ()=>_cardReaderChipMajorSvgMjs.S
);
parcelHelpers.export(exports, "CardReaderMajor", ()=>_cardReaderMajorSvgMjs.S
);
parcelHelpers.export(exports, "CardReaderTapMajor", ()=>_cardReaderTapMajorSvgMjs.S
);
parcelHelpers.export(exports, "CaretDownMinor", ()=>_caretDownMinorSvgMjs.S
);
parcelHelpers.export(exports, "CaretUpMinor", ()=>_caretUpMinorSvgMjs.S
);
parcelHelpers.export(exports, "CartDownMajor", ()=>_cartDownMajorSvgMjs.S
);
parcelHelpers.export(exports, "CartMajor", ()=>_cartMajorSvgMjs.S
);
parcelHelpers.export(exports, "CartUpMajor", ()=>_cartUpMajorSvgMjs.S
);
parcelHelpers.export(exports, "CashDollarMajor", ()=>_cashDollarMajorSvgMjs.S
);
parcelHelpers.export(exports, "CashEuroMajor", ()=>_cashEuroMajorSvgMjs.S
);
parcelHelpers.export(exports, "CashPoundMajor", ()=>_cashPoundMajorSvgMjs.S
);
parcelHelpers.export(exports, "CashRupeeMajor", ()=>_cashRupeeMajorSvgMjs.S
);
parcelHelpers.export(exports, "CashYenMajor", ()=>_cashYenMajorSvgMjs.S
);
parcelHelpers.export(exports, "CategoriesMajor", ()=>_categoriesMajorSvgMjs.S
);
parcelHelpers.export(exports, "ChannelsMajor", ()=>_channelsMajorSvgMjs.S
);
parcelHelpers.export(exports, "ChatMajor", ()=>_chatMajorSvgMjs.S
);
parcelHelpers.export(exports, "ChecklistAlternateMajor", ()=>_checklistAlternateMajorSvgMjs.S
);
parcelHelpers.export(exports, "ChecklistMajor", ()=>_checklistMajorSvgMjs.S
);
parcelHelpers.export(exports, "CheckoutMajor", ()=>_checkoutMajorSvgMjs.S
);
parcelHelpers.export(exports, "ChevronDownMinor", ()=>_chevronDownMinorSvgMjs.S
);
parcelHelpers.export(exports, "ChevronLeftMinor", ()=>_chevronLeftMinorSvgMjs.S
);
parcelHelpers.export(exports, "ChevronRightMinor", ()=>_chevronRightMinorSvgMjs.S
);
parcelHelpers.export(exports, "ChevronUpMinor", ()=>_chevronUpMinorSvgMjs.S
);
parcelHelpers.export(exports, "CircleAlertMajor", ()=>_circleAlertMajorSvgMjs.S
);
parcelHelpers.export(exports, "CircleCancelMajor", ()=>_circleCancelMajorSvgMjs.S
);
parcelHelpers.export(exports, "CircleCancelMinor", ()=>_circleCancelMinorSvgMjs.S
);
parcelHelpers.export(exports, "CircleChevronDownMinor", ()=>_circleChevronDownMinorSvgMjs.S
);
parcelHelpers.export(exports, "CircleChevronLeftMinor", ()=>_circleChevronLeftMinorSvgMjs.S
);
parcelHelpers.export(exports, "CircleChevronRightMinor", ()=>_circleChevronRightMinorSvgMjs.S
);
parcelHelpers.export(exports, "CircleChevronUpMinor", ()=>_circleChevronUpMinorSvgMjs.S
);
parcelHelpers.export(exports, "CircleDisabledMajor", ()=>_circleDisabledMajorSvgMjs.S
);
parcelHelpers.export(exports, "CircleDisableMinor", ()=>_circleDisableMinorSvgMjs.S
);
parcelHelpers.export(exports, "CircleDotsMajor", ()=>_circleDotsMajorSvgMjs.S
);
parcelHelpers.export(exports, "CircleDownMajor", ()=>_circleDownMajorSvgMjs.S
);
parcelHelpers.export(exports, "CircleInformationMajor", ()=>_circleInformationMajorSvgMjs.S
);
parcelHelpers.export(exports, "CircleLeftMajor", ()=>_circleLeftMajorSvgMjs.S
);
parcelHelpers.export(exports, "CircleMinusMajor", ()=>_circleMinusMajorSvgMjs.S
);
parcelHelpers.export(exports, "CircleMinusMinor", ()=>_circleMinusMinorSvgMjs.S
);
parcelHelpers.export(exports, "CircleMinusOutlineMinor", ()=>_circleMinusOutlineMinorSvgMjs.S
);
parcelHelpers.export(exports, "CirclePlusMajor", ()=>_circlePlusMajorSvgMjs.S
);
parcelHelpers.export(exports, "CirclePlusMinor", ()=>_circlePlusMinorSvgMjs.S
);
parcelHelpers.export(exports, "CirclePlusOutlineMinor", ()=>_circlePlusOutlineMinorSvgMjs.S
);
parcelHelpers.export(exports, "CircleRightMajor", ()=>_circleRightMajorSvgMjs.S
);
parcelHelpers.export(exports, "CircleTickMajor", ()=>_circleTickMajorSvgMjs.S
);
parcelHelpers.export(exports, "CircleTickOutlineMinor", ()=>_circleTickOutlineMinorSvgMjs.S
);
parcelHelpers.export(exports, "CircleUpMajor", ()=>_circleUpMajorSvgMjs.S
);
parcelHelpers.export(exports, "ClipboardMinor", ()=>_clipboardMinorSvgMjs.S
);
parcelHelpers.export(exports, "ClockMajor", ()=>_clockMajorSvgMjs.S
);
parcelHelpers.export(exports, "ClockMinor", ()=>_clockMinorSvgMjs.S
);
parcelHelpers.export(exports, "CodeMajor", ()=>_codeMajorSvgMjs.S
);
parcelHelpers.export(exports, "CollectionsMajor", ()=>_collectionsMajorSvgMjs.S
);
parcelHelpers.export(exports, "ColorNoneMinor", ()=>_colorNoneMinorSvgMjs.S
);
parcelHelpers.export(exports, "ColorsMajor", ()=>_colorsMajorSvgMjs.S
);
parcelHelpers.export(exports, "Column1Major", ()=>_column1MajorSvgMjs.S
);
parcelHelpers.export(exports, "Columns2Major", ()=>_columns2MajorSvgMjs.S
);
parcelHelpers.export(exports, "Columns3Major", ()=>_columns3MajorSvgMjs.S
);
parcelHelpers.export(exports, "ColumnWithTextMajor", ()=>_columnWithTextMajorSvgMjs.S
);
parcelHelpers.export(exports, "ComposeMajor", ()=>_composeMajorSvgMjs.S
);
parcelHelpers.export(exports, "ConfettiMajor", ()=>_confettiMajorSvgMjs.S
);
parcelHelpers.export(exports, "ConnectMinor", ()=>_connectMinorSvgMjs.S
);
parcelHelpers.export(exports, "ConversationMinor", ()=>_conversationMinorSvgMjs.S
);
parcelHelpers.export(exports, "CreditCardMajor", ()=>_creditCardMajorSvgMjs.S
);
parcelHelpers.export(exports, "CreditCardPercentMajor", ()=>_creditCardPercentMajorSvgMjs.S
);
parcelHelpers.export(exports, "CreditCardSecureMajor", ()=>_creditCardSecureMajorSvgMjs.S
);
parcelHelpers.export(exports, "CurrencyConvertMinor", ()=>_currencyConvertMinorSvgMjs.S
);
parcelHelpers.export(exports, "CustomerMinusMajor", ()=>_customerMinusMajorSvgMjs.S
);
parcelHelpers.export(exports, "CustomerPlusMajor", ()=>_customerPlusMajorSvgMjs.S
);
parcelHelpers.export(exports, "CustomersMajor", ()=>_customersMajorSvgMjs.S
);
parcelHelpers.export(exports, "CustomersMinor", ()=>_customersMinorSvgMjs.S
);
parcelHelpers.export(exports, "DataVisualizationMajor", ()=>_dataVisualizationMajorSvgMjs.S
);
parcelHelpers.export(exports, "DeleteMajor", ()=>_deleteMajorSvgMjs.S
);
parcelHelpers.export(exports, "DeleteMinor", ()=>_deleteMinorSvgMjs.S
);
parcelHelpers.export(exports, "DesktopMajor", ()=>_desktopMajorSvgMjs.S
);
parcelHelpers.export(exports, "DetailedPopUpMajor", ()=>_detailedPopUpMajorSvgMjs.S
);
parcelHelpers.export(exports, "DiamondAlertMajor", ()=>_diamondAlertMajorSvgMjs.S
);
parcelHelpers.export(exports, "DigitalMediaReceiverMajor", ()=>_digitalMediaReceiverMajorSvgMjs.S
);
parcelHelpers.export(exports, "DiscountAutomaticMajor", ()=>_discountAutomaticMajorSvgMjs.S
);
parcelHelpers.export(exports, "DiscountCodeMajor", ()=>_discountCodeMajorSvgMjs.S
);
parcelHelpers.export(exports, "DiscountsMajor", ()=>_discountsMajorSvgMjs.S
);
parcelHelpers.export(exports, "DisputeMinor", ()=>_disputeMinorSvgMjs.S
);
parcelHelpers.export(exports, "DnsSettingsMajor", ()=>_dnsSettingsMajorSvgMjs.S
);
parcelHelpers.export(exports, "DomainNewMajor", ()=>_domainNewMajorSvgMjs.S
);
parcelHelpers.export(exports, "DomainsMajor", ()=>_domainsMajorSvgMjs.S
);
parcelHelpers.export(exports, "DraftOrdersMajor", ()=>_draftOrdersMajorSvgMjs.S
);
parcelHelpers.export(exports, "DragDropMajor", ()=>_dragDropMajorSvgMjs.S
);
parcelHelpers.export(exports, "DragHandleMinor", ()=>_dragHandleMinorSvgMjs.S
);
parcelHelpers.export(exports, "DropdownMinor", ()=>_dropdownMinorSvgMjs.S
);
parcelHelpers.export(exports, "DuplicateMinor", ()=>_duplicateMinorSvgMjs.S
);
parcelHelpers.export(exports, "EditMajor", ()=>_editMajorSvgMjs.S
);
parcelHelpers.export(exports, "EditMinor", ()=>_editMinorSvgMjs.S
);
parcelHelpers.export(exports, "EmailMajor", ()=>_emailMajorSvgMjs.S
);
parcelHelpers.export(exports, "EmailNewsletterMajor", ()=>_emailNewsletterMajorSvgMjs.S
);
parcelHelpers.export(exports, "EmbedMinor", ()=>_embedMinorSvgMjs.S
);
parcelHelpers.export(exports, "EnableSelectionMinor", ()=>_enableSelectionMinorSvgMjs.S
);
parcelHelpers.export(exports, "EnvelopeMajor", ()=>_envelopeMajorSvgMjs.S
);
parcelHelpers.export(exports, "ExchangeMajor", ()=>_exchangeMajorSvgMjs.S
);
parcelHelpers.export(exports, "ExistingInventoryMajor", ()=>_existingInventoryMajorSvgMjs.S
);
parcelHelpers.export(exports, "ExitMajor", ()=>_exitMajorSvgMjs.S
);
parcelHelpers.export(exports, "ExportMinor", ()=>_exportMinorSvgMjs.S
);
parcelHelpers.export(exports, "ExternalMinor", ()=>_externalMinorSvgMjs.S
);
parcelHelpers.export(exports, "ExternalSmallMinor", ()=>_externalSmallMinorSvgMjs.S
);
parcelHelpers.export(exports, "FaviconMajor", ()=>_faviconMajorSvgMjs.S
);
parcelHelpers.export(exports, "FavoriteMajor", ()=>_favoriteMajorSvgMjs.S
);
parcelHelpers.export(exports, "FeaturedCollectionMajor", ()=>_featuredCollectionMajorSvgMjs.S
);
parcelHelpers.export(exports, "FeaturedContentMajor", ()=>_featuredContentMajorSvgMjs.S
);
parcelHelpers.export(exports, "FilterMajor", ()=>_filterMajorSvgMjs.S
);
parcelHelpers.export(exports, "FirstOrderMajor", ()=>_firstOrderMajorSvgMjs.S
);
parcelHelpers.export(exports, "FirstVisitMajor", ()=>_firstVisitMajorSvgMjs.S
);
parcelHelpers.export(exports, "FlagMajor", ()=>_flagMajorSvgMjs.S
);
parcelHelpers.export(exports, "FlipCameraMajor", ()=>_flipCameraMajorSvgMjs.S
);
parcelHelpers.export(exports, "FolderDownMajor", ()=>_folderDownMajorSvgMjs.S
);
parcelHelpers.export(exports, "FolderMajor", ()=>_folderMajorSvgMjs.S
);
parcelHelpers.export(exports, "FolderMinusMajor", ()=>_folderMinusMajorSvgMjs.S
);
parcelHelpers.export(exports, "FolderPlusMajor", ()=>_folderPlusMajorSvgMjs.S
);
parcelHelpers.export(exports, "FolderUpMajor", ()=>_folderUpMajorSvgMjs.S
);
parcelHelpers.export(exports, "FollowUpEmailMajor", ()=>_followUpEmailMajorSvgMjs.S
);
parcelHelpers.export(exports, "FoodMajor", ()=>_foodMajorSvgMjs.S
);
parcelHelpers.export(exports, "FooterMajor", ()=>_footerMajorSvgMjs.S
);
parcelHelpers.export(exports, "FormsMajor", ()=>_formsMajorSvgMjs.S
);
parcelHelpers.export(exports, "FraudProtectMajor", ()=>_fraudProtectMajorSvgMjs.S
);
parcelHelpers.export(exports, "FraudProtectMinor", ()=>_fraudProtectMinorSvgMjs.S
);
parcelHelpers.export(exports, "FraudProtectPendingMajor", ()=>_fraudProtectPendingMajorSvgMjs.S
);
parcelHelpers.export(exports, "FraudProtectPendingMinor", ()=>_fraudProtectPendingMinorSvgMjs.S
);
parcelHelpers.export(exports, "FraudProtectUnprotectedMajor", ()=>_fraudProtectUnprotectedMajorSvgMjs.S
);
parcelHelpers.export(exports, "FraudProtectUnprotectedMinor", ()=>_fraudProtectUnprotectedMinorSvgMjs.S
);
parcelHelpers.export(exports, "GamesConsoleMajor", ()=>_gamesConsoleMajorSvgMjs.S
);
parcelHelpers.export(exports, "GiftCardMajor", ()=>_giftCardMajorSvgMjs.S
);
parcelHelpers.export(exports, "GiftCardMinor", ()=>_giftCardMinorSvgMjs.S
);
parcelHelpers.export(exports, "GlobeMajor", ()=>_globeMajorSvgMjs.S
);
parcelHelpers.export(exports, "GlobeMinor", ()=>_globeMinorSvgMjs.S
);
parcelHelpers.export(exports, "GrammarMajor", ()=>_grammarMajorSvgMjs.S
);
parcelHelpers.export(exports, "HashtagMajor", ()=>_hashtagMajorSvgMjs.S
);
parcelHelpers.export(exports, "HeaderMajor", ()=>_headerMajorSvgMjs.S
);
parcelHelpers.export(exports, "HeartMajor", ()=>_heartMajorSvgMjs.S
);
parcelHelpers.export(exports, "HideKeyboardMajor", ()=>_hideKeyboardMajorSvgMjs.S
);
parcelHelpers.export(exports, "HideMinor", ()=>_hideMinorSvgMjs.S
);
parcelHelpers.export(exports, "HintMajor", ()=>_hintMajorSvgMjs.S
);
parcelHelpers.export(exports, "HomeMajor", ()=>_homeMajorSvgMjs.S
);
parcelHelpers.export(exports, "HorizontalDotsMinor", ()=>_horizontalDotsMinorSvgMjs.S
);
parcelHelpers.export(exports, "IconsMajor", ()=>_iconsMajorSvgMjs.S
);
parcelHelpers.export(exports, "IllustrationMajor", ()=>_illustrationMajorSvgMjs.S
);
parcelHelpers.export(exports, "ImageAltMajor", ()=>_imageAltMajorSvgMjs.S
);
parcelHelpers.export(exports, "ImageAltMinor", ()=>_imageAltMinorSvgMjs.S
);
parcelHelpers.export(exports, "ImageMajor", ()=>_imageMajorSvgMjs.S
);
parcelHelpers.export(exports, "ImagesMajor", ()=>_imagesMajorSvgMjs.S
);
parcelHelpers.export(exports, "ImageWithTextMajor", ()=>_imageWithTextMajorSvgMjs.S
);
parcelHelpers.export(exports, "ImageWithTextOverlayMajor", ()=>_imageWithTextOverlayMajorSvgMjs.S
);
parcelHelpers.export(exports, "ImportMinor", ()=>_importMinorSvgMjs.S
);
parcelHelpers.export(exports, "ImportStoreMajor", ()=>_importStoreMajorSvgMjs.S
);
parcelHelpers.export(exports, "IncomingMajor", ()=>_incomingMajorSvgMjs.S
);
parcelHelpers.export(exports, "InfoMinor", ()=>_infoMinorSvgMjs.S
);
parcelHelpers.export(exports, "InstallMinor", ()=>_installMinorSvgMjs.S
);
parcelHelpers.export(exports, "InventoryMajor", ()=>_inventoryMajorSvgMjs.S
);
parcelHelpers.export(exports, "InviteMinor", ()=>_inviteMinorSvgMjs.S
);
parcelHelpers.export(exports, "IqMajor", ()=>_iqMajorSvgMjs.S
);
parcelHelpers.export(exports, "JobsMajor", ()=>_jobsMajorSvgMjs.S
);
parcelHelpers.export(exports, "KeyMajor", ()=>_keyMajorSvgMjs.S
);
parcelHelpers.export(exports, "LabelPrinterMajor", ()=>_labelPrinterMajorSvgMjs.S
);
parcelHelpers.export(exports, "LandingPageMajor", ()=>_landingPageMajorSvgMjs.S
);
parcelHelpers.export(exports, "LanguageMinor", ()=>_languageMinorSvgMjs.S
);
parcelHelpers.export(exports, "LegalMajor", ()=>_legalMajorSvgMjs.S
);
parcelHelpers.export(exports, "LinkMinor", ()=>_linkMinorSvgMjs.S
);
parcelHelpers.export(exports, "ListMajor", ()=>_listMajorSvgMjs.S
);
parcelHelpers.export(exports, "LiveViewMajor", ()=>_liveViewMajorSvgMjs.S
);
parcelHelpers.export(exports, "LocationMajor", ()=>_locationMajorSvgMjs.S
);
parcelHelpers.export(exports, "LocationsMinor", ()=>_locationsMinorSvgMjs.S
);
parcelHelpers.export(exports, "LockMajor", ()=>_lockMajorSvgMjs.S
);
parcelHelpers.export(exports, "LockMinor", ()=>_lockMinorSvgMjs.S
);
parcelHelpers.export(exports, "LogoBlockMajor", ()=>_logoBlockMajorSvgMjs.S
);
parcelHelpers.export(exports, "LogOutMinor", ()=>_logOutMinorSvgMjs.S
);
parcelHelpers.export(exports, "ManagedStoreMajor", ()=>_managedStoreMajorSvgMjs.S
);
parcelHelpers.export(exports, "MarketingMajor", ()=>_marketingMajorSvgMjs.S
);
parcelHelpers.export(exports, "MarkFulfilledMinor", ()=>_markFulfilledMinorSvgMjs.S
);
parcelHelpers.export(exports, "MarkPaidMinor", ()=>_markPaidMinorSvgMjs.S
);
parcelHelpers.export(exports, "MaximizeMajor", ()=>_maximizeMajorSvgMjs.S
);
parcelHelpers.export(exports, "MaximizeMinor", ()=>_maximizeMinorSvgMjs.S
);
parcelHelpers.export(exports, "MentionMajor", ()=>_mentionMajorSvgMjs.S
);
parcelHelpers.export(exports, "MicrophoneMajor", ()=>_microphoneMajorSvgMjs.S
);
parcelHelpers.export(exports, "MinimizeMajor", ()=>_minimizeMajorSvgMjs.S
);
parcelHelpers.export(exports, "MinimizeMinor", ()=>_minimizeMinorSvgMjs.S
);
parcelHelpers.export(exports, "MinusMinor", ()=>_minusMinorSvgMjs.S
);
parcelHelpers.export(exports, "MobileAcceptMajor", ()=>_mobileAcceptMajorSvgMjs.S
);
parcelHelpers.export(exports, "MobileBackArrowMajor", ()=>_mobileBackArrowMajorSvgMjs.S
);
parcelHelpers.export(exports, "MobileCancelMajor", ()=>_mobileCancelMajorSvgMjs.S
);
parcelHelpers.export(exports, "MobileChevronMajor", ()=>_mobileChevronMajorSvgMjs.S
);
parcelHelpers.export(exports, "MobileHamburgerMajor", ()=>_mobileHamburgerMajorSvgMjs.S
);
parcelHelpers.export(exports, "MobileHorizontalDotsMajor", ()=>_mobileHorizontalDotsMajorSvgMjs.S
);
parcelHelpers.export(exports, "MobileMajor", ()=>_mobileMajorSvgMjs.S
);
parcelHelpers.export(exports, "MobilePlusMajor", ()=>_mobilePlusMajorSvgMjs.S
);
parcelHelpers.export(exports, "MobileVerticalDotsMajor", ()=>_mobileVerticalDotsMajorSvgMjs.S
);
parcelHelpers.export(exports, "MonerisMajor", ()=>_monerisMajorSvgMjs.S
);
parcelHelpers.export(exports, "NatureMajor", ()=>_natureMajorSvgMjs.S
);
parcelHelpers.export(exports, "NavigationMajor", ()=>_navigationMajorSvgMjs.S
);
parcelHelpers.export(exports, "NoteMajor", ()=>_noteMajorSvgMjs.S
);
parcelHelpers.export(exports, "NoteMinor", ()=>_noteMinorSvgMjs.S
);
parcelHelpers.export(exports, "NotificationMajor", ()=>_notificationMajorSvgMjs.S
);
parcelHelpers.export(exports, "OnlineStoreMajor", ()=>_onlineStoreMajorSvgMjs.S
);
parcelHelpers.export(exports, "OrdersMajor", ()=>_ordersMajorSvgMjs.S
);
parcelHelpers.export(exports, "OrderStatusMinor", ()=>_orderStatusMinorSvgMjs.S
);
parcelHelpers.export(exports, "OutgoingMajor", ()=>_outgoingMajorSvgMjs.S
);
parcelHelpers.export(exports, "PackageMajor", ()=>_packageMajorSvgMjs.S
);
parcelHelpers.export(exports, "PageDownMajor", ()=>_pageDownMajorSvgMjs.S
);
parcelHelpers.export(exports, "PageMajor", ()=>_pageMajorSvgMjs.S
);
parcelHelpers.export(exports, "PageMinusMajor", ()=>_pageMinusMajorSvgMjs.S
);
parcelHelpers.export(exports, "PagePlusMajor", ()=>_pagePlusMajorSvgMjs.S
);
parcelHelpers.export(exports, "PageUpMajor", ()=>_pageUpMajorSvgMjs.S
);
parcelHelpers.export(exports, "PaginationEndMinor", ()=>_paginationEndMinorSvgMjs.S
);
parcelHelpers.export(exports, "PaginationStartMinor", ()=>_paginationStartMinorSvgMjs.S
);
parcelHelpers.export(exports, "PaintBrushMajor", ()=>_paintBrushMajorSvgMjs.S
);
parcelHelpers.export(exports, "PauseCircleMajor", ()=>_pauseCircleMajorSvgMjs.S
);
parcelHelpers.export(exports, "PauseMajor", ()=>_pauseMajorSvgMjs.S
);
parcelHelpers.export(exports, "PauseMinor", ()=>_pauseMinorSvgMjs.S
);
parcelHelpers.export(exports, "PaymentsMajor", ()=>_paymentsMajorSvgMjs.S
);
parcelHelpers.export(exports, "PhoneInMajor", ()=>_phoneInMajorSvgMjs.S
);
parcelHelpers.export(exports, "PhoneMajor", ()=>_phoneMajorSvgMjs.S
);
parcelHelpers.export(exports, "PhoneOutMajor", ()=>_phoneOutMajorSvgMjs.S
);
parcelHelpers.export(exports, "PinMajor", ()=>_pinMajorSvgMjs.S
);
parcelHelpers.export(exports, "PinMinor", ()=>_pinMinorSvgMjs.S
);
parcelHelpers.export(exports, "PlayCircleMajor", ()=>_playCircleMajorSvgMjs.S
);
parcelHelpers.export(exports, "PlayMajor", ()=>_playMajorSvgMjs.S
);
parcelHelpers.export(exports, "PlayMinor", ()=>_playMinorSvgMjs.S
);
parcelHelpers.export(exports, "PlusMinor", ()=>_plusMinorSvgMjs.S
);
parcelHelpers.export(exports, "PointOfSaleMajor", ()=>_pointOfSaleMajorSvgMjs.S
);
parcelHelpers.export(exports, "PopularMajor", ()=>_popularMajorSvgMjs.S
);
parcelHelpers.export(exports, "PriceLookupMinor", ()=>_priceLookupMinorSvgMjs.S
);
parcelHelpers.export(exports, "PrintMajor", ()=>_printMajorSvgMjs.S
);
parcelHelpers.export(exports, "PrintMinor", ()=>_printMinorSvgMjs.S
);
parcelHelpers.export(exports, "ProductReturnsMinor", ()=>_productReturnsMinorSvgMjs.S
);
parcelHelpers.export(exports, "ProductsMajor", ()=>_productsMajorSvgMjs.S
);
parcelHelpers.export(exports, "ProfileMajor", ()=>_profileMajorSvgMjs.S
);
parcelHelpers.export(exports, "ProfileMinor", ()=>_profileMinorSvgMjs.S
);
parcelHelpers.export(exports, "PromoteMinor", ()=>_promoteMinorSvgMjs.S
);
parcelHelpers.export(exports, "QuestionMarkInverseMajor", ()=>_questionMarkInverseMajorSvgMjs.S
);
parcelHelpers.export(exports, "QuestionMarkInverseMinor", ()=>_questionMarkInverseMinorSvgMjs.S
);
parcelHelpers.export(exports, "QuestionMarkMajor", ()=>_questionMarkMajorSvgMjs.S
);
parcelHelpers.export(exports, "QuestionMarkMinor", ()=>_questionMarkMinorSvgMjs.S
);
parcelHelpers.export(exports, "QuickSaleMajor", ()=>_quickSaleMajorSvgMjs.S
);
parcelHelpers.export(exports, "ReadTimeMinor", ()=>_readTimeMinorSvgMjs.S
);
parcelHelpers.export(exports, "ReceiptMajor", ()=>_receiptMajorSvgMjs.S
);
parcelHelpers.export(exports, "RecentSearchesMajor", ()=>_recentSearchesMajorSvgMjs.S
);
parcelHelpers.export(exports, "RedoMajor", ()=>_redoMajorSvgMjs.S
);
parcelHelpers.export(exports, "ReferralCodeMajor", ()=>_referralCodeMajorSvgMjs.S
);
parcelHelpers.export(exports, "ReferralMajor", ()=>_referralMajorSvgMjs.S
);
parcelHelpers.export(exports, "RefreshMajor", ()=>_refreshMajorSvgMjs.S
);
parcelHelpers.export(exports, "RefreshMinor", ()=>_refreshMinorSvgMjs.S
);
parcelHelpers.export(exports, "RefundMajor", ()=>_refundMajorSvgMjs.S
);
parcelHelpers.export(exports, "RefundMinor", ()=>_refundMinorSvgMjs.S
);
parcelHelpers.export(exports, "RemoveProductMajor", ()=>_removeProductMajorSvgMjs.S
);
parcelHelpers.export(exports, "RepeatOrderMajor", ()=>_repeatOrderMajorSvgMjs.S
);
parcelHelpers.export(exports, "ReplaceMajor", ()=>_replaceMajorSvgMjs.S
);
parcelHelpers.export(exports, "ReplayMinor", ()=>_replayMinorSvgMjs.S
);
parcelHelpers.export(exports, "ReportMinor", ()=>_reportMinorSvgMjs.S
);
parcelHelpers.export(exports, "ReportsMajor", ()=>_reportsMajorSvgMjs.S
);
parcelHelpers.export(exports, "ResetMinor", ()=>_resetMinorSvgMjs.S
);
parcelHelpers.export(exports, "ResourcesMajor", ()=>_resourcesMajorSvgMjs.S
);
parcelHelpers.export(exports, "ReturnMinor", ()=>_returnMinorSvgMjs.S
);
parcelHelpers.export(exports, "RiskMajor", ()=>_riskMajorSvgMjs.S
);
parcelHelpers.export(exports, "RiskMinor", ()=>_riskMinorSvgMjs.S
);
parcelHelpers.export(exports, "SandboxMajor", ()=>_sandboxMajorSvgMjs.S
);
parcelHelpers.export(exports, "SaveMinor", ()=>_saveMinorSvgMjs.S
);
parcelHelpers.export(exports, "SearchMajor", ()=>_searchMajorSvgMjs.S
);
parcelHelpers.export(exports, "SearchMinor", ()=>_searchMinorSvgMjs.S
);
parcelHelpers.export(exports, "SectionMajor", ()=>_sectionMajorSvgMjs.S
);
parcelHelpers.export(exports, "SecureMajor", ()=>_secureMajorSvgMjs.S
);
parcelHelpers.export(exports, "SelectMinor", ()=>_selectMinorSvgMjs.S
);
parcelHelpers.export(exports, "SendMajor", ()=>_sendMajorSvgMjs.S
);
parcelHelpers.export(exports, "SettingsMajor", ()=>_settingsMajorSvgMjs.S
);
parcelHelpers.export(exports, "SettingsMinor", ()=>_settingsMinorSvgMjs.S
);
parcelHelpers.export(exports, "ShareIosMinor", ()=>_shareIosMinorSvgMjs.S
);
parcelHelpers.export(exports, "ShareMinor", ()=>_shareMinorSvgMjs.S
);
parcelHelpers.export(exports, "ShipmentMajor", ()=>_shipmentMajorSvgMjs.S
);
parcelHelpers.export(exports, "ShopcodesMajor", ()=>_shopcodesMajorSvgMjs.S
);
parcelHelpers.export(exports, "SidebarLeftMajor", ()=>_sidebarLeftMajorSvgMjs.S
);
parcelHelpers.export(exports, "SidebarRightMajor", ()=>_sidebarRightMajorSvgMjs.S
);
parcelHelpers.export(exports, "SlideshowMajor", ()=>_slideshowMajorSvgMjs.S
);
parcelHelpers.export(exports, "SmileyHappyMajor", ()=>_smileyHappyMajorSvgMjs.S
);
parcelHelpers.export(exports, "SmileyJoyMajor", ()=>_smileyJoyMajorSvgMjs.S
);
parcelHelpers.export(exports, "SmileyNeutralMajor", ()=>_smileyNeutralMajorSvgMjs.S
);
parcelHelpers.export(exports, "SmileySadMajor", ()=>_smileySadMajorSvgMjs.S
);
parcelHelpers.export(exports, "SocialAdMajor", ()=>_socialAdMajorSvgMjs.S
);
parcelHelpers.export(exports, "SocialPostMajor", ()=>_socialPostMajorSvgMjs.S
);
parcelHelpers.export(exports, "SoftPackMajor", ()=>_softPackMajorSvgMjs.S
);
parcelHelpers.export(exports, "SortAscendingMajor", ()=>_sortAscendingMajorSvgMjs.S
);
parcelHelpers.export(exports, "SortDescendingMajor", ()=>_sortDescendingMajorSvgMjs.S
);
parcelHelpers.export(exports, "SortMinor", ()=>_sortMinorSvgMjs.S
);
parcelHelpers.export(exports, "SoundMajor", ()=>_soundMajorSvgMjs.S
);
parcelHelpers.export(exports, "StarFilledMinor", ()=>_starFilledMinorSvgMjs.S
);
parcelHelpers.export(exports, "StarOutlineMinor", ()=>_starOutlineMinorSvgMjs.S
);
parcelHelpers.export(exports, "StoreMajor", ()=>_storeMajorSvgMjs.S
);
parcelHelpers.export(exports, "StoreMinor", ()=>_storeMinorSvgMjs.S
);
parcelHelpers.export(exports, "StoreStatusMajor", ()=>_storeStatusMajorSvgMjs.S
);
parcelHelpers.export(exports, "TabletMajor", ()=>_tabletMajorSvgMjs.S
);
parcelHelpers.export(exports, "TapChipMajor", ()=>_tapChipMajorSvgMjs.S
);
parcelHelpers.export(exports, "TaxMajor", ()=>_taxMajorSvgMjs.S
);
parcelHelpers.export(exports, "TeamMajor", ()=>_teamMajorSvgMjs.S
);
parcelHelpers.export(exports, "TemplateMajor", ()=>_templateMajorSvgMjs.S
);
parcelHelpers.export(exports, "TextAlignmentCenterMajor", ()=>_textAlignmentCenterMajorSvgMjs.S
);
parcelHelpers.export(exports, "TextAlignmentLeftMajor", ()=>_textAlignmentLeftMajorSvgMjs.S
);
parcelHelpers.export(exports, "TextAlignmentRightMajor", ()=>_textAlignmentRightMajorSvgMjs.S
);
parcelHelpers.export(exports, "TextBlockMajor", ()=>_textBlockMajorSvgMjs.S
);
parcelHelpers.export(exports, "TextMajor", ()=>_textMajorSvgMjs.S
);
parcelHelpers.export(exports, "ThemeEditMajor", ()=>_themeEditMajorSvgMjs.S
);
parcelHelpers.export(exports, "ThemesMajor", ()=>_themesMajorSvgMjs.S
);
parcelHelpers.export(exports, "ThemeStoreMajor", ()=>_themeStoreMajorSvgMjs.S
);
parcelHelpers.export(exports, "ThumbsDownMajor", ()=>_thumbsDownMajorSvgMjs.S
);
parcelHelpers.export(exports, "ThumbsDownMinor", ()=>_thumbsDownMinorSvgMjs.S
);
parcelHelpers.export(exports, "ThumbsUpMajor", ()=>_thumbsUpMajorSvgMjs.S
);
parcelHelpers.export(exports, "ThumbsUpMinor", ()=>_thumbsUpMinorSvgMjs.S
);
parcelHelpers.export(exports, "TickMinor", ()=>_tickMinorSvgMjs.S
);
parcelHelpers.export(exports, "TickSmallMinor", ()=>_tickSmallMinorSvgMjs.S
);
parcelHelpers.export(exports, "TimelineAttachmentMajor", ()=>_timelineAttachmentMajorSvgMjs.S
);
parcelHelpers.export(exports, "TipsMajor", ()=>_tipsMajorSvgMjs.S
);
parcelHelpers.export(exports, "TitleMinor", ()=>_titleMinorSvgMjs.S
);
parcelHelpers.export(exports, "ToolsMajor", ()=>_toolsMajorSvgMjs.S
);
parcelHelpers.export(exports, "TransactionFeeDollarMajor", ()=>_transactionFeeDollarMajorSvgMjs.S
);
parcelHelpers.export(exports, "TransactionFeeEuroMajor", ()=>_transactionFeeEuroMajorSvgMjs.S
);
parcelHelpers.export(exports, "TransactionFeePoundMajor", ()=>_transactionFeePoundMajorSvgMjs.S
);
parcelHelpers.export(exports, "TransactionFeeRupeeMajor", ()=>_transactionFeeRupeeMajorSvgMjs.S
);
parcelHelpers.export(exports, "TransactionFeeYenMajor", ()=>_transactionFeeYenMajorSvgMjs.S
);
parcelHelpers.export(exports, "TransactionMajor", ()=>_transactionMajorSvgMjs.S
);
parcelHelpers.export(exports, "TransferInMajor", ()=>_transferInMajorSvgMjs.S
);
parcelHelpers.export(exports, "TransferMajor", ()=>_transferMajorSvgMjs.S
);
parcelHelpers.export(exports, "TransferOutMajor", ()=>_transferOutMajorSvgMjs.S
);
parcelHelpers.export(exports, "TransferWithinShopifyMajor", ()=>_transferWithinShopifyMajorSvgMjs.S
);
parcelHelpers.export(exports, "TransportMajor", ()=>_transportMajorSvgMjs.S
);
parcelHelpers.export(exports, "TroubleshootMajor", ()=>_troubleshootMajorSvgMjs.S
);
parcelHelpers.export(exports, "TypeMajor", ()=>_typeMajorSvgMjs.S
);
parcelHelpers.export(exports, "UndoMajor", ()=>_undoMajorSvgMjs.S
);
parcelHelpers.export(exports, "UnfulfilledMajor", ()=>_unfulfilledMajorSvgMjs.S
);
parcelHelpers.export(exports, "UnknownDeviceMajor", ()=>_unknownDeviceMajorSvgMjs.S
);
parcelHelpers.export(exports, "UpdateInventoryMajor", ()=>_updateInventoryMajorSvgMjs.S
);
parcelHelpers.export(exports, "UploadMajor", ()=>_uploadMajorSvgMjs.S
);
parcelHelpers.export(exports, "VariantMajor", ()=>_variantMajorSvgMjs.S
);
parcelHelpers.export(exports, "ViewMajor", ()=>_viewMajorSvgMjs.S
);
parcelHelpers.export(exports, "ViewMinor", ()=>_viewMinorSvgMjs.S
);
parcelHelpers.export(exports, "ViewportNarrowMajor", ()=>_viewportNarrowMajorSvgMjs.S
);
parcelHelpers.export(exports, "ViewportWideMajor", ()=>_viewportWideMajorSvgMjs.S
);
parcelHelpers.export(exports, "VocabularyMajor", ()=>_vocabularyMajorSvgMjs.S
);
parcelHelpers.export(exports, "WandMajor", ()=>_wandMajorSvgMjs.S
);
parcelHelpers.export(exports, "WearableMajor", ()=>_wearableMajorSvgMjs.S
);
parcelHelpers.export(exports, "WholesaleMajor", ()=>_wholesaleMajorSvgMjs.S
);
parcelHelpers.export(exports, "WifiMajor", ()=>_wifiMajorSvgMjs.S
);
var _react = require("react");
var _abandonedCartMajorSvgMjs = require("./icons/AbandonedCartMajor.svg.mjs");
var _accessibilityMajorSvgMjs = require("./icons/AccessibilityMajor.svg.mjs");
var _activitiesMajorSvgMjs = require("./icons/ActivitiesMajor.svg.mjs");
var _addCodeMajorSvgMjs = require("./icons/AddCodeMajor.svg.mjs");
var _addImageMajorSvgMjs = require("./icons/AddImageMajor.svg.mjs");
var _addMajorSvgMjs = require("./icons/AddMajor.svg.mjs");
var _addNoteMajorSvgMjs = require("./icons/AddNoteMajor.svg.mjs");
var _addProductMajorSvgMjs = require("./icons/AddProductMajor.svg.mjs");
var _affiliateMajorSvgMjs = require("./icons/AffiliateMajor.svg.mjs");
var _alertMinorSvgMjs = require("./icons/AlertMinor.svg.mjs");
var _analyticsMajorSvgMjs = require("./icons/AnalyticsMajor.svg.mjs");
var _appExtensionMinorSvgMjs = require("./icons/AppExtensionMinor.svg.mjs");
var _appsMajorSvgMjs = require("./icons/AppsMajor.svg.mjs");
var _archiveMajorSvgMjs = require("./icons/ArchiveMajor.svg.mjs");
var _archiveMinorSvgMjs = require("./icons/ArchiveMinor.svg.mjs");
var _arrowDownMinorSvgMjs = require("./icons/ArrowDownMinor.svg.mjs");
var _arrowLeftMinorSvgMjs = require("./icons/ArrowLeftMinor.svg.mjs");
var _arrowRightMinorSvgMjs = require("./icons/ArrowRightMinor.svg.mjs");
var _arrowUpMinorSvgMjs = require("./icons/ArrowUpMinor.svg.mjs");
var _attachmentMajorSvgMjs = require("./icons/AttachmentMajor.svg.mjs");
var _automationMajorSvgMjs = require("./icons/AutomationMajor.svg.mjs");
var _backspaceMajorSvgMjs = require("./icons/BackspaceMajor.svg.mjs");
var _balanceMajorSvgMjs = require("./icons/BalanceMajor.svg.mjs");
var _bankMajorSvgMjs = require("./icons/BankMajor.svg.mjs");
var _barcodeMajorSvgMjs = require("./icons/BarcodeMajor.svg.mjs");
var _behaviorMajorSvgMjs = require("./icons/BehaviorMajor.svg.mjs");
var _billingStatementDollarMajorSvgMjs = require("./icons/BillingStatementDollarMajor.svg.mjs");
var _billingStatementEuroMajorSvgMjs = require("./icons/BillingStatementEuroMajor.svg.mjs");
var _billingStatementPoundMajorSvgMjs = require("./icons/BillingStatementPoundMajor.svg.mjs");
var _billingStatementRupeeMajorSvgMjs = require("./icons/BillingStatementRupeeMajor.svg.mjs");
var _billingStatementYenMajorSvgMjs = require("./icons/BillingStatementYenMajor.svg.mjs");
var _blockMinorSvgMjs = require("./icons/BlockMinor.svg.mjs");
var _blockquoteMajorSvgMjs = require("./icons/BlockquoteMajor.svg.mjs");
var _blogMajorSvgMjs = require("./icons/BlogMajor.svg.mjs");
var _bugMajorSvgMjs = require("./icons/BugMajor.svg.mjs");
var _buttonCornerPillMajorSvgMjs = require("./icons/ButtonCornerPillMajor.svg.mjs");
var _buttonCornerRoundedMajorSvgMjs = require("./icons/ButtonCornerRoundedMajor.svg.mjs");
var _buttonCornerSquareMajorSvgMjs = require("./icons/ButtonCornerSquareMajor.svg.mjs");
var _buttonMinorSvgMjs = require("./icons/ButtonMinor.svg.mjs");
var _buyButtonButtonLayoutMajorSvgMjs = require("./icons/BuyButtonButtonLayoutMajor.svg.mjs");
var _buyButtonHorizontalLayoutMajorSvgMjs = require("./icons/BuyButtonHorizontalLayoutMajor.svg.mjs");
var _buyButtonMajorSvgMjs = require("./icons/BuyButtonMajor.svg.mjs");
var _buyButtonVerticalLayoutMajorSvgMjs = require("./icons/BuyButtonVerticalLayoutMajor.svg.mjs");
var _calendarMajorSvgMjs = require("./icons/CalendarMajor.svg.mjs");
var _calendarMinorSvgMjs = require("./icons/CalendarMinor.svg.mjs");
var _calendarTickMajorSvgMjs = require("./icons/CalendarTickMajor.svg.mjs");
var _cameraMajorSvgMjs = require("./icons/CameraMajor.svg.mjs");
var _cancelSmallMinorSvgMjs = require("./icons/CancelSmallMinor.svg.mjs");
var _capitalMajorSvgMjs = require("./icons/CapitalMajor.svg.mjs");
var _capturePaymentMinorSvgMjs = require("./icons/CapturePaymentMinor.svg.mjs");
var _cardReaderChipMajorSvgMjs = require("./icons/CardReaderChipMajor.svg.mjs");
var _cardReaderMajorSvgMjs = require("./icons/CardReaderMajor.svg.mjs");
var _cardReaderTapMajorSvgMjs = require("./icons/CardReaderTapMajor.svg.mjs");
var _caretDownMinorSvgMjs = require("./icons/CaretDownMinor.svg.mjs");
var _caretUpMinorSvgMjs = require("./icons/CaretUpMinor.svg.mjs");
var _cartDownMajorSvgMjs = require("./icons/CartDownMajor.svg.mjs");
var _cartMajorSvgMjs = require("./icons/CartMajor.svg.mjs");
var _cartUpMajorSvgMjs = require("./icons/CartUpMajor.svg.mjs");
var _cashDollarMajorSvgMjs = require("./icons/CashDollarMajor.svg.mjs");
var _cashEuroMajorSvgMjs = require("./icons/CashEuroMajor.svg.mjs");
var _cashPoundMajorSvgMjs = require("./icons/CashPoundMajor.svg.mjs");
var _cashRupeeMajorSvgMjs = require("./icons/CashRupeeMajor.svg.mjs");
var _cashYenMajorSvgMjs = require("./icons/CashYenMajor.svg.mjs");
var _categoriesMajorSvgMjs = require("./icons/CategoriesMajor.svg.mjs");
var _channelsMajorSvgMjs = require("./icons/ChannelsMajor.svg.mjs");
var _chatMajorSvgMjs = require("./icons/ChatMajor.svg.mjs");
var _checklistAlternateMajorSvgMjs = require("./icons/ChecklistAlternateMajor.svg.mjs");
var _checklistMajorSvgMjs = require("./icons/ChecklistMajor.svg.mjs");
var _checkoutMajorSvgMjs = require("./icons/CheckoutMajor.svg.mjs");
var _chevronDownMinorSvgMjs = require("./icons/ChevronDownMinor.svg.mjs");
var _chevronLeftMinorSvgMjs = require("./icons/ChevronLeftMinor.svg.mjs");
var _chevronRightMinorSvgMjs = require("./icons/ChevronRightMinor.svg.mjs");
var _chevronUpMinorSvgMjs = require("./icons/ChevronUpMinor.svg.mjs");
var _circleAlertMajorSvgMjs = require("./icons/CircleAlertMajor.svg.mjs");
var _circleCancelMajorSvgMjs = require("./icons/CircleCancelMajor.svg.mjs");
var _circleCancelMinorSvgMjs = require("./icons/CircleCancelMinor.svg.mjs");
var _circleChevronDownMinorSvgMjs = require("./icons/CircleChevronDownMinor.svg.mjs");
var _circleChevronLeftMinorSvgMjs = require("./icons/CircleChevronLeftMinor.svg.mjs");
var _circleChevronRightMinorSvgMjs = require("./icons/CircleChevronRightMinor.svg.mjs");
var _circleChevronUpMinorSvgMjs = require("./icons/CircleChevronUpMinor.svg.mjs");
var _circleDisabledMajorSvgMjs = require("./icons/CircleDisabledMajor.svg.mjs");
var _circleDisableMinorSvgMjs = require("./icons/CircleDisableMinor.svg.mjs");
var _circleDotsMajorSvgMjs = require("./icons/CircleDotsMajor.svg.mjs");
var _circleDownMajorSvgMjs = require("./icons/CircleDownMajor.svg.mjs");
var _circleInformationMajorSvgMjs = require("./icons/CircleInformationMajor.svg.mjs");
var _circleLeftMajorSvgMjs = require("./icons/CircleLeftMajor.svg.mjs");
var _circleMinusMajorSvgMjs = require("./icons/CircleMinusMajor.svg.mjs");
var _circleMinusMinorSvgMjs = require("./icons/CircleMinusMinor.svg.mjs");
var _circleMinusOutlineMinorSvgMjs = require("./icons/CircleMinusOutlineMinor.svg.mjs");
var _circlePlusMajorSvgMjs = require("./icons/CirclePlusMajor.svg.mjs");
var _circlePlusMinorSvgMjs = require("./icons/CirclePlusMinor.svg.mjs");
var _circlePlusOutlineMinorSvgMjs = require("./icons/CirclePlusOutlineMinor.svg.mjs");
var _circleRightMajorSvgMjs = require("./icons/CircleRightMajor.svg.mjs");
var _circleTickMajorSvgMjs = require("./icons/CircleTickMajor.svg.mjs");
var _circleTickOutlineMinorSvgMjs = require("./icons/CircleTickOutlineMinor.svg.mjs");
var _circleUpMajorSvgMjs = require("./icons/CircleUpMajor.svg.mjs");
var _clipboardMinorSvgMjs = require("./icons/ClipboardMinor.svg.mjs");
var _clockMajorSvgMjs = require("./icons/ClockMajor.svg.mjs");
var _clockMinorSvgMjs = require("./icons/ClockMinor.svg.mjs");
var _codeMajorSvgMjs = require("./icons/CodeMajor.svg.mjs");
var _collectionsMajorSvgMjs = require("./icons/CollectionsMajor.svg.mjs");
var _colorNoneMinorSvgMjs = require("./icons/ColorNoneMinor.svg.mjs");
var _colorsMajorSvgMjs = require("./icons/ColorsMajor.svg.mjs");
var _column1MajorSvgMjs = require("./icons/Column1Major.svg.mjs");
var _columns2MajorSvgMjs = require("./icons/Columns2Major.svg.mjs");
var _columns3MajorSvgMjs = require("./icons/Columns3Major.svg.mjs");
var _columnWithTextMajorSvgMjs = require("./icons/ColumnWithTextMajor.svg.mjs");
var _composeMajorSvgMjs = require("./icons/ComposeMajor.svg.mjs");
var _confettiMajorSvgMjs = require("./icons/ConfettiMajor.svg.mjs");
var _connectMinorSvgMjs = require("./icons/ConnectMinor.svg.mjs");
var _conversationMinorSvgMjs = require("./icons/ConversationMinor.svg.mjs");
var _creditCardMajorSvgMjs = require("./icons/CreditCardMajor.svg.mjs");
var _creditCardPercentMajorSvgMjs = require("./icons/CreditCardPercentMajor.svg.mjs");
var _creditCardSecureMajorSvgMjs = require("./icons/CreditCardSecureMajor.svg.mjs");
var _currencyConvertMinorSvgMjs = require("./icons/CurrencyConvertMinor.svg.mjs");
var _customerMinusMajorSvgMjs = require("./icons/CustomerMinusMajor.svg.mjs");
var _customerPlusMajorSvgMjs = require("./icons/CustomerPlusMajor.svg.mjs");
var _customersMajorSvgMjs = require("./icons/CustomersMajor.svg.mjs");
var _customersMinorSvgMjs = require("./icons/CustomersMinor.svg.mjs");
var _dataVisualizationMajorSvgMjs = require("./icons/DataVisualizationMajor.svg.mjs");
var _deleteMajorSvgMjs = require("./icons/DeleteMajor.svg.mjs");
var _deleteMinorSvgMjs = require("./icons/DeleteMinor.svg.mjs");
var _desktopMajorSvgMjs = require("./icons/DesktopMajor.svg.mjs");
var _detailedPopUpMajorSvgMjs = require("./icons/DetailedPopUpMajor.svg.mjs");
var _diamondAlertMajorSvgMjs = require("./icons/DiamondAlertMajor.svg.mjs");
var _digitalMediaReceiverMajorSvgMjs = require("./icons/DigitalMediaReceiverMajor.svg.mjs");
var _discountAutomaticMajorSvgMjs = require("./icons/DiscountAutomaticMajor.svg.mjs");
var _discountCodeMajorSvgMjs = require("./icons/DiscountCodeMajor.svg.mjs");
var _discountsMajorSvgMjs = require("./icons/DiscountsMajor.svg.mjs");
var _disputeMinorSvgMjs = require("./icons/DisputeMinor.svg.mjs");
var _dnsSettingsMajorSvgMjs = require("./icons/DnsSettingsMajor.svg.mjs");
var _domainNewMajorSvgMjs = require("./icons/DomainNewMajor.svg.mjs");
var _domainsMajorSvgMjs = require("./icons/DomainsMajor.svg.mjs");
var _draftOrdersMajorSvgMjs = require("./icons/DraftOrdersMajor.svg.mjs");
var _dragDropMajorSvgMjs = require("./icons/DragDropMajor.svg.mjs");
var _dragHandleMinorSvgMjs = require("./icons/DragHandleMinor.svg.mjs");
var _dropdownMinorSvgMjs = require("./icons/DropdownMinor.svg.mjs");
var _duplicateMinorSvgMjs = require("./icons/DuplicateMinor.svg.mjs");
var _editMajorSvgMjs = require("./icons/EditMajor.svg.mjs");
var _editMinorSvgMjs = require("./icons/EditMinor.svg.mjs");
var _emailMajorSvgMjs = require("./icons/EmailMajor.svg.mjs");
var _emailNewsletterMajorSvgMjs = require("./icons/EmailNewsletterMajor.svg.mjs");
var _embedMinorSvgMjs = require("./icons/EmbedMinor.svg.mjs");
var _enableSelectionMinorSvgMjs = require("./icons/EnableSelectionMinor.svg.mjs");
var _envelopeMajorSvgMjs = require("./icons/EnvelopeMajor.svg.mjs");
var _exchangeMajorSvgMjs = require("./icons/ExchangeMajor.svg.mjs");
var _existingInventoryMajorSvgMjs = require("./icons/ExistingInventoryMajor.svg.mjs");
var _exitMajorSvgMjs = require("./icons/ExitMajor.svg.mjs");
var _exportMinorSvgMjs = require("./icons/ExportMinor.svg.mjs");
var _externalMinorSvgMjs = require("./icons/ExternalMinor.svg.mjs");
var _externalSmallMinorSvgMjs = require("./icons/ExternalSmallMinor.svg.mjs");
var _faviconMajorSvgMjs = require("./icons/FaviconMajor.svg.mjs");
var _favoriteMajorSvgMjs = require("./icons/FavoriteMajor.svg.mjs");
var _featuredCollectionMajorSvgMjs = require("./icons/FeaturedCollectionMajor.svg.mjs");
var _featuredContentMajorSvgMjs = require("./icons/FeaturedContentMajor.svg.mjs");
var _filterMajorSvgMjs = require("./icons/FilterMajor.svg.mjs");
var _firstOrderMajorSvgMjs = require("./icons/FirstOrderMajor.svg.mjs");
var _firstVisitMajorSvgMjs = require("./icons/FirstVisitMajor.svg.mjs");
var _flagMajorSvgMjs = require("./icons/FlagMajor.svg.mjs");
var _flipCameraMajorSvgMjs = require("./icons/FlipCameraMajor.svg.mjs");
var _folderDownMajorSvgMjs = require("./icons/FolderDownMajor.svg.mjs");
var _folderMajorSvgMjs = require("./icons/FolderMajor.svg.mjs");
var _folderMinusMajorSvgMjs = require("./icons/FolderMinusMajor.svg.mjs");
var _folderPlusMajorSvgMjs = require("./icons/FolderPlusMajor.svg.mjs");
var _folderUpMajorSvgMjs = require("./icons/FolderUpMajor.svg.mjs");
var _followUpEmailMajorSvgMjs = require("./icons/FollowUpEmailMajor.svg.mjs");
var _foodMajorSvgMjs = require("./icons/FoodMajor.svg.mjs");
var _footerMajorSvgMjs = require("./icons/FooterMajor.svg.mjs");
var _formsMajorSvgMjs = require("./icons/FormsMajor.svg.mjs");
var _fraudProtectMajorSvgMjs = require("./icons/FraudProtectMajor.svg.mjs");
var _fraudProtectMinorSvgMjs = require("./icons/FraudProtectMinor.svg.mjs");
var _fraudProtectPendingMajorSvgMjs = require("./icons/FraudProtectPendingMajor.svg.mjs");
var _fraudProtectPendingMinorSvgMjs = require("./icons/FraudProtectPendingMinor.svg.mjs");
var _fraudProtectUnprotectedMajorSvgMjs = require("./icons/FraudProtectUnprotectedMajor.svg.mjs");
var _fraudProtectUnprotectedMinorSvgMjs = require("./icons/FraudProtectUnprotectedMinor.svg.mjs");
var _gamesConsoleMajorSvgMjs = require("./icons/GamesConsoleMajor.svg.mjs");
var _giftCardMajorSvgMjs = require("./icons/GiftCardMajor.svg.mjs");
var _giftCardMinorSvgMjs = require("./icons/GiftCardMinor.svg.mjs");
var _globeMajorSvgMjs = require("./icons/GlobeMajor.svg.mjs");
var _globeMinorSvgMjs = require("./icons/GlobeMinor.svg.mjs");
var _grammarMajorSvgMjs = require("./icons/GrammarMajor.svg.mjs");
var _hashtagMajorSvgMjs = require("./icons/HashtagMajor.svg.mjs");
var _headerMajorSvgMjs = require("./icons/HeaderMajor.svg.mjs");
var _heartMajorSvgMjs = require("./icons/HeartMajor.svg.mjs");
var _hideKeyboardMajorSvgMjs = require("./icons/HideKeyboardMajor.svg.mjs");
var _hideMinorSvgMjs = require("./icons/HideMinor.svg.mjs");
var _hintMajorSvgMjs = require("./icons/HintMajor.svg.mjs");
var _homeMajorSvgMjs = require("./icons/HomeMajor.svg.mjs");
var _horizontalDotsMinorSvgMjs = require("./icons/HorizontalDotsMinor.svg.mjs");
var _iconsMajorSvgMjs = require("./icons/IconsMajor.svg.mjs");
var _illustrationMajorSvgMjs = require("./icons/IllustrationMajor.svg.mjs");
var _imageAltMajorSvgMjs = require("./icons/ImageAltMajor.svg.mjs");
var _imageAltMinorSvgMjs = require("./icons/ImageAltMinor.svg.mjs");
var _imageMajorSvgMjs = require("./icons/ImageMajor.svg.mjs");
var _imagesMajorSvgMjs = require("./icons/ImagesMajor.svg.mjs");
var _imageWithTextMajorSvgMjs = require("./icons/ImageWithTextMajor.svg.mjs");
var _imageWithTextOverlayMajorSvgMjs = require("./icons/ImageWithTextOverlayMajor.svg.mjs");
var _importMinorSvgMjs = require("./icons/ImportMinor.svg.mjs");
var _importStoreMajorSvgMjs = require("./icons/ImportStoreMajor.svg.mjs");
var _incomingMajorSvgMjs = require("./icons/IncomingMajor.svg.mjs");
var _infoMinorSvgMjs = require("./icons/InfoMinor.svg.mjs");
var _installMinorSvgMjs = require("./icons/InstallMinor.svg.mjs");
var _inventoryMajorSvgMjs = require("./icons/InventoryMajor.svg.mjs");
var _inviteMinorSvgMjs = require("./icons/InviteMinor.svg.mjs");
var _iqMajorSvgMjs = require("./icons/IqMajor.svg.mjs");
var _jobsMajorSvgMjs = require("./icons/JobsMajor.svg.mjs");
var _keyMajorSvgMjs = require("./icons/KeyMajor.svg.mjs");
var _labelPrinterMajorSvgMjs = require("./icons/LabelPrinterMajor.svg.mjs");
var _landingPageMajorSvgMjs = require("./icons/LandingPageMajor.svg.mjs");
var _languageMinorSvgMjs = require("./icons/LanguageMinor.svg.mjs");
var _legalMajorSvgMjs = require("./icons/LegalMajor.svg.mjs");
var _linkMinorSvgMjs = require("./icons/LinkMinor.svg.mjs");
var _listMajorSvgMjs = require("./icons/ListMajor.svg.mjs");
var _liveViewMajorSvgMjs = require("./icons/LiveViewMajor.svg.mjs");
var _locationMajorSvgMjs = require("./icons/LocationMajor.svg.mjs");
var _locationsMinorSvgMjs = require("./icons/LocationsMinor.svg.mjs");
var _lockMajorSvgMjs = require("./icons/LockMajor.svg.mjs");
var _lockMinorSvgMjs = require("./icons/LockMinor.svg.mjs");
var _logoBlockMajorSvgMjs = require("./icons/LogoBlockMajor.svg.mjs");
var _logOutMinorSvgMjs = require("./icons/LogOutMinor.svg.mjs");
var _managedStoreMajorSvgMjs = require("./icons/ManagedStoreMajor.svg.mjs");
var _marketingMajorSvgMjs = require("./icons/MarketingMajor.svg.mjs");
var _markFulfilledMinorSvgMjs = require("./icons/MarkFulfilledMinor.svg.mjs");
var _markPaidMinorSvgMjs = require("./icons/MarkPaidMinor.svg.mjs");
var _maximizeMajorSvgMjs = require("./icons/MaximizeMajor.svg.mjs");
var _maximizeMinorSvgMjs = require("./icons/MaximizeMinor.svg.mjs");
var _mentionMajorSvgMjs = require("./icons/MentionMajor.svg.mjs");
var _microphoneMajorSvgMjs = require("./icons/MicrophoneMajor.svg.mjs");
var _minimizeMajorSvgMjs = require("./icons/MinimizeMajor.svg.mjs");
var _minimizeMinorSvgMjs = require("./icons/MinimizeMinor.svg.mjs");
var _minusMinorSvgMjs = require("./icons/MinusMinor.svg.mjs");
var _mobileAcceptMajorSvgMjs = require("./icons/MobileAcceptMajor.svg.mjs");
var _mobileBackArrowMajorSvgMjs = require("./icons/MobileBackArrowMajor.svg.mjs");
var _mobileCancelMajorSvgMjs = require("./icons/MobileCancelMajor.svg.mjs");
var _mobileChevronMajorSvgMjs = require("./icons/MobileChevronMajor.svg.mjs");
var _mobileHamburgerMajorSvgMjs = require("./icons/MobileHamburgerMajor.svg.mjs");
var _mobileHorizontalDotsMajorSvgMjs = require("./icons/MobileHorizontalDotsMajor.svg.mjs");
var _mobileMajorSvgMjs = require("./icons/MobileMajor.svg.mjs");
var _mobilePlusMajorSvgMjs = require("./icons/MobilePlusMajor.svg.mjs");
var _mobileVerticalDotsMajorSvgMjs = require("./icons/MobileVerticalDotsMajor.svg.mjs");
var _monerisMajorSvgMjs = require("./icons/MonerisMajor.svg.mjs");
var _natureMajorSvgMjs = require("./icons/NatureMajor.svg.mjs");
var _navigationMajorSvgMjs = require("./icons/NavigationMajor.svg.mjs");
var _noteMajorSvgMjs = require("./icons/NoteMajor.svg.mjs");
var _noteMinorSvgMjs = require("./icons/NoteMinor.svg.mjs");
var _notificationMajorSvgMjs = require("./icons/NotificationMajor.svg.mjs");
var _onlineStoreMajorSvgMjs = require("./icons/OnlineStoreMajor.svg.mjs");
var _ordersMajorSvgMjs = require("./icons/OrdersMajor.svg.mjs");
var _orderStatusMinorSvgMjs = require("./icons/OrderStatusMinor.svg.mjs");
var _outgoingMajorSvgMjs = require("./icons/OutgoingMajor.svg.mjs");
var _packageMajorSvgMjs = require("./icons/PackageMajor.svg.mjs");
var _pageDownMajorSvgMjs = require("./icons/PageDownMajor.svg.mjs");
var _pageMajorSvgMjs = require("./icons/PageMajor.svg.mjs");
var _pageMinusMajorSvgMjs = require("./icons/PageMinusMajor.svg.mjs");
var _pagePlusMajorSvgMjs = require("./icons/PagePlusMajor.svg.mjs");
var _pageUpMajorSvgMjs = require("./icons/PageUpMajor.svg.mjs");
var _paginationEndMinorSvgMjs = require("./icons/PaginationEndMinor.svg.mjs");
var _paginationStartMinorSvgMjs = require("./icons/PaginationStartMinor.svg.mjs");
var _paintBrushMajorSvgMjs = require("./icons/PaintBrushMajor.svg.mjs");
var _pauseCircleMajorSvgMjs = require("./icons/PauseCircleMajor.svg.mjs");
var _pauseMajorSvgMjs = require("./icons/PauseMajor.svg.mjs");
var _pauseMinorSvgMjs = require("./icons/PauseMinor.svg.mjs");
var _paymentsMajorSvgMjs = require("./icons/PaymentsMajor.svg.mjs");
var _phoneInMajorSvgMjs = require("./icons/PhoneInMajor.svg.mjs");
var _phoneMajorSvgMjs = require("./icons/PhoneMajor.svg.mjs");
var _phoneOutMajorSvgMjs = require("./icons/PhoneOutMajor.svg.mjs");
var _pinMajorSvgMjs = require("./icons/PinMajor.svg.mjs");
var _pinMinorSvgMjs = require("./icons/PinMinor.svg.mjs");
var _playCircleMajorSvgMjs = require("./icons/PlayCircleMajor.svg.mjs");
var _playMajorSvgMjs = require("./icons/PlayMajor.svg.mjs");
var _playMinorSvgMjs = require("./icons/PlayMinor.svg.mjs");
var _plusMinorSvgMjs = require("./icons/PlusMinor.svg.mjs");
var _pointOfSaleMajorSvgMjs = require("./icons/PointOfSaleMajor.svg.mjs");
var _popularMajorSvgMjs = require("./icons/PopularMajor.svg.mjs");
var _priceLookupMinorSvgMjs = require("./icons/PriceLookupMinor.svg.mjs");
var _printMajorSvgMjs = require("./icons/PrintMajor.svg.mjs");
var _printMinorSvgMjs = require("./icons/PrintMinor.svg.mjs");
var _productReturnsMinorSvgMjs = require("./icons/ProductReturnsMinor.svg.mjs");
var _productsMajorSvgMjs = require("./icons/ProductsMajor.svg.mjs");
var _profileMajorSvgMjs = require("./icons/ProfileMajor.svg.mjs");
var _profileMinorSvgMjs = require("./icons/ProfileMinor.svg.mjs");
var _promoteMinorSvgMjs = require("./icons/PromoteMinor.svg.mjs");
var _questionMarkInverseMajorSvgMjs = require("./icons/QuestionMarkInverseMajor.svg.mjs");
var _questionMarkInverseMinorSvgMjs = require("./icons/QuestionMarkInverseMinor.svg.mjs");
var _questionMarkMajorSvgMjs = require("./icons/QuestionMarkMajor.svg.mjs");
var _questionMarkMinorSvgMjs = require("./icons/QuestionMarkMinor.svg.mjs");
var _quickSaleMajorSvgMjs = require("./icons/QuickSaleMajor.svg.mjs");
var _readTimeMinorSvgMjs = require("./icons/ReadTimeMinor.svg.mjs");
var _receiptMajorSvgMjs = require("./icons/ReceiptMajor.svg.mjs");
var _recentSearchesMajorSvgMjs = require("./icons/RecentSearchesMajor.svg.mjs");
var _redoMajorSvgMjs = require("./icons/RedoMajor.svg.mjs");
var _referralCodeMajorSvgMjs = require("./icons/ReferralCodeMajor.svg.mjs");
var _referralMajorSvgMjs = require("./icons/ReferralMajor.svg.mjs");
var _refreshMajorSvgMjs = require("./icons/RefreshMajor.svg.mjs");
var _refreshMinorSvgMjs = require("./icons/RefreshMinor.svg.mjs");
var _refundMajorSvgMjs = require("./icons/RefundMajor.svg.mjs");
var _refundMinorSvgMjs = require("./icons/RefundMinor.svg.mjs");
var _removeProductMajorSvgMjs = require("./icons/RemoveProductMajor.svg.mjs");
var _repeatOrderMajorSvgMjs = require("./icons/RepeatOrderMajor.svg.mjs");
var _replaceMajorSvgMjs = require("./icons/ReplaceMajor.svg.mjs");
var _replayMinorSvgMjs = require("./icons/ReplayMinor.svg.mjs");
var _reportMinorSvgMjs = require("./icons/ReportMinor.svg.mjs");
var _reportsMajorSvgMjs = require("./icons/ReportsMajor.svg.mjs");
var _resetMinorSvgMjs = require("./icons/ResetMinor.svg.mjs");
var _resourcesMajorSvgMjs = require("./icons/ResourcesMajor.svg.mjs");
var _returnMinorSvgMjs = require("./icons/ReturnMinor.svg.mjs");
var _riskMajorSvgMjs = require("./icons/RiskMajor.svg.mjs");
var _riskMinorSvgMjs = require("./icons/RiskMinor.svg.mjs");
var _sandboxMajorSvgMjs = require("./icons/SandboxMajor.svg.mjs");
var _saveMinorSvgMjs = require("./icons/SaveMinor.svg.mjs");
var _searchMajorSvgMjs = require("./icons/SearchMajor.svg.mjs");
var _searchMinorSvgMjs = require("./icons/SearchMinor.svg.mjs");
var _sectionMajorSvgMjs = require("./icons/SectionMajor.svg.mjs");
var _secureMajorSvgMjs = require("./icons/SecureMajor.svg.mjs");
var _selectMinorSvgMjs = require("./icons/SelectMinor.svg.mjs");
var _sendMajorSvgMjs = require("./icons/SendMajor.svg.mjs");
var _settingsMajorSvgMjs = require("./icons/SettingsMajor.svg.mjs");
var _settingsMinorSvgMjs = require("./icons/SettingsMinor.svg.mjs");
var _shareIosMinorSvgMjs = require("./icons/ShareIosMinor.svg.mjs");
var _shareMinorSvgMjs = require("./icons/ShareMinor.svg.mjs");
var _shipmentMajorSvgMjs = require("./icons/ShipmentMajor.svg.mjs");
var _shopcodesMajorSvgMjs = require("./icons/ShopcodesMajor.svg.mjs");
var _sidebarLeftMajorSvgMjs = require("./icons/SidebarLeftMajor.svg.mjs");
var _sidebarRightMajorSvgMjs = require("./icons/SidebarRightMajor.svg.mjs");
var _slideshowMajorSvgMjs = require("./icons/SlideshowMajor.svg.mjs");
var _smileyHappyMajorSvgMjs = require("./icons/SmileyHappyMajor.svg.mjs");
var _smileyJoyMajorSvgMjs = require("./icons/SmileyJoyMajor.svg.mjs");
var _smileyNeutralMajorSvgMjs = require("./icons/SmileyNeutralMajor.svg.mjs");
var _smileySadMajorSvgMjs = require("./icons/SmileySadMajor.svg.mjs");
var _socialAdMajorSvgMjs = require("./icons/SocialAdMajor.svg.mjs");
var _socialPostMajorSvgMjs = require("./icons/SocialPostMajor.svg.mjs");
var _softPackMajorSvgMjs = require("./icons/SoftPackMajor.svg.mjs");
var _sortAscendingMajorSvgMjs = require("./icons/SortAscendingMajor.svg.mjs");
var _sortDescendingMajorSvgMjs = require("./icons/SortDescendingMajor.svg.mjs");
var _sortMinorSvgMjs = require("./icons/SortMinor.svg.mjs");
var _soundMajorSvgMjs = require("./icons/SoundMajor.svg.mjs");
var _starFilledMinorSvgMjs = require("./icons/StarFilledMinor.svg.mjs");
var _starOutlineMinorSvgMjs = require("./icons/StarOutlineMinor.svg.mjs");
var _storeMajorSvgMjs = require("./icons/StoreMajor.svg.mjs");
var _storeMinorSvgMjs = require("./icons/StoreMinor.svg.mjs");
var _storeStatusMajorSvgMjs = require("./icons/StoreStatusMajor.svg.mjs");
var _tabletMajorSvgMjs = require("./icons/TabletMajor.svg.mjs");
var _tapChipMajorSvgMjs = require("./icons/TapChipMajor.svg.mjs");
var _taxMajorSvgMjs = require("./icons/TaxMajor.svg.mjs");
var _teamMajorSvgMjs = require("./icons/TeamMajor.svg.mjs");
var _templateMajorSvgMjs = require("./icons/TemplateMajor.svg.mjs");
var _textAlignmentCenterMajorSvgMjs = require("./icons/TextAlignmentCenterMajor.svg.mjs");
var _textAlignmentLeftMajorSvgMjs = require("./icons/TextAlignmentLeftMajor.svg.mjs");
var _textAlignmentRightMajorSvgMjs = require("./icons/TextAlignmentRightMajor.svg.mjs");
var _textBlockMajorSvgMjs = require("./icons/TextBlockMajor.svg.mjs");
var _textMajorSvgMjs = require("./icons/TextMajor.svg.mjs");
var _themeEditMajorSvgMjs = require("./icons/ThemeEditMajor.svg.mjs");
var _themesMajorSvgMjs = require("./icons/ThemesMajor.svg.mjs");
var _themeStoreMajorSvgMjs = require("./icons/ThemeStoreMajor.svg.mjs");
var _thumbsDownMajorSvgMjs = require("./icons/ThumbsDownMajor.svg.mjs");
var _thumbsDownMinorSvgMjs = require("./icons/ThumbsDownMinor.svg.mjs");
var _thumbsUpMajorSvgMjs = require("./icons/ThumbsUpMajor.svg.mjs");
var _thumbsUpMinorSvgMjs = require("./icons/ThumbsUpMinor.svg.mjs");
var _tickMinorSvgMjs = require("./icons/TickMinor.svg.mjs");
var _tickSmallMinorSvgMjs = require("./icons/TickSmallMinor.svg.mjs");
var _timelineAttachmentMajorSvgMjs = require("./icons/TimelineAttachmentMajor.svg.mjs");
var _tipsMajorSvgMjs = require("./icons/TipsMajor.svg.mjs");
var _titleMinorSvgMjs = require("./icons/TitleMinor.svg.mjs");
var _toolsMajorSvgMjs = require("./icons/ToolsMajor.svg.mjs");
var _transactionFeeDollarMajorSvgMjs = require("./icons/TransactionFeeDollarMajor.svg.mjs");
var _transactionFeeEuroMajorSvgMjs = require("./icons/TransactionFeeEuroMajor.svg.mjs");
var _transactionFeePoundMajorSvgMjs = require("./icons/TransactionFeePoundMajor.svg.mjs");
var _transactionFeeRupeeMajorSvgMjs = require("./icons/TransactionFeeRupeeMajor.svg.mjs");
var _transactionFeeYenMajorSvgMjs = require("./icons/TransactionFeeYenMajor.svg.mjs");
var _transactionMajorSvgMjs = require("./icons/TransactionMajor.svg.mjs");
var _transferInMajorSvgMjs = require("./icons/TransferInMajor.svg.mjs");
var _transferMajorSvgMjs = require("./icons/TransferMajor.svg.mjs");
var _transferOutMajorSvgMjs = require("./icons/TransferOutMajor.svg.mjs");
var _transferWithinShopifyMajorSvgMjs = require("./icons/TransferWithinShopifyMajor.svg.mjs");
var _transportMajorSvgMjs = require("./icons/TransportMajor.svg.mjs");
var _troubleshootMajorSvgMjs = require("./icons/TroubleshootMajor.svg.mjs");
var _typeMajorSvgMjs = require("./icons/TypeMajor.svg.mjs");
var _undoMajorSvgMjs = require("./icons/UndoMajor.svg.mjs");
var _unfulfilledMajorSvgMjs = require("./icons/UnfulfilledMajor.svg.mjs");
var _unknownDeviceMajorSvgMjs = require("./icons/UnknownDeviceMajor.svg.mjs");
var _updateInventoryMajorSvgMjs = require("./icons/UpdateInventoryMajor.svg.mjs");
var _uploadMajorSvgMjs = require("./icons/UploadMajor.svg.mjs");
var _variantMajorSvgMjs = require("./icons/VariantMajor.svg.mjs");
var _viewMajorSvgMjs = require("./icons/ViewMajor.svg.mjs");
var _viewMinorSvgMjs = require("./icons/ViewMinor.svg.mjs");
var _viewportNarrowMajorSvgMjs = require("./icons/ViewportNarrowMajor.svg.mjs");
var _viewportWideMajorSvgMjs = require("./icons/ViewportWideMajor.svg.mjs");
var _vocabularyMajorSvgMjs = require("./icons/VocabularyMajor.svg.mjs");
var _wandMajorSvgMjs = require("./icons/WandMajor.svg.mjs");
var _wearableMajorSvgMjs = require("./icons/WearableMajor.svg.mjs");
var _wholesaleMajorSvgMjs = require("./icons/WholesaleMajor.svg.mjs");
var _wifiMajorSvgMjs = require("./icons/WifiMajor.svg.mjs");

},{"./icons/AbandonedCartMajor.svg.mjs":"5aLzX","./icons/AccessibilityMajor.svg.mjs":"gl2lr","./icons/ActivitiesMajor.svg.mjs":"jhaNk","./icons/AddCodeMajor.svg.mjs":"7O8dE","./icons/AddImageMajor.svg.mjs":"cipVA","./icons/AddMajor.svg.mjs":"hTDLm","./icons/AddNoteMajor.svg.mjs":"cF7Dp","./icons/AddProductMajor.svg.mjs":"f5jJj","./icons/AffiliateMajor.svg.mjs":"jx6Mt","./icons/AlertMinor.svg.mjs":"jLMrS","./icons/AnalyticsMajor.svg.mjs":"jG0hY","./icons/AppExtensionMinor.svg.mjs":"8IrGU","./icons/AppsMajor.svg.mjs":"95LjC","./icons/ArchiveMajor.svg.mjs":"ex4fT","./icons/ArchiveMinor.svg.mjs":"iBtYl","./icons/ArrowDownMinor.svg.mjs":"1a7Rv","./icons/ArrowLeftMinor.svg.mjs":"aKJkw","./icons/ArrowRightMinor.svg.mjs":"fIuvh","./icons/ArrowUpMinor.svg.mjs":"3F3cR","./icons/AttachmentMajor.svg.mjs":"aeWdS","./icons/AutomationMajor.svg.mjs":"6E9Xs","./icons/BackspaceMajor.svg.mjs":"c9Lxk","./icons/BalanceMajor.svg.mjs":"8A2In","./icons/BankMajor.svg.mjs":"lCc0L","./icons/BarcodeMajor.svg.mjs":"gaelj","./icons/BehaviorMajor.svg.mjs":"bMtMG","./icons/BillingStatementDollarMajor.svg.mjs":"f2U6L","./icons/BillingStatementEuroMajor.svg.mjs":"aYGzd","./icons/BillingStatementPoundMajor.svg.mjs":"1dHvk","./icons/BillingStatementRupeeMajor.svg.mjs":"6cTLo","./icons/BillingStatementYenMajor.svg.mjs":"d53AD","./icons/BlockMinor.svg.mjs":"8j6Ah","./icons/BlockquoteMajor.svg.mjs":"2K9Go","./icons/BlogMajor.svg.mjs":"9Bbpz","./icons/BugMajor.svg.mjs":"5Cvjx","./icons/ButtonCornerPillMajor.svg.mjs":"Fbwe3","./icons/ButtonCornerRoundedMajor.svg.mjs":"eGlT1","./icons/ButtonCornerSquareMajor.svg.mjs":"fK1Dn","./icons/ButtonMinor.svg.mjs":"gugiC","./icons/BuyButtonButtonLayoutMajor.svg.mjs":"fJpKj","./icons/BuyButtonHorizontalLayoutMajor.svg.mjs":"kyHbn","./icons/BuyButtonMajor.svg.mjs":"fAgua","./icons/BuyButtonVerticalLayoutMajor.svg.mjs":"8W9nu","./icons/CalendarMajor.svg.mjs":"2n857","./icons/CalendarMinor.svg.mjs":"2ol3p","./icons/CalendarTickMajor.svg.mjs":"g4o1n","./icons/CameraMajor.svg.mjs":"02iRX","./icons/CancelSmallMinor.svg.mjs":"hI9w6","./icons/CapitalMajor.svg.mjs":"epV1L","./icons/CapturePaymentMinor.svg.mjs":"d9Pba","./icons/CardReaderChipMajor.svg.mjs":"5y1lu","./icons/CardReaderMajor.svg.mjs":"fi3xP","./icons/CardReaderTapMajor.svg.mjs":"7r23o","./icons/CaretDownMinor.svg.mjs":"h3ytt","./icons/CaretUpMinor.svg.mjs":"3CaIn","./icons/CartDownMajor.svg.mjs":"ewOLm","./icons/CartMajor.svg.mjs":"4A5MM","./icons/CartUpMajor.svg.mjs":"7ypp8","./icons/CashDollarMajor.svg.mjs":"iuxp7","./icons/CashEuroMajor.svg.mjs":"8bO6r","./icons/CashPoundMajor.svg.mjs":"1igiW","./icons/CashRupeeMajor.svg.mjs":"dgAPd","./icons/CashYenMajor.svg.mjs":"cktLl","./icons/CategoriesMajor.svg.mjs":"dYHYk","./icons/ChannelsMajor.svg.mjs":"bNXwe","./icons/ChatMajor.svg.mjs":"1RsNM","./icons/ChecklistAlternateMajor.svg.mjs":"3qNNc","./icons/ChecklistMajor.svg.mjs":"i4hhU","./icons/CheckoutMajor.svg.mjs":"chPZN","./icons/ChevronDownMinor.svg.mjs":"eYjOF","./icons/ChevronLeftMinor.svg.mjs":"g6b7S","./icons/ChevronRightMinor.svg.mjs":"9JBlT","./icons/ChevronUpMinor.svg.mjs":"11C5X","./icons/CircleAlertMajor.svg.mjs":"3rL1E","./icons/CircleCancelMajor.svg.mjs":"6FI0l","./icons/CircleCancelMinor.svg.mjs":"a0e09","./icons/CircleChevronDownMinor.svg.mjs":"jXju9","./icons/CircleChevronLeftMinor.svg.mjs":"e5dQ4","./icons/CircleChevronRightMinor.svg.mjs":"jHC7a","./icons/CircleChevronUpMinor.svg.mjs":"2Dp4c","./icons/CircleDisabledMajor.svg.mjs":"3Nqrj","./icons/CircleDisableMinor.svg.mjs":"l0cDk","./icons/CircleDotsMajor.svg.mjs":"khEFm","./icons/CircleDownMajor.svg.mjs":"645ub","./icons/CircleInformationMajor.svg.mjs":"68fD8","./icons/CircleLeftMajor.svg.mjs":"12j3F","./icons/CircleMinusMajor.svg.mjs":"3r5on","./icons/CircleMinusMinor.svg.mjs":"lnU5a","./icons/CircleMinusOutlineMinor.svg.mjs":"gadZf","./icons/CirclePlusMajor.svg.mjs":"2vsD9","./icons/CirclePlusMinor.svg.mjs":"9VxzN","./icons/CirclePlusOutlineMinor.svg.mjs":"ezMCv","./icons/CircleRightMajor.svg.mjs":"aLltE","./icons/CircleTickMajor.svg.mjs":"hbZ05","./icons/CircleTickOutlineMinor.svg.mjs":"bmrCW","./icons/CircleUpMajor.svg.mjs":"3s2UH","./icons/ClipboardMinor.svg.mjs":"6Zd7J","./icons/ClockMajor.svg.mjs":"gjpJl","./icons/ClockMinor.svg.mjs":"ifvdc","./icons/CodeMajor.svg.mjs":"6bhPr","./icons/CollectionsMajor.svg.mjs":"lEEER","./icons/ColorNoneMinor.svg.mjs":"7vA7q","./icons/ColorsMajor.svg.mjs":"lFOep","./icons/Column1Major.svg.mjs":"ePmc5","./icons/Columns2Major.svg.mjs":"2NhE1","./icons/Columns3Major.svg.mjs":"8kdE4","./icons/ColumnWithTextMajor.svg.mjs":"7iK9H","./icons/ComposeMajor.svg.mjs":"19s7Y","./icons/ConfettiMajor.svg.mjs":"cuUd9","./icons/ConnectMinor.svg.mjs":"7aXUJ","./icons/ConversationMinor.svg.mjs":"jLRwF","./icons/CreditCardMajor.svg.mjs":"dxPYo","./icons/CreditCardPercentMajor.svg.mjs":"cbKRg","./icons/CreditCardSecureMajor.svg.mjs":"kWJL1","./icons/CurrencyConvertMinor.svg.mjs":"29ULR","./icons/CustomerMinusMajor.svg.mjs":"c3spy","./icons/CustomerPlusMajor.svg.mjs":"a6q15","./icons/CustomersMajor.svg.mjs":"gDLJr","./icons/CustomersMinor.svg.mjs":"j4quk","./icons/DataVisualizationMajor.svg.mjs":"ggIUj","./icons/DeleteMajor.svg.mjs":"6oaez","./icons/DeleteMinor.svg.mjs":"7r2Ux","./icons/DesktopMajor.svg.mjs":"6cpQN","./icons/DetailedPopUpMajor.svg.mjs":"dyVQb","./icons/DiamondAlertMajor.svg.mjs":"cKJco","./icons/DigitalMediaReceiverMajor.svg.mjs":"kwYLn","./icons/DiscountAutomaticMajor.svg.mjs":"aOf8G","./icons/DiscountCodeMajor.svg.mjs":"27W0c","./icons/DiscountsMajor.svg.mjs":"lq7Jj","./icons/DisputeMinor.svg.mjs":"h9iTJ","./icons/DnsSettingsMajor.svg.mjs":"2ZOZj","./icons/DomainNewMajor.svg.mjs":"j8U9o","./icons/DomainsMajor.svg.mjs":"czCvp","./icons/DraftOrdersMajor.svg.mjs":"30ZOk","./icons/DragDropMajor.svg.mjs":"hnMsy","./icons/DragHandleMinor.svg.mjs":"K17zf","./icons/DropdownMinor.svg.mjs":"MWgB8","./icons/DuplicateMinor.svg.mjs":"5IozK","./icons/EditMajor.svg.mjs":"ci59d","./icons/EditMinor.svg.mjs":"lwfX2","./icons/EmailMajor.svg.mjs":"6Fq5Z","./icons/EmailNewsletterMajor.svg.mjs":"4mHFu","./icons/EmbedMinor.svg.mjs":"7a7Zr","./icons/EnableSelectionMinor.svg.mjs":"iDKyT","./icons/EnvelopeMajor.svg.mjs":"gDanW","./icons/ExchangeMajor.svg.mjs":"7lKE3","./icons/ExistingInventoryMajor.svg.mjs":"5lIzr","./icons/ExitMajor.svg.mjs":"ibEHe","./icons/ExportMinor.svg.mjs":"bLhys","./icons/ExternalMinor.svg.mjs":"7VThw","./icons/ExternalSmallMinor.svg.mjs":"hcUH7","./icons/FaviconMajor.svg.mjs":"eNr8h","./icons/FavoriteMajor.svg.mjs":"kbiGS","./icons/FeaturedCollectionMajor.svg.mjs":"61DOb","./icons/FeaturedContentMajor.svg.mjs":"1tnIA","./icons/FilterMajor.svg.mjs":"aOzxq","./icons/FirstOrderMajor.svg.mjs":"6G241","./icons/FirstVisitMajor.svg.mjs":"kE5xp","./icons/FlagMajor.svg.mjs":"5C5rl","./icons/FlipCameraMajor.svg.mjs":"8QYBx","./icons/FolderDownMajor.svg.mjs":"eBNoU","./icons/FolderMajor.svg.mjs":"7h4Be","./icons/FolderMinusMajor.svg.mjs":"5YbEm","./icons/FolderPlusMajor.svg.mjs":"iaXxi","./icons/FolderUpMajor.svg.mjs":"6lJZi","./icons/FollowUpEmailMajor.svg.mjs":"8Yiyj","./icons/FoodMajor.svg.mjs":"eqT1B","./icons/FooterMajor.svg.mjs":"8rd2K","./icons/FormsMajor.svg.mjs":"deJsu","./icons/FraudProtectMajor.svg.mjs":"f5CEV","./icons/FraudProtectMinor.svg.mjs":"7mbEA","./icons/FraudProtectPendingMajor.svg.mjs":"cYwJa","./icons/FraudProtectPendingMinor.svg.mjs":"2sAtY","./icons/FraudProtectUnprotectedMajor.svg.mjs":"81kXh","./icons/FraudProtectUnprotectedMinor.svg.mjs":"f5ruU","./icons/GamesConsoleMajor.svg.mjs":"77BrA","./icons/GiftCardMajor.svg.mjs":"f1aLz","./icons/GiftCardMinor.svg.mjs":"bVu3Y","./icons/GlobeMajor.svg.mjs":"gKhHj","./icons/GlobeMinor.svg.mjs":"UpQxu","./icons/GrammarMajor.svg.mjs":"dlX43","./icons/HashtagMajor.svg.mjs":"jnnDE","./icons/HeaderMajor.svg.mjs":"6DqMz","./icons/HeartMajor.svg.mjs":"cYeZH","./icons/HideKeyboardMajor.svg.mjs":"8vAtj","./icons/HideMinor.svg.mjs":"geBh7","./icons/HintMajor.svg.mjs":"dhJLU","./icons/HomeMajor.svg.mjs":"4zF67","./icons/HorizontalDotsMinor.svg.mjs":"3LMYI","./icons/IconsMajor.svg.mjs":"iS2gc","./icons/IllustrationMajor.svg.mjs":"ljlpz","./icons/ImageAltMajor.svg.mjs":"e6Qvs","./icons/ImageAltMinor.svg.mjs":"77B8I","./icons/ImageMajor.svg.mjs":"aM1AB","./icons/ImagesMajor.svg.mjs":"arZCn","./icons/ImageWithTextMajor.svg.mjs":"14dGs","./icons/ImageWithTextOverlayMajor.svg.mjs":"9jzrG","./icons/ImportMinor.svg.mjs":"6ocJC","./icons/ImportStoreMajor.svg.mjs":"dlwDP","./icons/IncomingMajor.svg.mjs":"bfvRO","./icons/InfoMinor.svg.mjs":"dR663","./icons/InstallMinor.svg.mjs":"2NYPc","./icons/InventoryMajor.svg.mjs":"jvuXM","./icons/InviteMinor.svg.mjs":"cRSP7","./icons/IqMajor.svg.mjs":"bCRBH","./icons/JobsMajor.svg.mjs":"9VQrW","./icons/KeyMajor.svg.mjs":"6j6yf","./icons/LabelPrinterMajor.svg.mjs":"4sztZ","./icons/LandingPageMajor.svg.mjs":"qeNfm","./icons/LanguageMinor.svg.mjs":"03NOr","./icons/LegalMajor.svg.mjs":"ax9M7","./icons/LinkMinor.svg.mjs":"lg8c4","./icons/ListMajor.svg.mjs":"jmt3A","./icons/LiveViewMajor.svg.mjs":"fI6sR","./icons/LocationMajor.svg.mjs":"eLIx5","./icons/LocationsMinor.svg.mjs":"9gLM3","./icons/LockMajor.svg.mjs":"jGBRL","./icons/LockMinor.svg.mjs":"7373B","./icons/LogoBlockMajor.svg.mjs":"avMsq","./icons/LogOutMinor.svg.mjs":"8HqWq","./icons/ManagedStoreMajor.svg.mjs":"5ydeA","./icons/MarketingMajor.svg.mjs":"cDSlb","./icons/MarkFulfilledMinor.svg.mjs":"ibIsC","./icons/MarkPaidMinor.svg.mjs":"2ENSz","./icons/MaximizeMajor.svg.mjs":"eKxz0","./icons/MaximizeMinor.svg.mjs":"fPz6y","./icons/MentionMajor.svg.mjs":"bO1H3","./icons/MicrophoneMajor.svg.mjs":"dhVfE","./icons/MinimizeMajor.svg.mjs":"3ugOd","./icons/MinimizeMinor.svg.mjs":"k8TUQ","./icons/MinusMinor.svg.mjs":"1EIH7","./icons/MobileAcceptMajor.svg.mjs":"1HLwf","./icons/MobileBackArrowMajor.svg.mjs":"5t6b9","./icons/MobileCancelMajor.svg.mjs":"dFwW6","./icons/MobileChevronMajor.svg.mjs":"6dyyp","./icons/MobileHamburgerMajor.svg.mjs":"9e49d","./icons/MobileHorizontalDotsMajor.svg.mjs":"kLD5Y","./icons/MobileMajor.svg.mjs":"8GpVy","./icons/MobilePlusMajor.svg.mjs":"a4RXK","./icons/MobileVerticalDotsMajor.svg.mjs":"5W31q","./icons/MonerisMajor.svg.mjs":"gRYb9","./icons/NatureMajor.svg.mjs":"1BF4O","./icons/NavigationMajor.svg.mjs":"2qsQW","./icons/NoteMajor.svg.mjs":"2TLlz","./icons/NoteMinor.svg.mjs":"fM4jh","./icons/NotificationMajor.svg.mjs":"9gUkp","./icons/OnlineStoreMajor.svg.mjs":"fTZ6g","./icons/OrdersMajor.svg.mjs":"cU9Bp","./icons/OrderStatusMinor.svg.mjs":"6KQ9h","./icons/OutgoingMajor.svg.mjs":"b3kQf","./icons/PackageMajor.svg.mjs":"2YxZc","./icons/PageDownMajor.svg.mjs":"4RfPS","./icons/PageMajor.svg.mjs":"h82kE","./icons/PageMinusMajor.svg.mjs":"ehCUh","./icons/PagePlusMajor.svg.mjs":"dRCTO","./icons/PageUpMajor.svg.mjs":"tbuJh","./icons/PaginationEndMinor.svg.mjs":"7Il9a","./icons/PaginationStartMinor.svg.mjs":"9nJWp","./icons/PaintBrushMajor.svg.mjs":"6VYOm","./icons/PauseCircleMajor.svg.mjs":"8n609","./icons/PauseMajor.svg.mjs":"iSYqS","./icons/PauseMinor.svg.mjs":"4iQIC","./icons/PaymentsMajor.svg.mjs":"9rFKY","./icons/PhoneInMajor.svg.mjs":"2iS05","./icons/PhoneMajor.svg.mjs":"7xrIR","./icons/PhoneOutMajor.svg.mjs":"fWZFq","./icons/PinMajor.svg.mjs":"jJQtG","./icons/PinMinor.svg.mjs":"kAtSr","./icons/PlayCircleMajor.svg.mjs":"k1rJE","./icons/PlayMajor.svg.mjs":"fvukk","./icons/PlayMinor.svg.mjs":"1Ss0N","./icons/PlusMinor.svg.mjs":"5boxV","./icons/PointOfSaleMajor.svg.mjs":"1nOgf","./icons/PopularMajor.svg.mjs":"eOOXK","./icons/PriceLookupMinor.svg.mjs":"fykXj","./icons/PrintMajor.svg.mjs":"elD5B","./icons/PrintMinor.svg.mjs":"l6kDq","./icons/ProductReturnsMinor.svg.mjs":"jMyJL","./icons/ProductsMajor.svg.mjs":"kWSp9","./icons/ProfileMajor.svg.mjs":"ekpKK","./icons/ProfileMinor.svg.mjs":"hbVvf","./icons/PromoteMinor.svg.mjs":"9fZ2W","./icons/QuestionMarkInverseMajor.svg.mjs":"4sMnv","./icons/QuestionMarkInverseMinor.svg.mjs":"lxHl3","./icons/QuestionMarkMajor.svg.mjs":"ieqpM","./icons/QuestionMarkMinor.svg.mjs":"lI8mb","./icons/QuickSaleMajor.svg.mjs":"l0r0u","./icons/ReadTimeMinor.svg.mjs":"fWcAX","./icons/ReceiptMajor.svg.mjs":"359yb","./icons/RecentSearchesMajor.svg.mjs":"gDzIu","./icons/RedoMajor.svg.mjs":"jRtsw","./icons/ReferralCodeMajor.svg.mjs":"9WJq1","./icons/ReferralMajor.svg.mjs":"jhICs","./icons/RefreshMajor.svg.mjs":"lkKB5","./icons/RefreshMinor.svg.mjs":"kD0QV","./icons/RefundMajor.svg.mjs":"gmSlX","./icons/RefundMinor.svg.mjs":"hpGLZ","./icons/RemoveProductMajor.svg.mjs":"d1BQd","./icons/RepeatOrderMajor.svg.mjs":"3cHT0","./icons/ReplaceMajor.svg.mjs":"4DRc1","./icons/ReplayMinor.svg.mjs":"jYKJk","./icons/ReportMinor.svg.mjs":"5Kp9K","./icons/ReportsMajor.svg.mjs":"4PM2j","./icons/ResetMinor.svg.mjs":"dO187","./icons/ResourcesMajor.svg.mjs":"cESc7","./icons/ReturnMinor.svg.mjs":"h2Pbu","./icons/RiskMajor.svg.mjs":"bimra","./icons/RiskMinor.svg.mjs":"2n2oq","./icons/SandboxMajor.svg.mjs":"iRny5","./icons/SaveMinor.svg.mjs":"eAd8i","./icons/SearchMajor.svg.mjs":"djB5J","./icons/SearchMinor.svg.mjs":"crH5N","./icons/SectionMajor.svg.mjs":"ays3t","./icons/SecureMajor.svg.mjs":"8EX3W","./icons/SelectMinor.svg.mjs":"8l8H3","./icons/SendMajor.svg.mjs":"1wcI8","./icons/SettingsMajor.svg.mjs":"dUfSZ","./icons/SettingsMinor.svg.mjs":"2qzzx","./icons/ShareIosMinor.svg.mjs":"kCYss","./icons/ShareMinor.svg.mjs":"gyYRi","./icons/ShipmentMajor.svg.mjs":"bdHds","./icons/ShopcodesMajor.svg.mjs":"fsNH3","./icons/SidebarLeftMajor.svg.mjs":"lwAdZ","./icons/SidebarRightMajor.svg.mjs":"8Kw0b","./icons/SlideshowMajor.svg.mjs":"c5kTv","./icons/SmileyHappyMajor.svg.mjs":"hLG59","./icons/SmileyJoyMajor.svg.mjs":"2l88X","./icons/SmileyNeutralMajor.svg.mjs":"ivTGZ","./icons/SmileySadMajor.svg.mjs":"8VIYH","./icons/SocialAdMajor.svg.mjs":"2Z1vG","./icons/SocialPostMajor.svg.mjs":"jX3jn","./icons/SoftPackMajor.svg.mjs":"jyeFz","./icons/SortAscendingMajor.svg.mjs":"5Hkpr","./icons/SortDescendingMajor.svg.mjs":"iIfC7","./icons/SortMinor.svg.mjs":"5yESe","./icons/SoundMajor.svg.mjs":"gLrbQ","./icons/StarFilledMinor.svg.mjs":"3laRT","./icons/StarOutlineMinor.svg.mjs":"cEvVV","./icons/StoreMajor.svg.mjs":"4myQ0","./icons/StoreMinor.svg.mjs":"54luP","./icons/StoreStatusMajor.svg.mjs":"FGwYz","./icons/TabletMajor.svg.mjs":"hSwcB","./icons/TapChipMajor.svg.mjs":"h3wdj","./icons/TaxMajor.svg.mjs":"kYZX2","./icons/TeamMajor.svg.mjs":"5ZmKS","./icons/TemplateMajor.svg.mjs":"l35jv","./icons/TextAlignmentCenterMajor.svg.mjs":"55pDS","./icons/TextAlignmentLeftMajor.svg.mjs":"1RVWY","./icons/TextAlignmentRightMajor.svg.mjs":"e5V1y","./icons/TextBlockMajor.svg.mjs":"iFdX8","./icons/TextMajor.svg.mjs":"kAB4P","./icons/ThemeEditMajor.svg.mjs":"kBcXP","./icons/ThemesMajor.svg.mjs":"kOtpU","./icons/ThemeStoreMajor.svg.mjs":"6oKlh","./icons/ThumbsDownMajor.svg.mjs":"avxdg","./icons/ThumbsDownMinor.svg.mjs":"jNpTq","./icons/ThumbsUpMajor.svg.mjs":"kyIeF","./icons/ThumbsUpMinor.svg.mjs":"79VRX","./icons/TickMinor.svg.mjs":"8Mzqa","./icons/TickSmallMinor.svg.mjs":"acHVn","./icons/TimelineAttachmentMajor.svg.mjs":"5oDOT","./icons/TipsMajor.svg.mjs":"fKSYT","./icons/TitleMinor.svg.mjs":"3ePdQ","./icons/ToolsMajor.svg.mjs":"1IstY","./icons/TransactionFeeDollarMajor.svg.mjs":"ii2vg","./icons/TransactionFeeEuroMajor.svg.mjs":"auaBE","./icons/TransactionFeePoundMajor.svg.mjs":"dpDvM","./icons/TransactionFeeRupeeMajor.svg.mjs":"3jCmY","./icons/TransactionFeeYenMajor.svg.mjs":"gf50a","./icons/TransactionMajor.svg.mjs":"eXtdI","./icons/TransferInMajor.svg.mjs":"fE2iD","./icons/TransferMajor.svg.mjs":"g4qL8","./icons/TransferOutMajor.svg.mjs":"jgJ23","./icons/TransferWithinShopifyMajor.svg.mjs":"jSlzH","./icons/TransportMajor.svg.mjs":"hRx7H","./icons/TroubleshootMajor.svg.mjs":"1DIeg","./icons/TypeMajor.svg.mjs":"3Ygkp","./icons/UndoMajor.svg.mjs":"kP3QV","./icons/UnfulfilledMajor.svg.mjs":"ekhkI","./icons/UnknownDeviceMajor.svg.mjs":"76JC1","./icons/UpdateInventoryMajor.svg.mjs":"jgRE9","./icons/UploadMajor.svg.mjs":"7xQPM","./icons/VariantMajor.svg.mjs":"1HcKA","./icons/ViewMajor.svg.mjs":"6Dh8g","./icons/ViewMinor.svg.mjs":"3VFJT","./icons/ViewportNarrowMajor.svg.mjs":"kkgF0","./icons/ViewportWideMajor.svg.mjs":"8BOwu","./icons/VocabularyMajor.svg.mjs":"jAKVC","./icons/WandMajor.svg.mjs":"dzhZC","./icons/WearableMajor.svg.mjs":"6RxOl","./icons/WholesaleMajor.svg.mjs":"grBSM","./icons/WifiMajor.svg.mjs":"4Lhj3","react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5aLzX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAbandonedCartMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgAbandonedCartMajor = function SvgAbandonedCartMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M9.707 1.293a1 1 0 0 0-1.414 1.414L9.586 4 8.293 5.293a1 1 0 0 0 1.414 1.414L11 5.414l1.293 1.293a1 1 0 1 0 1.414-1.414L12.414 4l1.293-1.293a1 1 0 0 0-1.414-1.414L11 2.586 9.707 1.293z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M1 1a1 1 0 0 1 1-1h1.5A1.5 1.5 0 0 1 5 1.5V10h11.133l.877-6.141a1 1 0 1 1 1.98.282l-.939 6.571A1.5 1.5 0 0 1 16.566 12H5v2h10a3 3 0 1 1-2.83 2H6.83A3 3 0 1 1 3 14.17V2H2a1 1 0 0 1-1-1zm13 16a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM3 17a1 1 0 1 1 2 0 1 1 0 0 1-2 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gl2lr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAccessibilityMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAccessibilityMajor = function SvgAccessibilityMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 18C2.334 18 .061 10.352.038 10.274a1 1 0 0 1 0-.548C.061 9.648 2.334 2 10 2c7.633 0 9.927 6.617 9.948 6.684a1 1 0 1 1-1.895.635A8.348 8.348 0 0 0 10 4c-5.467 0-7.513 4.772-7.948 6 .434 1.225 2.479 6 7.948 6a1 1 0 0 1 0 2zm0-4c-2.206 0-4-1.794-4-4s1.794-4 4-4 4 1.794 4 4a1 1 0 1 1-2 0c0-1.103-.897-2-2-2s-2 .897-2 2 .897 2 2 2a1 1 0 0 1 0 2zm5 4a.997.997 0 0 1-.707-.293l-2-2a1 1 0 0 1 1.414-1.414L15 15.586l3.293-3.293a1 1 0 0 1 1.414 1.414l-4 4A.995.995 0 0 1 15 18z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jhaNk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgActivitiesMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgActivitiesMajor = function SvgActivitiesMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M18.111.221a3.04 3.04 0 0 1 1.002.66h-.003a2.992 2.992 0 0 1 .89 2.18c-.224 14.324-4.22 16.692-16.931 16.94h-.06c-.797 0-1.548-.31-2.12-.88A2.989 2.989 0 0 1 0 16.937C.226 2.615 4.22.248 16.932 0c.404-.005.805.07 1.179.221zM7.879 7.88a1 1 0 0 1 1.414 0l.708.707 1.414-1.414-.707-.707a1 1 0 0 1 1.414-1.414l.707.707 1.464-1.465a1 1 0 1 1 1.415 1.414l-1.465 1.465.707.707a1 1 0 0 1-1.414 1.414l-.707-.707L11.415 10l.707.707a1 1 0 1 1-1.414 1.415L10 11.415l-1.415 1.414.707.707A1 1 0 1 1 7.88 14.95l-.707-.707-1.464 1.464a1 1 0 0 1-1.415-1.414l1.465-1.464-.707-.707a1 1 0 1 1 1.414-1.415l.707.707L8.586 10l-.707-.707a1 1 0 0 1 0-1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7O8dE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAddCodeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAddCodeMajor = function SvgAddCodeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 9c0 .266-.105.52-.293.707L2.414 10l.293.293A.996.996 0 0 1 3 11v4a1 1 0 0 0 1 1 1 1 0 0 1 0 2c-1.654 0-3-1.346-3-3v-3.586l-.707-.707a1 1 0 0 1 0-1.414L1 8.586V5c0-1.654 1.346-3 3-3a1 1 0 0 1 0 2 1 1 0 0 0-1 1v4zm16.707.293a1.001 1.001 0 0 1 0 1.414l-.707.707V15c0 1.654-1.346 3-3 3a1 1 0 1 1 0-2 1 1 0 0 0 1-1v-4c0-.266.105-.52.293-.707l.293-.293-.293-.293A.996.996 0 0 1 17 9V5a1 1 0 0 0-1-1 1 1 0 1 1 0-2c1.654 0 3 1.346 3 3v3.586l.707.707zM13 9a1 1 0 0 1 0 2h-2v2a1 1 0 0 1-2 0v-2H7a1 1 0 0 1 0-2h2V7a1 1 0 1 1 2 0v2h2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cipVA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAddImageMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAddImageMajor = function SvgAddImageMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19 2.5A1.5 1.5 0 0 0 17.5 1h-15A1.5 1.5 0 0 0 1 2.5v15A1.5 1.5 0 0 0 2.5 19H10v-2H3.497c-.41 0-.64-.46-.4-.79l3.553-4.051c.19-.21.52-.21.72-.01L9 14l3.06-4.781a.5.5 0 0 1 .84.02l.72 1.251A5.98 5.98 0 0 1 16 10h3V2.5zm-11.5 2c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm12.207 10.793A1 1 0 0 0 19 15h-2v-2a1 1 0 0 0-2 0v2h-2a1 1 0 0 0 0 2h2v2a1 1 0 1 0 2 0v-2h2a1 1 0 0 0 .707-1.707z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hTDLm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAddMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAddMajor = function SvgAddMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 3h1V1H2.5A1.5 1.5 0 0 0 1 2.5V4h2V3zm3 0h3V1H6v2zm5 0h3V1h-3v2zM9 19H6v-2h3v2zm2 0h3v-2h-3v2zm6-15V3h-1V1h1.5A1.5 1.5 0 0 1 19 2.5V4h-2zM3 17v-1H1v1.5A1.5 1.5 0 0 0 2.5 19H4v-2H3zm13 0h1v-1h2v1.5a1.5 1.5 0 0 1-1.5 1.5H16v-2zM10 6a1 1 0 0 1 1 1v2h2a1 1 0 1 1 0 2h-2v2a1 1 0 1 1-2 0v-2H7a1 1 0 1 1 0-2h2V7a1 1 0 0 1 1-1zM1 9V6h2v3H1zm0 2v3h2v-3H1zm16-2V6h2v3h-2zm0 2v3h2v-3h-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cF7Dp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAddNoteMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAddNoteMajor = function SvgAddNoteMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10.379 0a1.5 1.5 0 0 1 1.06.44l4.122 4.12A1.5 1.5 0 0 1 16 5.622V10a6 6 0 0 0-6 6v4H3.5A1.5 1.5 0 0 1 2 18.5v-17A1.5 1.5 0 0 1 3.5 0h6.879zM5 5h8v2H5V5zm5 4H5v2h5V9zm-5 4h3v2H5v-2zm14.707 2.293A1 1 0 0 0 19 15h-2v-2a1 1 0 0 0-2 0v2h-2a1 1 0 0 0 0 2h2v2a1 1 0 0 0 2 0v-2h2a1 1 0 0 0 .707-1.707z",
        fillRule: "evenodd"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"f5jJj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAddProductMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAddProductMajor = function SvgAddProductMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 1h7a1 1 0 0 1 1 1v7a.999.999 0 0 1-.29.71l-.29.29H16a6 6 0 0 0-6 6v2.42l-.29.29a1 1 0 0 1-1.42 0l-7-7a.999.999 0 0 1 0-1.42l9-9A1.001 1.001 0 0 1 11 1zm3.667 4.747a1.5 1.5 0 1 0 1.666-2.494 1.5 1.5 0 0 0-1.666 2.494zm5.04 9.546A1 1 0 0 0 19 15h-2v-2a1 1 0 0 0-2 0v2h-2a1 1 0 0 0 0 2h2v2a1 1 0 0 0 2 0v-2h2a1 1 0 0 0 .707-1.707z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jx6Mt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAffiliateMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAffiliateMajor = function SvgAffiliateMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M5.116 5.407a2.5 2.5 0 1 0-1.916.575l.788 2.624a5.5 5.5 0 1 0 7.406 7.406l2.624.787a2.5 2.5 0 1 0 .575-1.915l-2.625-.788a5.474 5.474 0 0 0-.936-3.714l4.554-4.554a2.5 2.5 0 1 0-1.414-1.414L9.618 8.968a5.475 5.475 0 0 0-3.714-.936l-.788-2.625zM10 13.5a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jLMrS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAlertMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAlertMinor = function SvgAlertMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 18a8 8 0 1 1 0-16 8 8 0 0 1 0 16zM9 9a1 1 0 0 0 2 0V7a1 1 0 1 0-2 0v2zm0 4a1 1 0 1 0 2 0 1 1 0 0 0-2 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jG0hY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAnalyticsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAnalyticsMajor = function SvgAnalyticsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15.5 3A1.5 1.5 0 0 0 14 4.5v12a1.5 1.5 0 0 0 1.5 1.5h1a1.5 1.5 0 0 0 1.5-1.5v-12A1.5 1.5 0 0 0 16.5 3h-1zM8 8.5A1.5 1.5 0 0 1 9.5 7h1A1.5 1.5 0 0 1 12 8.5v8a1.5 1.5 0 0 1-1.5 1.5h-1A1.5 1.5 0 0 1 8 16.5v-8zm-6 4A1.5 1.5 0 0 1 3.5 11h1A1.5 1.5 0 0 1 6 12.5v4A1.5 1.5 0 0 1 4.5 18h-1A1.5 1.5 0 0 1 2 16.5v-4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8IrGU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAppExtensionMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAppExtensionMinor = function SvgAppExtensionMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M9 17H4.5A1.5 1.5 0 0 1 3 15.5V11h6v6zm8-6v4.5a1.5 1.5 0 0 1-1.5 1.5H11v-6h6zM9 9H3V4.5A1.5 1.5 0 0 1 4.5 3H9v6zm10-7v5c0 .55-.45 1-1 1s-1-.45-1-1V4.42l-4.29 4.29c-.2.19-.45.29-.71.29-.26 0-.51-.1-.71-.29-.39-.39-.39-1.03 0-1.42L15.58 3H13c-.55 0-1-.45-1-1s.45-1 1-1h5c.08 0 .17.01.25.04.05 0 .09.02.14.04.12.05.23.12.32.21s.16.2.21.32c.02.05.04.09.04.14.03.08.04.17.04.25z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"95LjC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAppsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAppsMajor = function SvgAppsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M9 9H1V2.5A1.5 1.5 0 0 1 2.5 1H9v8zm0 2v8H2.5A1.5 1.5 0 0 1 1 17.5V11h8zm2 0v8h6.5a1.5 1.5 0 0 0 1.5-1.5V11h-8zm4-10a1 1 0 0 1 1 1v2h2a1 1 0 1 1 0 2h-2v2a1 1 0 1 1-2 0V6h-2a1 1 0 1 1 0-2h2V2a1 1 0 0 1 1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ex4fT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgArchiveMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgArchiveMajor = function SvgArchiveMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2.5 1A1.5 1.5 0 0 0 1 2.5V4h18V2.5A1.5 1.5 0 0 0 17.5 1h-15zM2 17.5A1.5 1.5 0 0 0 3.5 19h13a1.5 1.5 0 0 0 1.5-1.5V6H2v11.5zM7 9h6v2H7V9z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iBtYl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgArchiveMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgArchiveMinor = function SvgArchiveMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4.5 3A1.5 1.5 0 0 0 3 4.5V6h14V4.5A1.5 1.5 0 0 0 15.5 3h-11zM4 15.5A1.5 1.5 0 0 0 5.5 17h9a1.5 1.5 0 0 0 1.5-1.5V8H4v7.5zM7 11h6v2H7v-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1a7Rv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgArrowDownMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgArrowDownMinor = function SvgArrowDownMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m10.707 17.707 5-5a.999.999 0 1 0-1.414-1.414L11 14.586V3a1 1 0 1 0-2 0v11.586l-3.293-3.293a.999.999 0 1 0-1.414 1.414l5 5a.999.999 0 0 0 1.414 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aKJkw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgArrowLeftMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgArrowLeftMinor = function SvgArrowLeftMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17 9H5.414l3.293-3.293a.999.999 0 1 0-1.414-1.414l-5 5a.999.999 0 0 0 0 1.414l5 5a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L5.414 11H17a1 1 0 1 0 0-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fIuvh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgArrowRightMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgArrowRightMinor = function SvgArrowRightMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m17.707 9.293-5-5a.999.999 0 1 0-1.414 1.414L14.586 9H3a1 1 0 1 0 0 2h11.586l-3.293 3.293a.999.999 0 1 0 1.414 1.414l5-5a.999.999 0 0 0 0-1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3F3cR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgArrowUpMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgArrowUpMinor = function SvgArrowUpMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 17V5.414l3.293 3.293a.999.999 0 1 0 1.414-1.414l-5-5a.999.999 0 0 0-1.414 0l-5 5a.997.997 0 0 0 0 1.414.999.999 0 0 0 1.414 0L9 5.414V17a1 1 0 1 0 2 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aeWdS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAttachmentMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAttachmentMajor = function SvgAttachmentMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M5.243 20a5.228 5.228 0 0 1-3.707-1.533A5.213 5.213 0 0 1 0 14.759c0-1.402.546-2.719 1.536-3.708l9.515-9.519a5.25 5.25 0 0 1 8.553 1.7A5.21 5.21 0 0 1 20 5.24a5.208 5.208 0 0 1-1.535 3.708l-4.258 4.26a3.124 3.124 0 0 1-5.092-1.012A3.098 3.098 0 0 1 8.879 11c0-.835.324-1.619.914-2.208l4.5-4.501a1 1 0 1 1 1.414 1.414l-4.5 4.501a1.112 1.112 0 0 0-.328.794A1.114 1.114 0 0 0 12 12.12c.297 0 .582-.118.793-.327l4.258-4.26A3.223 3.223 0 0 0 18 5.24c0-.866-.337-1.681-.949-2.293a3.248 3.248 0 0 0-4.586 0L2.95 12.465A3.224 3.224 0 0 0 2 14.76c0 .866.338 1.68.95 2.293a3.248 3.248 0 0 0 4.586 0l1.757-1.758a1 1 0 1 1 1.414 1.414L8.95 18.467A5.236 5.236 0 0 1 5.243 20z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6E9Xs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgAutomationMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgAutomationMajor = function SvgAutomationMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M8.038.859A1 1 0 0 1 9.028 0h2.265a1 1 0 0 1 .99.859l.371 2.598c.703.268 1.35.646 1.924 1.113l2.438-.979a1 1 0 0 1 1.238.428l1.133 1.962a1 1 0 0 1-.249 1.287l-2.065 1.621a7.034 7.034 0 0 1 0 2.222l2.065 1.621a1 1 0 0 1 .249 1.287l-1.133 1.962a1 1 0 0 1-1.239.428l-2.437-.978a6.995 6.995 0 0 1-1.924 1.112l-.371 2.598a1 1 0 0 1-.99.859H9.027a1 1 0 0 1-.99-.859l-.37-2.598a6.995 6.995 0 0 1-1.924-1.113l-2.438.979a1 1 0 0 1-1.239-.428L.934 14.019a1 1 0 0 1 .248-1.287l2.066-1.621a7.06 7.06 0 0 1 0-2.222L1.182 7.268A1 1 0 0 1 .934 5.98l1.132-1.962a1 1 0 0 1 1.239-.428l2.438.979a6.993 6.993 0 0 1 1.923-1.113L8.038.86zm.74 5.66 4.598 3.065a.5.5 0 0 1 0 .832l-4.599 3.066A.5.5 0 0 1 8 13.066V6.934a.5.5 0 0 1 .777-.416z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"c9Lxk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBackspaceMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBackspaceMajor = function SvgBackspaceMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M20 15.5v-11A1.5 1.5 0 0 0 18.5 3H7.622a1.5 1.5 0 0 0-1.061.44L.439 8.94a1.5 1.5 0 0 0 0 2.121l6.122 5.5a1.5 1.5 0 0 0 1.06.439h10.88a1.5 1.5 0 0 0 1.5-1.5zm-3.292-9.307a1 1 0 0 1 0 1.414L14.415 9.9l2.293 2.293a1 1 0 0 1-1.415 1.414l-2.292-2.293-2.293 2.293a1 1 0 1 1-1.415-1.414L11.586 9.9 9.293 7.607a1 1 0 1 1 1.415-1.414L13 8.486l2.292-2.293a1 1 0 0 1 1.415 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8A2In":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBalanceMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBalanceMajor = function SvgBalanceMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M4 1c-.493 0-1.211.14-1.834.588C1.492 2.074 1 2.874 1 4v13.5A1.5 1.5 0 0 0 2.5 19h15a1.5 1.5 0 0 0 1.5-1.5V15h-3c-.493 0-1.211-.14-1.834-.588C13.49 13.925 13 13.126 13 12s.492-1.926 1.166-2.412A3.233 3.233 0 0 1 16 9h3V6.5c0-.824-.665-1.5-1.498-1.5H17V2.5A1.5 1.5 0 0 0 15.5 1H4zm12 10h3v2h-3c-.173 0-.456-.06-.666-.211-.159-.115-.334-.315-.334-.789 0-.474.175-.674.334-.789.21-.15.493-.211.666-.211zM4 3a1 1 0 0 0-1 1v1h12V3H4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lCc0L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBankMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBankMajor = function SvgBankMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 6h20c0-.604-.368-1.147-.928-1.371l-8.515-3.406a1.5 1.5 0 0 0-1.114 0L.928 4.629C.368 4.853 0 5.396 0 6zm0 2v1a1 1 0 0 0 1 1v7a1 1 0 0 0 0 2h18a1 1 0 1 0 0-2v-7a1 1 0 0 0 1-1V8H0zm4 2h2v7H4v-7zm7 0H9v7h2v-7zm3 0h2v7h-2v-7z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gaelj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBarcodeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBarcodeMajor = function SvgBarcodeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 3h1V1H2.5A1.5 1.5 0 0 0 1 2.5V4h2V3zm14 0v1h2V2.5A1.5 1.5 0 0 0 17.5 1H16v2h1zm-1 14h1v-1h2v1.5a1.5 1.5 0 0 1-1.5 1.5H16v-2zM3 17v-1H1v1.5A1.5 1.5 0 0 0 2.5 19H4v-2H3zm-1-3h3V6H2v8zm12 0h-3V6h3v8zm-7 0h2V6H7v8zm9 0h2V6h-2v8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bMtMG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBehaviorMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBehaviorMajor = function SvgBehaviorMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m9.37 8.07 10 4a1 1 0 0 1 .08 1.82l-3.7 1.86-1.85 3.7a1 1 0 0 1-.9.55h-.04a1 1 0 0 1-.89-.63l-4-10a1 1 0 0 1 1.3-1.3zm.337-3.363A1 1 0 0 1 8 4V1a1 1 0 0 1 2 0v3a1 1 0 0 1-.293.707zm-5 3.586A1 1 0 0 1 4 10H1a1 1 0 0 1 0-2h3a1 1 0 0 1 .707.293zm-1-6a1 1 0 0 0-1.414 1.414l2 2a1 1 0 0 0 1.414-1.414l-2-2zm12 0a1 1 0 0 0-1.414 0l-2 2a1 1 0 0 0 1.414 1.414l2-2a1 1 0 0 0 0-1.414zm-13.414 12 2-2a1 1 0 0 1 1.414 1.414l-2 2a1 1 0 0 1-1.414-1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"f2U6L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBillingStatementDollarMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBillingStatementDollarMajor = function SvgBillingStatementDollarMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 0h11A1.5 1.5 0 0 1 17 1.5v18.223a.2.2 0 0 1-.335.148l-1.662-1.513a.5.5 0 0 0-.673 0l-1.66 1.51a.5.5 0 0 1-.673 0l-1.66-1.51a.5.5 0 0 0-.674 0l-1.66 1.51a.5.5 0 0 1-.673 0l-1.66-1.51a.5.5 0 0 0-.673 0L3.335 19.87A.2.2 0 0 1 3 19.723V1.5A1.5 1.5 0 0 1 4.5 0zm4.207 11.293c.667.667 1.29.706 1.316.707.528 0 .977-.448.977-1 0-.646-.128-.751-1.243-1.03h-.001C8.725 9.712 7 9.28 7 7a2.993 2.993 0 0 1 2-2.815V4a1 1 0 0 1 2 0v.2a4.51 4.51 0 0 1 1.707 1.093 1 1 0 0 1-1.414 1.414c-.667-.667-1.291-.706-1.317-.707C9.448 6 9 6.448 9 7c0 .646.127.751 1.242 1.03h.002C11.274 8.288 13 8.72 13 11a2.995 2.995 0 0 1-2 2.815V14a1 1 0 0 1-2 0v-.2a4.49 4.49 0 0 1-1.707-1.093 1 1 0 1 1 1.414-1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aYGzd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBillingStatementEuroMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBillingStatementEuroMajor = function SvgBillingStatementEuroMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4.5 0h11c.828 0 1.5.677 1.5 1.512v18.21a.2.2 0 0 1-.334.149l-1.664-1.515a.497.497 0 0 0-.67 0l-1.664 1.514a.497.497 0 0 1-.67 0l-1.663-1.514a.497.497 0 0 0-.67 0L8.002 19.87a.497.497 0 0 1-.67 0l-1.664-1.514a.497.497 0 0 0-.67 0l-1.664 1.515a.2.2 0 0 1-.334-.15V1.512C3 .677 3.672 0 4.5 0zm2.543 8.865c-.02.324-.025.65-.014.974h-.268a.778.778 0 0 0-.538.214.716.716 0 0 0-.223.517c0 .194.08.38.223.517a.778.778 0 0 0 .538.214h.433C7.612 13.424 8.774 15 10.392 15h.052c1.178.001 1.838-.227 2.401-1.207a.94.94 0 0 0-.095-1.07.999.999 0 0 0-.3-.244 1.038 1.038 0 0 0-1.115.091.977.977 0 0 0-.254.29.48.48 0 0 1-.11.152c-.072.056-.188.055-.525.055h-.054c-.375 0-.86-.692-1.136-1.766h1.058a.778.778 0 0 0 .538-.214.716.716 0 0 0 .223-.517c0-.194-.08-.38-.223-.517a.778.778 0 0 0-.538-.214h-1.27a7.719 7.719 0 0 1 .02-.974h1.249a.778.778 0 0 0 .538-.214.716.716 0 0 0 .223-.517c0-.194-.08-.38-.223-.517a.778.778 0 0 0-.538-.214H9.34c.283-.903.711-1.47 1.051-1.47.487 0 .569.034.731.325.13.216.344.376.595.445.25.068.52.04.75-.077a.978.978 0 0 0 .484-.554.931.931 0 0 0-.053-.722C12.331 4.325 11.55 4 10.391 4 8.85 4 7.721 5.43 7.26 7.403h-.5a.778.778 0 0 0-.538.214.716.716 0 0 0-.223.517c0 .194.08.38.223.517a.778.778 0 0 0 .538.214h.282z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1dHvk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBillingStatementPoundMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBillingStatementPoundMajor = function SvgBillingStatementPoundMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4.5 0h11c.828 0 1.5.677 1.5 1.512v18.21a.2.2 0 0 1-.334.149l-1.664-1.515a.497.497 0 0 0-.67 0l-1.664 1.514a.497.497 0 0 1-.67 0l-1.663-1.514a.497.497 0 0 0-.67 0L8.002 19.87a.497.497 0 0 1-.67 0l-1.664-1.514a.497.497 0 0 0-.67 0l-1.664 1.515a.2.2 0 0 1-.334-.15V1.512C3 .677 3.672 0 4.5 0zm2.511 9.827h.247c-.16.943-.39 1.863-.696 2.76-.04.12-.06.244-.056.37 0 .276.106.542.296.737.19.196.447.306.715.306h4.472c.268 0 .525-.11.715-.306a1.06 1.06 0 0 0 .296-.737 1.06 1.06 0 0 0-.296-.738.996.996 0 0 0-.715-.305H8.88c.18-.687.322-1.384.427-2.087h1.75c.268 0 .525-.11.714-.305a1.06 1.06 0 0 0 .297-.738 1.06 1.06 0 0 0-.297-.738.996.996 0 0 0-.715-.305H9.513c.017-.355.026-.712.026-1.072 0-.985.385-1.492.877-1.573.35-.057.561.107.561.444 0 .276.107.542.297.737.19.196.447.306.715.306.268 0 .525-.11.715-.306A1.06 1.06 0 0 0 13 5.54c0-1.685-1.378-2.753-2.9-2.504-1.514.247-2.583 1.659-2.583 3.633 0 .36-.01.717-.028 1.072H7.01a.996.996 0 0 0-.715.305A1.06 1.06 0 0 0 6 8.784c0 .277.107.542.296.738.19.195.447.305.715.305z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6cTLo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBillingStatementRupeeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBillingStatementRupeeMajor = function SvgBillingStatementRupeeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4.5 0h11c.828 0 1.5.677 1.5 1.512v18.21a.2.2 0 0 1-.334.149l-1.664-1.515a.497.497 0 0 0-.67 0l-1.664 1.514a.497.497 0 0 1-.67 0l-1.663-1.514a.497.497 0 0 0-.67 0L8.002 19.87a.497.497 0 0 1-.67 0l-1.664-1.514a.497.497 0 0 0-.67 0l-1.664 1.515a.2.2 0 0 1-.334-.15V1.512C3 .677 3.672 0 4.5 0zm6.808 13.4-1.96-2.63c1.342-.21 2.254-1.288 2.552-2.694h.85a.75.75 0 1 0 0-1.499h-.763a4.427 4.427 0 0 0-.432-1.579h.945A1 1 0 1 0 12.5 3h-5a1 1 0 1 0 0 1.998h2.135c.449.297.754.86.844 1.58H7.25a.75.75 0 1 0 0 1.498h3.1c-.252.756-.791 1.234-1.493 1.234-.285 0-.543-.02-.777-.056a1 1 0 0 0-1.258 1.489l2.89 3.86a1 1 0 0 0 1.596-1.204z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"d53AD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBillingStatementYenMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBillingStatementYenMajor = function SvgBillingStatementYenMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4.5 0h11c.828 0 1.5.677 1.5 1.512v18.21a.2.2 0 0 1-.334.149l-1.664-1.515a.497.497 0 0 0-.67 0l-1.664 1.514a.497.497 0 0 1-.67 0l-1.663-1.514a.497.497 0 0 0-.67 0L8.002 19.87a.497.497 0 0 1-.67 0l-1.664-1.514a.497.497 0 0 0-.67 0l-1.664 1.515a.2.2 0 0 1-.334-.15V1.512C3 .677 3.672 0 4.5 0zm7.744 10.523h-1.25v-.75h1.25a.75.75 0 1 0 0-1.5h-.847l1.85-3.204a1 1 0 0 0-1.732-1L10 6.693 8.485 4.069a1 1 0 0 0-1.732 1l1.85 3.204h-.859a.75.75 0 0 0 0 1.5h1.25v.75h-1.25a.75.75 0 1 0 0 1.5h1.25v1a1 1 0 0 0 2 0v-1h1.25a.75.75 0 0 0 0-1.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8j6Ah":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBlockMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBlockMinor = function SvgBlockMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 3.6A1.6 1.6 0 0 1 3.6 2H7a1 1 0 0 1 0 2H4v3a1 1 0 0 1-2 0V3.6zM16.4 2A1.6 1.6 0 0 1 18 3.6V7a1 1 0 1 1-2 0V4h-3a1 1 0 1 1 0-2h3.4zm0 16H13a1 1 0 1 1 0-2h3v-3a1 1 0 1 1 2 0v3.4a1.6 1.6 0 0 1-1.6 1.6zM3.6 18A1.6 1.6 0 0 1 2 16.4V13a1 1 0 1 1 2 0v3h3a1 1 0 1 1 0 2H3.6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2K9Go":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBlockquoteMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBlockquoteMajor = function SvgBlockquoteMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 3.5a1 1 0 0 0-1 1V5h.5A1.5 1.5 0 0 1 4 6.5v1A1.5 1.5 0 0 1 2.5 9h-1A1.5 1.5 0 0 1 0 7.5v-3a3 3 0 0 1 3-3v2zM8.5 5H8v-.5a1 1 0 0 1 1-1v-2a3 3 0 0 0-3 3v3A1.5 1.5 0 0 0 7.5 9h1A1.5 1.5 0 0 0 10 7.5v-1A1.5 1.5 0 0 0 8.5 5zM12 8a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2h-6a1 1 0 0 1-1-1zm-8 3a1 1 0 1 0 0 2h15a1 1 0 1 0 0-2H4zm-1 5a1 1 0 0 1 1-1h15a1 1 0 1 1 0 2H4a1 1 0 0 1-1-1zM13 3a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2h-6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9Bbpz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBlogMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBlogMajor = function SvgBlogMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M16 2a2 2 0 0 1 4 0v1h-4V2zM8.379 1a1.5 1.5 0 0 1 1.06.44l4.122 4.12A1.5 1.5 0 0 1 14 6.622V17.5a1.5 1.5 0 0 1-1.5 1.5h-10A1.5 1.5 0 0 1 1 17.5v-15A1.5 1.5 0 0 1 2.5 1h5.879zM4 5h4v2H4V5zm7 4v2H4V9h7zm-7 6v-2h5v2H4zM16 5h4v11l-2 4-2-4V5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5Cvjx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBugMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBugMajor = function SvgBugMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4 2a1 1 0 1 0-2 0v.228a7.166 7.166 0 0 0 3.187 5.96c-.056.338-.1.685-.131 1.039a11.254 11.254 0 0 0-3.357-1.124l-.534-.09a1 1 0 1 0-.329 1.973l.534.09a9.254 9.254 0 0 1 3.648 1.452c.012.347.03.687.057 1.02l-.607.729a11 11 0 0 0-2.4 5.233l-.054.326a1 1 0 1 0 1.973.328l.054-.325a9 9 0 0 1 1.473-3.636C6.153 17.492 7.482 19 10 19s3.848-1.508 4.487-3.797a8.999 8.999 0 0 1 1.473 3.636l.054.325a1 1 0 1 0 1.973-.328l-.055-.326a11 11 0 0 0-2.4-5.233l-.607-.729c.027-.337.046-.683.058-1.035l.4-.3a5.236 5.236 0 0 1 2.282-.977l1.5-.25a1 1 0 1 0-.329-1.972l-1.5.25a7.236 7.236 0 0 0-2.401.855 13.69 13.69 0 0 0-.122-.932A7.166 7.166 0 0 0 18 2.228V2a1 1 0 1 0-2 0v.228c0 1.502-.65 2.894-1.727 3.855C13.395 3.635 11.81 2 10 2 8.19 2 6.605 3.635 5.728 6.083A5.165 5.165 0 0 1 4 2.228V2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"Fbwe3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgButtonCornerPillMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgButtonCornerPillMajor = function SvgButtonCornerPillMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M16.28 2.79c-7.45 0-13.49 6.04-13.49 13.49V20H0v-3.72C0 7.287 7.288 0 16.28 0H20v2.79h-3.72z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eGlT1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgButtonCornerRoundedMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgButtonCornerRoundedMajor = function SvgButtonCornerRoundedMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M8.837 2.79a6.047 6.047 0 0 0-6.046 6.047V20H0V8.837A8.837 8.837 0 0 1 8.837 0H20v2.79H8.837z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fK1Dn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgButtonCornerSquareMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgButtonCornerSquareMajor = function SvgButtonCornerSquareMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M0 0h20v2.79H2.79V20H0V0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gugiC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgButtonMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgButtonMinor = function SvgButtonMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 5.5A1.5 1.5 0 0 1 3.5 4h13A1.5 1.5 0 0 1 18 5.5v4.95l-4.014-2.59c-1.71-1.104-3.953.19-3.853 2.224L10.278 13H3.5A1.5 1.5 0 0 1 2 11.5v-6z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M12.131 9.999a.5.5 0 0 1 .77-.445l4.869 3.142a.5.5 0 0 1-.021.853l-1.425.823 1.229 2.128a1 1 0 1 1-1.732 1l-1.23-2.128-1.424.822a.5.5 0 0 1-.75-.408L12.131 10z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fJpKj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBuyButtonButtonLayoutMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBuyButtonButtonLayoutMajor = function SvgBuyButtonButtonLayoutMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 3h1V1H2.5A1.5 1.5 0 0 0 1 2.5V4h2V3zm-2 7a4 4 0 0 1 4-4h10a4 4 0 0 1 0 8H5a4 4 0 0 1-4-4zm16-6V3h-1V1h1.5A1.5 1.5 0 0 1 19 2.5V4h-2zm0 13h-1v2h1.5a1.5 1.5 0 0 0 1.5-1.5V16h-2v1zM3 16v1h1v2H2.5A1.5 1.5 0 0 1 1 17.5V16h2zm6 3H6v-2h3v2zm2 0h3v-2h-3v2zM9 3H6V1h3v2zm2 0h3V1h-3v2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kyHbn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBuyButtonHorizontalLayoutMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBuyButtonHorizontalLayoutMajor = function SvgBuyButtonHorizontalLayoutMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 3h1V1H2.5A1.5 1.5 0 0 0 1 2.5V4h2V3zm14 0v1h2V2.5A1.5 1.5 0 0 0 17.5 1H16v2h1zM3 16v1h1v2H2.5A1.5 1.5 0 0 1 1 17.5V16h2zm14 1h-1v2h1.5a1.5 1.5 0 0 0 1.5-1.5V16h-2v1zm-8-3V6H3v8h6zm0 5H6v-2h3v2zM6 3h3V1H6v2zm8 16h-3v-2h3v2zM11 3h3V1h-3v2zm6 5h-6V6h6v2zm-6 4h4v-2h-4v2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fAgua":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBuyButtonMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgBuyButtonMajor = function SvgBuyButtonMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M0 1.5A1.5 1.5 0 0 1 1.5 0h17A1.5 1.5 0 0 1 20 1.5v6A1.5 1.5 0 0 1 18.5 9h-5.889a1.5 1.5 0 0 1-1.5-1.5V5.111a1.111 1.111 0 1 0-2.222 0V7.5a1.5 1.5 0 0 1-1.5 1.5H1.5A1.5 1.5 0 0 1 0 7.5v-6z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M7 5a3 3 0 0 1 6 0v4.384a.5.5 0 0 0 .356.479l2.695.808a2.5 2.5 0 0 1 1.756 2.748l-.633 4.435A2.5 2.5 0 0 1 14.699 20H6.96a2.5 2.5 0 0 1-2.27-1.452l-2.06-4.464a2.417 2.417 0 0 1-.106-1.777c.21-.607.719-1.16 1.516-1.273 1.035-.148 2.016.191 2.961.82V5zm3-1a1 1 0 0 0-1 1v7.793c0 1.39-1.609 1.921-2.527 1.16-.947-.784-1.59-.987-2.069-.948a.486.486 0 0 0 .042.241l2.06 4.463A.5.5 0 0 0 6.96 18h7.74a.5.5 0 0 0 .494-.43l.633-4.434a.5.5 0 0 0-.35-.55l-2.695-.808A2.5 2.5 0 0 1 11 9.384V5a1 1 0 0 0-1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8W9nu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgBuyButtonVerticalLayoutMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgBuyButtonVerticalLayoutMajor = function SvgBuyButtonVerticalLayoutMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 3h1V1H2.5A1.5 1.5 0 0 0 1 2.5V4h2V3zm14 0v1h2V2.5A1.5 1.5 0 0 0 17.5 1H16v2h1zM3 16v1h1v2H2.5A1.5 1.5 0 0 1 1 17.5V16h2zm14 1h-1v2h1.5a1.5 1.5 0 0 0 1.5-1.5V16h-2v1zM1 6v3h2V6H1zm0 8v-3h2v3H1zm16-8v3h2V6h-2zm0 8v-3h2v3h-2zm-3-5V3H6v6h8zm-2 8H6v-2h6v2zm-6-4h8v-2H6v2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2n857":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCalendarMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCalendarMajor = function SvgCalendarMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M17.5 2H15V1a1 1 0 1 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2.5C1.7 2 1 2.7 1 3.5v15c0 .8.7 1.5 1.5 1.5h15c.8 0 1.5-.7 1.5-1.5v-15c0-.8-.7-1.5-1.5-1.5zM3 18h14V8H3v10z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2ol3p":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCalendarMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCalendarMinor = function SvgCalendarMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M16.5 4A1.5 1.5 0 0 1 18 5.5v11a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 2 16.5v-11A1.5 1.5 0 0 1 3.5 4H5V3a1 1 0 1 1 2 0v1h6V3a1 1 0 1 1 2 0v1h1.5zM4 8h12v8H4V8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"g4o1n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCalendarTickMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCalendarTickMajor = function SvgCalendarTickMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M15 2h2.5c.8 0 1.5.7 1.5 1.5v15c0 .8-.7 1.5-1.5 1.5h-15c-.8 0-1.5-.7-1.5-1.5v-15C1 2.7 1.7 2 2.5 2H4V1a1 1 0 0 1 2 0v1h7V1a1 1 0 1 1 2 0v1zm2 16H3V8h14v10zm-4.707-7.707L9 13.586l-1.293-1.293A1.001 1.001 0 0 0 6 13a1 1 0 0 0 .293.707l2 2a.997.997 0 0 0 1.414 0l4-4a1 1 0 0 0-1.414-1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"02iRX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCameraMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCameraMajor = function SvgCameraMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M5.74 1.786A1.5 1.5 0 0 1 7.059 1h5.855a1.5 1.5 0 0 1 1.315.777l.55 1c.04.074.073.148.1.223H18.5A1.5 1.5 0 0 1 20 4.5v11a1.5 1.5 0 0 1-1.5 1.5h-17A1.5 1.5 0 0 1 0 15.5v-11A1.5 1.5 0 0 1 1.5 3h3.603c.025-.072.057-.144.095-.214l.542-1zM2 5h3v2H2V5zm12 5a4 4 0 1 1-8 0 4 4 0 0 1 8 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hI9w6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCancelSmallMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCancelSmallMinor = function SvgCancelSmallMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m11.414 10 4.293-4.293a.999.999 0 1 0-1.414-1.414L10 8.586 5.707 4.293a.999.999 0 1 0-1.414 1.414L8.586 10l-4.293 4.293a.999.999 0 1 0 1.414 1.414L10 11.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L11.414 10z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"epV1L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCapitalMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCapitalMajor = function SvgCapitalMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M6.328 11.018h3.074c-.426.951-.704 2.033-.825 3.152a6.01 6.01 0 0 0-4.392 4.345C3.981 19.318 4.672 20 5.5 20h9c.828 0 1.52-.682 1.315-1.485a6.005 6.005 0 0 0-5.235-4.487 7.025 7.025 0 0 1 1.896-4.058l3.133-.648c1.897-.4 3.294-1.797 3.593-3.593l.799-4.491A1.7 1.7 0 0 0 19.849.5a.784.784 0 0 0-.413-.4c-.246-.1-.515-.132-.733-.06l-4.59 1.597c-1.897.599-3.095 2.295-3.095 4.192v2.794l-.2.22-.598-2.815c-.4-1.896-1.996-3.293-3.992-3.693l-5.09-.798c-.362-.047-.699 0-.899.3-.2.299-.299.698-.2.997l1.698 4.99a4.869 4.869 0 0 0 4.59 3.194zm8.283-7.485 3.094-.998-.599 2.795a2.564 2.564 0 0 1-1.996 1.996l-2.195.499V5.829c0-.998.698-1.996 1.696-2.296zM3.633 7.226 2.535 3.833l3.393.499c1.198.2 2.196 1.097 2.396 2.195l.399 2.495H6.328c-1.198 0-2.296-.698-2.695-1.796z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"d9Pba":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCapturePaymentMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCapturePaymentMinor = function SvgCapturePaymentMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15 9a2 2 0 1 1-.001 4.001A2 2 0 0 1 15 9zm-5 0a2 2 0 1 1 .001-4.001A2 2 0 0 1 10 9zm6-7a2 2 0 1 1-.001 4.001A2 2 0 0 1 16 2zm-3 14a1 1 0 1 1 0 2H7a.998.998 0 0 1-.243-.03l-4-1A1 1 0 0 1 2 16v-3c0-.431.275-.813.684-.948l3-1a.947.947 0 0 1 .294-.047C5.985 11.004 5.992 11 6 11h3a1 1 0 1 1 0 2H7.166c.599 1.807 2.828 3 5.834 3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5y1lu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCardReaderChipMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCardReaderChipMajor = function SvgCardReaderChipMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M14.5 0A1.5 1.5 0 0 1 16 1.5V9h-3V0h1.5zM11 0H5.5A1.5 1.5 0 0 0 4 1.5V9h7V0zM3.5 11A1.5 1.5 0 0 0 2 12.5V18H1a1 1 0 1 0 0 2h18a1 1 0 1 0 0-2h-1v-5.5a1.5 1.5 0 0 0-1.5-1.5h-13z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fi3xP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCardReaderMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgCardReaderMajor = function SvgCardReaderMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M0 1.5A1.5 1.5 0 0 1 1.5 0h17A1.5 1.5 0 0 1 20 1.5V3H0V1.5zM0 5v7.5A1.5 1.5 0 0 0 1.5 14H4a6 6 0 0 1 12 0h2.5a1.5 1.5 0 0 0 1.5-1.5V5H0z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 10a4 4 0 0 0-4 4v3h3v2a1 1 0 1 0 2 0v-2h3v-3a4 4 0 0 0-4-4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7r23o":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCardReaderTapMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgCardReaderTapMajor = function SvgCardReaderTapMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 8a6 6 0 0 1 6-6 1 1 0 0 0 0-2 8 8 0 0 0-8 8 1 1 0 0 0 2 0z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M8 6a2 2 0 0 0-2 2 1 1 0 0 1-2 0 4 4 0 0 1 4-4 1 1 0 0 1 0 2zm7 0h-4.5A1.5 1.5 0 0 0 9 7.5v11a1.5 1.5 0 0 0 1.5 1.5H15V6zm3.5 0A1.5 1.5 0 0 1 20 7.5v11a1.5 1.5 0 0 1-1.5 1.5H17V6h1.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"h3ytt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCaretDownMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCaretDownMinor = function SvgCaretDownMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M13.098 8H6.902c-.751 0-1.172.754-.708 1.268L9.292 12.7c.36.399 1.055.399 1.416 0l3.098-3.433C14.27 8.754 13.849 8 13.098 8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3CaIn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCaretUpMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCaretUpMinor = function SvgCaretUpMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M6.902 12h6.196c.751 0 1.172-.754.708-1.268L10.708 7.3c-.36-.399-1.055-.399-1.416 0l-3.098 3.433C5.73 11.246 6.151 12 6.902 12z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ewOLm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCartDownMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgCartDownMajor = function SvgCartDownMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M12 1a1 1 0 1 0-2 0v3.586L8.707 3.293a1 1 0 0 0-1.414 1.414l3 3a1 1 0 0 0 1.414 0l3-3a1 1 0 0 0-1.414-1.414L12 4.586V1z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M1 1a1 1 0 0 1 1-1h1.5A1.5 1.5 0 0 1 5 1.5V10h11.133l.877-6.141a1 1 0 1 1 1.98.282l-.939 6.571A1.5 1.5 0 0 1 16.566 12H5v2h10a3 3 0 1 1-2.83 2H6.83A3 3 0 1 1 3 14.17V2H2a1 1 0 0 1-1-1zm13 16a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM3 17a1 1 0 1 1 2 0 1 1 0 0 1-2 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4A5MM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCartMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCartMajor = function SvgCartMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M1 1c0-.552.45-1 1.004-1h1.505c.831 0 1.505.672 1.505 1.5v.56l12.574.908c.877.055 1.52.843 1.397 1.71l-.866 6.034A1.504 1.504 0 0 1 16.63 12H5.014v2h10.043a3.005 3.005 0 0 1 3.011 3c0 1.657-1.348 3-3.01 3a3.005 3.005 0 0 1-2.84-4H6.85a3.005 3.005 0 0 1-2.84 4A3.005 3.005 0 0 1 1 17c0-1.306.838-2.418 2.007-2.83V2H2.004A1.002 1.002 0 0 1 1 1zm4.014 3.064V10h11.18l.727-5.07-11.907-.866zM14.054 17c0-.552.449-1 1.003-1 .554 0 1.004.448 1.004 1s-.45 1-1.004 1a1.002 1.002 0 0 1-1.003-1zM3.007 17c0-.552.45-1 1.004-1s1.003.448 1.003 1-.449 1-1.003 1a1.002 1.002 0 0 1-1.004-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7ypp8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCartUpMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgCartUpMajor = function SvgCartUpMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 3.414V7a1 1 0 1 0 2 0V3.414l1.293 1.293a1 1 0 1 0 1.414-1.414l-3-3a.998.998 0 0 0-1.414 0l-3 3a1 1 0 0 0 1.414 1.414L10 3.414z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M1 1a1 1 0 0 1 1-1h1.5A1.5 1.5 0 0 1 5 1.5V10h11.133l.877-6.141a1 1 0 1 1 1.98.282l-.939 6.571A1.5 1.5 0 0 1 16.566 12H5v2h10a3 3 0 1 1-2.83 2H6.83A3 3 0 1 1 3 14.17V2H2a1 1 0 0 1-1-1zm13 16a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM3 17a1 1 0 1 1 2 0 1 1 0 0 1-2 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iuxp7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCashDollarMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCashDollarMajor = function SvgCashDollarMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 20C4.486 20 0 15.514 0 10S4.486 0 10 0s10 4.486 10 10-4.486 10-10 10zm1-15a1 1 0 1 0-2 0v.17A3 3 0 0 0 7 8c0 1.013.36 1.77 1.025 2.269.54.405 1.215.572 1.666.685l.066.016c.55.138.835.224 1.018.361.085.064.225.182.225.669a1 1 0 0 1-.984 1 1.611 1.611 0 0 1-.325-.074 2.533 2.533 0 0 1-.984-.633 1 1 0 0 0-1.414 1.414A4.548 4.548 0 0 0 9 14.804V15a1 1 0 1 0 2 0v-.17A3 3 0 0 0 13 12c0-1.013-.36-1.77-1.025-2.269-.54-.405-1.215-.572-1.666-.685l-.066-.016c-.55-.138-.835-.224-1.018-.361C9.14 8.605 9 8.487 9 8a1 1 0 0 1 .984-1 1.618 1.618 0 0 1 .325.074c.245.081.606.255.984.633a1 1 0 1 0 1.414-1.414A4.547 4.547 0 0 0 11 5.196V5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8bO6r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCashEuroMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCashEuroMajor = function SvgCashEuroMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M20 10c0-5.514-4.486-10-10-10S0 4.486 0 10s4.486 10 10 10 10-4.486 10-10zm-12.986.392a10.62 10.62 0 0 1 .014-1H6.75a.75.75 0 1 1 0-1.5h.49C7.696 5.868 8.807 4.4 10.326 4.4c1.142 0 1.911.334 2.47 1.385a.992.992 0 0 1-1.75.932c-.16-.298-.24-.333-.72-.333-.335 0-.757.581-1.036 1.508h.959a.75.75 0 1 1 0 1.5H9.018a8.247 8.247 0 0 0-.019 1h1.251a.75.75 0 1 1 0 1.5H9.208c.272 1.102.749 1.812 1.119 1.812h.053c.329 0 .444.001.516-.054.04-.032.067-.081.11-.159a.993.993 0 0 1 1.738.958c-.555 1.006-1.205 1.24-2.366 1.239h-.051c-1.594 0-2.739-1.617-3.151-3.796H6.75a.75.75 0 1 1 0-1.5h.264z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1igiW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCashPoundMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCashPoundMajor = function SvgCashPoundMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M20 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0s10 4.477 10 10zM7.783 11h-.244a.997.997 0 0 1-1-1 1.003 1.003 0 0 1 1-1h.472c.018-.34.028-.682.028-1.027 0-1.893 1.057-3.246 2.555-3.483 1.504-.239 2.867.785 2.867 2.4a1 1 0 1 1-2 0c0-.323-.21-.48-.555-.425-.487.077-.867.563-.867 1.508 0 .345-.009.687-.026 1.027h1.526a1.003 1.003 0 0 1 1 1 1 1 0 0 1-1 1h-1.73a18.65 18.65 0 0 1-.422 2h2.652a1.003 1.003 0 0 1 1 1 1 1 0 0 1-1 1h-4a.997.997 0 0 1-1-1 .994.994 0 0 1 .056-.354c.302-.86.53-1.742.688-2.646z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dgAPd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCashRupeeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCashRupeeMajor = function SvgCashRupeeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M20 10c0-5.514-4.486-10-10-10S0 4.486 0 10s4.486 10 10 10 10-4.486 10-10zM9.526 12.062l2.08 2.761a1 1 0 1 1-1.597 1.204L7 12.034a1 1 0 0 1 1.258-1.49c.234.037.492.056.777.056.702 0 1.241-.478 1.493-1.235h-3.1a.75.75 0 1 1 0-1.5h3.229c-.09-.72-.395-1.283-.844-1.58H7.678a1 1 0 1 1 0-2h5a1 1 0 1 1 0 2h-.945c.233.467.38 1.004.432 1.58h.763a.75.75 0 1 1 0 1.5h-.85c-.298 1.407-1.21 2.486-2.552 2.697z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cktLl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCashYenMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCashYenMajor = function SvgCashYenMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M20 10c0-5.514-4.486-10-10-10S0 4.486 0 10s4.486 10 10 10 10-4.486 10-10zm-9.025 1.754h1.25a.75.75 0 1 1 0 1.5h-1.25v1a1 1 0 0 1-2 0v-1h-1.25a.75.75 0 1 1 0-1.5h1.25v-.75h-1.25a.75.75 0 1 1 0-1.5h.859L6.734 6.3a1 1 0 0 1 1.732-1l1.515 2.624L11.496 5.3a1 1 0 0 1 1.732 1l-1.85 3.204h.847a.75.75 0 1 1 0 1.5h-1.25v.75z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dYHYk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCategoriesMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCategoriesMajor = function SvgCategoriesMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M5.5 2A1.5 1.5 0 0 0 4 3.5V4h12v-.5A1.5 1.5 0 0 0 14.5 2h-9zM2 7.5A1.5 1.5 0 0 1 3.5 6h13A1.5 1.5 0 0 1 18 7.5V8H2v-.5zm-1 4A1.5 1.5 0 0 1 2.5 10h15a1.5 1.5 0 0 1 1.5 1.5v7a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 18.5v-7z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bNXwe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgChannelsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgChannelsMajor = function SvgChannelsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15.284 14.546A2.975 2.975 0 0 1 17 14c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3a2.94 2.94 0 0 1 .129-.822l-1.575-1.125A3.964 3.964 0 0 1 10 16a3.964 3.964 0 0 1-2.554-.947l-1.575 1.125c.076.262.129.535.129.822 0 1.654-1.346 3-3 3s-3-1.346-3-3 1.346-3 3-3c.615 0 1.214.191 1.716.546l1.56-1.114A3.97 3.97 0 0 1 6 12c0-1.858 1.28-3.411 3-3.858V5.815A2.993 2.993 0 0 1 7 3c0-1.654 1.346-3 3-3s3 1.346 3 3a2.996 2.996 0 0 1-2 2.816v2.326c1.72.447 3 2 3 3.858-.003.49-.096.976-.276 1.432l1.56 1.114zm1.037 3.146A1 1 0 0 0 17 18a1 1 0 0 0 0-2 1 1 0 0 0-.679 1.692zm-14 0A1 1 0 0 0 3 18a1 1 0 0 0 0-2 1 1 0 0 0-.679 1.692zM11 3c0-.551-.449-1-1-1-.551 0-1 .449-1 1 0 .551.449 1 1 1 .551 0 1-.449 1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1RsNM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgChatMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgChatMajor = function SvgChatMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M10 0C4.486 0 0 4.486 0 10c0 1.728.45 3.42 1.304 4.924L.101 17.965c-.458 1.209.726 2.393 1.935 1.934l3.04-1.204A9.944 9.944 0 0 0 10 20c5.514 0 10-4.486 10-10S15.514 0 10 0zM5.293 9.293a.997.997 0 0 1 1.414 0 .997.997 0 0 1 0 1.414.997.997 0 0 1-1.414 0 .997.997 0 0 1 0-1.414zm4 0a.997.997 0 0 1 1.414 0 .997.997 0 0 1 0 1.414 1.003 1.003 0 0 1-1.414 0 1.003 1.003 0 0 1 0-1.414zM14 9a.997.997 0 0 0-1 1 .997.997 0 0 0 1 1 .997.997 0 0 0 1-1 .997.997 0 0 0-1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3qNNc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgChecklistAlternateMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgChecklistAlternateMajor = function SvgChecklistAlternateMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M8 2a2 2 0 1 1 4 0h3.5A1.5 1.5 0 0 1 17 3.5v15a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 3 18.5v-15A1.5 1.5 0 0 1 4.5 2H8zm-1 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-1 5a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm8-10.5A1.5 1.5 0 0 0 12.5 4h-5A1.5 1.5 0 0 0 6 5.5V6h8v-.5zM9 12h6v-2H9v2zm0 2h6v2H9v-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"i4hhU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgChecklistMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgChecklistMajor = function SvgChecklistMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 0a2 2 0 0 0-2 2H3.5A1.5 1.5 0 0 0 2 3.5v15A1.5 1.5 0 0 0 3.5 20h13a1.5 1.5 0 0 0 1.5-1.5v-15A1.5 1.5 0 0 0 16.5 2H12a2 2 0 0 0-2-2zM6 6v-.5A1.5 1.5 0 0 1 7.5 4h5A1.5 1.5 0 0 1 14 5.5V6H6zm7.707 3.293a1 1 0 0 1 0 1.414l-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 1 1 1.414-1.414L9 12.586l3.293-3.293a1 1 0 0 1 1.414 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"chPZN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCheckoutMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCheckoutMajor = function SvgCheckoutMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M1 1c0-.552.45-1 1.004-1h1.505c.831 0 1.505.672 1.505 1.5v.56l12.574.908c.877.055 1.52.843 1.397 1.71l-.866 6.034A1.504 1.504 0 0 1 16.63 12H5.014v2h10.043a3.005 3.005 0 0 1 3.011 3c0 1.657-1.348 3-3.01 3a3.005 3.005 0 0 1-2.84-4H6.85a3.005 3.005 0 0 1-2.84 4A3.005 3.005 0 0 1 1 17c0-1.306.838-2.418 2.007-2.83V2H2.004A1.002 1.002 0 0 1 1 1zm13.054 16c0-.552.449-1 1.003-1 .554 0 1.004.448 1.004 1s-.45 1-1.004 1a1.002 1.002 0 0 1-1.003-1zM3.007 17c0-.552.45-1 1.004-1s1.003.448 1.003 1-.449 1-1.003 1a1.002 1.002 0 0 1-1.004-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eYjOF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgChevronDownMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgChevronDownMinor = function SvgChevronDownMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 14a.997.997 0 0 1-.707-.293l-5-5a.999.999 0 1 1 1.414-1.414L10 11.586l4.293-4.293a.999.999 0 1 1 1.414 1.414l-5 5A.997.997 0 0 1 10 14z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"g6b7S":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgChevronLeftMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgChevronLeftMinor = function SvgChevronLeftMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M12 16a.997.997 0 0 1-.707-.293l-5-5a.999.999 0 0 1 0-1.414l5-5a.999.999 0 1 1 1.414 1.414L8.414 10l4.293 4.293A.999.999 0 0 1 12 16z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9JBlT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgChevronRightMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgChevronRightMinor = function SvgChevronRightMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M8 16a.999.999 0 0 1-.707-1.707L11.586 10 7.293 5.707a.999.999 0 1 1 1.414-1.414l5 5a.999.999 0 0 1 0 1.414l-5 5A.997.997 0 0 1 8 16z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"11C5X":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgChevronUpMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgChevronUpMinor = function SvgChevronUpMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15 13a.997.997 0 0 1-.707-.293L10 8.414l-4.293 4.293a.999.999 0 1 1-1.414-1.414l5-5a.999.999 0 0 1 1.414 0l5 5A.999.999 0 0 1 15 13z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3rL1E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleAlertMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleAlertMajor = function SvgCircleAlertMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M10 0C4.486 0 0 4.486 0 10s4.486 10 10 10 10-4.486 10-10S15.514 0 10 0zM9 6a1 1 0 1 1 2 0v4a1 1 0 1 1-2 0V6zm1 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6FI0l":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleCancelMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleCancelMajor = function SvgCircleCancelMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M0 10C0 4.486 4.486 0 10 0s10 4.486 10 10-4.486 10-10 10S0 15.514 0 10zm7.707-3.707a1 1 0 0 0-1.414 1.414L8.586 10l-2.293 2.293a1 1 0 1 0 1.414 1.414L10 11.414l2.293 2.293a1 1 0 0 0 1.414-1.414L11.414 10l2.293-2.293a1 1 0 0 0-1.414-1.414L10 8.586 7.707 6.293z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"a0e09":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleCancelMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleCancelMinor = function SvgCircleCancelMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2a8 8 0 1 0 0 16 8 8 0 0 0 0-16zM7.707 6.293a1 1 0 0 0-1.414 1.414L8.586 10l-2.293 2.293a1 1 0 1 0 1.414 1.414L10 11.414l2.293 2.293a1 1 0 1 0 1.414-1.414L11.414 10l2.293-2.293a1 1 0 0 0-1.414-1.414L10 8.586 7.707 6.293z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jXju9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleChevronDownMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleChevronDownMinor = function SvgCircleChevronDownMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0zm-4.293-1.707a1 1 0 0 0-1.414 0L10 10.586 7.707 8.293a1 1 0 0 0-1.414 1.414l3 3a1 1 0 0 0 1.414 0l3-3a1 1 0 0 0 0-1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"e5dQ4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleChevronLeftMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleChevronLeftMinor = function SvgCircleChevronLeftMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 2a8 8 0 1 0 0 16 8 8 0 0 0 0-16zm1.707 4.293a1 1 0 0 1 0 1.414L9.414 10l2.293 2.293a1 1 0 0 1-1.414 1.414l-3-3a1 1 0 0 1 0-1.414l3-3a1 1 0 0 1 1.414 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jHC7a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleChevronRightMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleChevronRightMinor = function SvgCircleChevronRightMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 2a8 8 0 1 1 0 16 8 8 0 0 1 0-16zM8.293 6.293a1 1 0 0 0 0 1.414L10.586 10l-2.293 2.293a1 1 0 1 0 1.414 1.414l3-3a1 1 0 0 0 0-1.414l-3-3a1 1 0 0 0-1.414 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2Dp4c":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleChevronUpMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleChevronUpMinor = function SvgCircleChevronUpMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M18 10a8 8 0 1 0-16 0 8 8 0 0 0 16 0zm-4.293 1.707a1 1 0 0 1-1.414 0L10 9.414l-2.293 2.293a1 1 0 0 1-1.414-1.414l3-3a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3Nqrj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleDisabledMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleDisabledMajor = function SvgCircleDisabledMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 10c0-1.846.635-3.543 1.688-4.897l11.209 11.209A7.954 7.954 0 0 1 10 18c-4.411 0-8-3.589-8-8zm14.312 4.897L5.103 3.688A7.954 7.954 0 0 1 10 2c4.411 0 8 3.589 8 8a7.952 7.952 0 0 1-1.688 4.897zM0 10c0 5.514 4.486 10 10 10s10-4.486 10-10S15.514 0 10 0 0 4.486 0 10z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"l0cDk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleDisableMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleDisableMinor = function SvgCircleDisableMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4 10c0-1.294.416-2.49 1.115-3.471l8.356 8.356A5.961 5.961 0 0 1 10 16c-3.309 0-6-2.691-6-6zm12 0c0 1.294-.416 2.49-1.115 3.471L6.529 5.115A5.961 5.961 0 0 1 10 4c3.309 0 6 2.691 6 6zM2 10c0 4.411 3.589 8 8 8s8-3.589 8-8-3.589-8-8-8-8 3.589-8 8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"khEFm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleDotsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleDotsMajor = function SvgCircleDotsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 10C0 4.486 4.486 0 10 0s10 4.486 10 10-4.486 10-10 10S0 15.514 0 10zm10 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-3-1a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm7 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"645ub":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleDownMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleDownMajor = function SvgCircleDownMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 20C4.486 20 0 15.514 0 10S4.486 0 10 0s10 4.486 10 10-4.486 10-10 10zm-1-8.414-1.293-1.293a1 1 0 0 0-1.414 1.414l3 3a.998.998 0 0 0 1.414 0l3-3a1 1 0 0 0-1.414-1.414L11 11.586V6a1 1 0 0 0-2 0v5.586z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"68fD8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleInformationMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleInformationMajor = function SvgCircleInformationMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M10 20c5.514 0 10-4.486 10-10S15.514 0 10 0 0 4.486 0 10s4.486 10 10 10zm1-6a1 1 0 1 1-2 0v-4a1 1 0 1 1 2 0v4zm-1-9a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"12j3F":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleLeftMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleLeftMajor = function SvgCircleLeftMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M0 10C0 4.486 4.486 0 10 0s10 4.486 10 10-4.486 10-10 10S0 15.514 0 10zm8.414-1 1.293-1.293a1 1 0 0 0-1.414-1.414l-3 3a.997.997 0 0 0 0 1.414l3 3a1 1 0 0 0 1.414-1.414L8.414 11H14a1 1 0 0 0 0-2H8.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3r5on":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleMinusMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleMinusMajor = function SvgCircleMinusMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 20C4.486 20 0 15.514 0 10S4.486 0 10 0s10 4.486 10 10-4.486 10-10 10zM6 9a1 1 0 1 0 0 2h8a1 1 0 1 0 0-2H6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lnU5a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleMinusMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleMinusMinor = function SvgCircleMinusMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15 10a1 1 0 0 1-1 1H6a1 1 0 1 1 0-2h8a1 1 0 0 1 1 1zm-5-8a8 8 0 1 0 0 16 8 8 0 0 0 0-16z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gadZf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleMinusOutlineMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleMinusOutlineMinor = function SvgCircleMinusOutlineMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 2c-4.411 0-8 3.589-8 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm0 14c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zM7 9a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2H7z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2vsD9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCirclePlusMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCirclePlusMajor = function SvgCirclePlusMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M0 10c0 5.514 4.486 10 10 10s10-4.486 10-10S15.514 0 10 0 0 4.486 0 10zm5 0a1 1 0 0 1 1-1h3V6a1 1 0 1 1 2 0v3h3a1 1 0 1 1 0 2h-3v3a1 1 0 1 1-2 0v-3H6a1 1 0 0 1-1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9VxzN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCirclePlusMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCirclePlusMinor = function SvgCirclePlusMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15 10a1 1 0 0 1-1 1h-3v3a1 1 0 1 1-2 0v-3H6a1 1 0 1 1 0-2h3V6a1 1 0 0 1 2 0v3h3a1 1 0 0 1 1 1zm-5-8a8 8 0 1 0 0 16 8 8 0 0 0 0-16z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ezMCv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCirclePlusOutlineMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCirclePlusOutlineMinor = function SvgCirclePlusOutlineMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 2c-4.411 0-8 3.589-8 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm0 14c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6zm3-7h-2V7a1 1 0 1 0-2 0v2H7a1 1 0 1 0 0 2h2v2a1 1 0 1 0 2 0v-2h2a1 1 0 1 0 0-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aLltE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleRightMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleRightMajor = function SvgCircleRightMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M20 10c0 5.514-4.486 10-10 10S0 15.514 0 10 4.486 0 10 0s10 4.486 10 10zm-8.414 1-1.293 1.293a1 1 0 0 0 1.414 1.414l3-3a.997.997 0 0 0 0-1.414l-3-3a1 1 0 1 0-1.414 1.414L11.586 9H6a1 1 0 0 0 0 2h5.586z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hbZ05":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleTickMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleTickMajor = function SvgCircleTickMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 10a10 10 0 1 0 20 0 10 10 0 0 0-20 0zm15.2-1.8a1 1 0 0 0-1.4-1.4L9 11.6 6.7 9.3a1 1 0 0 0-1.4 1.4l3 3c.4.4 1 .4 1.4 0l5.5-5.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bmrCW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleTickOutlineMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleTickOutlineMinor = function SvgCircleTickOutlineMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 18c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8-3.589 8-8 8zm0-14c-3.309 0-6 2.691-6 6s2.691 6 6 6 6-2.691 6-6-2.691-6-6-6zm-1 9a.997.997 0 0 1-.707-.293l-2-2a1 1 0 1 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 1 1 1.414 1.414l-4 4A.996.996 0 0 1 9 13z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3s2UH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCircleUpMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCircleUpMajor = function SvgCircleUpMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 0c5.514 0 10 4.486 10 10s-4.486 10-10 10S0 15.514 0 10 4.486 0 10 0zm1 8.414 1.293 1.293a1 1 0 1 0 1.414-1.414l-3-3a.998.998 0 0 0-1.414 0l-3 3a1 1 0 0 0 1.414 1.414L9 8.414V14a1 1 0 1 0 2 0V8.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6Zd7J":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgClipboardMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgClipboardMinor = function SvgClipboardMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15 2a1 1 0 0 1 1 1v13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 4 16.5V3a1 1 0 1 1 2 0v1a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V3a1 1 0 0 1 1-1zm-4 2H9a1 1 0 1 1 0-2h2a1 1 0 1 1 0 2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gjpJl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgClockMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgClockMajor = function SvgClockMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 20C4.486 20 0 15.514 0 10S4.486 0 10 0s10 4.486 10 10-4.486 10-10 10zm1-15a1 1 0 1 0-2 0v5a1 1 0 0 0 .293.707l3 3a1 1 0 0 0 1.414-1.414L11 9.586V5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ifvdc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgClockMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgClockMinor = function SvgClockMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8-3.589 8-8 8zm2.293-4.707a.997.997 0 0 1-.707-.293l-2.293-2.293A.997.997 0 0 1 9 10V6a1 1 0 1 1 2 0v3.586l2 2a.999.999 0 0 1-.707 1.707z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6bhPr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCodeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCodeMajor = function SvgCodeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2.707 9.707A.996.996 0 0 0 3 9V5a1 1 0 0 1 1-1 1 1 0 0 0 0-2C2.346 2 1 3.346 1 5v3.586l-.707.707a.999.999 0 0 0 0 1.414l.707.707V15c0 1.654 1.346 3 3 3a1 1 0 0 0 0-2 1 1 0 0 1-1-1v-4a.996.996 0 0 0-.293-.707L2.414 10l.293-.293zm17.217-.09a1.001 1.001 0 0 0-.217-.324L19 8.586V5c0-1.654-1.346-3-3-3a1 1 0 1 0 0 2 1 1 0 0 1 1 1v4a.997.997 0 0 0 .293.707l.293.293-.293.293A.996.996 0 0 0 17 11v4a1 1 0 0 1-1 1 1 1 0 1 0 0 2c1.654 0 3-1.346 3-3v-3.586l.707-.707a1.001 1.001 0 0 0 .217-1.09zm-7.227-4.333a1.002 1.002 0 0 0-1.63.346l-3.996 8a.999.999 0 0 0 .56 1.299 1.006 1.006 0 0 0 1.302-.557l3.995-8a.997.997 0 0 0-.23-1.088z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lEEER":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCollectionsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCollectionsMajor = function SvgCollectionsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M6.948.001C7.342.001 7.72.16 8 .44l1.477 1.68-3.638 4.12a3.568 3.568 0 0 0-.872 2.33V18h-2.48a1.48 1.48 0 0 1-1.051-.44A1.507 1.507 0 0 1 1 16.5V6.62a1.497 1.497 0 0 1 .377-1l3.48-4L5.897.44A1.48 1.48 0 0 1 6.949.001zM14.04 2.44l4.58 5.13c.247.275.383.631.381 1v9.93c0 .399-.159.78-.441 1.062a1.51 1.51 0 0 1-1.065.439H8.456a1.509 1.509 0 0 1-1.033-.457A1.497 1.497 0 0 1 7 18.5V8.62a1.487 1.487 0 0 1 .382-1l3.524-4.001 1.005-1.18a1.51 1.51 0 0 1 2.128 0zm-1.9 5.807a1.51 1.51 0 0 0 1.901-.186 1.497 1.497 0 0 0-.489-2.447 1.512 1.512 0 0 0-1.641.325 1.498 1.498 0 0 0 .228 2.308z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7vA7q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgColorNoneMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgColorNoneMinor = function SvgColorNoneMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.759 4.35a1 1 0 0 0-1.41-.108S2.313 16.274 2.294 16.292a1 1 0 0 0 0 1.415.992.992 0 0 0 1.35.043l.008.01 1.963-1.683A5.97 5.97 0 0 0 10 18a6 6 0 0 0 6-6c0-1.157-.51-2.48-1.223-3.777L17.65 5.76a.999.999 0 0 0 .108-1.41zm-13.75 7.834c-.002-.062-.01-.121-.01-.184 0-4 6-10 6-10s1.2 1.203 2.526 2.885l-8.516 7.299z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lFOep":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgColorsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgColorsMajor = function SvgColorsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M18.867 12.48A4.53 4.53 0 0 0 20 9.304v-.19a9.998 9.998 0 0 0-1.916-5.041A10.017 10.017 0 0 0 8.464.129a10.025 10.025 0 0 0-4.91 2.244A10.005 10.005 0 0 0 .25 12.22a10.002 10.002 0 0 0 2.566 4.744 10.021 10.021 0 0 0 4.66 2.725 19.9 19.9 0 0 0 4.007.31h1.152c.376 0 .735-.195.986-.474A1.47 1.47 0 0 0 14 18.507a1.5 1.5 0 0 0-1.5-1.5c-.399 0-.795-.167-1.076-.448a1.5 1.5 0 0 1 1.062-2.562h3.366a4.54 4.54 0 0 0 3.015-1.517zM12 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM5.5 7a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm-1 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm10-4a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ePmc5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgColumn1Major
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgColumn1Major = function SvgColumn1Major(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M16 2H4v16h12V2zM4 0a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2NhE1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgColumns2Major
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgColumns2Major = function SvgColumns2Major(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 2a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm11 0h7v16h-7V2zM9 2H2v16h7V2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8kdE4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgColumns3Major
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgColumns3Major = function SvgColumns3Major(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M2 0a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm16 2h-4v16h4V2zM8 2h4v16H8V2zM6 2H2v16h4V2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7iK9H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgColumnWithTextMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgColumnWithTextMajor = function SvgColumnWithTextMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M9 7V1H2.5A1.5 1.5 0 0 0 1 2.5V7h8zm10-4.5A1.5 1.5 0 0 0 17.5 1H11v6h8V2.5zM1 9h8v2H1V9zm18 0h-8v2h8V9zM1 13h8v2H1v-2zm18 0h-8v2h8v-2zM1 17h4v2H1v-2zm14 0h-4v2h4v-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"19s7Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgComposeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgComposeMajor = function SvgComposeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M18 9a1 1 0 0 0-1 1v7H3V3h7a1 1 0 1 0 0-2H2.5A1.5 1.5 0 0 0 1 2.5v15A1.5 1.5 0 0 0 2.5 19h15a1.5 1.5 0 0 0 1.5-1.5V10a1 1 0 0 0-1-1z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m15.53 2.029 2.439 2.44-7.739 7.738-3.23.792.792-3.231 7.738-7.74zm3.558 1.321L16.65.913l.406-.407a1.725 1.725 0 0 1 2.44 2.439l-.408.407z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cuUd9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgConfettiMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgConfettiMajor = function SvgConfettiMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M12.384 8.92a1.01 1.01 0 0 1-.363.08 1.01 1.01 0 0 1-.553-.17.914.914 0 0 1-.373-.452.93.93 0 0 1-.08-.572.991.991 0 0 1 .271-.522l1.007-1.004a1.01 1.01 0 0 1 1.54.17 1.001 1.001 0 0 1-.12 1.255L12.706 8.71a1.158 1.158 0 0 1-.322.21zM8.03 3.757a1 1 0 0 0 1.94.486l-1.94-.486zm2.44-1.514a1 1 0 1 0-1.94-.486l1.94.486zm-.5 2 .5-2-1.94-.486-.5 2 1.94.486zm5.755 5.796a1 1 0 1 0 .55 1.922l-.55-1.922zm2.532 1.355a1 1 0 1 0-.55-1.922l.55 1.922zm-1.982.567 1.982-.567-.55-1.922-1.982.567.55 1.922zM4.515 7.518.182 16.877a2.238 2.238 0 0 0 2.942 2.94l9.367-4.338a.921.921 0 0 0 .465-1.102.918.918 0 0 0-.226-.369L5.987 7.27a.92.92 0 0 0-.8-.258.92.92 0 0 0-.672.506zM1.801 3.98c.109.022.197.11.219.219a1 1 0 0 0 1.96 0 .283.283 0 0 1 .22-.219 1 1 0 0 0 0-1.96.283.283 0 0 1-.219-.219 1 1 0 0 0-1.96 0 .283.283 0 0 1-.219.219 1 1 0 0 0 0 1.96zm14 0c.109.022.197.11.219.219a1 1 0 0 0 1.96 0 .283.283 0 0 1 .219-.219 1 1 0 0 0 0-1.96.283.283 0 0 1-.219-.219 1 1 0 0 0-1.96 0 .283.283 0 0 1-.219.219 1 1 0 0 0 0 1.96zm0 14c.109.022.197.11.219.219a1 1 0 0 0 1.96 0 .283.283 0 0 1 .219-.219 1 1 0 0 0 0-1.96.283.283 0 0 1-.219-.219 1 1 0 0 0-1.96 0 .283.283 0 0 1-.219.219 1 1 0 0 0 0 1.96z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7aXUJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgConnectMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgConnectMinor = function SvgConnectMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M14 8c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2zm-6 6c0 1.103-.897 2-2 2s-2-.897-2-2 .897-2 2-2 2 .897 2 2zm6-12c-1.858 0-3.411 1.28-3.857 3H10c-2.757 0-5 2.243-5 5v.142c-1.721.447-3 2-3 3.858 0 2.206 1.794 4 4 4s4-1.794 4-4c0-1.858-1.279-3.411-3-3.858V10c0-1.654 1.346-3 3-3h.143c.446 1.72 1.999 3 3.857 3 2.206 0 4-1.794 4-4s-1.794-4-4-4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jLRwF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgConversationMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgConversationMinor = function SvgConversationMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M13 10a1 1 0 1 0 2 0 1 1 0 0 0-2 0zm-4 0a1 1 0 1 0 2 0 1 1 0 0 0-2 0zm-4 0a1 1 0 1 0 2 0 1 1 0 0 0-2 0zm5-8c-4.411 0-8 3.589-8 8 0 1.504.425 2.908 1.15 4.111l-1.069 2.495a1 1 0 0 0 1.314 1.313l2.494-1.069A7.939 7.939 0 0 0 10 18c4.411 0 8-3.589 8-8s-3.589-8-8-8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dxPYo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCreditCardMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCreditCardMajor = function SvgCreditCardMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M0 4.5A1.5 1.5 0 0 1 1.5 3h17A1.5 1.5 0 0 1 20 4.5V6H0V4.5zM0 8v7.5A1.5 1.5 0 0 0 1.5 17h17a1.5 1.5 0 0 0 1.5-1.5V8H0zm7 4H2v-2h5v2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cbKRg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCreditCardPercentMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _circle, _circle2, _path2;
var SvgCreditCardPercentMajor = function SvgCreditCardPercentMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M1.5 1A1.5 1.5 0 0 0 0 2.5V4h20V2.5A1.5 1.5 0 0 0 18.5 1h-17zM0 13.5V6h20v3h-6c-2.757 0-5 2.236-5 4.987V15H1.5A1.5 1.5 0 0 1 0 13.5zM2 10h5V8H2v2z"
    })), _circle || (_circle = /*#__PURE__*/ _reactDefault.default.createElement("circle", {
        cx: 13.5,
        cy: 12.5,
        r: 1.5
    })), _circle2 || (_circle2 = /*#__PURE__*/ _reactDefault.default.createElement("circle", {
        cx: 18.5,
        cy: 17.5,
        r: 1.5
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19.707 11.293a1 1 0 0 1 0 1.414l-6 6a1 1 0 0 1-1.414-1.414l6-6a1 1 0 0 1 1.414 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kWJL1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCreditCardSecureMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2, _path3;
var SvgCreditCardSecureMajor = function SvgCreditCardSecureMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M1.5 1A1.5 1.5 0 0 0 0 2.5V4h20V2.5A1.5 1.5 0 0 0 18.5 1h-17z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 13.5V6h20v3h-5c-2.757 0-5 2.236-5 4.987V15H1.5A1.5 1.5 0 0 1 0 13.5zM2 10h5V8H2v2z"
    })), _path3 || (_path3 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M13 14v1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1v-1a3 3 0 1 0-6 0zm3-1a1 1 0 0 0-1 1v1h2v-1a1 1 0 0 0-1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"29ULR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCurrencyConvertMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCurrencyConvertMinor = function SvgCurrencyConvertMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4.977 7c.026.001.649.039 1.316.707a.999.999 0 1 0 1.414-1.414A4.491 4.491 0 0 0 6 5.2V5a1 1 0 1 0-2 0v.185A2.995 2.995 0 0 0 2 8c0 2.281 1.727 2.713 2.758 2.971C5.873 11.249 6 11.354 6 12c0 .552-.448 1-.976 1-.026-.001-.65-.04-1.317-.707a.999.999 0 1 0-1.414 1.414A4.506 4.506 0 0 0 4 14.8v.2a1 1 0 1 0 2 0v-.185A2.993 2.993 0 0 0 8 12c0-2.281-1.726-2.713-2.757-2.971C4.128 8.751 4 8.646 4 8c0-.551.449-1 .977-1zM17 13h-3.585l.292-.293a.999.999 0 1 0-1.414-1.414l-2 1.999a.988.988 0 0 0-.215.326.992.992 0 0 0 0 .764c.05.123.124.234.216.326l1.999 1.999a1 1 0 0 0 1.414-1.414L13.415 15H17a1 1 0 1 0 0-2zm-7-7a1 1 0 0 1 1-1h3.586l-.293-.293a1 1 0 0 1 1.414-1.414l1.999 1.999a.985.985 0 0 1 .217.326.992.992 0 0 1 0 .764.985.985 0 0 1-.217.326l-2 1.999a.997.997 0 0 1-1.413 0 1 1 0 0 1 0-1.414L14.586 7H11a1 1 0 0 1-1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"c3spy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCustomerMinusMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCustomerMinusMajor = function SvgCustomerMinusMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M14 11h4a1 1 0 0 0 0-2h-4a1 1 0 0 0 0 2zm-1.637-5.78a4.22 4.22 0 1 1-8.439-.001 4.22 4.22 0 0 1 8.439 0zM.67 14.469c1.384-1.09 4.141-2.853 7.474-2.853 3.332 0 6.089 1.764 7.474 2.853.618.486.81 1.308.567 2.056l-.333 1.02A2.11 2.11 0 0 1 13.846 19H2.441a2.11 2.11 0 0 1-2.005-1.455l-.333-1.02c-.245-.748-.052-1.57.566-2.056zM-2651 445h100v100h-100V445z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"a6q15":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCustomerPlusMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCustomerPlusMajor = function SvgCustomerPlusMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15 11a1 1 0 1 0 2 0v-1h1a1 1 0 1 0 0-2h-1V7a1 1 0 1 0-2 0v1h-1a1 1 0 1 0 0 2h1v1zm-2.637-5.78a4.22 4.22 0 1 1-8.439 0 4.22 4.22 0 0 1 8.439 0zM.67 14.469c1.385-1.09 4.141-2.853 7.474-2.853 3.332 0 6.089 1.764 7.474 2.853.618.486.81 1.308.567 2.056l-.333 1.02A2.11 2.11 0 0 1 13.845 19H2.441a2.11 2.11 0 0 1-2.005-1.455l-.333-1.02c-.245-.748-.052-1.57.567-2.056z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gDLJr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCustomersMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCustomersMajor = function SvgCustomersMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M14.363 5.22a4.22 4.22 0 1 1-8.439 0 4.22 4.22 0 0 1 8.439 0zM2.67 14.469c1.385-1.09 4.141-2.853 7.474-2.853 3.332 0 6.089 1.764 7.474 2.853.618.486.81 1.308.567 2.056l-.333 1.02A2.11 2.11 0 0 1 15.846 19H4.441a2.11 2.11 0 0 1-2.005-1.455l-.333-1.02c-.245-.748-.052-1.57.567-2.056z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"j4quk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgCustomersMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgCustomersMinor = function SvgCustomersMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10.11 2.24a3.44 3.44 0 0 0-3.44 3.43 3.44 3.44 0 0 0 6.88 0 3.44 3.44 0 0 0-3.44-3.43zm0 15.46c2.8 0 5.27-1.36 6.84-3.43-1.57-2.08-4.04-3.44-6.84-3.44s-5.26 1.36-6.83 3.44a8.55 8.55 0 0 0 6.83 3.43z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ggIUj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDataVisualizationMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDataVisualizationMajor = function SvgDataVisualizationMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 2a1 1 0 0 1 1-1h18a1 1 0 1 1 0 2h-1v11.5a1.5 1.5 0 0 1-1.5 1.5h-3.22l.69 2.758a1 1 0 1 1-1.94.485L11.22 16H8.78l-.81 3.242a1 1 0 1 1-1.94-.485L6.72 16H3.5A1.5 1.5 0 0 1 2 14.5V3H1a1 1 0 0 1-1-1zm15 3h-2v8h2V5zM9 7h2v6H9V7zM7 9H5v4h2V9z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6oaez":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDeleteMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDeleteMajor = function SvgDeleteMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M14 4h3a1 1 0 0 1 1 1v1H2V5a1 1 0 0 1 1-1h3V1.5A1.5 1.5 0 0 1 7.5 0h5A1.5 1.5 0 0 1 14 1.5V4zM8 2v2h4V2H8zM3 8h14v10.5a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 3 18.5V8zm4 3H5v6h2v-6zm4 0H9v6h2v-6zm2 0h2v6h-2v-6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7r2Ux":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDeleteMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDeleteMinor = function SvgDeleteMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M8 3.994C8 2.893 8.895 2 10 2s2 .893 2 1.994h4c.552 0 1 .446 1 .997a1 1 0 0 1-1 .997H4c-.552 0-1-.447-1-.997s.448-.997 1-.997h4zM5 14.508V8h2v6.508a.5.5 0 0 0 .5.498H9V8h2v7.006h1.5a.5.5 0 0 0 .5-.498V8h2v6.508A2.496 2.496 0 0 1 12.5 17h-5C6.12 17 5 15.884 5 14.508z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6cpQN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDesktopMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDesktopMajor = function SvgDesktopMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15H7c0 .525-.015.793-.144 1.053-.12.239-.416.61-1.303 1.053A1 1 0 0 0 6.022 19h7.956a1.004 1.004 0 0 0 .995-.77 1.001 1.001 0 0 0-.544-1.134c-.873-.439-1.166-.806-1.285-1.043-.13-.26-.144-.528-.144-1.053h4.5a1.5 1.5 0 0 0 1.5-1.5v-11A1.5 1.5 0 0 0 17.5 1h-15zm8.883 16a2.621 2.621 0 0 1-.027-.053c-.357-.714-.357-1.42-.356-1.895V15H9v.052c0 .475.001 1.181-.356 1.895a2.913 2.913 0 0 1-.027.053h2.766zM17 11H3v2h14v-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dyVQb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDetailedPopUpMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgDetailedPopUpMajor = function SvgDetailedPopUpMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3.1 3h1V1H2.6c-.8 0-1.5.7-1.5 1.5V4h2V3zm6 16h-3v-2h3v2zm2 0h3v-2h-3v2zm-8-2v-1h-2v1.5c0 .8.7 1.5 1.5 1.5h1.5v-2h-1zm13 0h1v-1h2v1.5c0 .8-.7 1.5-1.5 1.5h-1.5v-2zm-15-8V6h2v3h-2zm0 2v3h2v-3h-2z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M9 3v8h8V3H9zm-.5-2C7.7 1 7 1.7 7 2.5v9c0 .8.7 1.5 1.5 1.5h9c.8 0 1.5-.7 1.5-1.5v-9c0-.8-.7-1.5-1.5-1.5h-9z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cKJco":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDiamondAlertMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDiamondAlertMajor = function SvgDiamondAlertMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11.768.768a2.5 2.5 0 0 0-3.536 0L.768 8.232a2.5 2.5 0 0 0 0 3.536l7.464 7.464a2.5 2.5 0 0 0 3.536 0l7.464-7.464a2.5 2.5 0 0 0 0-3.536L11.768.768zM9 6a1 1 0 1 1 2 0v4a1 1 0 1 1-2 0V6zm2 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kwYLn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDigitalMediaReceiverMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDigitalMediaReceiverMajor = function SvgDigitalMediaReceiverMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 10a8 8 0 0 1 8-8 1 1 0 1 0 0-2C4.477 0 0 4.477 0 10a1 1 0 1 0 2 0zm8-4a4 4 0 0 0-4 4 1 1 0 1 1-2 0 6 6 0 0 1 6-6 1 1 0 1 1 0 2zm1 4a1 1 0 0 1 1 1v3h6.5a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 2 18.5v-3A1.5 1.5 0 0 1 3.5 14H10v-3a1 1 0 0 1 1-1zm-4 6H4v2h3v-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aOf8G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDiscountAutomaticMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2, _path3;
var SvgDiscountAutomaticMajor = function SvgDiscountAutomaticMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m8.707 7.707 6-6A1 1 0 0 0 13.293.293l-6 6a1 1 0 0 0 1.414 1.414z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M2 0a1 1 0 0 0 0 2h1v12.17A3.001 3.001 0 1 0 6.83 16h5.34A3 3 0 1 0 15 14H5v-2h11.566a1.5 1.5 0 0 0 1.485-1.288l.939-6.57a1 1 0 0 0-1.98-.283L16.133 10H5V1.5A1.5 1.5 0 0 0 3.5 0H2zm13 16a1 1 0 1 0 0 2 1 1 0 0 0 0-2zM4 16a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"
    })), _path3 || (_path3 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M8.5 3a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM15 6.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"27W0c":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDiscountCodeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDiscountCodeMajor = function SvgDiscountCodeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4 3H3v1H1V2.5A1.5 1.5 0 0 1 2.5 1H4v2zm5 0H6V1h3v2zm5 0h-3V1h3v2zM1 9V6h2v3H1zm0 2v3h2v-3H1zm16-5h2v3h-2V6zm2 5h-2v3h2v-3zM9 19v-2H6v2h3zm5-2v2h-3v-2h3zM9 7.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm3.5 6.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm1.207-7.707a1 1 0 0 1 0 1.414l-6 6a1 1 0 0 1-1.414-1.414l6-6a1 1 0 0 1 1.414 0zM18 19a1 1 0 0 0 1-1v-2h-2v1h-1v2h2zM2 19a1 1 0 0 1-1-1v-2h2v1h1v2H2zM17 4V3h-1V1h1.5A1.5 1.5 0 0 1 19 2.5V4h-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lq7Jj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDiscountsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDiscountsMajor = function SvgDiscountsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M11.566.66a2.189 2.189 0 0 0-3.132 0l-.962.985a2.189 2.189 0 0 1-1.592.66l-1.377-.017a2.189 2.189 0 0 0-2.215 2.215l.016 1.377a2.189 2.189 0 0 1-.66 1.592l-.984.962a2.189 2.189 0 0 0 0 3.132l.985.962c.428.418.667.994.66 1.592l-.017 1.377a2.189 2.189 0 0 0 2.215 2.215l1.377-.016a2.189 2.189 0 0 1 1.592.66l.962.984c.859.88 2.273.88 3.132 0l.962-.985a2.189 2.189 0 0 1 1.592-.66l1.377.017a2.189 2.189 0 0 0 2.215-2.215l-.016-1.377a2.189 2.189 0 0 1 .66-1.592l.984-.962c.88-.859.88-2.273 0-3.132l-.985-.962a2.189 2.189 0 0 1-.66-1.592l.017-1.377a2.189 2.189 0 0 0-2.215-2.215l-1.377.016a2.189 2.189 0 0 1-1.592-.66L11.566.66zM7 8.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm6 6a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm.778-8.278a1.1 1.1 0 0 1 0 1.556l-6 6a1.1 1.1 0 1 1-1.556-1.556l6-6a1.1 1.1 0 0 1 1.556 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"h9iTJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDisputeMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDisputeMinor = function SvgDisputeMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M9 9a1 1 0 0 0 2 0V7a1 1 0 1 0-2 0v2zm0 4a1 1 0 1 0 2 0 1 1 0 0 0-2 0zm-7-3c0 4.411 3.589 8 8 8a7.939 7.939 0 0 0 4.111-1.15l2.494 1.069a1 1 0 0 0 1.314-1.313l-1.069-2.495A7.939 7.939 0 0 0 18 10c0-4.411-3.589-8-8-8s-8 3.589-8 8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2ZOZj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDnsSettingsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDnsSettingsMajor = function SvgDnsSettingsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M1 3.5A1.5 1.5 0 0 1 2.5 2h15A1.5 1.5 0 0 1 19 3.5v2A1.5 1.5 0 0 1 17.5 7h-15A1.5 1.5 0 0 1 1 5.5v-2zm3.5 1a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM1 9.5A1.5 1.5 0 0 1 2.5 8h6.073a1.5 1.5 0 0 1 1.342 2.17l-1 2a1.5 1.5 0 0 1-1.342.83H2.5A1.5 1.5 0 0 1 1 11.5v-2zm3.5 1a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3.5 5A1.5 1.5 0 0 1 2.5 14h5.27a1.5 1.5 0 0 1 1.471 1.206l.4 2A1.5 1.5 0 0 1 8.171 19H2.5A1.5 1.5 0 0 1 1 17.5v-2zm3.5 1a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm7.659-3.441-.682-.429a.987.987 0 0 1-.452-.611.946.946 0 0 1 .134-.742.983.983 0 0 1 .639-.425 1.023 1.023 0 0 1 .758.15l.682.427c.369-.31.8-.54 1.267-.676V9.97c0-.258.104-.504.291-.686A1.01 1.01 0 0 1 15.5 9c.264 0 .517.102.704.284a.957.957 0 0 1 .291.686v.783c.472.138.903.37 1.267.676l.682-.429a1.02 1.02 0 0 1 .735-.107c.25.058.467.208.606.419.14.21.19.465.141.71a.97.97 0 0 1-.403.608l-.682.429a3.296 3.296 0 0 1 0 1.882l.682.43a.987.987 0 0 1 .452.611.946.946 0 0 1-.134.742.982.982 0 0 1-.639.425 1.02 1.02 0 0 1-.758-.15l-.682-.428c-.369.31-.8.54-1.267.676v.783a.957.957 0 0 1-.291.686A1.01 1.01 0 0 1 15.5 19a1.01 1.01 0 0 1-.704-.284.957.957 0 0 1-.291-.686v-.783a3.503 3.503 0 0 1-1.267-.676l-.682.429a1.02 1.02 0 0 1-.75.132.999.999 0 0 1-.627-.421.949.949 0 0 1-.135-.73.97.97 0 0 1 .434-.61l.68-.43a3.296 3.296 0 0 1 0-1.882zm3.341-.507c-.82 0-1.487.65-1.487 1.449s.667 1.448 1.487 1.448c.82 0 1.487-.65 1.487-1.448 0-.8-.667-1.45-1.487-1.45z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"j8U9o":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDomainNewMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDomainNewMajor = function SvgDomainNewMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M2.5 1A1.5 1.5 0 0 0 1 2.5v15A1.5 1.5 0 0 0 2.5 19h15a1.5 1.5 0 0 0 1.5-1.5v-15A1.5 1.5 0 0 0 17.5 1h-15zM9 9a1 1 0 0 1 2 0v2h2a1 1 0 1 1 0 2h-2v2a1 1 0 1 1-2 0v-2H7a1 1 0 1 1 0-2h2V9zM7 5V3h10v2H7zM3 3v2h2V3H3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"czCvp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDomainsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgDomainsMajor = function SvgDomainsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M13.903 8c.06.629.097 1.292.097 2a1 1 0 0 1-2 0c0-.713-.039-1.378-.105-2H8.092c-.139 1.33-.14 2.67-.004 4H10a1 1 0 0 1 0 2H8.416c.469 2.08 1.202 3.41 1.585 4 0 0 .789.013.926.002a1.008 1.008 0 0 1 1.07.925 1 1 0 0 1-.924 1.07C10.979 20.004 10 20 10 20 4.486 20 0 15.514 0 10 0 4.485 4.486 0 10 0s10 4.485 10 10c0 .379-.036.749-.079 1.116a1.001 1.001 0 0 1-1.987-.233c.035-.291.066-.583.066-.883 0-.692-.098-1.36-.263-2h-3.834zM9.988 2.036c-.386.606-1.1 1.931-1.564 3.964h3.137c-.466-2.033-1.185-3.358-1.573-3.964zM2.263 12h3.819a21.604 21.604 0 0 1-.095-1.996c0-.67.033-1.338.096-2.004h-3.82A7.946 7.946 0 0 0 2 10a7.96 7.96 0 0 0 .263 2zm.819 2a8.031 8.031 0 0 0 4.437 3.601A16.293 16.293 0 0 1 6.371 14H3.082zm3.291-8a16.235 16.235 0 0 1 1.15-3.603A8.03 8.03 0 0 0 3.082 6h3.291zm7.239 0h3.305a8.029 8.029 0 0 0-4.465-3.612A16.128 16.128 0 0 1 13.612 6z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m15.223 18.945-2.55-5.61a.5.5 0 0 1 .662-.662l5.61 2.55a.5.5 0 0 1 .017.903l-1.742.87a.5.5 0 0 0-.223.224l-.871 1.742a.5.5 0 0 1-.903-.017z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"30ZOk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDraftOrdersMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDraftOrdersMajor = function SvgDraftOrdersMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19.101 3.291 16.709.898 17.107.5A1.692 1.692 0 1 1 19.5 2.892l-.399.399zm-3.49-1.297 2.392 2.393L11.5 10.89l-3.168.777.776-3.17 6.503-6.503zM3 3v11h3.5c.775 0 1.388.662 1.926 1.244l.026.028.085.091c.365.392.885.637 1.463.637.578 0 1.098-.245 1.463-.637a31 31 0 0 0 .102-.11l.009-.009C12.112 14.662 12.725 14 13.5 14H17v-3a1 1 0 1 1 2 0v6.5a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 17.5v-15A1.5 1.5 0 0 1 2.5 1H9a1 1 0 1 1 0 2H3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hnMsy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDragDropMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgDragDropMajor = function SvgDragDropMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 2h1V0H1.5A1.5 1.5 0 0 0 0 1.5V3h2V2zm3 0h3V0H5v2zm8 0h-3V0h3v2zM0 5v3h2V5H0zm0 5v3h2v-3H0zm18-5h-2v3h2V5zM5 18h3v-2H5v2zm-5-1a1 1 0 0 0 1 1h2v-2H2v-1H0v2zM16 3V2h-1V0h1.5A1.5 1.5 0 0 1 18 1.5V3h-2z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10.814 14H5.5A1.5 1.5 0 0 1 4 12.5v-7A1.5 1.5 0 0 1 5.5 4h7A1.5 1.5 0 0 1 14 5.5v5.314l5.512 2.506a.832.832 0 0 1 .028 1.501l-2.898 1.45a.832.832 0 0 0-.372.371l-1.449 2.898a.832.832 0 0 1-1.501-.028L10.814 14zm-.909-2-.828-1.821c-.318-.7.402-1.42 1.102-1.102L12 9.905V6H6v6h3.905z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"K17zf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDragHandleMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDragHandleMinor = function SvgDragHandleMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M7 2a2 2 0 1 0 .001 4.001A2 2 0 0 0 7 2zm0 6a2 2 0 1 0 .001 4.001A2 2 0 0 0 7 8zm0 6a2 2 0 1 0 .001 4.001A2 2 0 0 0 7 14zm6-8a2 2 0 1 0-.001-4.001A2 2 0 0 0 13 6zm0 2a2 2 0 1 0 .001 4.001A2 2 0 0 0 13 8zm0 6a2 2 0 1 0 .001 4.001A2 2 0 0 0 13 14z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"MWgB8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDropdownMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDropdownMinor = function SvgDropdownMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M13.098 8H6.902c-.751 0-1.172.754-.708 1.268L9.292 12.7c.36.399 1.055.399 1.416 0l3.098-3.433C14.27 8.754 13.849 8 13.098 8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5IozK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgDuplicateMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgDuplicateMinor = function SvgDuplicateMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M7.5 2A1.5 1.5 0 0 0 6 3.5V13a1 1 0 0 0 1 1h9.5a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 16.5 2h-9zm-4 4H4v10h10v.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 16.5v-9A1.5 1.5 0 0 1 3.5 6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ci59d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgEditMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgEditMajor = function SvgEditMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m14.846 1.403 3.752 3.753.625-.626A2.653 2.653 0 0 0 15.471.778l-.625.625zm2.029 5.472-3.752-3.753L1.218 15.028 0 19.998l4.97-1.217L16.875 6.875z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lwfX2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgEditMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgEditMinor = function SvgEditMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m13.877 3.123 3.001 3.002.5-.5a2.123 2.123 0 1 0-3.002-3.002l-.5.5zM15.5 7.5l-3.002-3.002-9.524 9.525L2 17.999l3.976-.974L15.5 7.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6Fq5Z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgEmailMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgEmailMajor = function SvgEmailMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M0 5.324V15.5A1.5 1.5 0 0 0 1.5 17h17a1.5 1.5 0 0 0 1.5-1.5V5.324l-9.496 5.54a1 1 0 0 1-1.008 0L0 5.324z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19.443 3.334A1.494 1.494 0 0 0 18.5 3h-17a1.49 1.49 0 0 0-.943.334L10 8.842l9.443-5.508z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4mHFu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgEmailNewsletterMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgEmailNewsletterMajor = function SvgEmailNewsletterMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M7 4h6v2H7V4zm4 4H7v2h4V8z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M3 10V1.5A1.5 1.5 0 0 1 4.5 0h11A1.5 1.5 0 0 1 17 1.5V10h2v7.5a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 17.5V10h2zm2 2V2h10v10l-5 2.771L5 12z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7a7Zr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgEmbedMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgEmbedMinor = function SvgEmbedMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11.98 5.196a1 1 0 0 0-1.96-.392l-2 10a1 1 0 0 0 1.96.392l2-10zM6.8 6.4a1 1 0 0 1-.2 1.4L3.667 10 6.6 12.2a1 1 0 0 1-1.2 1.6l-4-3a1 1 0 0 1 0-1.6l4-3a1 1 0 0 1 1.4.2zm6.4 7.2a1 1 0 0 1 .2-1.4l2.933-2.2L13.4 7.8a1 1 0 1 1 1.2-1.6l4 3a1 1 0 0 1 0 1.6l-4 3a1 1 0 0 1-1.4-.2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iDKyT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgEnableSelectionMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgEnableSelectionMinor = function SvgEnableSelectionMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 3A1.5 1.5 0 0 0 3 4.5v11A1.5 1.5 0 0 0 4.5 17h11a1.5 1.5 0 0 0 1.5-1.5v-11A1.5 1.5 0 0 0 15.5 3h-11zm9.207 5.707a1 1 0 0 0-1.414-1.414L9 10.586 7.707 9.293a1 1 0 0 0-1.414 1.414l2 2a1 1 0 0 0 1.414 0l4-4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gDanW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgEnvelopeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgEnvelopeMajor = function SvgEnvelopeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 16.5v-13C0 2.7.7 2 1.5 2h17c.8 0 1.5.7 1.5 1.5v13c0 .8-.7 1.5-1.5 1.5h-17C.7 18 0 17.3 0 16.5zm18-1.2-3-1.8V6.6l3-1.867V15.3zm-2.667.7L13.5 14.9c-.3-.2-.5-.5-.5-.9V6c0-.4.2-.7.5-.9L15.333 4H2v12h13.333zM4 8h4v2H4V8zm6 4H4v2h6v-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7lKE3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgExchangeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgExchangeMajor = function SvgExchangeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.986 12.166a3 3 0 1 1-1.973 0A1.003 1.003 0 0 1 16 12V9.999A3.999 3.999 0 0 0 12.001 6h-.587l1.293 1.293a1 1 0 1 1-1.414 1.414l-3-3a1 1 0 0 1 0-1.414l3-3a1 1 0 0 1 1.414 1.414L11.414 4h.587A5.999 5.999 0 0 1 18 9.999V12c0 .057-.005.112-.014.166zm-14-4.332c.01.054.014.11.014.166v2.001A4 4 0 0 0 7.999 14h.587l-1.293-1.293a1 1 0 0 1 1.414-1.414l3 3a1 1 0 0 1 0 1.414l-3 3a1 1 0 1 1-1.414-1.414L8.586 16h-.587A6 6 0 0 1 2 10.001V8c0-.057.005-.112.014-.166a3 3 0 1 1 1.972 0zM4 5a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm14 10a1 1 0 1 0-2.001.001A1 1 0 0 0 18 15z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5lIzr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgExistingInventoryMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgExistingInventoryMajor = function SvgExistingInventoryMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M20 9c0 .55-.45 1-1 1h-2v2c0 .55-.45 1-1 1s-1-.45-1-1v-2h-2c-.55 0-1-.45-1-1s.45-1 1-1h2V6c0-.55.45-1 1-1s1 .45 1 1v2h2c.55 0 1 .45 1 1zM4 8h3V3H4v5zm-2 9h5v-7H2v7zm14-2c-.55 0-1 .45-1 1v1H9V6h3c.55 0 1-.45 1-1s-.45-1-1-1H9V2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v6H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h15c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ibEHe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgExitMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgExitMajor = function SvgExitMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M7.703 13.707a.997.997 0 0 0 0-1.414L6.409 11h6.589a1 1 0 1 0 0-2H6.409l1.294-1.293a1 1 0 1 0-1.415-1.414l-3.001 3a.994.994 0 0 0-.198.298c-.013.027-.021.054-.03.082a.944.944 0 0 0-.054.269l-.001.027a.937.937 0 0 0 .062.398l.003.012v.004c.048.112.117.208.197.294l.01.015.01.015 3.002 3a1 1 0 0 0 1.415 0z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 16.5A1.5 1.5 0 0 0 3.5 18h13a1.5 1.5 0 0 0 1.5-1.5v-13A1.5 1.5 0 0 0 16.5 2h-13A1.5 1.5 0 0 0 2 3.5V5a1 1 0 1 0 2 0V4h12v12H4v-1a1 1 0 1 0-2 0v1.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bLhys":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgExportMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgExportMinor = function SvgExportMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10.707 2.293a.999.999 0 0 0-1.414 0l-3 3a.999.999 0 1 0 1.414 1.414L9 5.414V13a1 1 0 1 0 2 0V5.414l1.293 1.293a.999.999 0 1 0 1.414-1.414l-3-3zM3 16a1 1 0 1 0 0 2h14a1 1 0 1 0 0-2H3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7VThw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgExternalMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgExternalMinor = function SvgExternalMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 1 1-2 0V6.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L13.586 5H12a1 1 0 0 1-1-1zM3 6.5A1.5 1.5 0 0 1 4.5 5H8a1 1 0 0 1 0 2H5v8h8v-3a1 1 0 1 1 2 0v3.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 3 15.5v-9z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hcUH7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgExternalSmallMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgExternalSmallMinor = function SvgExternalSmallMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M14 13v1a1 1 0 0 1-1 1H6c-.575 0-1-.484-1-1V7a1 1 0 0 1 1-1h1c1.037 0 1.04 1.5 0 1.5-.178.005-.353 0-.5 0v6h6V13c0-1 1.5-1 1.5 0zm-3.75-7.25A.75.75 0 0 1 11 5h4v4a.75.75 0 0 1-1.5 0V7.56l-3.22 3.22a.75.75 0 1 1-1.06-1.06l3.22-3.22H11a.75.75 0 0 1-.75-.75z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eNr8h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFaviconMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFaviconMajor = function SvgFaviconMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.71.29C17.52.11 17.27 0 17 0H3c-.27 0-.52.11-.71.29C2.11.48 2 .73 2 1v10c0 .27.11.52.29.71.19.18.44.29.71.29h14c.27 0 .52-.11.71-.29.18-.19.29-.44.29-.71V1c0-.27-.11-.52-.29-.71zM16 7l-2.41-1.832a.992.992 0 0 0-1.15.03L9 8 6.48 6.168c-.3-.2-.68-.22-1-.06L4 7V2h12v5zm-7 9c.27 0 .52-.11.71-.29.18-.19.29-.44.29-.71 0-.27-.11-.52-.29-.71-.19-.18-.44-.29-.71-.29-1.65 0-3 1.35-3 3s1.35 3 3 3c.27 0 .52-.11.71-.29.18-.19.29-.44.29-.71 0-.27-.11-.52-.29-.71-.19-.18-.44-.29-.71-.29a.982.982 0 0 1-.68-.31.976.976 0 0 1-.28-.69c0-.26.1-.51.28-.69.18-.19.42-.3.68-.31zm6-2c-1.65 0-3 1.35-3 3s1.35 3 3 3 3-1.35 3-3-1.35-3-3-3zm.68 3.69c-.18.19-.42.3-.68.31a.982.982 0 0 1-.68-.31.976.976 0 0 1-.28-.69c0-.26.1-.51.28-.69.18-.19.42-.3.68-.31.26.01.5.12.68.31.18.18.28.43.28.69 0 .26-.1.51-.28.69zM3 14c-.27 0-.52.11-.71.29-.18.19-.29.44-.29.71v4c0 .27.11.52.29.71.19.18.44.29.71.29.27 0 .52-.11.71-.29.18-.19.29-.44.29-.71v-4c0-.27-.11-.52-.29-.71-.19-.18-.44-.29-.71-.29z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kbiGS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFavoriteMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFavoriteMajor = function SvgFavoriteMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M5 12 1.376 9c-.684-.547-.384-1.647.484-1.771L7 7l2.195-5.503a.9.9 0 0 1 1.61 0L13 7l5.14.229c.868.124 1.168 1.224.484 1.771L15 12l.989 5.857a1 1 0 0 1-1.437 1.036L10 16l-4.552 2.892a1 1 0 0 1-1.437-1.036L5 12z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"61DOb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFeaturedCollectionMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFeaturedCollectionMajor = function SvgFeaturedCollectionMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M8 .439a1.48 1.48 0 0 0-2.103 0l-1.04 1.18-3.48 4a1.497 1.497 0 0 0-.377 1v9.88c0 .398.157.779.436 1.06.278.282.657.44 1.051.44h2.479v-9.43a3.568 3.568 0 0 1 .872-2.33l3.638-4.12L8 .439zm10.618 7.13-4.579-5.13a1.51 1.51 0 0 0-2.129 0l-1.004 1.18-3.524 4a1.486 1.486 0 0 0-.382 1v9.88a1.5 1.5 0 0 0 1.456 1.5h9.038c.4 0 .782-.158 1.065-.44.282-.281.44-.663.44-1.06v-9.93a1.487 1.487 0 0 0-.38-1zM11.402 9c-1 0-1.9.9-1.9 2 0 2.2 1.3 3.9 3.5 5 2.2-1.1 3.5-2.8 3.5-4.9v-.2c0-1-.9-1.9-1.9-1.9-1 0-1.6 1.167-1.6 1.167S12.402 9 11.402 9z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1tnIA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFeaturedContentMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFeaturedContentMajor = function SvgFeaturedContentMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M16.56 4.56 12.44.44A1.5 1.5 0 0 0 11.38 0H4.5A1.5 1.5 0 0 0 3 1.5v17A1.5 1.5 0 0 0 4.5 20H15a2 2 0 0 0 2-2V5.62a1.5 1.5 0 0 0-.44-1.06zM8.4 7c-1 0-1.9.9-1.9 2 0 2.2 1.3 3.9 3.5 5 2.2-1.1 3.5-2.8 3.5-4.9v-.2c0-1-.9-1.9-1.9-1.9-1 0-1.6 1.167-1.6 1.167S9.4 7 8.4 7z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aOzxq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFilterMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFilterMajor = function SvgFilterMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M0 5a1 1 0 0 1 1-1h18a1 1 0 1 1 0 2H1a1 1 0 0 1-1-1zm3 5a1 1 0 0 1 1-1h12a1 1 0 1 1 0 2H4a1 1 0 0 1-1-1zm5 4a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6G241":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFirstOrderMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFirstOrderMajor = function SvgFirstOrderMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m9.69 5.772-.243.123a1 1 0 1 1-.895-1.79l2-1a.998.998 0 0 1 1.434 1.06l-1 6a1 1 0 1 1-1.973-.33l.677-4.063zm-5.073-.848a.997.997 0 0 1-.324-.217l-1-1a1 1 0 0 1 1.414-1.414l1 1a.999.999 0 0 1-1.09 1.631zm10.766 0a.997.997 0 0 1-.94-.092 1 1 0 0 1-.15-1.54l1-1a1 1 0 1 1 1.414 1.415l-1 1a.996.996 0 0 1-.324.217zm-.09 3.783A1 1 0 0 1 16 7h2a1 1 0 1 1 0 2h-2a1 1 0 0 1-.707-.293zM4 9H2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zm-3 8.5V12h2v2h3.5c.775 0 1.388.662 1.926 1.244l.11.12a2 2 0 0 0 2.927-.001l.11-.119h.001C12.112 14.662 12.725 14 13.5 14H17v-2h2v5.5a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 17.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kE5xp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFirstVisitMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFirstVisitMajor = function SvgFirstVisitMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19.962 9.726C19.939 9.648 17.666 2 10 2S.061 9.648.038 9.726a1 1 0 0 0 0 .548C.061 10.352 2.334 18 10 18s9.939-7.648 9.962-7.726a.999.999 0 0 0 0-.548zm-8.876-3.723a1 1 0 0 1 .901 1.161l-1 6a1 1 0 1 1-1.973-.328l.677-4.064-.243.123a1 1 0 0 1-.895-1.79l2-1a1 1 0 0 1 .533-.102z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5C5rl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFlagMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFlagMajor = function SvgFlagMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3.249 2.001h13.868a.5.5 0 0 1 .428.758L15 7l3.35 4.188a.5.5 0 0 1-.39.812l-12.49.001 1.507 6.782a1 1 0 1 1-1.953.434l-4-18A1 1 0 0 1 2.977.783l.272 1.218z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8QYBx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFlipCameraMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFlipCameraMajor = function SvgFlipCameraMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M7.059 1a1.5 1.5 0 0 0-1.32.786l-.54 1c-.039.07-.07.142-.096.214H1.5A1.5 1.5 0 0 0 0 4.5v11A1.5 1.5 0 0 0 1.5 17h17a1.5 1.5 0 0 0 1.5-1.5v-11A1.5 1.5 0 0 0 18.5 3h-3.621a1.546 1.546 0 0 0-.1-.223l-.55-1A1.5 1.5 0 0 0 12.914 1H7.06zm4.692 14.08c-.63.278-1.311.42-2 .42A5.016 5.016 0 0 1 4.776 11H3.501a.5.5 0 0 1-.405-.795l2.27-3.145a.5.5 0 0 1 .81 0l2.275 3.145a.5.5 0 0 1-.4.8h-1.25a3.014 3.014 0 0 0 2.95 2.495c.32 0 .637-.05.94-.15l1.33 1.6c-.09.05-.18.09-.27.13zm2.884-2.14L16.9 9.8a.5.5 0 0 0-.405-.8H15.22a5.016 5.016 0 0 0-4.975-4.5 4.941 4.941 0 0 0-2.27.55l1.33 1.6c.303-.1.62-.15.94-.15a3.014 3.014 0 0 1 2.95 2.505h-1.25a.5.5 0 0 0-.4.795l2.28 3.14a.5.5 0 0 0 .81 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eBNoU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFolderDownMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFolderDownMajor = function SvgFolderDownMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M17.5 19a1.5 1.5 0 0 0 1.5-1.5v-13A1.5 1.5 0 0 0 17.5 3h-6.879c-.397 0-.779-.158-1.06-.44L8.44 1.439A1.503 1.503 0 0 0 7.379 1H2.5A1.5 1.5 0 0 0 1 2.5v15A1.5 1.5 0 0 0 2.5 19h15zM9 11.586l-1.293-1.293a1 1 0 0 0-1.414 1.414l3 3a.997.997 0 0 0 1.414 0l3-3a1 1 0 0 0-1.414-1.414L11 11.586V8a1 1 0 0 0-2 0v3.586z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7h4Be":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFolderMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFolderMajor = function SvgFolderMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19 17.5v-13A1.5 1.5 0 0 0 17.5 3h-6.879a1.5 1.5 0 0 1-1.06-.44L8.439 1.44A1.5 1.5 0 0 0 7.38 1H2.5A1.5 1.5 0 0 0 1 2.5v15A1.5 1.5 0 0 0 2.5 19h15a1.5 1.5 0 0 0 1.5-1.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5YbEm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFolderMinusMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFolderMinusMajor = function SvgFolderMinusMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.5 3A1.5 1.5 0 0 1 19 4.5v13a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 17.5v-15A1.5 1.5 0 0 1 2.5 1h4.879a1.5 1.5 0 0 1 1.06.44l1.122 1.12a1.5 1.5 0 0 0 1.06.44H17.5zM7 10a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2H7z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iaXxi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFolderPlusMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFolderPlusMajor = function SvgFolderPlusMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M17.5 3A1.5 1.5 0 0 1 19 4.5v13a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 17.5v-15A1.5 1.5 0 0 1 2.5 1h4.879a1.5 1.5 0 0 1 1.06.44l1.122 1.12a1.5 1.5 0 0 0 1.06.44H17.5zM9 8a1 1 0 0 1 2 0v2h2a1 1 0 1 1 0 2h-2v2a1 1 0 1 1-2 0v-2H7a1 1 0 1 1 0-2h2V8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6lJZi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFolderUpMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFolderUpMajor = function SvgFolderUpMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M19 17.5v-13A1.5 1.5 0 0 0 17.5 3h-6.879c-.397 0-.779-.158-1.06-.44L8.44 1.439A1.503 1.503 0 0 0 7.379 1H2.5A1.5 1.5 0 0 0 1 2.5v15A1.5 1.5 0 0 0 2.5 19h15a1.5 1.5 0 0 0 1.5-1.5zm-8-7.085 1.293 1.293a1 1 0 0 0 1.414-1.414l-3-3a.997.997 0 0 0-1.414 0l-3 3a1 1 0 0 0 1.414 1.414L9 10.415v3.586a1 1 0 1 0 2 0v-3.586z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8Yiyj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFollowUpEmailMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgFollowUpEmailMajor = function SvgFollowUpEmailMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m19.707 15.293-3-3a1.001 1.001 0 0 0-1.414 1.414L16.586 15H13a1 1 0 0 0 0 2h3.586l-1.293 1.293a1 1 0 1 0 1.414 1.414l3-3a1 1 0 0 0 0-1.414z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M18.5 1c.357 0 .686.125.943.334L10 6.842.557 1.334A1.49 1.49 0 0 1 1.5 1h17zM0 13.5V3.324l9.496 5.54a1 1 0 0 0 1.008 0L20 3.324V10h-4a6.002 6.002 0 0 0-5.917 5H1.5A1.5 1.5 0 0 1 0 13.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eqT1B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFoodMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFoodMajor = function SvgFoodMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M17 4h-.22L15.97.758A.999.999 0 0 0 15 0H5a.998.998 0 0 0-.97.758L3.22 4H3a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h.095l.91 9.1A1 1 0 0 0 5 20h10c.514 0 .945-.39.996-.9l.91-9.1H17a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1zM5.782 2h8.437l.5 2H5.282l.5-2zM4 8h12V6H4v2zm6 8a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8rd2K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFooterMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFooterMajor = function SvgFooterMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M1 2a1 1 0 0 1 1-1h2v2H3v1H1V2zm17-1a1 1 0 0 1 1 1v2h-2V3h-1V1h2zm1 16.5V11H1v6.5A1.5 1.5 0 0 0 2.5 19h15a1.5 1.5 0 0 0 1.5-1.5zM19 6v3h-2V6h2zM3 9V6H1v3h2zm11-8v2h-3V1h3zM9 3V1H6v2h3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"deJsu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFormsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgFormsMajor = function SvgFormsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M18 14V6h-2V4h2.5c.8 0 1.5.7 1.5 1.5v9c0 .8-.7 1.5-1.5 1.5H16v-2h2z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.7 18.3c-.2-.2-.4-.3-.7-.3h-2c-.3 0-.5-.1-.7-.3-.2-.2-.3-.4-.3-.7V3c0-.3.1-.5.3-.7.2-.2.4-.3.7-.3h2c.3 0 .5-.1.7-.3.2-.2.3-.4.3-.7 0-.3-.1-.5-.3-.7-.2-.2-.4-.3-.7-.3h-2c-.7 0-1.5.3-2 .8-.5-.5-1.2-.8-2-.8H9c-.3 0-.5.1-.7.3-.2.2-.3.4-.3.7 0 .3.1.5.3.7.2.2.4.3.7.3h2c.3 0 .5.1.7.3.2.2.3.4.3.7v14c0 .3-.1.5-.3.7-.2.2-.4.3-.7.3H9c-.3 0-.5.1-.7.3-.2.2-.3.4-.3.7 0 .3.1.5.3.7.2.2.4.3.7.3h2c.7 0 1.5-.3 2-.8.5.5 1.2.8 2 .8h2c.3 0 .5-.1.7-.3.2-.2.3-.4.3-.7 0-.3-.1-.5-.3-.7zM2 14V6h8V4H1.5C.7 4 0 4.7 0 5.5v9c0 .8.7 1.5 1.5 1.5H10v-2H2zm4-4a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"f5CEV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFraudProtectMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFraudProtectMajor = function SvgFraudProtectMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M9.131.233c-2.37 1.383-5.37 2.33-7.634 2.646-.822.115-1.495.79-1.494 1.62l.002.497c-.03 6.043.477 11.332 9.462 14.903a1.45 1.45 0 0 0 1.062 0C19.52 16.328 20.032 11.04 20 4.996v-.501c0-.828-.673-1.51-1.491-1.638-2.149-.337-5.282-1.274-7.65-2.628A1.733 1.733 0 0 0 9.13.233zm4.577 8.478a1 1 0 0 0-1.414-1.415L9.001 10.59 7.708 9.297a1 1 0 1 0-1.414 1.414l2 2.001a1 1 0 0 0 1.414 0l4-4.001z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7mbEA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFraudProtectMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFraudProtectMinor = function SvgFraudProtectMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M16.822 12.683c-1.349 2.513-3.885 4.485-6.818 5.317-2.935-.832-5.471-2.804-6.82-5.317C1.764 10.038 2 7 3 4c1.361-.089 3.983-.573 7.004-2 3.02 1.427 5.635 1.911 6.996 2 1 3 1 6-.178 8.683zm-2.615-5.89a1 1 0 0 1 0 1.414l-4.5 4.5a1 1 0 0 1-1.414 0l-2.5-2.5a1 1 0 1 1 1.414-1.414L9 10.586l3.793-3.793a1 1 0 0 1 1.414 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cYwJa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFraudProtectPendingMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFraudProtectPendingMajor = function SvgFraudProtectPendingMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M1.493 2.879C3.757 2.562 6.757 1.616 9.128.233a1.733 1.733 0 0 1 1.728-.004c2.369 1.354 5.502 2.29 7.65 2.628.818.128 1.491.81 1.491 1.638v.501c.031 6.043-.48 11.332-9.472 14.903a1.45 1.45 0 0 1-1.062 0C.478 16.328-.029 11.04.001 4.996L0 4.499c-.002-.83.672-1.505 1.493-1.62zm9.214 6.414a1 1 0 1 0-1.414 1.414 1 1 0 0 0 1.414-1.414zm-4 0a1 1 0 1 0-1.414 1.414 1 1 0 0 0 1.414-1.414zm8 0a1 1 0 1 0-1.414 1.414 1 1 0 0 0 1.414-1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2sAtY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFraudProtectPendingMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFraudProtectPendingMinor = function SvgFraudProtectPendingMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M16.822 12.683c-1.349 2.513-3.885 4.485-6.818 5.317-2.935-.832-5.471-2.804-6.82-5.317-1.344-2.502-1.542-5.536-.586-8.808C3.96 3.786 6.983 3.427 10.004 2c3.02 1.427 6.043 1.786 7.404 1.875.958 3.272.758 6.306-.586 8.808zM13 10a1 1 0 1 0 2 0 1 1 0 0 0-2 0zm-4 0a1 1 0 1 0 2 0 1 1 0 0 0-2 0zm-4 0a1 1 0 1 0 2 0 1 1 0 0 0-2 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"81kXh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFraudProtectUnprotectedMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFraudProtectUnprotectedMajor = function SvgFraudProtectUnprotectedMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M1.493 2.879C3.757 2.562 6.757 1.616 9.128.233a1.733 1.733 0 0 1 1.728-.004c2.369 1.354 5.502 2.29 7.65 2.628.818.128 1.491.81 1.491 1.638v.501c.031 6.043-.48 11.332-9.472 14.903a1.45 1.45 0 0 1-1.062 0C.478 16.328-.029 11.04.001 4.996L0 4.499c-.002-.83.672-1.505 1.493-1.62zm7.8 2.414A1 1 0 0 0 9 6v4a1 1 0 1 0 2 0V6a1 1 0 0 0-1.707-.707zm0 8a1 1 0 1 0 1.414 1.414 1 1 0 0 0-1.414-1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"f5ruU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgFraudProtectUnprotectedMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgFraudProtectUnprotectedMinor = function SvgFraudProtectUnprotectedMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M16.822 12.683c-1.349 2.513-3.885 4.485-6.818 5.317-2.935-.832-5.471-2.804-6.82-5.317-1.344-2.502-1.542-5.536-.586-8.808C3.96 3.786 6.983 3.427 10.004 2c3.02 1.427 6.043 1.786 7.404 1.875.958 3.272.758 6.306-.586 8.808zM9 9a1 1 0 1 0 2 0V7a1 1 0 1 0-2 0v2zm0 4a1 1 0 1 0 2 0 1 1 0 0 0-2 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"77BrA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgGamesConsoleMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgGamesConsoleMajor = function SvgGamesConsoleMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M11 2.774c0-.432.344-.774.77-.774H14V0h-2.23A2.769 2.769 0 0 0 9 2.774V5H5.55A5 5 0 0 0 .573 9.516l-.557 5.737a3.416 3.416 0 0 0 6.712 1.17l.073-.291A1.5 1.5 0 0 1 8.255 15h3.74a1.5 1.5 0 0 1 1.454 1.132l.098.386a3.288 3.288 0 0 0 6.46-1.124l-.569-5.876A5 5 0 0 0 14.461 5H11V2.774zM6 7a1 1 0 0 1 1 1v1h1a1 1 0 1 1 0 2H7v1a1 1 0 1 1-2 0v-1H4a1 1 0 1 1 0-2h1V8a1 1 0 0 1 1-1zm7.5 3a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm3 4a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"f1aLz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgGiftCardMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgGiftCardMajor = function SvgGiftCardMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M5 4.5C5 3.763 5.69 3 6.77 3 7.818 3 9 3.87 9 5.333V6h-.846c-.805 0-1.656-.011-2.306-.25-.302-.112-.498-.253-.621-.413C5.112 5.187 5 4.94 5 4.5zM11.846 6H11v-.667C11 3.87 12.181 3 13.23 3 14.31 3 15 3.763 15 4.5c0 .44-.112.686-.227.837-.123.16-.319.3-.621.412-.65.24-1.5.251-2.306.251zM17 4.5c0 .558-.103 1.06-.306 1.5H18.5A1.5 1.5 0 0 1 20 7.5V10H0V7.5A1.5 1.5 0 0 1 1.5 6h1.806A3.547 3.547 0 0 1 3 4.5C3 2.47 4.783 1 6.77 1c1.165 0 2.398.546 3.23 1.529C10.832 1.546 12.065 1 13.23 1 15.218 1 17 2.47 17 4.5zM9 20v-8H1v6.5c0 .83.67 1.5 1.5 1.5H9zm2 0v-8h8v6.5c0 .83-.67 1.5-1.5 1.5H11z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bVu3Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgGiftCardMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgGiftCardMinor = function SvgGiftCardMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M5 5c0 .35.06.687.17 1H4.5A1.5 1.5 0 0 0 3 7.5V9h14V7.5a1.5 1.5 0 0 0-1.34-1.492 3.5 3.5 0 0 0-6.022-3.523A3 3 0 0 0 5 5zm7.5 1A1.5 1.5 0 1 0 11 4.5V6h1.5zM9 5v1H8a1 1 0 1 1 1-1z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4 11h5v6H5.5A1.5 1.5 0 0 1 4 15.5V11zm12 0h-5v6h3.5a1.5 1.5 0 0 0 1.5-1.5V11z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gKhHj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgGlobeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgGlobeMajor = function SvgGlobeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M3.07 6a8.025 8.025 0 0 1 4.262-3.544A12.802 12.802 0 0 0 5.595 6H3.07zm-.818 2A8.015 8.015 0 0 0 2 10c0 .69.088 1.36.252 2h2.89A13.886 13.886 0 0 1 5 10c0-.704.051-1.371.143-2H2.252zm4.916 0C7.06 8.62 7 9.286 7 10c0 .713.061 1.38.168 2h5.664c.107-.62.168-1.287.168-2 0-.714-.061-1.38-.168-2H7.168zm7.69 0a14.102 14.102 0 0 1-.001 4h2.891A8 8 0 0 0 18 10a8 8 0 0 0-.252-2h-2.89zm2.072-2h-2.525a12.805 12.805 0 0 0-1.737-3.544A8.025 8.025 0 0 1 16.93 6zm-4.638 0H7.708c.324-.865.725-1.596 1.124-2.195.422-.633.842-1.117 1.168-1.452.326.335.746.82 1.168 1.452.4.599.8 1.33 1.124 2.195zm-1.124 10.195c.4-.599.8-1.33 1.124-2.195H7.708c.324.865.725 1.596 1.124 2.195.422.633.842 1.117 1.168 1.452.326-.335.746-.82 1.168-1.452zM3.07 14h2.525a12.802 12.802 0 0 0 1.737 3.544A8.025 8.025 0 0 1 3.07 14zm9.762 3.305a12.9 12.9 0 0 1-.164.24A8.025 8.025 0 0 0 16.93 14h-2.525a12.805 12.805 0 0 1-1.573 3.305zM20 10c0 5.52-4.472 9.994-9.99 10h-.022C4.47 19.994 0 15.519 0 10 0 4.477 4.477 0 10 0s10 4.477 10 10z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"UpQxu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgGlobeMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgGlobeMinor = function SvgGlobeMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M12.347 15.521c.699-1.16 1.39-2.712 1.589-4.521h1.974a6.013 6.013 0 0 1-3.563 4.521zM4.09 11h1.975c.198 1.809.889 3.361 1.589 4.521A6.017 6.017 0 0 1 4.09 11zm3.564-6.521c-.7 1.16-1.391 2.712-1.59 4.521H4.09a6.017 6.017 0 0 1 3.564-4.521zM8.077 9c.269-1.916 1.239-3.52 1.925-4.443.687.92 1.655 2.519 1.922 4.443H8.077zm1.92 6.443c-.685-.919-1.653-2.519-1.921-4.443h3.847c-.27 1.916-1.24 3.521-1.925 4.443zM15.91 9h-1.974c-.198-1.809-.89-3.361-1.59-4.521A6.013 6.013 0 0 1 15.91 9zM10 2c-4.411 0-8 3.589-8 8s3.589 8 8 8c4.41 0 8-3.589 8-8s-3.59-8-8-8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dlX43":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgGrammarMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgGrammarMajor = function SvgGrammarMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19 2.5A1.5 1.5 0 0 0 17.5 1h-15A1.5 1.5 0 0 0 1 2.5v15A1.5 1.5 0 0 0 2.5 19H9a1 1 0 0 0 0-2H3V3h14v8a1 1 0 1 0 2 0V2.5zM14 11H6V9h8v2zm-8 4v-2h4v2H6zM6 5v2h8V5H6zm12.293 9.293L15 17.586l-1.293-1.293a1 1 0 0 0-1.414 1.414l2 2a.997.997 0 0 0 1.414 0l4-4a1 1 0 0 0-1.414-1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jnnDE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgHashtagMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgHashtagMajor = function SvgHashtagMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M7.992 2.124a1 1 0 1 0-1.984-.248L5.618 5H2a1 1 0 0 0 0 2h3.367l-.75 6H2a1 1 0 1 0 0 2h2.367l-.36 2.876a1 1 0 1 0 1.985.248L6.382 15h5.985l-.36 2.876a1 1 0 0 0 1.985.248l.39-3.124H18a1 1 0 1 0 0-2h-3.367l.75-6H18a1 1 0 1 0 0-2h-2.367l.36-2.876a1 1 0 1 0-1.985-.248L13.618 5H7.632l.36-2.876zM12.617 13l.75-6H7.383l-.75 6h5.984z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6DqMz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgHeaderMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgHeaderMajor = function SvgHeaderMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M1 2.5V9h18V2.5A1.5 1.5 0 0 0 17.5 1h-15A1.5 1.5 0 0 0 1 2.5zM2 19a1 1 0 0 1-1-1v-2h2v1h1v2H2zm17-1a1 1 0 0 1-1 1h-2v-2h1v-1h2v2zM1 14v-3h2v3H1zm16-3v3h2v-3h-2zM6 17h3v2H6v-2zm8 0h-3v2h3v-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cYeZH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgHeartMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgHeartMajor = function SvgHeartMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M6 1a5 5 0 0 0-5 5v.448c0 5.335 2.955 9.647 8.598 12.457a.902.902 0 0 0 .804 0C16.046 16.095 19 11.783 19 6.448V6a5 5 0 0 0-9-3 4.992 4.992 0 0 0-4-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8vAtj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgHideKeyboardMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgHideKeyboardMajor = function SvgHideKeyboardMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 3.5A1.5 1.5 0 0 1 1.5 2h17A1.5 1.5 0 0 1 20 3.5v7a1.5 1.5 0 0 1-1.5 1.5h-17A1.5 1.5 0 0 1 0 10.5v-7zM3 4h2v2H3V4zm1 4v2h2V8H4zm8 2H8V8h4v2zM9 4H7v2h2V4zm4 0h-2v2h2V4zm4 0h-2v2h2V4zm-1 6V8h-2v2h2z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m10 16.586-2.293-2.293a1 1 0 0 0-1.414 1.414l3 3a1 1 0 0 0 1.414 0l3-3a1 1 0 0 0-1.414-1.414L10 16.586z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"geBh7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgHideMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgHideMinor = function SvgHideMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 12a2 2 0 0 0 2-2c0-.178-.03-.348-.074-.512l5.781-5.781a.999.999 0 1 0-1.414-1.414l-2.61 2.61A7.757 7.757 0 0 0 10 4C4.388 4 2.163 9.399 2.071 9.628a1.017 1.017 0 0 0 0 .744c.054.133.835 2.011 2.582 3.561l-2.36 2.36a.999.999 0 1 0 1.414 1.414l5.781-5.781c.164.043.334.074.512.074zm-4-2a4 4 0 0 1 4-4c.742 0 1.432.208 2.025.561l-1.513 1.513A2.004 2.004 0 0 0 10 8a2 2 0 0 0-2 2c0 .178.031.347.074.511l-1.513 1.514A3.959 3.959 0 0 1 6 10zm10.145-3.144-2.252 2.252c.064.288.106.585.106.893a4 4 0 0 1-4 4 3.97 3.97 0 0 1-.89-.108l-1.682 1.68A7.903 7.903 0 0 0 10 16c5.613 0 7.837-5.399 7.928-5.629a1.004 1.004 0 0 0 0-.742c-.044-.111-.596-1.437-1.784-2.773z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dhJLU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgHintMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgHintMajor = function SvgHintMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 0a1 1 0 0 1 1 1v1a1 1 0 1 1-2 0V1a1 1 0 0 1 1-1zm2 17v1.5a1.5 1.5 0 0 1-1.5 1.5h-1A1.5 1.5 0 0 1 8 18.5V17h4zm6-8a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2h-1zM0 10a1 1 0 0 1 1-1h1a1 1 0 1 1 0 2H1a1 1 0 0 1-1-1zm4.343-7.071A1 1 0 0 0 2.93 4.343l.707.707A1 1 0 1 0 5.05 3.636l-.707-.707zM14.95 5.05a1 1 0 0 1 0-1.414l.707-.707a1 1 0 1 1 1.414 1.414l-.707.707a1 1 0 0 1-1.414 0zm-1.682 6.257C12.65 12.181 12 13.124 12 14.195V15H8v-.805c0-1.07-.65-2.014-1.268-2.888a4 4 0 1 1 6.536 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4zF67":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgHomeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgHomeMajor = function SvgHomeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M18 7.261V17.5c0 .841-.672 1.5-1.5 1.5h-2c-.828 0-1.5-.659-1.5-1.5V13H7v4.477C7 18.318 6.328 19 5.5 19h-2c-.828 0-1.5-.682-1.5-1.523V7.261a1.5 1.5 0 0 1 .615-1.21l6.59-4.82a1.481 1.481 0 0 1 1.59 0l6.59 4.82A1.5 1.5 0 0 1 18 7.26z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3LMYI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgHorizontalDotsMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgHorizontalDotsMinor = function SvgHorizontalDotsMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M6 10a2 2 0 1 1-4.001-.001A2 2 0 0 1 6 10zm6 0a2 2 0 1 1-4.001-.001A2 2 0 0 1 12 10zm6 0a2 2 0 1 1-4.001-.001A2 2 0 0 1 18 10z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iS2gc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgIconsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgIconsMajor = function SvgIconsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10.618 18 14 11.236 17.382 18h-6.764zM4 16V9.899A5.006 5.006 0 0 0 9.898 4H16v6.764l-1.106-2.211c-.339-.678-1.449-.678-1.789 0L9.382 16H4zm15.894 2.553L18 14.764V3.5A1.5 1.5 0 0 0 16.5 2H8.974C8.06.793 6.627 0 5 0 2.243 0 0 2.243 0 5c0 1.627.793 3.061 2 3.975V16.5A1.5 1.5 0 0 0 3.5 18h4.882l-.277.553A1 1 0 0 0 9 20h10a.997.997 0 0 0 .894-1.447z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ljlpz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgIllustrationMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgIllustrationMajor = function SvgIllustrationMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19.685 1.46c.1-.099.2-.198.2-.298.184-.276.113-.551.023-.905l-.024-.092c-.3-.2-.6-.2-.899-.1-.05.05-.1.075-.15.1-.05.025-.1.05-.15.1L12.19 4.152c-2.598 1.495-4.596 3.688-5.995 6.28 1.499.598 2.798 1.893 3.298 3.488a16.485 16.485 0 0 0 6.295-5.98l3.897-6.48zM3.997 20c2.198 0 3.997-1.794 3.997-3.987s-1.799-3.987-3.997-3.987S0 13.82 0 16.013V20h3.997z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"e6Qvs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgImageAltMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgImageAltMajor = function SvgImageAltMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4.895 6.553c-.34-.678-1.45-.678-1.79 0l-3 6a1 1 0 1 0 1.79.894L2.619 12h2.764l.723 1.447a1 1 0 0 0 1.789-.894l-3-6zM13 12h-2V7a1 1 0 0 0-2 0v6a1 1 0 0 0 1 1h3a1 1 0 0 0 0-2zm6-6h-4a1 1 0 1 0 0 2h1v5a1 1 0 1 0 2 0V8h1a1 1 0 1 0 0-2zM3.619 10 4 9.236l.382.764h-.763z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"77B8I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgImageAltMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgImageAltMinor = function SvgImageAltMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M12 11a1 1 0 1 1 0 2h-2a1 1 0 0 1-1-1V8a1 1 0 1 1 2 0v3h1zm5-4a1 1 0 1 1 0 2h-1v3a1 1 0 1 1-2 0V9h-1a1 1 0 1 1 0-2h4zm-11.105.553 2 4a1 1 0 0 1-1.79.895L5.883 12H4.119l-.224.448a1 1 0 0 1-1.79-.895l2-4c.34-.678 1.45-.678 1.79 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aM1AB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgImageMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgImageMajor = function SvgImageMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2.5 1A1.5 1.5 0 0 0 1 2.5v15A1.5 1.5 0 0 0 2.5 19h15a1.5 1.5 0 0 0 1.5-1.5v-15A1.5 1.5 0 0 0 17.5 1h-15zm5 3.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zM16.499 17H3.497c-.41 0-.64-.46-.4-.79l3.553-4.051c.19-.21.52-.21.72-.01L9 14l3.06-4.781a.5.5 0 0 1 .84.02l4.039 7.011c.18.34-.06.75-.44.75z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"arZCn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgImagesMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgImagesMajor = function SvgImagesMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19 16a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h14zM6.426 14C6.173 14 6 13.809 6 13.604c0-.08.026-.162.083-.236l3.046-3.24a.448.448 0 0 1 .617-.009l1.397 1.481 2.623-3.825a.446.446 0 0 1 .72.016l3.462 5.609c.154.272-.052.6-.377.6H6.426zM11 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM0 4.5A1.5 1.5 0 0 1 1.5 3H2v15h15v.5a1.5 1.5 0 0 1-1.5 1.5h-14A1.5 1.5 0 0 1 0 18.5v-14z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"14dGs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgImageWithTextMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgImageWithTextMajor = function SvgImageWithTextMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M1.5 2A1.5 1.5 0 0 0 0 3.5v5A1.5 1.5 0 0 0 1.5 10h6A1.5 1.5 0 0 0 9 8.5v-5A1.5 1.5 0 0 0 7.5 2h-6zM18 6h-6a1 1 0 1 1 0-2h6a1 1 0 1 1 0 2zm-6 4h6a1 1 0 1 0 0-2h-6a1 1 0 1 0 0 2zm6 4H1a1 1 0 0 1 0-2h17a1 1 0 0 1 0 2zm-3.293 3.707A1 1 0 0 1 14 18H1a1 1 0 0 1 0-2h13a1 1 0 0 1 .707 1.707z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9jzrG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgImageWithTextOverlayMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgImageWithTextOverlayMajor = function SvgImageWithTextOverlayMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 1a1 1 0 0 1 1-1h7a1 1 0 1 1 0 2h-7a1 1 0 0 1-1-1zm0 4a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2h-6a1 1 0 0 1-1-1zM8.083 4A6.002 6.002 0 0 0 14 9h2v9.5a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 18.5v-13A1.5 1.5 0 0 1 1.5 4h6.583zM5 11a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm-2.574 7h11.145c.325 0 .531-.328.377-.6l-3.462-5.609a.446.446 0 0 0-.72-.016L7.143 15.6l-1.397-1.48a.449.449 0 0 0-.617.007l-3.045 3.241c-.206.264-.01.632.342.632z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6ocJC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgImportMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgImportMinor = function SvgImportMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M13.707 10.707a.999.999 0 1 0-1.414-1.414L11 10.586V3a1 1 0 1 0-2 0v7.586L7.707 9.293a.999.999 0 1 0-1.414 1.414l3 3a.999.999 0 0 0 1.414 0l3-3zM3 16a1 1 0 1 0 0 2h14a1 1 0 1 0 0-2H3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dlwDP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgImportStoreMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgImportStoreMajor = function SvgImportStoreMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "m1.014 5.836.61-3.583A1.522 1.522 0 0 1 3.133 1h13.733c.748 0 1.387.53 1.51 1.253l.609 3.583C19.09 6.446 18.61 7 17.979 7h-.91c-.58 0-1.11-.321-1.37-.83L15.103 5l-.597 1.17c-.26.509-.79.83-1.37.83h-1.169c-.58 0-1.11-.321-1.369-.83L10 5l-.597 1.17c-.26.509-.79.83-1.37.83H6.865c-.58 0-1.11-.321-1.369-.83L4.898 5 4.3 6.17c-.259.509-.789.83-1.369.83h-.91c-.63 0-1.11-.555-1.007-1.164zm6.779 2.957a1 1 0 0 0 0 1.414l.793.793H2a1 1 0 1 0 0 2h6.586l-.793.793a1 1 0 0 0 1.414 1.414l2.5-2.5a.998.998 0 0 0 .293-.704v-.006a.997.997 0 0 0-.284-.695l-.01-.01-2.499-2.5a1 1 0 0 0-1.414 0zM18 9h-2v8H4v-2H2v2.5A1.5 1.5 0 0 0 3.5 19h13a1.5 1.5 0 0 0 1.5-1.5V9z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bfvRO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgIncomingMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgIncomingMajor = function SvgIncomingMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.5 6A1.5 1.5 0 0 1 19 7.5v10a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 17.5v-10A1.5 1.5 0 0 1 2.5 6H7v2H3v9h14V8h-4V6h4.5z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M1 2a1 1 0 0 1 0-2h5c2.757 0 5 2.243 5 5v6.586l1.293-1.293a1 1 0 0 1 1.414 1.414l-3 3a.998.998 0 0 1-1.414 0l-3-3a1 1 0 1 1 1.414-1.414L9 11.586V5c0-1.654-1.346-3-3-3H1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dR663":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgInfoMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgInfoMinor = function SvgInfoMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 1 0-16 0 8 8 0 0 0 16 0zm-9 3a1 1 0 1 0 2 0v-2a1 1 0 1 0-2 0v2zm0-6a1 1 0 1 0 2 0 1 1 0 0 0-2 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2NYPc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgInstallMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgInstallMinor = function SvgInstallMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 4.5A1.5 1.5 0 0 1 4.5 3h11A1.5 1.5 0 0 1 17 4.5v11a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 3 15.5v-11zM5 13v2h10v-2H5zm2.207-7.207a1 1 0 0 0-1.414 1.414l3.5 3.5a1 1 0 0 0 1.414 0l3.5-3.5a1 1 0 0 0-1.414-1.414L10 8.586 7.207 5.793z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jvuXM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgInventoryMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgInventoryMajor = function SvgInventoryMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19.838 5.455a1 1 0 0 0-.432-.369l-9-4a.999.999 0 0 0-.812 0l-9 4A1 1 0 0 0 0 6v14h2V6.65l8-3.556 8 3.556V20h2V6a1 1 0 0 0-.162-.545zM12 8h4v4h-4V8zm-2 2H4v10h6V10zm6 4h-4v6h4v-6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cRSP7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgInviteMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgInviteMinor = function SvgInviteMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M3.5 4A1.5 1.5 0 0 0 2 5.5v9A1.5 1.5 0 0 0 3.5 16h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 16.5 4h-13zm2.015 2.143a1 1 0 1 0-1.03 1.714l5 3a1 1 0 0 0 1.03 0l5-3a1 1 0 1 0-1.03-1.714L10 8.833l-4.485-2.69z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bCRBH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgIqMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2, _path3, _circle;
var SvgIqMajor = function SvgIqMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M9.896 2.141A.98.98 0 1 0 11.283.755.98.98 0 0 0 9.896 2.14z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M2.812 12.676a7.055 7.055 0 0 1 0-9.97A7.025 7.025 0 0 1 7.274.661a.9.9 0 0 1 .132 1.795 5.225 5.225 0 0 0-3.321 1.521 5.255 5.255 0 0 0 0 7.425 5.256 5.256 0 0 0 5.491 1.227 2.95 2.95 0 1 1 .674 1.67 7.057 7.057 0 0 1-7.438-1.624zm8.893.551a1.15 1.15 0 1 1 1.627-1.626 1.15 1.15 0 0 1-1.627 1.626z"
    })), _path3 || (_path3 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M11.651 19.408a.9.9 0 0 1 .22-1.786 5.242 5.242 0 0 0 4.36-1.496 5.255 5.255 0 0 0 0-7.425 5.257 5.257 0 0 0-5.556-1.204 2.95 2.95 0 1 1-.621-1.69 7.057 7.057 0 0 1 7.45 1.621 7.055 7.055 0 0 1 0 9.97 7.042 7.042 0 0 1-5.853 2.01zM6.914 6.81a1.15 1.15 0 1 0 1.627 1.627A1.15 1.15 0 0 0 6.914 6.81z"
    })), _circle || (_circle = /*#__PURE__*/ _reactDefault.default.createElement("circle", {
        cx: 8.646,
        cy: 17.934,
        r: 0.94
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9VQrW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgJobsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgJobsMajor = function SvgJobsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M5.508 2.466 4.356 5H2.5A1.5 1.5 0 0 0 1 6.5v1.882l.503.251a19 19 0 0 0 16.994 0L19 8.382V6.5A1.5 1.5 0 0 0 17.5 5h-1.856l-1.152-2.534A2.5 2.5 0 0 0 12.216 1H7.784a2.5 2.5 0 0 0-2.276 1.466zM7.784 3a.5.5 0 0 0-.455.293L6.553 5h6.894l-.776-1.707A.5.5 0 0 0 12.216 3H7.784z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19 10.613a20.986 20.986 0 0 1-8 2.003V14a1 1 0 0 1-2 0v-1.384a20.995 20.995 0 0 1-8-2.003V17.5A1.5 1.5 0 0 0 2.5 19h15a1.5 1.5 0 0 0 1.5-1.5v-6.887z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6j6yf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgKeyMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgKeyMajor = function SvgKeyMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M14.56.44A1.5 1.5 0 0 1 15.622 0H18.5A1.5 1.5 0 0 1 20 1.5v3.423a.5.5 0 0 1-.5.5h-1.082a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1h-1a1 1 0 0 0-1 1v2l-1.449 1.443a6.5 6.5 0 1 1-5.111-5.724L14.561.439zM8 14a2 2 0 1 1-4 0 2 2 0 0 1 4 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4sztZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgLabelPrinterMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgLabelPrinterMajor = function SvgLabelPrinterMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M4 2.5A1.5 1.5 0 0 1 5.5 1h9A1.5 1.5 0 0 1 16 2.5V6h1.5A1.5 1.5 0 0 1 19 7.5v10a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 17.5v-10A1.5 1.5 0 0 1 2.5 6H4V2.5zM6 12h8V3H6v9zm-2 3a1 1 0 0 1 1-1h3a1 1 0 1 1 0 2H5a1 1 0 0 1-1-1zm11 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"qeNfm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgLandingPageMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgLandingPageMajor = function SvgLandingPageMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 7c0-.552-.449-1-1-1H1a1 1 0 0 1 0-2h9c1.654 0 3 1.346 3 3v5.586l1.293-1.293a1 1 0 0 1 1.414 1.414l-3 3a.998.998 0 0 1-1.414 0l-3-3a1 1 0 1 1 1.414-1.414L11 12.586V7zm8.56-2.853a1.5 1.5 0 0 1 .44 1.06V18.5a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 4 18.5V8h2v10h12V5.414L14.586 2H4v-.5A1.5 1.5 0 0 1 5.5 0h9.293a1.5 1.5 0 0 1 1.06.44l3.708 3.707z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"03NOr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgLanguageMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgLanguageMinor = function SvgLanguageMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11.428 13.999 13 10.46l1.573 3.538h-3.145zm6.486 2.594-4-9a1 1 0 0 0-1.828 0l-1.958 4.406H10c-1.276 0-2.24-.3-2.965-.716l.012-.012c1.292-1.443 1.777-3.536 1.94-5.272H10a1 1 0 1 0 0-2h-.942c-.015-.63-.058-1.051-.064-1.11a.998.998 0 0 0-1.103-.884 1.002 1.002 0 0 0-.885 1.103c0 .013.035.359.05.89H3a1 1 0 0 0 0 2h3.98c-.143 1.37-.515 2.922-1.42 3.935a4.165 4.165 0 0 1-.59-1.183.999.999 0 0 0-1.938.492c.118.474.373 1.07.778 1.679a4.17 4.17 0 0 1-.81.078 1 1 0 0 0 0 2c.857 0 1.629-.16 2.322-.467.962.734 2.253 1.303 3.932 1.435l-1.167 2.626a1.001 1.001 0 0 0 1.828.812l.625-1.406h4.922l.625 1.406a1 1 0 0 0 1.828-.812z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ax9M7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgLegalMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgLegalMajor = function SvgLegalMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M7 5h5v2H7V5zm5 4H7v2h5V9z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M16 17a3 3 0 0 1-3 3H3a3 3 0 0 1-3-3v-1.5A1.5 1.5 0 0 1 1.5 14H3V4a3 3 0 0 1 3-3h11a3 3 0 1 1 0 6h-1v10zM5 4a1 1 0 0 1 1-1h8.17c-.11.313-.17.65-.17 1v13a1 1 0 1 1-2 0v-3H5V4zm12-1a1 1 0 0 0-1 1v1h1a1 1 0 1 0 0-2zm-7 14c0 .35.06.687.17 1H3a1 1 0 0 1-1-1v-1h8v1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lg8c4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgLinkMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgLinkMinor = function SvgLinkMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M6.534 18a4.507 4.507 0 0 1-3.208-1.329 4.54 4.54 0 0 1 0-6.414l1.966-1.964a.999.999 0 1 1 1.414 1.414L4.74 11.671a2.54 2.54 0 0 0 0 3.586c.961.959 2.631.958 3.587 0l1.966-1.964a1 1 0 1 1 1.415 1.414l-1.966 1.964A4.503 4.503 0 0 1 6.534 18zm7.467-6a.999.999 0 0 1-.707-1.707l1.966-1.964a2.54 2.54 0 0 0 0-3.586c-.961-.959-2.631-.957-3.587 0L9.707 6.707a1 1 0 1 1-1.415-1.414l1.966-1.964A4.503 4.503 0 0 1 13.466 2c1.211 0 2.351.472 3.208 1.329a4.541 4.541 0 0 1 0 6.414l-1.966 1.964a.997.997 0 0 1-.707.293zm-6.002 1a.999.999 0 0 1-.707-1.707l4.001-4a1 1 0 1 1 1.415 1.414l-4.001 4a1 1 0 0 1-.708.293z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jmt3A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgListMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgListMajor = function SvgListMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M1 2.5A1.5 1.5 0 0 1 2.5 1h15A1.5 1.5 0 0 1 19 2.5v15a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 17.5v-15zM8 5h8v2H8V5zm8 4H8v2h8V9zm-8 4h8v2H8v-2zM5 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm1 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-1 5a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fI6sR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgLiveViewMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgLiveViewMajor = function SvgLiveViewMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M13.293 2.707A1 1 0 0 0 15 2V1a1 1 0 0 0-2 0v1a1 1 0 0 0 .293.707zM17 4a.999.999 0 0 1-.707-1.707l1-1a1 1 0 1 1 1.414 1.414l-1 1A.996.996 0 0 1 17 4zm2 3h-1a1 1 0 1 1 0-2h1a1 1 0 1 1 0 2zm-4-1a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM1 3a2 2 0 0 1 2-2h8v2H3v8.464C4.795 10.53 7.836 10 10 10c2.164 0 5.205.529 7 1.464V9h2v8a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eLIx5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgLocationMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgLocationMajor = function SvgLocationMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M18 8c0-4.42-3.58-8-8-8S2 3.58 2 8c0 .15 0 .29.01.44.13 3.55 1.99 7.62 7.13 11.29.51.36 1.21.36 1.72 0 5.14-3.67 7-7.74 7.13-11.29.01-.15.01-.29.01-.44zm-5.879 2.121a2.996 2.996 0 0 0 0-4.242 2.996 2.996 0 0 0-4.242 0 2.996 2.996 0 0 0 0 4.242 2.996 2.996 0 0 0 4.242 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9gLM3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgLocationsMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgLocationsMinor = function SvgLocationsMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm0-8C6.69 2 4 4.87 4 8.4c0 6 5.4 9.35 5.63 9.49.11.07.24.11.37.11s.26-.04.37-.11C10.6 17.75 16 14.4 16 8.4 16 4.87 13.31 2 10 2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jGBRL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgLockMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgLockMajor = function SvgLockMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M4 6v2H2.5A1.5 1.5 0 0 0 1 9.5v9A1.5 1.5 0 0 0 2.5 20h15a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 17.5 8H16V6A6 6 0 0 0 4 6zm6-4a4 4 0 0 0-4 4v2h8V6a4 4 0 0 0-4-4zm1 14v-4H9v4h2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7373B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgLockMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgLockMinor = function SvgLockMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M15 8V7c0-2.757-2.243-5-5-5S5 4.243 5 7v1a1 1 0 0 0-1 1v7.5A1.5 1.5 0 0 0 5.5 18h9a1.5 1.5 0 0 0 1.5-1.5V9a1 1 0 0 0-1-1zm-6 7h2v-4H9v4zm4-7H7V7c0-1.654 1.346-3 3-3s3 1.346 3 3v1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"avMsq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgLogoBlockMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgLogoBlockMajor = function SvgLogoBlockMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M1 2a1 1 0 0 1 1-1h2v2H3v1H1V2zm18 0a1 1 0 0 0-1-1h-2v2h1v1h2V2zM2 19a1 1 0 0 1-1-1v-2h2v1h1v2H2zm16 0a1 1 0 0 0 1-1v-2h-2v1h-1v2h2zM6 17h3v2H6v-2zm5 0h3v2h-3v-2zm3-16v2h-3V1h3zM9 1v2H6V1h3zm.598 5.332a4 4 0 0 0-3.573 7.147l3.573-7.147zM8 14h8l-4-8-4 8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8HqWq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgLogOutMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgLogOutMinor = function SvgLogOutMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 19a8 8 0 1 0 0-16 8 8 0 0 0 0 16zM9.293 8.707a1 1 0 0 1 1.414-1.414l3 3a1 1 0 0 1 0 1.414l-3 3a1 1 0 0 1-1.414-1.414L10.586 12H7a1 1 0 1 1 0-2h3.586L9.293 8.707z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5ydeA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgManagedStoreMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgManagedStoreMajor = function SvgManagedStoreMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m1.623 2.253-.609 3.583C.91 6.446 1.39 7 2.021 7h.91c.58 0 1.11-.321 1.37-.83L4.897 5l.597 1.17c.26.509.79.83 1.37.83h1.169c.58 0 1.11-.321 1.369-.83L10 5l.597 1.17c.26.509.79.83 1.37.83h1.169c.58 0 1.11-.321 1.369-.83L15.102 5l.598 1.17c.259.509.789.83 1.369.83h.91c.63 0 1.11-.555 1.007-1.164l-.61-3.583A1.522 1.522 0 0 0 16.867 1H3.134c-.748 0-1.387.53-1.51 1.253zm12.084 7.04a1 1 0 0 1 0 1.414l-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 1 1 1.414-1.414L9 12.586l3.293-3.293a1 1 0 0 1 1.414 0zM4 9H2v8.5A1.5 1.5 0 0 0 3.5 19h13a1.5 1.5 0 0 0 1.5-1.5V9h-2v8H4V9z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cDSlb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMarketingMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMarketingMajor = function SvgMarketingMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.1 14.95c.412.16.9-.08.9-.45v-13c0-.37-.488-.61-.9-.45-.683.41-1.311.83-1.919 1.237-2.14 1.43-4.019 2.687-7.084 2.713H4C2.34 5 1 6.34 1 8s1.34 3 3 3h4c3.123 0 5.02 1.268 7.182 2.714.607.406 1.236.826 1.918 1.236zM9 18h-.79c-.43 0-.81-.27-.94-.67L5.07 13H9a1 1 0 0 1 1 1v3c0 .55-.45 1-1 1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ibIsC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMarkFulfilledMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgMarkFulfilledMinor = function SvgMarkFulfilledMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M18 16.5a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 2 16.5V9h2v4h2.382c.379 0 .725.214.894.553L8 15h4l.724-1.447a.998.998 0 0 1 .894-.553H16V9h2v7.5z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m8.293 8.707-3-3a.999.999 0 1 1 1.414-1.414L9 6.586l4.293-4.293a.999.999 0 1 1 1.414 1.414l-5 5a.997.997 0 0 1-1.414 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2ENSz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMarkPaidMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMarkPaidMinor = function SvgMarkPaidMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M14.207 6.793a1 1 0 0 1 0 1.414l-4.5 4.5a1 1 0 0 1-1.414 0l-2.5-2.5a1 1 0 0 1 1.414-1.414L9 10.586l3.793-3.793a1 1 0 0 1 1.414 0zM4.5 3A1.5 1.5 0 0 0 3 4.5V17a1.002 1.002 0 0 0 1.301.953c.179-.056.315-.193.437-.336l1.122-1.322 1.349 1.399c.184.191.437.301.702.306a.96.96 0 0 0 .713-.281l1.364-1.317 1.305 1.305a.997.997 0 0 0 1.414 0l1.42-1.42 1.138 1.334c.12.14.254.275.43.331A1 1 0 0 0 17 17V4.5A1.5 1.5 0 0 0 15.5 3h-11z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eKxz0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMaximizeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgMaximizeMajor = function SvgMaximizeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M9 5a1 1 0 1 0 0 2h2.586l-3.293 3.293a1 1 0 1 0 1.414 1.414L13 8.414V11a1 1 0 1 0 2 0V6c0-.025 0-.05-.003-.075A1 1 0 0 0 14 5H9zm-8 9.5A1.5 1.5 0 0 1 2.5 13h3A1.5 1.5 0 0 1 7 14.5v3A1.5 1.5 0 0 1 5.5 19h-3A1.5 1.5 0 0 1 1 17.5v-3z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2.5 1A1.5 1.5 0 0 0 1 2.5V11h2V3h14v14H9v2h8.5a1.5 1.5 0 0 0 1.5-1.5v-15A1.5 1.5 0 0 0 17.5 1h-15z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fPz6y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMaximizeMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMaximizeMinor = function SvgMaximizeMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4.5 3A1.5 1.5 0 0 0 3 4.5V7a1 1 0 0 0 2 0V5h2a1 1 0 0 0 0-2H4.5zM3 15.5A1.5 1.5 0 0 0 4.5 17H7a1 1 0 1 0 0-2H5v-2a1 1 0 1 0-2 0v2.5zm14 0a1.5 1.5 0 0 1-1.5 1.5H13a1 1 0 1 1 0-2h2v-2a1 1 0 1 1 2 0v2.5zm0-11A1.5 1.5 0 0 0 15.5 3H13a1 1 0 1 0 0 2h2v2a1 1 0 1 0 2 0V4.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bO1H3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMentionMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMentionMajor = function SvgMentionMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 13c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zm0-13C4.486 0 0 4.486 0 10s4.486 10 10 10a1 1 0 0 0 0-2c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8v1c0 .827-.673 1.5-1.5 1.5S15 11.827 15 11v-1c0-2.757-2.243-5-5-5s-5 2.243-5 5 2.243 5 5 5c1.531 0 2.887-.707 3.805-1.795A3.477 3.477 0 0 0 16.5 14.5c1.93 0 3.5-1.57 3.5-3.5v-1c0-5.514-4.486-10-10-10z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dhVfE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMicrophoneMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgMicrophoneMajor = function SvgMicrophoneMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M6 4a4 4 0 1 1 8 0v4a4 4 0 0 1-8 0V4zM11 15v4H9v-4h2z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4 8a6 6 0 0 0 12 0h2A8 8 0 1 1 2 8h2zM16 6h.5A1.5 1.5 0 0 1 18 7.5V8h-2V6zM2 7.5A1.5 1.5 0 0 1 3.5 6H4v2H2v-.5zm5 12A1.5 1.5 0 0 1 8.5 18h3a1.5 1.5 0 0 1 1.5 1.5v.5H7v-.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3ugOd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMinimizeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgMinimizeMajor = function SvgMinimizeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M9 17h8V3H3v8H1V2.5A1.5 1.5 0 0 1 2.5 1h15A1.5 1.5 0 0 1 19 2.5v15a1.5 1.5 0 0 1-1.5 1.5H9v-2z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 6a1 1 0 1 0-2 0v5a.997.997 0 0 0 1 1h5a1 1 0 1 0 0-2h-2.586l3.293-3.293a1 1 0 0 0-1.414-1.414L10 8.586V6zm-9 8.5A1.5 1.5 0 0 1 2.5 13h3A1.5 1.5 0 0 1 7 14.5v3A1.5 1.5 0 0 1 5.5 19h-3A1.5 1.5 0 0 1 1 17.5v-3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"k8TUQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMinimizeMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMinimizeMinor = function SvgMinimizeMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 7.5A1.5 1.5 0 0 0 12.5 9H16a1 1 0 1 0 0-2h-3V4a1 1 0 1 0-2 0v3.5zm1.5 3.5a1.5 1.5 0 0 0-1.5 1.5V16a1 1 0 1 0 2 0v-3h3a1 1 0 1 0 0-2h-3.5zm-5 0A1.5 1.5 0 0 1 9 12.5V16a1 1 0 1 1-2 0v-3H4a1 1 0 1 1 0-2h3.5zm0-2A1.5 1.5 0 0 0 9 7.5V4a1 1 0 1 0-2 0v3H4a1 1 0 1 0 0 2h3.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1EIH7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMinusMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMinusMinor = function SvgMinusMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15 9H5a1 1 0 1 0 0 2h10a1 1 0 1 0 0-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1HLwf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMobileAcceptMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMobileAcceptMajor = function SvgMobileAcceptMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M7 18a.997.997 0 0 1-.707-.293l-6-6a1 1 0 0 1 1.414-1.414l5.236 5.236 11.298-13.18a1 1 0 0 1 1.518 1.3l-12 14a1.001 1.001 0 0 1-.721.35H7"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5t6b9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMobileBackArrowMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMobileBackArrowMajor = function SvgMobileBackArrowMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19 9H3.661l5.997-5.246a1 1 0 0 0-1.316-1.506l-8 7c-.008.007-.011.018-.019.025a.975.975 0 0 0-.177.24c-.018.03-.045.054-.059.087a.975.975 0 0 0 0 .802c.014.033.041.057.059.088.05.087.104.17.177.239.008.007.011.018.019.025l8 7a.996.996 0 0 0 1.411-.095 1 1 0 0 0-.095-1.411L3.661 11H19a1 1 0 0 0 0-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dFwW6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMobileCancelMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMobileCancelMajor = function SvgMobileCancelMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m11.414 10 6.293-6.293a1 1 0 1 0-1.414-1.414L10 8.586 3.707 2.293a1 1 0 0 0-1.414 1.414L8.586 10l-6.293 6.293a1 1 0 1 0 1.414 1.414L10 11.414l6.293 6.293A.998.998 0 0 0 18 17a.999.999 0 0 0-.293-.707L11.414 10z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6dyyp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMobileChevronMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMobileChevronMajor = function SvgMobileChevronMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M14 20.001a.994.994 0 0 1-.747-.336l-8-9a.999.999 0 0 1 0-1.328l8-9a1 1 0 0 1 1.494 1.328l-7.41 8.336 7.41 8.336A.998.998 0 0 1 14 20.001z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9e49d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMobileHamburgerMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMobileHamburgerMajor = function SvgMobileHamburgerMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19 11H1a1 1 0 0 1 0-2h18a1 1 0 1 1 0 2zm0-7H1a1 1 0 0 1 0-2h18a1 1 0 1 1 0 2zm0 14H1a1 1 0 0 1 0-2h18a1 1 0 0 1 0 2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kLD5Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMobileHorizontalDotsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMobileHorizontalDotsMajor = function SvgMobileHorizontalDotsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M16 8c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2zm-6 0c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2zM4 8c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8GpVy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMobileMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMobileMajor = function SvgMobileMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M3 1.5C3 .7 3.7 0 4.5 0h11c.8 0 1.5.7 1.5 1.5v17c0 .8-.7 1.5-1.5 1.5h-11c-.8 0-1.5-.7-1.5-1.5v-17zM5 2h10v14H5V2zm4 15a1 1 0 1 0 0 2h2a1 1 0 1 0 0-2H9z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"a4RXK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMobilePlusMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMobilePlusMajor = function SvgMobilePlusMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17 9h-6V3a1 1 0 0 0-2 0v6H3a1 1 0 0 0 0 2h6v6a1 1 0 1 0 2 0v-6h6a1 1 0 0 0 0-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5W31q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMobileVerticalDotsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgMobileVerticalDotsMajor = function SvgMobileVerticalDotsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 6c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2zm0 2c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2zm0 6c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gRYb9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgMonerisMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgMonerisMajor = function SvgMonerisMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3.541 0a1.5 1.5 0 0 0-1.5 1.54l.013.46h15.892l.012-.46a1.5 1.5 0 0 0-1.5-1.54H3.542z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M4.424 20a1.5 1.5 0 0 1-1.498-1.422L2.166 4h15.669l-.76 14.578a1.5 1.5 0 0 1-1.5 1.422H4.424zM5 6h10v4H5V6zm0 6h2v2H5v-2zm0 4h2v2H5v-2zm6-4H9v2h2v-2zm-2 4h2v2H9v-2zm6-4h-2v2h2v-2zm-2 4h2v2h-2v-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1BF4O":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgNatureMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgNatureMajor = function SvgNatureMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15.651 12.851c-2.13 1.94-5.17 2.91-9.07 2.91-.91 0-1.87-.04-2.88-.17-.38.86-.6 1.71-.6 2.51 0 .55-.45 1-1 1s-1-.45-1-1c0-.24.01-.48.04-.72.02-.13.03-.26.06-.39.18-1.13.64-2.27 1.29-3.39 2.32-4.02 9.3-8.68 12.61-9.5-4.76-.03-12 3-13.91 6.93 0-2.89 2.3-6.42 5.46-8.38 4.54-2.82 10.47-1.14 12.06 0 .23.16.37.42.38.7.08 2.31-.25 6.62-3.44 9.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2qsQW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgNavigationMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgNavigationMajor = function SvgNavigationMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM5 15l2.27-6.31 4.04 4.04L5 15zm7.73-3.69L8.69 7.27 15 5l-2.27 6.31z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2TLlz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgNoteMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgNoteMajor = function SvgNoteMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M11.379 0a1.5 1.5 0 0 1 1.06.44l4.122 4.12A1.5 1.5 0 0 1 17 5.622V18.5a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 3 18.5v-17A1.5 1.5 0 0 1 4.5 0h6.879zM6 5h4v2H6V5zm8 4v2H6V9h8zm-8 6v-2h7v2H6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fM4jh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgNoteMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgNoteMinor = function SvgNoteMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M6 11h8V9H6v2zm0 4h8v-2H6v2zm0-8h4V5H6v2zm6-5H5.5A1.5 1.5 0 0 0 4 3.5v13A1.5 1.5 0 0 0 5.5 18h9a1.5 1.5 0 0 0 1.5-1.5V6l-4-4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9gUkp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgNotificationMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgNotificationMajor = function SvgNotificationMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 0a1 1 0 0 1 1 1v2.032l-.001.021-.002.03A6.002 6.002 0 0 1 16 9c0 3.093.625 4.312 1.599 6.21l.034.068c.17.33-.07.722-.442.722H2.809a.496.496 0 0 1-.442-.722l.034-.068C3.375 13.312 4 12.093 4 9a6.002 6.002 0 0 1 5.003-5.918l-.002-.04A.835.835 0 0 1 9 3V1a1 1 0 0 1 1-1zm2 18a2 2 0 0 1-4 0h4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fTZ6g":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgOnlineStoreMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgOnlineStoreMajor = function SvgOnlineStoreMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m1.791 2.253-.597 3.583A1 1 0 0 0 2.18 7h.893a1.5 1.5 0 0 0 1.342-.83L5 5l.585 1.17A1.5 1.5 0 0 0 6.927 7h1.146a1.5 1.5 0 0 0 1.342-.83L10 5l.585 1.17a1.5 1.5 0 0 0 1.342.83h1.146a1.5 1.5 0 0 0 1.342-.83L15 5l.585 1.17a1.5 1.5 0 0 0 1.342.83h.893a1 1 0 0 0 .986-1.164l-.597-3.583A1.5 1.5 0 0 0 16.729 1H3.271a1.5 1.5 0 0 0-1.48 1.253zM4 18.5A1.5 1.5 0 0 1 5.5 17H8v-3h4v3h2.5a1.5 1.5 0 0 1 1.5 1.5v.5H4v-.5z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 9h2v4h12V9h2v4.5a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 2 13.5V9z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cU9Bp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgOrdersMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgOrdersMajor = function SvgOrdersMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 1a1 1 0 1 0-2 0v7.586L7.707 7.293a1 1 0 0 0-1.414 1.414l3 3a1 1 0 0 0 1.414 0l3-3a1 1 0 0 0-1.414-1.414L11 8.586V1z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 14V3h4V1H2.5A1.5 1.5 0 0 0 1 2.5v15A1.5 1.5 0 0 0 2.5 19h15a1.5 1.5 0 0 0 1.5-1.5v-15A1.5 1.5 0 0 0 17.5 1H13v2h4v11h-3.5c-.775 0-1.388.662-1.926 1.244l-.11.12A1.994 1.994 0 0 1 10 16a1.994 1.994 0 0 1-1.463-.637l-.111-.12C7.888 14.664 7.275 14 6.5 14H3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6KQ9h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgOrderStatusMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgOrderStatusMinor = function SvgOrderStatusMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 7a1 1 0 1 1 0-2h2.586l2.707-2.707a.997.997 0 0 1 1.655.391l1.49 4.465 1.855-1.856A.996.996 0 0 1 14 5h3a1 1 0 1 1 0 2h-2.586l-2.707 2.707a.998.998 0 0 1-1.655-.391l-1.49-4.465-1.855 1.856A.996.996 0 0 1 6 7H3zm14 2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-7a1 1 0 1 1 2 0v3h2.382c.379 0 .725.214.894.553L8 15h4l.724-1.447a.998.998 0 0 1 .894-.553H16v-3a1 1 0 0 1 1-1z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 9h2v1H2zm14 0h2v1h-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"b3kQf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgOutgoingMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgOutgoingMajor = function SvgOutgoingMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.5 10a1.5 1.5 0 0 1 1.5 1.5v7a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 18.5v-7c0-.829.67-1.5 1.5-1.5H7v2H3v6h14v-6h-4v-2h4.5zM10 16a1 1 0 0 1-1-1V8c0-2.757 2.243-5 5-5h2.586l-1.293-1.293A1 1 0 0 1 16.707.293l3 3a.998.998 0 0 1 0 1.414l-3 3a.997.997 0 0 1-1.631-.324 1 1 0 0 1 .217-1.09L16.586 5H14c-1.654 0-3 1.346-3 3v7a1 1 0 0 1-1 1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2YxZc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPackageMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPackageMajor = function SvgPackageMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19 5h-8V2h5.227c.382-.001.736.162.928.429L19 5zM3.773 2H9v3H1l1.845-2.571c.192-.267.546-.43.928-.429zM1 7v10.5A1.5 1.5 0 0 0 2.5 19h15a1.5 1.5 0 0 0 1.5-1.5V7H1zm2 2h6v4H3V9z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4RfPS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPageDownMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPageDownMajor = function SvgPageDownMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M11.379 0a1.5 1.5 0 0 1 1.06.44l4.122 4.12A1.5 1.5 0 0 1 17 5.622V18.5a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 3 18.5v-17A1.5 1.5 0 0 1 4.5 0h6.879zM10 6a1 1 0 0 1 1 1v3.586l1.293-1.293a1 1 0 1 1 1.414 1.414l-3 3a1 1 0 0 1-1.414 0l-3-3a1 1 0 0 1 1.414-1.414L9 10.586V7a1 1 0 0 1 1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"h82kE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPageMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPageMajor = function SvgPageMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M12.44.44A1.5 1.5 0 0 0 11.378 0H4.5A1.5 1.5 0 0 0 3 1.5v17A1.5 1.5 0 0 0 4.5 20h11a1.5 1.5 0 0 0 1.5-1.5V5.621a1.5 1.5 0 0 0-.44-1.06L12.44.439z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ehCUh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPageMinusMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPageMinusMajor = function SvgPageMinusMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11.379 0a1.5 1.5 0 0 1 1.06.44l4.122 4.12A1.5 1.5 0 0 1 17 5.622V18.5a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 3 18.5v-17A1.5 1.5 0 0 1 4.5 0h6.879zM7 9a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2H7z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dRCTO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPagePlusMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPagePlusMajor = function SvgPagePlusMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M11.379 0a1.5 1.5 0 0 1 1.06.44l4.122 4.12A1.5 1.5 0 0 1 17 5.622V18.5a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 3 18.5v-17A1.5 1.5 0 0 1 4.5 0h6.879zM10 14a1 1 0 0 1-1-1v-2H7a1 1 0 1 1 0-2h2V7a1 1 0 1 1 2 0v2h2a1 1 0 1 1 0 2h-2v2a1 1 0 0 1-1 1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"tbuJh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPageUpMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPageUpMajor = function SvgPageUpMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M11.379 0a1.5 1.5 0 0 1 1.06.44l4.122 4.12A1.5 1.5 0 0 1 17 5.622V18.5a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 3 18.5v-17A1.5 1.5 0 0 1 4.5 0h6.879zm2.328 10.707a1 1 0 0 1-1.414 0L11 9.414V13a1 1 0 1 1-2 0V9.414l-1.293 1.293a1 1 0 0 1-1.414-1.414l3-3a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7Il9a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPaginationEndMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPaginationEndMinor = function SvgPaginationEndMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M14 4a1 1 0 0 1 1 1v10a1 1 0 1 1-2 0V5a1 1 0 0 1 1-1zm-7.219.376 4 5a1 1 0 0 1 0 1.249l-4 5a1 1 0 1 1-1.562-1.25l3.5-4.374-3.5-4.376a1 1 0 1 1 1.562-1.25z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9nJWp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPaginationStartMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPaginationStartMinor = function SvgPaginationStartMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M6 4a1 1 0 0 1 1 1v10a1 1 0 1 1-2 0V5a1 1 0 0 1 1-1zm7.219.376a1 1 0 1 1 1.562 1.249L11.28 10l3.5 4.375a1 1 0 1 1-1.562 1.249l-4-5a1 1 0 0 1 0-1.25l4-5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6VYOm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPaintBrushMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPaintBrushMajor = function SvgPaintBrushMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M20 18c0-.79-1.018-2.488-1.601-3.397a.47.47 0 0 0-.798 0C17.018 15.512 16 17.21 16 18c0 1.107.893 2 2 2s2-.893 2-2zM11 0 5.482 5.5l9.018 9.018L20 9l-5-5-3 1 1-3-2-2zM3.488 7.488l.5-.498 9.022 9.023-.538.541c-.575.575-1.493.569-2.173.124-1.053-.69-2.146-1.132-3.248-.913a4.72 4.72 0 0 0-.378.092c-.506.145-.93.477-1.301.85-.374.374-.656.848-.937 1.321-.383.643-.763 1.284-1.373 1.667a2 2 0 0 1-2.77-2.738c.383-.624 1.035-1.012 1.69-1.402.475-.283.952-.567 1.328-.943.398-.399.753-.855.89-1.402l.02-.08c.27-1.143-.134-2.351-.858-3.466-.443-.681-.45-1.6.126-2.176z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8n609":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPauseCircleMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPauseCircleMajor = function SvgPauseCircleMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 10c0 5.514 4.486 10 10 10s10-4.486 10-10S15.514 0 10 0 0 4.486 0 10zm7-3a1 1 0 0 1 2 0v6a1 1 0 1 1-2 0V7zm5-1a1 1 0 0 0-1 1v6a1 1 0 1 0 2 0V7a1 1 0 0 0-1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iSYqS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPauseMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPauseMajor = function SvgPauseMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M6 0a1 1 0 0 0-1 1v18a1 1 0 1 0 2 0V1a1 1 0 0 0-1-1zm8 0a1 1 0 0 0-1 1v18a1 1 0 1 0 2 0V1a1 1 0 0 0-1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4iQIC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPauseMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPauseMinor = function SvgPauseMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M11 13a1 1 0 1 0 2 0V7a1 1 0 1 0-2 0v6zm-4 0a1 1 0 1 0 2 0V7a1 1 0 0 0-2 0v6zm3-11a8 8 0 1 0 0 16 8 8 0 0 0 0-16z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9rFKY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPaymentsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPaymentsMajor = function SvgPaymentsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4.002 5 .55 6.76a.985.985 0 0 0-.549.9V18c0 .51.38.93.879.99l8.023 1a.997.997 0 0 0 1.068-.67L11.737 14h3.273c1.297 0 2.405-.84 2.814-2h.679c.828 0 1.497-.67 1.497-1.5V5H4.002zM5 10h10.01c.27 0 .509.1.709.31.19.18.289.42.289.69 0 .55-.449 1-.998 1h-3.992c-.429 0-.808.28-.948.68l-1.736 5.23-6.338-.79V8.27l2.006-1v1.74A1 1 0 0 0 5 10zm13.503-9H5.499c-.828 0-1.497.67-1.497 1.5V3H20v-.5c0-.83-.669-1.5-1.497-1.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2iS05":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPhoneInMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPhoneInMajor = function SvgPhoneInMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M16.094 9.1H12.1a.996.996 0 0 1-.998-.998V4.106a.997.997 0 0 1 1.705-.708.998.998 0 0 1 .293.707V5.69l3.335-3.334a.999.999 0 0 1 1.413 1.411l-3.336 3.334h1.584a.999.999 0 0 1 0 1.999zM7.342 4.306l.534 2.67a1.495 1.495 0 0 1-.802 1.634l-.975.488c0 2 3 5 5 5l.488-.975a1.5 1.5 0 0 1 1.636-.8l2.67.534a1.5 1.5 0 0 1 1.206 1.471v3.235c0 .859-.725 1.572-1.584 1.535C6.6 18.71 1.561 14.847 1.101 4.686 1.062 3.827 1.778 3.1 2.638 3.1h3.233a1.5 1.5 0 0 1 1.471 1.206z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7xrIR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPhoneMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPhoneMajor = function SvgPhoneMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m7.876 6.976-.534-2.67A1.5 1.5 0 0 0 5.871 3.1H2.638c-.86 0-1.576.727-1.537 1.586.461 10.161 5.499 14.025 14.415 14.413.859.037 1.584-.676 1.584-1.535v-3.235a1.5 1.5 0 0 0-1.206-1.471l-2.67-.534a1.5 1.5 0 0 0-1.636.8l-.488.975c-2 0-5-3-5-5l.975-.488c.606-.302.934-.972.801-1.635z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fWZFq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPhoneOutMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPhoneOutMajor = function SvgPhoneOutMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M13.105 2.1H17.1c.553 0 1 .446 1 .999v3.995a.997.997 0 0 1-1.705.708.998.998 0 0 1-.293-.707V5.511l-3.336 3.335a.999.999 0 0 1-1.413-1.411L14.69 4.1h-1.584a.999.999 0 0 1-.705-1.707.993.993 0 0 1 .705-.293zM7.342 4.306l.534 2.67a1.495 1.495 0 0 1-.802 1.634l-.975.488c0 2 3 5 5 5l.488-.975a1.5 1.5 0 0 1 1.636-.8l2.67.534a1.5 1.5 0 0 1 1.206 1.471v3.235c0 .859-.725 1.572-1.584 1.535C6.6 18.71 1.561 14.847 1.101 4.686 1.062 3.827 1.778 3.1 2.638 3.1h3.233a1.5 1.5 0 0 1 1.471 1.206z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jJQtG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPinMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPinMajor = function SvgPinMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m13.707.295 6 6a1.003 1.003 0 0 1-.066 1.475l-5.65 4.706c-.154 4.105-2.292 5.294-2.544 5.42a1 1 0 0 1-1.154-.187L7 14.416l-5.293 5.293a1 1 0 0 1-1.414-1.414l5.293-5.293-3.293-3.293a1.001 1.001 0 0 1-.188-1.155c.126-.252 1.316-2.389 5.419-2.544L12.231.361a.998.998 0 0 1 .724-.358.966.966 0 0 1 .752.292z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kAtSr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPinMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPinMinor = function SvgPinMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.7 7 13 2.3c-.2-.2-.401-.3-.7-.3-.3 0-.6.1-.701.4L8 6.7c-3.3.1-4.2 1.9-4.3 2.1-.2.4-.2.8.2 1.1l2.4 2.4-4 4c-.4.4-.4 1 0 1.4.2.2.4.3.7.3.3 0 .5-.1.7-.3l4-4 2.399 2.4c.201.2.401.3.701.3.2 0 .299 0 .4-.1.2-.1 1.899-1.1 2.1-4.3l4.299-3.6C17.9 8.3 18 8 18 7.7c0-.3-.1-.5-.3-.7z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"k1rJE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPlayCircleMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPlayCircleMajor = function SvgPlayCircleMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M10 20c5.523 0 10-4.477 10-10S15.523 0 10 0 0 4.477 0 10s4.477 10 10 10zM8 6.862v6.276a.5.5 0 0 0 .748.434l5.492-3.138a.5.5 0 0 0 0-.868L8.748 6.427A.5.5 0 0 0 8 6.862z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fvukk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPlayMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPlayMajor = function SvgPlayMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4.333 1C3.64 1 3 1.555 3 2.332v15.335a1.328 1.328 0 0 0 2.014 1.143l12.787-7.665a1.33 1.33 0 0 0 0-2.283L5.015 1.192A1.326 1.326 0 0 0 4.333 1zM5 3.515l10.815 6.488L5 16.485V3.515z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1Ss0N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPlayMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPlayMinor = function SvgPlayMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M16 10a.997.997 0 0 1-.485.857l-10 6a1.004 1.004 0 0 1-1.008.013A1.001 1.001 0 0 1 4 16V4a1.001 1.001 0 0 1 1.515-.857l10 6c.301.18.485.505.485.857z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5boxV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPlusMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPlusMinor = function SvgPlusMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17 9h-6V3a1 1 0 1 0-2 0v6H3a1 1 0 1 0 0 2h6v6a1 1 0 1 0 2 0v-6h6a1 1 0 1 0 0-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1nOgf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPointOfSaleMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPointOfSaleMajor = function SvgPointOfSaleMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M3.945 2.438A.5.5 0 0 1 4.441 2H15.56a.5.5 0 0 1 .496.438l.875 7a.5.5 0 0 1-.496.562H13.19c.198.576.577 1.269 1.24 2h4.07a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1-1.5 1.5h-17A1.5 1.5 0 0 1 0 16.5v-3A1.5 1.5 0 0 1 1.5 12h4.072c.663-.731 1.041-1.424 1.24-2H3.566a.5.5 0 0 1-.496-.562l.875-7zM5.265 8l.5-4h8.47l.5 4h-9.47zm5.848 2a6.6 6.6 0 0 0 .824 2H8.063a6.601 6.601 0 0 0 .824-2h2.226zM10 14a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eOOXK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPopularMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPopularMajor = function SvgPopularMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M12.984 18a.999.999 0 0 1-.94-.658L8.967 8.888l-2.05 5.465a1.001 1.001 0 0 1-1.794.163L2.935 10.87l-1.124 1.685a1.002 1.002 0 0 1-1.665-1.11l2.001-3a.966.966 0 0 1 .856-.444.998.998 0 0 1 .834.485l1.936 3.223L8.044 5.65A1 1 0 0 1 8.982 5h.005a1.001 1.001 0 0 1 .935.658l2.948 8.1 3.154-11.033c.12-.42.502-.714.94-.724.43-.026.834.268.97.683l2.002 6a1 1 0 1 1-1.897.631l-.98-2.932-3.112 10.888a1 1 0 0 1-.928.726h-.035"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fykXj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPriceLookupMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPriceLookupMinor = function SvgPriceLookupMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M3 2a1 1 0 0 0 0 2h8a1 1 0 1 0 0-2H3zm0 4a1 1 0 0 0 0 2h4a4.977 4.977 0 0 0-.901 2.005A1.013 1.013 0 0 0 6 10H3a1 1 0 1 0 0 2h3c.033 0 .066-.002.099-.005a5.002 5.002 0 0 0 7.658 3.177l2.536 2.535a1 1 0 0 0 1.414-1.414l-2.535-2.536A5 5 0 0 0 11 6H3zm8 2a3 3 0 1 0 0 6 3 3 0 0 0 0-6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"elD5B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPrintMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPrintMajor = function SvgPrintMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M4 2.5A1.5 1.5 0 0 1 5.5 1h9A1.5 1.5 0 0 1 16 2.5V5h1.5A1.5 1.5 0 0 1 19 6.5v6a1.5 1.5 0 0 1-1.5 1.5H16v4a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-4H2.5A1.5 1.5 0 0 1 1 12.5v-6A1.5 1.5 0 0 1 2.5 5H4V2.5zM14 17v-5H6v5h8zm3-8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3-6H6v2h8V3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"l6kDq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPrintMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPrintMinor = function SvgPrintMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M14 11h2V9h-2v2zM7 7h6V4H7v3zm0 9h6v-2H7v2zm8-9V3.5A1.5 1.5 0 0 0 13.5 2h-7A1.5 1.5 0 0 0 5 3.5V7H3.5A1.5 1.5 0 0 0 2 8.5v6A1.5 1.5 0 0 0 3.5 16H5v.5A1.5 1.5 0 0 0 6.5 18h7a1.5 1.5 0 0 0 1.5-1.5V16h1.5a1.5 1.5 0 0 0 1.5-1.5v-6A1.5 1.5 0 0 0 16.5 7H15z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jMyJL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgProductReturnsMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgProductReturnsMinor = function SvgProductReturnsMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 12a6 6 0 0 0 6 6h9a1 1 0 0 0 0-2H8a4 4 0 1 1 0-8h6.526l-2.233 2.293a1 1 0 0 0 1.414 1.414l4-4a1 1 0 0 0 0-1.414l-4-4a1 1 0 1 0-1.414 1.414L14.526 6H8a6 6 0 0 0-6 6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kWSp9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgProductsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgProductsMajor = function SvgProductsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10.293 1.293A1 1 0 0 1 11 1h7a1 1 0 0 1 1 1v7a1 1 0 0 1-.293.707l-9 9a1 1 0 0 1-1.414 0l-7-7a1 1 0 0 1 0-1.414l9-9zM15.5 6a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ekpKK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgProfileMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgProfileMajor = function SvgProfileMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M10 0c5.514 0 10 4.486 10 10s-4.486 10-10 10S0 15.514 0 10 4.486 0 10 0zm6.24 15a7.99 7.99 0 0 1-12.48 0 7.99 7.99 0 0 1 12.48 0zM10 10a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hbVvf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgProfileMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgProfileMinor = function SvgProfileMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 15c-1.631 0-3.064-.792-3.978-2 .914-1.208 2.347-2 3.978-2 1.631 0 3.064.792 3.978 2-.914 1.208-2.347 2-3.978 2zm0-10c1.104 0 2 .897 2 2s-.896 2-2 2-2-.897-2-2 .896-2 2-2zm0-3c-4.411 0-8 3.589-8 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9fZ2W":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgPromoteMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgPromoteMinor = function SvgPromoteMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4.5 3A1.5 1.5 0 0 0 3 4.5v11A1.5 1.5 0 0 0 4.5 17h11a1.5 1.5 0 0 0 1.5-1.5V12h-2v3H5V5h3V3H4.5zM17 4a1 1 0 0 0-1-1h-5a1 1 0 1 0 0 2h2.586l-5.293 5.293a.999.999 0 1 0 1.414 1.414L15 6.414V9a1 1 0 1 0 2 0V4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4sMnv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgQuestionMarkInverseMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgQuestionMarkInverseMajor = function SvgQuestionMarkInverseMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 2a8 8 0 1 0 0 16 8 8 0 0 0 0-16zm-7.071.929A10 10 0 1 1 17.07 17.07 10 10 0 0 1 2.93 2.93z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11.126 13.002H8.99V11.86c.01-1.966.492-2.254 1.374-2.782.093-.056.19-.114.293-.178.73-.459 1.292-1.038 1.292-1.883 0-.948-.743-1.564-1.666-1.564-.852 0-1.657.398-1.712 1.533H6.305c.06-2.294 1.877-3.487 3.99-3.487 2.306 0 3.894 1.447 3.894 3.488 0 1.382-.695 2.288-1.806 2.952l-.237.144c-.79.475-1.009.607-1.02 1.777v1.142zm.17 2.012a1.344 1.344 0 0 1-1.327 1.328 1.32 1.32 0 0 1-1.227-1.834 1.318 1.318 0 0 1 1.227-.81c.712 0 1.322.592 1.328 1.316h-.001z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lxHl3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgQuestionMarkInverseMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgQuestionMarkInverseMinor = function SvgQuestionMarkInverseMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 12H9v-.148c0-.876.306-1.499 1-1.852.385-.195 1-.568 1-1a1.001 1.001 0 0 0-2 0H7c0-1.654 1.346-3 3-3s3 1 3 3-2 2.165-2 3zm-2 3h2v-2H9v2z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 4a6 6 0 1 0 0 12 6 6 0 0 0 0-12zm-8 6a8 8 0 1 1 16 0 8 8 0 0 1-16 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ieqpM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgQuestionMarkMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgQuestionMarkMajor = function SvgQuestionMarkMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 10C0 4.478 4.478 0 10 0c5.523 0 10 4.478 10 10 0 5.523-4.477 10-10 10-5.522 0-10-4.477-10-10zm11.125 2.002H8.989v-.141c.01-1.966.492-2.254 1.374-2.782.093-.056.19-.114.293-.178.73-.459 1.292-1.038 1.292-1.883 0-.948-.743-1.564-1.666-1.564-.851 0-1.657.398-1.712 1.533H6.304C6.364 4.693 8.18 3.5 10.294 3.5c2.306 0 3.894 1.447 3.894 3.488 0 1.382-.695 2.288-1.805 2.952l-.238.144c-.79.475-1.009.607-1.02 1.777V12zm.17 3.012a1.344 1.344 0 0 1-1.327 1.328 1.32 1.32 0 0 1-1.328-1.328 1.318 1.318 0 0 1 1.328-1.316c.712 0 1.322.592 1.328 1.316z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lI8mb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgQuestionMarkMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgQuestionMarkMinor = function SvgQuestionMarkMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M11 11H9v-.148c0-.876.306-1.499 1-1.852.385-.195 1-.568 1-1a1.001 1.001 0 0 0-2 0H7c0-1.654 1.346-3 3-3s3 1 3 3-2 2.165-2 3zm-2 4h2v-2H9v2zm1-13a8 8 0 1 0 0 16 8 8 0 0 0 0-16z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"l0r0u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgQuickSaleMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgQuickSaleMajor = function SvgQuickSaleMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M5 0a1 1 0 0 0 0 2h1v1a1 1 0 0 0 .917.997l10.943.911L17.133 10H7a1 1 0 0 0-1 1v3.17A3.001 3.001 0 1 0 9.83 16h3.34A3 3 0 1 0 16 14H8v-2h10a1 1 0 0 0 .99-.859l1-7a1 1 0 0 0-.907-1.138L8 2.08V1a1 1 0 0 0-1-1H5zm11 16a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-9 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M0 3a1 1 0 0 1 1-1h1a1 1 0 0 1 0 2H1a1 1 0 0 1-1-1zm1 3a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2H1zm-1 5a1 1 0 0 1 1-1h2a1 1 0 1 1 0 2H1a1 1 0 0 1-1-1zm1 3a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2H1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fWcAX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgReadTimeMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgReadTimeMinor = function SvgReadTimeMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M7 4h9v-.5A1.5 1.5 0 0 0 14.5 2H7a3 3 0 0 0-3 3v11.5A1.5 1.5 0 0 0 5.5 18h9a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 6H14v5l-2-2-2 2V6H6V5a1 1 0 0 1 1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"359yb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgReceiptMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgReceiptMajor = function SvgReceiptMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M15.5 0h-11C3.672 0 3 .677 3 1.513V19.72a.2.2 0 0 0 .334.15l1.664-1.515a.497.497 0 0 1 .67 0l1.664 1.514c.19.173.48.173.67 0l1.663-1.514a.497.497 0 0 1 .67 0l1.663 1.514c.19.173.48.173.67 0l1.664-1.514a.497.497 0 0 1 .67 0l1.664 1.515a.2.2 0 0 0 .334-.15V1.513C17 .677 16.328 0 15.5 0zM15 5V4H5v2h10V5zm0 3v2H5V8h10zm-4 5v-1H5v2h6v-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gDzIu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgRecentSearchesMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgRecentSearchesMajor = function SvgRecentSearchesMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M8 2C4.691 2 2 4.691 2 8s2.691 6 6 6 6-2.691 6-6-2.691-6-6-6zm6.312 10.897 5.395 5.396a1 1 0 1 1-1.414 1.414l-5.396-5.395A7.954 7.954 0 0 1 8 16c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8a7.946 7.946 0 0 1-1.688 4.897zM9 5a1 1 0 1 0-2 0v3a1 1 0 0 0 .293.707l2 2a1 1 0 0 0 1.414-1.414L9 7.586V5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jRtsw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgRedoMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgRedoMajor = function SvgRedoMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M16.512 5C14.363 3.066 12.522 2 10 2a8 8 0 0 0-8 8 8 8 0 0 0 8 8 1 1 0 1 1 0 2C4.477 20 0 15.523 0 10S4.477 0 10 0c3.297 0 5.644 1.496 8 3.647V1a1 1 0 1 1 2 0v5a.998.998 0 0 1-.29.705l-.005.004A.997.997 0 0 1 19 7h-5a1 1 0 1 1 0-2h2.512z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9WJq1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgReferralCodeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgReferralCodeMajor = function SvgReferralCodeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4 3H3v1H1V2.5A1.5 1.5 0 0 1 2.5 1H4v2zM16.707 6.255a1 1 0 1 0-1.414 1.414l1.293 1.292H12a1 1 0 1 0 0 2h4.586l-1.293 1.293a1 1 0 1 0 1.414 1.414l3-3a1.001 1.001 0 0 0 0-1.415l-3-3v.002zM7 6h2v8H7V6zM19 18a1 1 0 0 1-1 1h-2v-2h1v-1h2v2zM2 19a1 1 0 0 1-1-1v-2h2v1h1v2H2zM17 3v1h2V2.5A1.5 1.5 0 0 0 17.5 1H16v2h1zM5 6H1v8h4V6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jhICs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgReferralMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgReferralMajor = function SvgReferralMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 10C0 4.486 4.486 0 10 0s10 4.486 10 10-4.486 10-10 10a9.944 9.944 0 0 1-4.924-1.305l-3.04 1.204c-1.209.459-2.393-.725-1.935-1.934l1.203-3.041A9.962 9.962 0 0 1 0 10zm15.7-.645a1 1 0 0 1 0 1.4l-3 3a1 1 0 0 1-1.4 0 1 1 0 0 1 0-1.4l1.29-1.3H6a1 1 0 0 1 0-2h6.59l-1.3-1.3a1 1 0 1 1 1.42-1.4l3 3h-.01z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lkKB5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgRefreshMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgRefreshMajor = function SvgRefreshMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19.707 3.293a1 1 0 0 1 0 1.414l-3 3a.997.997 0 0 1-1.631-.324 1 1 0 0 1 .217-1.09L16.586 5H7C4.794 5 3 6.794 3 9a1 1 0 0 1-2 0c0-3.309 2.691-6 6-6h9.586l-1.293-1.293A1 1 0 1 1 16.707.293l3 3zM17 10a1 1 0 0 1 1 1c0 3.31-2.69 6-6 6H3.414l1.293 1.293a1 1 0 1 1-1.414 1.414l-3-3a1 1 0 0 1 0-1.414l3-3a1 1 0 1 1 1.414 1.414L3.414 15H12c2.206 0 4-1.794 4-4a1 1 0 0 1 1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kD0QV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgRefreshMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgRefreshMinor = function SvgRefreshMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17 11a1 1 0 0 1 1 1c0 1.654-1.346 3-3 3H5.414l1.293 1.293a.999.999 0 1 1-1.414 1.414l-3-3a.999.999 0 0 1 0-1.414l3-3a.999.999 0 1 1 1.414 1.414L5.414 13H15c.552 0 1-.449 1-1a1 1 0 0 1 1-1zM3 9a1 1 0 0 1-1-1c0-1.654 1.346-3 3-3h9.586l-1.293-1.293a.999.999 0 1 1 1.414-1.414l3 3a.999.999 0 0 1 0 1.414l-3 3a.997.997 0 0 1-1.414 0 .999.999 0 0 1 0-1.414L14.586 7H5c-.552 0-1 .449-1 1a1 1 0 0 1-1 1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gmSlX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgRefundMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgRefundMajor = function SvgRefundMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4.5 0h11c.828 0 1.5.677 1.5 1.512v18.21a.2.2 0 0 1-.334.149l-1.664-1.515a.497.497 0 0 0-.67 0l-1.664 1.514a.497.497 0 0 1-.67 0l-1.663-1.514a.497.497 0 0 0-.67 0L8.002 19.87a.497.497 0 0 1-.67 0l-1.664-1.514a.497.497 0 0 0-.67 0l-1.664 1.515a.2.2 0 0 1-.334-.15V1.512C3 .677 3.672 0 4.5 0zM10 7.596H8.415l1.293-1.293a1 1 0 0 0-1.414-1.414l-3 3a1 1 0 0 0 0 1.414l3 3a1 1 0 1 0 1.414-1.414L8.414 9.596H10c2.069 0 2.999 1.116 2.999 3a1 1 0 1 0 2 0c0-2.916-1.736-5-5-5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hpGLZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgRefundMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgRefundMinor = function SvgRefundMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15 12h-2v-1c0-.551-.449-1-1-1H9.414l.586.586A1 1 0 1 1 8.586 12L6.293 9.707a1 1 0 0 1 0-1.414L8.586 6A1 1 0 1 1 10 7.414L9.414 8H12c1.654 0 3 1.346 3 3v1zm2-8.5A1.5 1.5 0 0 0 15.5 2h-11A1.5 1.5 0 0 0 3 3.5V17a1 1 0 0 0 1.3.954c.18-.057.317-.195.439-.338l1.121-1.321 1.349 1.399a1.002 1.002 0 0 0 1.415.026l1.364-1.318 1.305 1.305a.997.997 0 0 0 1.414 0l1.42-1.42 1.136 1.332c.12.141.257.277.434.334A1 1 0 0 0 17 17V3.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"d1BQd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgRemoveProductMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgRemoveProductMajor = function SvgRemoveProductMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M18 1h-7a1 1 0 0 0-.71.29l-9 9a1 1 0 0 0 0 1.42l7 7a1 1 0 0 0 1.42 0l.29-.29V16a6 6 0 0 1 6-6h2.42l.29-.29A1 1 0 0 0 19 9V2a1 1 0 0 0-1-1zm-2.5 5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19.707 14.293A1 1 0 0 0 19 14h-6a1 1 0 0 0 0 2h6a1 1 0 0 0 .707-1.707z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3cHT0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgRepeatOrderMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgRepeatOrderMajor = function SvgRepeatOrderMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M6 8a.992.992 0 0 1 .294-.707l2.999-3a1 1 0 1 1 1.414 1.414L9.414 7H15.5a2.5 2.5 0 0 0 0-5 1 1 0 1 1 0-2C17.981 0 20 2.018 20 4.5 20 6.981 17.981 9 15.5 9H9.414l1.293 1.293A.999.999 0 0 1 10 12.002a.997.997 0 0 1-.706-.294l-3-3a.99.99 0 0 1-.217-.326A.992.992 0 0 1 6 8zM3 3v11h3.5c.775 0 1.388.662 1.926 1.244l.11.12a2 2 0 0 0 2.927-.001l.11-.119h.001C12.112 14.662 12.725 14 13.5 14H17v-2a1 1 0 1 1 2 0v5.5a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 17.5v-15A1.5 1.5 0 0 1 2.5 1H7a1 1 0 0 1 0 2H3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4DRc1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgReplaceMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgReplaceMajor = function SvgReplaceMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M1.5 0A1.5 1.5 0 0 0 0 1.5v5A1.5 1.5 0 0 0 1.5 8h5A1.5 1.5 0 0 0 8 6.5v-5A1.5 1.5 0 0 0 6.5 0h-5zm11.793 7.707a1 1 0 1 0 1.414-1.414L13.414 5H17.5a.5.5 0 0 1 .5.5V9a1 1 0 1 0 2 0V5.5A2.5 2.5 0 0 0 17.5 3h-4.086l1.293-1.293A1 1 0 0 0 13.293.293l-3 3a1 1 0 0 0 0 1.414l3 3zm-6.586 4.586a1 1 0 0 0-1.414 1.414L6.586 15H2.5a.5.5 0 0 1-.5-.5V11a1 1 0 1 0-2 0v3.5A2.5 2.5 0 0 0 2.5 17h4.086l-1.293 1.293a1 1 0 1 0 1.414 1.414l3-3a1 1 0 0 0 0-1.414l-3-3zM20 18.5a1.5 1.5 0 0 1-1.5 1.5h-5a1.5 1.5 0 0 1-1.5-1.5v-5a1.5 1.5 0 0 1 1.5-1.5h5a1.5 1.5 0 0 1 1.5 1.5v5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jYKJk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgReplayMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgReplayMinor = function SvgReplayMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M13.635 7.666c0 .272.106.528.298.72a1.044 1.044 0 0 0 1.441 0L17.7 6.059a1.013 1.013 0 0 0 0-1.442L15.374 2.29a1.042 1.042 0 0 0-1.44 0 1.008 1.008 0 0 0-.299.72c0 .272.106.528.3.72l.588.59H8.836C5.066 4.318 2 7.388 2 11.158 2 14.933 5.066 18 8.836 18c3.346 0 6.252-2.495 6.757-5.8.002-.009.016-.115.016-.194l.002-.352a1.02 1.02 0 0 0-1.018-1.019 1.02 1.02 0 0 0-1.019 1.019v.19c0 .318-.117.658-.139.728-.628 1.97-2.51 3.39-4.599 3.39a4.806 4.806 0 0 1-4.8-4.802 4.807 4.807 0 0 1 4.8-4.803h5.687l-.589.589a1.012 1.012 0 0 0-.299.72z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5Kp9K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgReportMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgReportMinor = function SvgReportMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 3A1.5 1.5 0 0 0 3 4.5v11A1.5 1.5 0 0 0 4.5 17h11a1.5 1.5 0 0 0 1.5-1.5v-11A1.5 1.5 0 0 0 15.5 3h-11zM15 15h-2V9h2v6zm-6 0h2V6H9v9zm-2 0H5v-3h2v3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4PM2j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgReportsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2, _path3;
var SvgReportsMajor = function SvgReportsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M18 5a1 1 0 0 0-.293-.707l-4-4A1.002 1.002 0 0 0 13 0H3.5A1.5 1.5 0 0 0 2 1.5V6a1 1 0 1 0 2 0V2h8.586L16 5.414V18H4v-1a1 1 0 1 0-2 0v1.5A1.5 1.5 0 0 0 3.5 20h13a1.5 1.5 0 0 0 1.5-1.5V5z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M9 6a1 1 0 0 0 0 2h3v3a1 1 0 1 0 2 0V7a1 1 0 0 0-1-1H9z"
    })), _path3 || (_path3 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m7 13-.768.64a1 1 0 0 0 1.475.067L7 13zm-2.5-3 .768-.64a1 1 0 0 0-1.52-.018L4.5 10zM.247 13.341a1 1 0 0 0 1.506 1.318L.247 13.34zm11.046-6.048-5 5 1.414 1.414 5-5-1.414-1.414zM7.768 12.36l-2.5-3-1.536 1.28 2.5 3 1.536-1.28zm-4.02-3.018-3.5 4 1.505 1.316 3.5-4-1.506-1.316z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dO187":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgResetMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgResetMinor = function SvgResetMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17 9a1 1 0 0 1-1-1c0-.551-.448-1-1-1H5.414l1.293 1.293a.999.999 0 1 1-1.414 1.414l-3-3a.999.999 0 0 1 0-1.414l3-3a.997.997 0 0 1 1.414 0 .999.999 0 0 1 0 1.414L5.414 5H15c1.654 0 3 1.346 3 3a1 1 0 0 1-1 1zM3 11a1 1 0 0 1 1 1c0 .551.448 1 1 1h9.586l-1.293-1.293a.999.999 0 1 1 1.414-1.414l3 3a.999.999 0 0 1 0 1.414l-3 3a.999.999 0 1 1-1.414-1.414L14.586 15H5c-1.654 0-3-1.346-3-3a1 1 0 0 1 1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cESc7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgResourcesMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgResourcesMajor = function SvgResourcesMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m19.986 10.835-.987-5.926A3.004 3.004 0 0 0 16 2a1 1 0 1 0 0 2c.552 0 1 .449 1 1 0 .055.005.11.014.165L17.82 10H12a1 1 0 0 0-1 1v.19a2.92 2.92 0 0 0-1-.19c-.35 0-.688.076-1 .19V11a1 1 0 0 0-1-1H2.18l.806-4.835A.92.92 0 0 0 3 5c0-.551.449-1 1-1a1 1 0 0 0 0-2 3.004 3.004 0 0 0-2.999 2.909l-.988 5.926A2.29 2.29 0 0 0 0 11v2.5C0 15.981 2.019 18 4.5 18S9 15.981 9 13.5v-.039c.311-.234.714-.461 1-.461.286 0 .689.227 1 .461v.039c0 2.481 2.019 4.5 4.5 4.5s4.5-2.019 4.5-4.5V11c0-.029-.009-.136-.014-.165zM7 13.5C7 14.879 5.878 16 4.5 16A2.503 2.503 0 0 1 2 13.5V12h5v1.5zm11 0c0 1.379-1.121 2.5-2.5 2.5a2.502 2.502 0 0 1-2.5-2.5V12h5v1.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"h2Pbu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgReturnMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgReturnMinor = function SvgReturnMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M13.5 13H5.414l1.293 1.293a.999.999 0 1 1-1.414 1.414l-3-3a.999.999 0 0 1 0-1.414l3-3a.997.997 0 0 1 1.414 0 .999.999 0 0 1 0 1.414L5.414 11H13.5c1.379 0 2.5-1.121 2.5-2.5S14.879 6 13.5 6H3a1 1 0 1 1 0-2h10.5C15.981 4 18 6.019 18 8.5S15.981 13 13.5 13z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bimra":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgRiskMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgRiskMajor = function SvgRiskMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "m1.16 16.829 7.498-15c.553-1.106 2.13-1.106 2.683 0l7.498 15A1.5 1.5 0 0 1 17.498 19H2.502a1.5 1.5 0 0 1-1.342-2.171zM10 7a1 1 0 0 1 1 1v3a1 1 0 0 1-2 0V8a1 1 0 0 1 1-1zm1 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2n2oq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgRiskMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgRiskMinor = function SvgRiskMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M9 11a1 1 0 1 0 2 0V9a1 1 0 1 0-2 0v2zm0 4a1 1 0 1 0 2 0 1 1 0 0 0-2 0zm8.895 1.549-7-14.04c-.339-.679-1.45-.679-1.79 0l-7 14.04A1.004 1.004 0 0 0 3 18h14a1 1 0 0 0 .895-1.451z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iRny5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSandboxMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgSandboxMajor = function SvgSandboxMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19.976 13.879a.356.356 0 0 1-.001-.051c0-.023 0-.046-.005-.07l-1.645-6.58a1 1 0 1 0-1.94.485L17.72 13H2.28l1.501-6h4.772a1 1 0 1 0 0-2H3a1 1 0 0 0-.97.757l-2 8c-.006.023-.005.046-.005.07 0 .016.001.033-.001.05-.002.02-.007.037-.012.055A.25.25 0 0 0 0 14v4.509A1.49 1.49 0 0 0 1.491 20h17.018A1.49 1.49 0 0 0 20 18.509V14c0-.024-.006-.046-.012-.068l-.001-.004c-.005-.016-.01-.032-.011-.049z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m14.239 5 .556-2.294.961.242a1.001 1.001 0 0 0 .488-1.94L12.365.03a1 1 0 0 0-.488 1.94l.978.247-1.725 7.127a3.042 3.042 0 0 1-.683-.24c-2.403-1.199-4.759-.065-4.891-.001l-.003.001a1.001 1.001 0 0 0 .894 1.79l.003-.001c.081-.037 1.628-.735 3.103.001a5.251 5.251 0 0 0 2.366.549c1.398 0 2.45-.51 2.527-.547l.001-.001a1.002 1.002 0 0 0-.894-1.79c-.11.049-.223.092-.338.128L13.755 7l.484-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eAd8i":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSaveMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSaveMinor = function SvgSaveMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M5 5v10h10V7h-2V5h2.5A1.5 1.5 0 0 1 17 6.5v9a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 3 15.5v-11A1.5 1.5 0 0 1 4.5 3h3.293a1.5 1.5 0 0 1 1.06.44l1.708 1.706A1.5 1.5 0 0 1 11 6.207v3.379l.793-.793a1 1 0 1 1 1.414 1.414l-2.5 2.5a1 1 0 0 1-1.414 0l-2.5-2.5a1 1 0 0 1 1.414-1.414L9 9.586V6.414L7.586 5H5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"djB5J":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSearchMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSearchMajor = function SvgSearchMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 8c0-3.309 2.691-6 6-6s6 2.691 6 6-2.691 6-6 6-6-2.691-6-6zm17.707 10.293-5.395-5.396A7.946 7.946 0 0 0 16 8c0-4.411-3.589-8-8-8S0 3.589 0 8s3.589 8 8 8a7.954 7.954 0 0 0 4.897-1.688l5.396 5.395A.998.998 0 0 0 20 19a1 1 0 0 0-.293-.707z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"crH5N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSearchMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSearchMinor = function SvgSearchMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M8 12a4 4 0 1 1 0-8 4 4 0 0 1 0 8zm9.707 4.293-4.82-4.82A5.968 5.968 0 0 0 14 8 6 6 0 0 0 2 8a6 6 0 0 0 6 6 5.968 5.968 0 0 0 3.473-1.113l4.82 4.82a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ays3t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSectionMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSectionMajor = function SvgSectionMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 1a1 1 0 0 0-1 1v2h2V3h1V1H2zm16 0a1 1 0 0 1 1 1v2h-2V3h-1V1h2zM1 6v8h18V6H1zm1 13a1 1 0 0 1-1-1v-2h2v1h1v2H2zm17-1a1 1 0 0 1-1 1h-2v-2h1v-1h2v2zM6 17h3v2H6v-2zm8 0h-3v2h3v-2zm0-16v2h-3V1h3zM9 3V1H6v2h3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8EX3W":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSecureMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSecureMajor = function SvgSecureMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M9.128.233c-2.37 1.383-5.37 2.33-7.635 2.646-.821.115-1.495.79-1.493 1.62l.001.497c-.03 6.043.477 11.332 9.462 14.903a1.45 1.45 0 0 0 1.062 0c8.993-3.571 9.503-8.86 9.473-14.903v-.501c-.001-.828-.674-1.51-1.492-1.638-2.148-.337-5.281-1.274-7.65-2.628a1.733 1.733 0 0 0-1.728.004zm4.577 8.478a1 1 0 0 0-1.414-1.415L8.998 10.59 7.705 9.297A1 1 0 1 0 6.29 10.71l2 2.001a1 1 0 0 0 1.414 0l4-4.001z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8l8H3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSelectMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSelectMinor = function SvgSelectMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M7.676 9h4.648c.563 0 .879-.603.53-1.014L10.531 5.24a.708.708 0 0 0-1.062 0L7.145 7.986C6.798 8.397 7.113 9 7.676 9zm4.648 2H7.676c-.563 0-.878.603-.53 1.014l2.323 2.746c.27.32.792.32 1.062 0l2.323-2.746c.349-.411.033-1.014-.53-1.014z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1wcI8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSendMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSendMajor = function SvgSendMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3.415.189a1 1 0 0 1 1.1-.046l15 9a1 1 0 0 1 0 1.714l-15 9a1 1 0 0 1-1.491-1.074L4.754 11H10a1 1 0 1 0 0-2H4.753l-1.73-7.783A1 1 0 0 1 3.416.189z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dUfSZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSettingsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSettingsMajor = function SvgSettingsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M9.027 0a1 1 0 0 0-.99.859l-.37 2.598A6.993 6.993 0 0 0 5.742 4.57l-2.437-.98a1 1 0 0 0-1.239.428L.934 5.981a1 1 0 0 0 .248 1.287l2.066 1.621a7.06 7.06 0 0 0 0 2.222l-2.066 1.621a1 1 0 0 0-.248 1.287l1.132 1.962a1 1 0 0 0 1.239.428l2.438-.979a6.995 6.995 0 0 0 1.923 1.113l.372 2.598a1 1 0 0 0 .99.859h2.265a1 1 0 0 0 .99-.859l.371-2.598a6.995 6.995 0 0 0 1.924-1.112l2.438.978a1 1 0 0 0 1.238-.428l1.133-1.962a1 1 0 0 0-.249-1.287l-2.065-1.621a7.063 7.063 0 0 0 0-2.222l2.065-1.621a1 1 0 0 0 .249-1.287l-1.133-1.962a1 1 0 0 0-1.239-.428l-2.437.979a6.994 6.994 0 0 0-1.924-1.113L12.283.86a1 1 0 0 0-.99-.859H9.027zm1.133 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2qzzx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSettingsMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSettingsMinor = function SvgSettingsMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 13a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm7.476-1.246c-1.394-.754-1.394-2.754 0-3.508a1 1 0 0 0 .376-1.404l-1.067-1.733a1 1 0 0 0-1.327-.355l-.447.243c-1.329.719-2.945-.244-2.945-1.755V3a1 1 0 0 0-1-1H8.934a1 1 0 0 0-1 1v.242c0 1.511-1.616 2.474-2.945 1.755l-.447-.243a1 1 0 0 0-1.327.355L2.148 6.842a1 1 0 0 0 .376 1.404c1.394.754 1.394 2.754 0 3.508a1 1 0 0 0-.376 1.404l1.067 1.733a1 1 0 0 0 1.327.355l.447-.243c1.329-.719 2.945.244 2.945 1.755V17a1 1 0 0 0 1 1h2.132a1 1 0 0 0 1-1v-.242c0-1.511 1.616-2.474 2.945-1.755l.447.243a1 1 0 0 0 1.327-.355l1.067-1.733a1 1 0 0 0-.376-1.404z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kCYss":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgShareIosMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgShareIosMinor = function SvgShareIosMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M6.293 6.703a.997.997 0 0 0 1.414 0L9 5.409v6.589a1 1 0 1 0 2 0V5.409l1.293 1.294a1 1 0 1 0 1.414-1.415l-3-3.001a.994.994 0 0 0-.298-.198c-.027-.013-.055-.021-.082-.03l-.012-.003a.944.944 0 0 0-.257-.05l-.027-.002a.937.937 0 0 0-.385.06c-.004 0-.008 0-.012.002a.028.028 0 0 0-.013.003h-.004a1.002 1.002 0 0 0-.294.197c-.004.004-.01.007-.015.01l-.015.01-3 3.002a1 1 0 0 0 0 1.415zM3.5 9A1.5 1.5 0 0 0 2 10.5v6A1.5 1.5 0 0 0 3.5 18h13a1.5 1.5 0 0 0 1.5-1.5v-6A1.5 1.5 0 0 0 16.5 9H13v2h3v5H4v-5h3V9H3.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gyYRi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgShareMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgShareMinor = function SvgShareMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15 12c-.807 0-1.537.324-2.077.844l-4.96-2.481c.015-.12.037-.238.037-.363s-.022-.243-.037-.363l4.96-2.481c.54.52 1.27.844 2.077.844 1.654 0 3-1.346 3-3s-1.346-3-3-3-3 1.346-3 3c0 .125.022.243.037.363l-4.96 2.481A2.986 2.986 0 0 0 5 7c-1.654 0-3 1.346-3 3s1.346 3 3 3c.807 0 1.537-.324 2.077-.844l4.96 2.481c-.015.12-.037.238-.037.363 0 1.654 1.346 3 3 3s3-1.346 3-3-1.346-3-3-3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bdHds":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgShipmentMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgShipmentMajor = function SvgShipmentMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M1.5 2A1.5 1.5 0 0 0 0 3.5v11A1.5 1.5 0 0 0 1.5 16H2a3 3 0 1 0 6 0h4a3 3 0 1 0 6 0h.5a1.5 1.5 0 0 0 1.5-1.5v-3.361a1.5 1.5 0 0 0-.214-.772l-2.783-4.639A1.5 1.5 0 0 0 15.717 5H13V3.5A1.5 1.5 0 0 0 11.5 2h-10zM15 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zM4 16a1 1 0 1 0 2 0 1 1 0 0 0-2 0zm13.234-6H13V7h2.434l1.8 3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fsNH3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgShopcodesMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgShopcodesMajor = function SvgShopcodesMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2.5 1A1.5 1.5 0 0 0 1 2.5V7h6V1H2.5zM7 13H1v4.5A1.5 1.5 0 0 0 2.5 19H7v-6zm6-12h4.5A1.5 1.5 0 0 1 19 2.5V7h-6V1zM1 9v2h2V9H1zm8-4h2v2H9V5zm2-4H9v2h2V1zm0 16h1v2H9v-3h2v1zm8 0h-2v2h.5a1.5 1.5 0 0 0 1.5-1.5V17zm-2-4h2v3h-2v-3zm-1 0h-2v6h2v-6zm-3-4h6v2h-6V9zm-2 0H5v2h4v3h2V9zm2 4h1v3h-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lwAdZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSidebarLeftMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSidebarLeftMajor = function SvgSidebarLeftMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 3h3V1h-3v2zm7-2a1 1 0 0 1 1 1v2h-2V3h-1V1h2zm1 17a1 1 0 0 1-1 1h-2v-2h1v-1h2v2zM2.5 19H9V1H2.5A1.5 1.5 0 0 0 1 2.5v15A1.5 1.5 0 0 0 2.5 19zM14 19h-3v-2h3v2zm5-5h-2v-3h2v3zm-2-5h2V6h-2v3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8Kw0b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSidebarRightMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSidebarRightMajor = function SvgSidebarRightMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.5 1H11v18h6.5a1.5 1.5 0 0 0 1.5-1.5v-15A1.5 1.5 0 0 0 17.5 1zM1 2a1 1 0 0 1 1-1h2v2H3v1H1V2zm1 17a1 1 0 0 1-1-1v-2h2v1h1v2H2zM6 1h3v2H6V1zm3 16H6v2h3v-2zM3 6v3H1V6h2zm0 8v-3H1v3h2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"c5kTv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSlideshowMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgSlideshowMajor = function SvgSlideshowMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M1 2.5A1.5 1.5 0 0 1 2.5 1h15A1.5 1.5 0 0 1 19 2.5v12a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 14.5v-12zM9 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm6.57 9H4.427c-.351 0-.548-.368-.343-.632l3.046-3.24a.448.448 0 0 1 .617-.009L9.143 11.6l2.623-3.825a.446.446 0 0 1 .72.016l3.462 5.609c.154.272-.052.6-.377.6z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M6 20a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm5-1a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hLG59":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSmileyHappyMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSmileyHappyMajor = function SvgSmileyHappyMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M10 20c5.523 0 10-4.477 10-10S15.523 0 10 0 0 4.477 0 10s4.477 10 10 10zM7.707 8.707a1 1 0 1 1-1.414-1.414 1 1 0 0 1 1.414 1.414zm4.586-1.414a1 1 0 1 1 1.414 1.414 1 1 0 0 1-1.414-1.414zm.011 4.988c-.03.03-.786.72-2.304.72-1.497 0-2.252-.67-2.303-.718a1 1 0 0 0-1.404 1.424C6.425 13.84 7.653 15 10 15c2.346 0 3.575-1.16 3.707-1.293a.993.993 0 0 0 .005-1.397 1.006 1.006 0 0 0-1.408-.029z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2l88X":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSmileyJoyMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSmileyJoyMajor = function SvgSmileyJoyMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 0C4.486 0 0 4.486 0 10s4.486 10 10 10 10-4.486 10-10S15.514 0 10 0zM7.707 7.707a1 1 0 1 1-1.414-1.414 1 1 0 0 1 1.414 1.414zm6 0a1 1 0 1 1-1.414-1.414 1 1 0 0 1 1.414 1.414zm2.082 3.87A5.997 5.997 0 0 1 10 16a6 6 0 0 1-5.789-4.422c-.081-.299.155-.578.465-.578h10.649c.309 0 .545.279.464.578z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ivTGZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSmileyNeutralMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSmileyNeutralMajor = function SvgSmileyNeutralMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 10C0 4.486 4.486 0 10 0s10 4.486 10 10-4.486 10-10 10S0 15.514 0 10zm7.707-1.293a1 1 0 1 1-1.414-1.414 1 1 0 0 1 1.414 1.414zm4.586-1.414a1 1 0 1 1 1.414 1.414 1 1 0 0 1-1.414-1.414zm1.414 5A1 1 0 0 0 13 12H7a1 1 0 0 0 0 2h6a1 1 0 0 0 .707-1.707z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8VIYH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSmileySadMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSmileySadMajor = function SvgSmileySadMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 10C0 4.486 4.486 0 10 0s10 4.486 10 10-4.486 10-10 10S0 15.514 0 10zm7.707-.293a1 1 0 1 1-1.414-1.414 1 1 0 0 1 1.414 1.414zm4.586-1.414a1 1 0 1 1 1.414 1.414 1 1 0 0 1-1.414-1.414zM10 12c-.247 0-2.451.036-3.707 1.293a1 1 0 1 0 1.414 1.414c.57-.57 1.881-.705 2.29-.707.415.002 1.726.137 2.296.707A.998.998 0 0 0 14 14a1 1 0 0 0-.293-.707C12.451 12.036 10.247 12 10 12z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2Z1vG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSocialAdMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSocialAdMajor = function SvgSocialAdMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15.5 20a1.5 1.5 0 0 0 1.5-1.5V11a1 1 0 0 0-2 0v7H2V4h7a1 1 0 0 0 0-2H1.5A1.5 1.5 0 0 0 0 3.5v15A1.5 1.5 0 0 0 1.5 20h14zm-.056-15.168a.999.999 0 0 0 1.263-.125l2-2a1 1 0 0 0-1.414-1.414l-2 2a1 1 0 0 0 .15 1.54zM17 8h2a1 1 0 1 0 0-2h-2a1 1 0 1 0 0 2zm-4.707-4.293A1 1 0 0 0 14 3V1a1 1 0 0 0-2 0v2a1 1 0 0 0 .293.707zM11 6H4v6h9V6h-2zm-7 8h9v2H4v-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jX3jn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSocialPostMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgSocialPostMajor = function SvgSocialPostMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4 7h9v2H4zm0 4h7v2H4z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M16 10a1 1 0 0 1 1 1v4.5a1.5 1.5 0 0 1-1.5 1.5H7.636l-2.818 2.707A1 1 0 0 1 3.111 19v-2H1.5A1.5 1.5 0 0 1 0 15.5v-11A1.5 1.5 0 0 1 1.5 3H9a1 1 0 0 1 0 2H2v10h2.111a1 1 0 0 1 1 1v.697l1.404-1.404A1 1 0 0 1 7.222 15H15v-4a1 1 0 0 1 1-1zm0-5a.999.999 0 0 1-.707-1.707l2-2a1 1 0 1 1 1.414 1.414l-2 2A.996.996 0 0 1 16 5zm3 1a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2zm-6-2a1 1 0 0 1-1-1V1a1 1 0 0 1 2 0v2a1 1 0 0 1-1 1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jyeFz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSoftPackMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgSoftPackMajor = function SvgSoftPackMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 1.5v17c0 .8.7 1.5 1.5 1.5h13.1c.8 0 1.5-.7 1.5-1.5v-17c0-.8-.7-1.5-1.5-1.5H3.5C2.7 0 2 .7 2 1.5zM16 18H4V2h12v16z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M6 4H3v2h3V4zm11 0h-3v2h3V4zm-5 0H8v2h4V4zm-2 6H6v2h4v-2zm2 4H6v2h6v-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5Hkpr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSortAscendingMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSortAscendingMajor = function SvgSortAscendingMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M7.293 5.707a1 1 0 0 0 1.414-1.414l-3-3a1 1 0 0 0-1.414 0l-3 3a1 1 0 0 0 1.414 1.414L4 4.414V18a1 1 0 1 0 2 0V4.414l1.293 1.293zM10 8a1 1 0 0 1 1-1h7a1 1 0 1 1 0 2h-7a1 1 0 0 1-1-1zm0 4a1 1 0 0 1 1-1h7a1 1 0 1 1 0 2h-7a1 1 0 0 1-1-1zm1 3a1 1 0 1 0 0 2h7a1 1 0 1 0 0-2h-7z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iIfC7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSortDescendingMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSortDescendingMajor = function SvgSortDescendingMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M5 1a1 1 0 0 1 1 1v13.586l1.293-1.293a1 1 0 0 1 1.414 1.414l-3 3a1 1 0 0 1-1.414 0l-3-3a1 1 0 1 1 1.414-1.414L4 15.586V2a1 1 0 0 1 1-1zm5 3a1 1 0 0 1 1-1h7a1 1 0 1 1 0 2h-7a1 1 0 0 1-1-1zm0 4a1 1 0 0 1 1-1h7a1 1 0 1 1 0 2h-7a1 1 0 0 1-1-1zm1 3a1 1 0 1 0 0 2h7a1 1 0 1 0 0-2h-7z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5yESe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSortMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSortMinor = function SvgSortMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M5.293 2.293a.997.997 0 0 1 1.414 0l3 3a1 1 0 0 1-1.414 1.414L7 5.414V13a1 1 0 1 1-2 0V5.414L3.707 6.707a1 1 0 0 1-1.414-1.414l3-3zM13 7a1 1 0 0 1 2 0v7.585l1.293-1.292a.999.999 0 1 1 1.414 1.414l-3 3a.997.997 0 0 1-1.414 0l-3-3a.997.997 0 0 1 0-1.414.999.999 0 0 1 1.414 0L13 14.585V7z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gLrbQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgSoundMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgSoundMajor = function SvgSoundMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M13.548 2.892a1 1 0 1 1 .904-1.784C17.755 2.782 19.83 6.158 19.83 10c0 3.832-2.08 7.212-5.376 8.891a1 1 0 1 1-.908-1.782c2.628-1.338 4.284-4.03 4.284-7.109 0-3.087-1.651-5.774-4.282-7.108zm-1.214 4.154a1 1 0 1 1 1.332-1.492C14.95 6.7 15.673 8.268 15.673 10c0 1.733-.723 3.3-2.007 4.446a1 1 0 1 1-1.332-1.492c.865-.771 1.339-1.8 1.339-2.954 0-1.154-.474-2.182-1.339-2.954zM1.499 14.001A1.5 1.5 0 0 1 0 12.5v-5A1.5 1.5 0 0 1 1.5 6h2.15l4.725-3.78A1 1 0 0 1 10 3v14a1 1 0 0 1-1.625.781l-4.726-3.78H1.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3laRT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgStarFilledMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgStarFilledMinor = function SvgStarFilledMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M5.2 18a.8.8 0 0 1-.792-.914l.743-5.203-2.917-2.917a.8.8 0 0 1 .434-1.355l4.398-.733 2.218-4.435a.8.8 0 0 1 1.435.008l2.123 4.361 4.498.801a.8.8 0 0 1 .425 1.353l-2.917 2.917.744 5.203a.8.8 0 0 1-1.154.828l-4.382-2.22-4.502 2.223A.792.792 0 0 1 5.2 18z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cEvVV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgStarOutlineMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgStarOutlineMinor = function SvgStarOutlineMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m6.71 15.116 3.357-1.658.892.452 2.327 1.178-.56-3.912.708-.707 1.29-1.29-3.235-.576-.445-.915-1.059-2.176L8.4 8.683l-1.005.168-2.098.35 1.975 1.975-.141.99-.422 2.95zM5.2 18a.8.8 0 0 1-.792-.914l.743-5.203-2.917-2.917a.8.8 0 0 1 .434-1.355l4.398-.733 2.218-4.435a.8.8 0 0 1 1.435.008l2.123 4.361 4.498.801a.8.8 0 0 1 .425 1.353l-2.917 2.917.744 5.203a.8.8 0 0 1-1.154.828l-4.382-2.22-4.502 2.223A.792.792 0 0 1 5.2 18z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4myQ0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgStoreMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgStoreMajor = function SvgStoreMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m1.791 2.253-.597 3.583A1 1 0 0 0 2.18 7h.893a1.5 1.5 0 0 0 1.342-.83L5 5l.585 1.17A1.5 1.5 0 0 0 6.927 7h1.146a1.5 1.5 0 0 0 1.342-.83L10 5l.585 1.17a1.5 1.5 0 0 0 1.342.83h1.146a1.5 1.5 0 0 0 1.342-.83L15 5l.585 1.17a1.5 1.5 0 0 0 1.342.83h.893a1 1 0 0 0 .986-1.164l-.597-3.583A1.5 1.5 0 0 0 16.729 1H3.271a1.5 1.5 0 0 0-1.48 1.253zM18 9H2v8.5A1.5 1.5 0 0 0 3.5 19H7v-7h6v7h3.5a1.5 1.5 0 0 0 1.5-1.5V9z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"54luP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgStoreMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgStoreMinor = function SvgStoreMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m2.554 3.128-.542 3.224a.893.893 0 0 0 .513.964c.12.055.25.084.382.084h.81a1.369 1.369 0 0 0 1.217-.747l.53-1.053.531 1.053a1.354 1.354 0 0 0 1.218.747h1.04a1.369 1.369 0 0 0 1.216-.747L10 5.6l.53 1.053a1.355 1.355 0 0 0 1.218.747h1.04a1.369 1.369 0 0 0 1.217-.747l.53-1.053.531 1.053a1.354 1.354 0 0 0 1.217.747h.81a.913.913 0 0 0 .692-.318.898.898 0 0 0 .203-.73l-.542-3.224a1.347 1.347 0 0 0-.463-.808 1.367 1.367 0 0 0-.88-.32H3.897c-.322 0-.633.113-.88.32-.245.206-.41.492-.462.808zM17 16.65V9H3v7.65c0 .358.141.701.393.955.252.253.594.395.95.395h2.673v-6h5.968v6h2.673c.356 0 .698-.142.95-.395.252-.254.393-.597.393-.955z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"FGwYz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgStoreStatusMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgStoreStatusMajor = function SvgStoreStatusMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M14 10a3.987 3.987 0 0 0-1.172-2.828l1.415-1.415A6 6 0 1 1 9 4.083V2.062A8.001 8.001 0 0 0 10 18a8 8 0 0 0 5.657-13.657L17.07 2.93A9.969 9.969 0 0 1 20 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0c.338 0 .671.017 1 .05v8.218a2 2 0 1 1-2 0V6.126A4.002 4.002 0 0 0 10 14a4 4 0 0 0 4-4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hSwcB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTabletMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTabletMajor = function SvgTabletMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M2 1.5A1.5 1.5 0 0 1 3.5 0h13A1.5 1.5 0 0 1 18 1.5v17a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 2 18.5v-17zM4 2h12v14H4V2zm6 17a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"h3wdj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTapChipMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTapChipMajor = function SvgTapChipMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M5 1.5A1.5 1.5 0 0 1 6.5 0h12A1.5 1.5 0 0 1 20 1.5v8a1.5 1.5 0 0 1-1.5 1.5H14v5.5a2.5 2.5 0 0 1-2.5 2.5h-8A2.5 2.5 0 0 1 1 16.5V6a4 4 0 0 1 4-4v-.5zM5 4a2 2 0 0 0-2 2v7h9v-2H6.5A1.5 1.5 0 0 1 5 9.5V4zm3 2a1 1 0 0 1 1-1h1a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1zM3 16.5V15h9v1.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kYZX2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTaxMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTaxMajor = function SvgTaxMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 0h11c.828 0 1.5.677 1.5 1.512v18.21a.2.2 0 0 1-.334.149l-1.664-1.515a.497.497 0 0 0-.67 0l-1.664 1.514a.497.497 0 0 1-.67 0l-1.663-1.514a.497.497 0 0 0-.67 0L8.002 19.87a.497.497 0 0 1-.67 0l-1.664-1.514a.497.497 0 0 0-.67 0l-1.664 1.559a.2.2 0 0 1-.334-.15V1.512C3 .677 3.672 0 4.5 0zm3 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm6.5 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm-.293-4.793a1 1 0 0 0-1.414-1.414l-6 6a1 1 0 1 0 1.414 1.414l6-6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5ZmKS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTeamMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTeamMajor = function SvgTeamMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M6.086 9.882a5 5 0 1 1 3.91-5.063l4.378.73A3 3 0 0 1 20 7a3 3 0 0 1-3.919 2.857l-2.866 3.763a4 4 0 1 1-5.77-.697l-1.36-3.041zm1.826-.817 1.342 3.005a4.022 4.022 0 0 1 2.407.29l2.83-3.716a2.983 2.983 0 0 1-.446-1.123L9.67 6.792a5.015 5.015 0 0 1-1.757 2.273z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"l35jv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTemplateMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTemplateMajor = function SvgTemplateMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.5 1H12v6h7V2.5A1.5 1.5 0 0 0 17.5 1zM19 9h-5v10h3.5a1.5 1.5 0 0 0 1.5-1.5V9zM1 9h11v10H2.5A1.5 1.5 0 0 1 1 17.5V9zm1.5-8A1.5 1.5 0 0 0 1 2.5V7h11V1H2.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"55pDS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTextAlignmentCenterMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTextAlignmentCenterMajor = function SvgTextAlignmentCenterMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 3h14a1 1 0 1 1 0 2H3a1 1 0 0 1 0-2zm2 4h10a1 1 0 1 1 0 2H5a1 1 0 0 1 0-2zm-2 4h14a1 1 0 0 1 0 2H3a1 1 0 0 1 0-2zm2 4h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1RVWY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTextAlignmentLeftMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTextAlignmentLeftMajor = function SvgTextAlignmentLeftMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 3h14a1 1 0 1 1 0 2H3a1 1 0 0 1 0-2zm0 4h10a1 1 0 1 1 0 2H3a1 1 0 0 1 0-2zm0 4h14a1 1 0 0 1 0 2H3a1 1 0 0 1 0-2zm0 4h10a1 1 0 0 1 0 2H3a1 1 0 0 1 0-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"e5V1y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTextAlignmentRightMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTextAlignmentRightMajor = function SvgTextAlignmentRightMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 3h14a1 1 0 1 1 0 2H3a1 1 0 0 1 0-2zm4 4h10a1 1 0 1 1 0 2H7a1 1 0 0 1 0-2zm-4 4h14a1 1 0 0 1 0 2H3a1 1 0 0 1 0-2zm4 4h10a1 1 0 0 1 0 2H7a1 1 0 0 1 0-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iFdX8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTextBlockMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTextBlockMajor = function SvgTextBlockMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M2.5 1A1.5 1.5 0 0 0 1 2.5v15A1.5 1.5 0 0 0 2.5 19h15a1.5 1.5 0 0 0 1.5-1.5v-15A1.5 1.5 0 0 0 17.5 1h-15zM16 5H4v2h12V5zM4 9h12v2H4V9zm6 4H4v2h6v-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kAB4P":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTextMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgTextMajor = function SvgTextMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "m8.24 9 .816 2.33a1 1 0 0 0 1.888-.66L7.609 1.142a1.705 1.705 0 0 0-3.218 0L1.056 10.67a1 1 0 0 0 1.888.66L3.759 9h4.482zm-.7-2L6 2.599 4.46 7h3.08zm7.96-2c.608 0 1.18.155 1.68.428A.999.999 0 0 1 19 6v5a1 1 0 0 1-1.82.572A3.5 3.5 0 1 1 15.5 5zm0 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M2 14a1 1 0 1 0 0 2h16a1 1 0 1 0 0-2H2zm0 4a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2H2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kBcXP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgThemeEditMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgThemeEditMajor = function SvgThemeEditMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M0 1.5A1.5 1.5 0 0 1 1.5 0h5A1.5 1.5 0 0 1 8 1.5V2h5a1 1 0 1 1 0 2H8v1.5A1.5 1.5 0 0 1 6.5 7H5v2H3V7H1.5A1.5 1.5 0 0 1 0 5.5v-4zM2 5V2h4v3H2z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M5 17v1h1v2H4.5A1.5 1.5 0 0 1 3 18.5V17h2zm-2-3v-3h2v3H3zm9 6H8v-2h4v2zm2-2h1v-1h2v1.5a1.5 1.5 0 0 1-1.5 1.5H14v-2zm2.907-13.159 2.252 2.252.375-.376a1.592 1.592 0 0 0-2.252-2.25l-.375.374zm1.218 3.283-2.251-2.251-7.143 7.143L8 16l2.982-.731 7.143-7.144z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kOtpU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgThemesMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgThemesMajor = function SvgThemesMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.5 1H14v6h5V2.5A1.5 1.5 0 0 0 17.5 1zM19 9h-5v10h3.5a1.5 1.5 0 0 0 1.5-1.5V9zM1 14h11v5H2.5A1.5 1.5 0 0 1 1 17.5V14zM2.5 1A1.5 1.5 0 0 0 1 2.5V12h11V1H2.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6oKlh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgThemeStoreMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgThemeStoreMajor = function SvgThemeStoreMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M1.5 0A1.5 1.5 0 0 0 0 1.5v4A1.5 1.5 0 0 0 1.5 7H3v11.5A1.5 1.5 0 0 0 4.5 20H8a1 1 0 1 0 0-2H5V7h1.5A1.5 1.5 0 0 0 8 5.5V5h7a1 1 0 1 0 2 0v-.5A1.5 1.5 0 0 0 15.5 3H8V1.5A1.5 1.5 0 0 0 6.5 0h-5zM2 2v3h4V2H2z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M9 8a1 1 0 0 0-1 1v5a1 1 0 0 0 .293.707l5 5a1 1 0 0 0 1.414 0l5-5a1 1 0 0 0 0-1.414l-5-5A1 1 0 0 0 14 8H9zm4 4a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"avxdg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgThumbsDownMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgThumbsDownMajor = function SvgThumbsDownMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M1.008 13a.904.904 0 0 0 .896 1.023c.387 0 2.01-.007 3.488-.013L8 14c-.059 0-1.234 2.103-1.234 3.29A2.711 2.711 0 0 0 9.479 20l2.712-6H14V3h-2.382a1.81 1.81 0 0 1-.809-.19l-.753-.377C9 2 7.6 2 5.774 2H3.859c-.68 0-1.255.503-1.345 1.176L1.008 13zM17.5 14a1.5 1.5 0 0 0 1.5-1.5v-8A1.5 1.5 0 0 0 17.5 3H16v11h1.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jNpTq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgThumbsDownMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgThumbsDownMinor = function SvgThumbsDownMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M9.437 15.996A.502.502 0 0 1 9 15.5V12a1 1 0 0 0-1-1H4.248l1.554-7h3.896L12 5.535v6.188l-2.563 4.273zM17 4h-3.697l-2.748-1.832A.995.995 0 0 0 10 2H5c-.468 0-.874.326-.976.783l-2 9A1 1 0 0 0 3 13h4v2.5C7 16.878 8.122 18 9.5 18h.5a1 1 0 0 0 .858-.485L13.567 13H17a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kyIeF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgThumbsUpMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgThumbsUpMajor = function SvgThumbsUpMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M18.992 7a.904.904 0 0 0-.896-1.023c-.387 0-2.01.007-3.488.013L12 6c.059 0 1.234-2.103 1.234-3.29A2.711 2.711 0 0 0 10.521 0L7.81 6H6v11h2.382c.28 0 .557.065.808.19l.754.377C11 18 12.4 18 14.226 18h1.915c.68 0 1.255-.503 1.345-1.176L18.992 7zM2.5 6A1.5 1.5 0 0 0 1 7.5v8A1.5 1.5 0 0 0 2.5 17H4V6H2.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"79VRX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgThumbsUpMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgThumbsUpMinor = function SvgThumbsUpMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M14.198 16h-3.896L8 14.465V8.277l2.563-4.273A.502.502 0 0 1 11 4.5V8a1 1 0 0 0 1 1h3.753l-1.555 7zm3.582-8.625A1 1 0 0 0 17 7h-4V4.5C13 3.122 11.88 2 10.5 2H10a1 1 0 0 0-.858.485L6.433 7H3a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h3.697l2.748 1.832c.164.109.357.168.555.168h5a1 1 0 0 0 .976-.783l2-9a1 1 0 0 0-.196-.842z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8Mzqa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTickMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTickMinor = function SvgTickMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m7.293 14.707-3-3a.999.999 0 1 1 1.414-1.414l2.236 2.236 6.298-7.18a.999.999 0 1 1 1.518 1.3l-7 8a1 1 0 0 1-.72.35 1.017 1.017 0 0 1-.746-.292z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"acHVn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTickSmallMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTickSmallMinor = function SvgTickSmallMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m8.315 13.859-3.182-3.417a.506.506 0 0 1 0-.684l.643-.683a.437.437 0 0 1 .642 0l2.22 2.393 4.942-5.327a.436.436 0 0 1 .643 0l.643.684a.504.504 0 0 1 0 .683l-5.91 6.35a.437.437 0 0 1-.642 0"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5oDOT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTimelineAttachmentMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgTimelineAttachmentMajor = function SvgTimelineAttachmentMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17 4a1 1 0 0 1 1 1v13.5a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 2 18.5v-17A1.5 1.5 0 0 1 3.5 0H8v2H4v16h12V5a1 1 0 0 1 1-1z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M8 5v6c0 1.206.799 3 3 3s3-1.794 3-3V3c0-1.206-.799-3-3-3h-1v2h1c.805 0 .988.55 1 1v7.988c-.012.462-.195 1.012-1 1.012-.805 0-.988-.55-1-1V5a1 1 0 1 0-2 0z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fKSYT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTipsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTipsMajor = function SvgTipsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M17.5 0h-11C5.672 0 5 .677 5 1.512V3h4.5A1.5 1.5 0 0 1 11 4.5v9A1.5 1.5 0 0 1 9.5 15H5v4.721a.2.2 0 0 0 .334.15l1.664-1.515a.497.497 0 0 1 .67 0l1.664 1.514c.19.173.48.173.67 0l1.663-1.514a.497.497 0 0 1 .67 0l1.663 1.514c.19.173.48.173.67 0l1.664-1.514a.497.497 0 0 1 .67 0l1.664 1.515a.2.2 0 0 0 .334-.15V1.512C19 .677 18.328 0 17.5 0zM8.707 6.707a1 1 0 0 0-1.414-1.414l-6 6a1 1 0 1 0 1.414 1.414l6-6zM2.5 8a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM9 11.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM17 3h-4v2h4V3zm-4 4h4v2h-4V7zm4 4h-4v2h4v-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3ePdQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTitleMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTitleMinor = function SvgTitleMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3 2a1 1 0 0 0-1 1v3a1 1 0 0 0 2 0 2 2 0 0 1 2-2h2v10.999A1 1 0 0 1 7 16h-.001A1 1 0 0 0 7 18h6a1 1 0 1 0 0-2 1 1 0 0 1-1-1V4h2a2 2 0 0 1 2 2 1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1IstY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgToolsMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgToolsMajor = function SvgToolsMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M18.414 1.586a2 2 0 0 1 0 2.828l-3 3-1.115 1.115-2.828-2.828 1.232-1.233.015-.015 2.868-2.867a2 2 0 0 1 2.828 0zm-8.47 11.299-2.788-2.787a4.67 4.67 0 0 1-5.919-5.901L3.76 6.719a1.5 1.5 0 0 0 2.121 0l.84-.84a1.5 1.5 0 0 0 0-2.12L4.197 1.236a4.67 4.67 0 0 1 5.9 5.919l2.787 2.787 5.506 5.506a2.08 2.08 0 0 1-2.942 2.942l-5.506-5.506zm-1.415 1.414-3.287 3.287L1 19l1.414-4.243 3.287-3.286 2.828 2.828z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ii2vg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTransactionFeeDollarMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTransactionFeeDollarMajor = function SvgTransactionFeeDollarMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 13c-1.103 0-2-.897-2-2V4h5.185A2.995 2.995 0 0 0 17 6c1.654 0 3-1.346 3-3s-1.346-3-3-3a2.997 2.997 0 0 0-2.816 2H5.816A2.997 2.997 0 0 0 3 0C1.346 0 0 1.346 0 3s1.346 3 3 3a2.997 2.997 0 0 0 2.816-2H7v7c0 2.206 1.794 4 4 4a1 1 0 0 0 0-2zm5.977-2c.026.001.649.04 1.316.707a1 1 0 0 0 1.414-1.414A4.49 4.49 0 0 0 18 9.2V9a1 1 0 0 0-2 0v.185A2.995 2.995 0 0 0 14 12c0 2.28 1.725 2.712 2.756 2.97h.002C17.873 15.249 18 15.354 18 16c0 .552-.448 1-.976 1-.026-.001-.65-.04-1.317-.707a1 1 0 0 0-1.414 1.414c.479.49 1.062.863 1.707 1.093v.2a1 1 0 0 0 2 0v-.185A2.992 2.992 0 0 0 20 16c0-2.28-1.725-2.712-2.756-2.97h-.001C16.128 12.751 16 12.646 16 12c0-.552.449-1 .977-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"auaBE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTransactionFeeEuroMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTransactionFeeEuroMajor = function SvgTransactionFeeEuroMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 13a1 1 0 0 1 0 2c-2.206 0-4-1.794-4-4V4H5.816A2.997 2.997 0 0 1 3 6C1.346 6 0 4.654 0 3s1.346-3 3-3c1.302 0 2.401.839 2.816 2h8.368A2.997 2.997 0 0 1 17 0c1.654 0 3 1.346 3 3s-1.346 3-3 3a2.995 2.995 0 0 1-2.815-2H9v7c0 1.103.897 2 2 2zm3.014.992c-.011-.333-.006-.667.014-1h-.278a.75.75 0 1 1 0-1.5h.49C14.696 9.468 15.807 8 17.326 8c1.142 0 1.911.334 2.47 1.385a.992.992 0 0 1-1.75.932c-.16-.298-.24-.333-.72-.333-.335 0-.757.581-1.036 1.508h.959a.75.75 0 1 1 0 1.5h-1.232a8.24 8.24 0 0 0-.019 1h1.251a.75.75 0 1 1 0 1.5h-1.042c.272 1.102.749 1.812 1.119 1.812h.073c.313 0 .426 0 .496-.054a.45.45 0 0 0 .106-.152l.004-.007a.993.993 0 0 1 1.738.958c-.555 1.006-1.205 1.24-2.366 1.239h-.051c-1.594 0-2.739-1.617-3.151-3.796h-.426a.75.75 0 1 1 0-1.5h.265z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dpDvM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTransactionFeePoundMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTransactionFeePoundMajor = function SvgTransactionFeePoundMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 13a1 1 0 0 1 0 2c-2.206 0-4-1.794-4-4V4H5.816A2.997 2.997 0 0 1 3 6C1.346 6 0 4.654 0 3s1.346-3 3-3c1.302 0 2.401.839 2.816 2h8.368A2.997 2.997 0 0 1 17 0c1.654 0 3 1.346 3 3s-1.346 3-3 3a2.995 2.995 0 0 1-2.815-2H9v7c0 1.103.897 2 2 2zm3.244 3H14a1 1 0 0 1 0-2h.472c.019-.34.028-.682.028-1.027 0-1.894 1.057-3.246 2.555-3.483 1.504-.239 2.867.785 2.867 2.4a1 1 0 0 1-2 0c0-.323-.21-.48-.555-.425-.487.077-.867.563-.867 1.508 0 .345-.009.687-.026 1.027H18a1 1 0 0 1 0 2h-1.73a18.706 18.706 0 0 1-.422 2H18.5a1 1 0 0 1 0 2h-4a1 1 0 0 1-1-1 .999.999 0 0 1 .056-.354c.302-.86.53-1.742.688-2.646z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3jCmY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTransactionFeeRupeeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTransactionFeeRupeeMajor = function SvgTransactionFeeRupeeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 13a1 1 0 0 1 0 2c-2.206 0-4-1.794-4-4V4H5.816A2.997 2.997 0 0 1 3 6C1.346 6 0 4.654 0 3s1.346-3 3-3c1.302 0 2.401.839 2.816 2h8.368A2.997 2.997 0 0 1 17 0c1.654 0 3 1.346 3 3s-1.346 3-3 3a2.995 2.995 0 0 1-2.815-2H9v7c0 1.103.897 2 2 2zm4.848 2.562 2.08 2.761a1 1 0 1 1-1.596 1.204l-3.01-3.993a1 1 0 0 1 1.259-1.49c.233.037.492.056.776.056.702 0 1.242-.478 1.494-1.235H13.75a.75.75 0 1 1 0-1.5h3.23c-.091-.72-.395-1.283-.844-1.58H14a1 1 0 1 1 0-2h5a1 1 0 1 1 0 2h-.944c.232.467.38 1.004.431 1.58h.763a.75.75 0 1 1 0 1.5h-.849c-.298 1.407-1.21 2.486-2.553 2.697z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gf50a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTransactionFeeYenMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTransactionFeeYenMajor = function SvgTransactionFeeYenMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11 13a1 1 0 0 1 0 2c-2.206 0-4-1.794-4-4V4H5.816A2.997 2.997 0 0 1 3 6C1.346 6 0 4.654 0 3s1.346-3 3-3c1.302 0 2.401.839 2.816 2h8.368A2.997 2.997 0 0 1 17 0c1.654 0 3 1.346 3 3s-1.346 3-3 3a2.995 2.995 0 0 1-2.815-2H9v7c0 1.103.897 2 2 2zm6.475 3.454h1.25a.75.75 0 1 1 0 1.5h-1.25v1a1 1 0 0 1-2 0v-1h-1.25a.75.75 0 1 1 0-1.5h1.25v-.75h-1.25a.75.75 0 1 1 0-1.5h.859L13.234 11a1 1 0 0 1 1.732-1l1.515 2.624L17.996 10a1 1 0 1 1 1.732 1l-1.85 3.204h.847a.75.75 0 1 1 0 1.5h-1.25v.75z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eXtdI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTransactionMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTransactionMajor = function SvgTransactionMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M11.293 8.293 12.586 7H3v11a1 1 0 1 1-2 0V2a1 1 0 0 1 2 0v3h9.586l-1.293-1.293a1 1 0 0 1 1.414-1.414l2.999 2.999a1 1 0 0 1 0 1.416l-2.999 2.999A.998.998 0 0 1 11 9a1 1 0 0 1 .293-.707zM18 1a1 1 0 0 1 1 1v16a1 1 0 0 1-2 0v-3H7.414l1.293 1.293a1 1 0 1 1-1.414 1.414l-2.999-2.999a1 1 0 0 1 0-1.416l2.999-2.999a1 1 0 0 1 1.414 1.414L7.414 13H17V2a1 1 0 0 1 1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fE2iD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTransferInMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTransferInMajor = function SvgTransferInMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M8.586 13H2a1 1 0 0 1 0-2h6.586L7.293 9.707a1 1 0 0 1 1.414-1.414l3 3a1 1 0 0 1 0 1.414l-3 3a.997.997 0 0 1-1.631-.324 1 1 0 0 1 .217-1.09L8.586 13zM19 18.5a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 18.5V15h2v3h14V5.618l-7-3.5-7 3.5V9H1V5c0-.379.214-.725.553-.895l8-4c.281-.14.613-.14.894 0l8 4c.339.17.553.516.553.895v13.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"g4qL8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTransferMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgTransferMajor = function SvgTransferMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M9 14h8V3H6v8H4V2.5A1.5 1.5 0 0 1 5.5 1h12A1.5 1.5 0 0 1 19 2.5v12a1.5 1.5 0 0 1-1.5 1.5H9v-2z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M9 5a1 1 0 0 0 0 2h2.586l-3.293 3.293a1 1 0 1 0 1.414 1.414L13 8.414V11a1 1 0 1 0 2 0V6c0-.025 0-.05-.003-.075A1 1 0 0 0 14 5H9zm-9 9.5A1.5 1.5 0 0 1 1.5 13h4A1.5 1.5 0 0 1 7 14.5v4A1.5 1.5 0 0 1 5.5 20h-4A1.5 1.5 0 0 1 0 18.5v-4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jgJ23":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTransferOutMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTransferOutMajor = function SvgTransferOutMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m4.414 13 1.293 1.293a1 1 0 1 1-1.414 1.414l-3-3a1 1 0 0 1 0-1.414l3-3a1 1 0 0 1 1.414 1.414L4.414 11H11a1 1 0 0 1 0 2H4.414zM19 18.5a1.5 1.5 0 0 1-1.5 1.5H2.286C1.576 20 1 19.424 1 18.714V18a1 1 0 1 1 2 0h14V5.618l-7-3.5-7 3.5V6a1 1 0 0 1-2 0V5c0-.379.214-.725.553-.895l8-4c.281-.14.613-.14.894 0l8 4c.339.17.553.516.553.895v13.5z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jSlzH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTransferWithinShopifyMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTransferWithinShopifyMajor = function SvgTransferWithinShopifyMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M7 2.202 9.801 4.07 6.47 6.152A1 1 0 0 0 6 7v2h2V7.554l5-3.125 5 3.125V18H8v-3H6v3.5A1.5 1.5 0 0 0 7.5 20h11a1.5 1.5 0 0 0 1.5-1.5V7a1 1 0 0 0-.47-.848l-6-3.75a1.003 1.003 0 0 0-1.06 0l-.807.505L7.555.168a1 1 0 0 0-1.11 0l-6 4A1.001 1.001 0 0 0 0 5v13h2V5.535l5-3.333zM5 13h6.586l-1.293 1.293a1 1 0 1 0 1.414 1.414l3-3a1 1 0 0 0 0-1.414l-3-3a1 1 0 1 0-1.414 1.414L11.586 11H5a1 1 0 0 0 0 2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hRx7H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTransportMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTransportMajor = function SvgTransportMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M1.282 13.469a.506.506 0 0 1-.132-.814l1.093-1.087a1.537 1.537 0 0 1 1.084-.447h2.43L7.72 9.168 1.328 6.342a.507.507 0 0 1-.154-.823l1.972-1.96a1.538 1.538 0 0 1 1.357-.422l7.855 1.42 2.98-2.964a2.174 2.174 0 0 1 3.027.038 2.15 2.15 0 0 1 .038 3.01L15.39 7.638l1.442 8.607a1.52 1.52 0 0 1-.662 1.518l-1.736 1.151a.512.512 0 0 1-.75-.216l-2.898-6.482-1.964 1.953v2.417c0 .404-.162.791-.45 1.077L7.28 18.75a.512.512 0 0 1-.818-.132l-1.726-3.433-3.453-1.716z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1DIeg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTroubleshootMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTroubleshootMajor = function SvgTroubleshootMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M19 5.893a4.893 4.893 0 0 1-6.681 4.557l-8.167 8.166a1.957 1.957 0 0 1-2.768-2.768L9.55 7.682a4.893 4.893 0 0 1 5.454-6.6c.363.068.463.508.199.766l-2.97 2.898 2.936 2.936 2.985-2.913c.26-.254.692-.152.76.205.056.298.086.605.086.92z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3Ygkp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgTypeMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgTypeMajor = function SvgTypeMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M9 0c-.6 0-1.1.4-1.4 1L2 17.3a1 1 0 0 1-.9.7 1 1 0 1 0 0 2h4a1 1 0 1 0 0-2 1 1 0 0 1-.9-1.2L5 14h7l.9 2.8A1 1 0 0 1 12 18a1 1 0 1 0 0 2h7a1 1 0 1 0 0-2 1 1 0 0 1-1-.7L12.5 1c-.3-.6-.8-1-1.5-1H9zm-.5 4.3L5.8 12h5.4L8.5 4.3z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kP3QV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgUndoMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgUndoMajor = function SvgUndoMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M3.488 5C5.637 3.066 7.478 2 10 2a8 8 0 0 1 8 8 8 8 0 0 1-8 8 1 1 0 1 0 0 2c5.523 0 10-4.477 10-10S15.523 0 10 0C6.703 0 4.356 1.496 2 3.647V1a1 1 0 0 0-2 0v5a.998.998 0 0 0 1 1h5a1 1 0 0 0 0-2H3.488z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ekhkI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgUnfulfilledMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgUnfulfilledMajor = function SvgUnfulfilledMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M3 3v11h3.5c.775 0 1.388.662 1.926 1.244l.11.12a2 2 0 0 0 2.927-.001l.111-.119C12.112 14.662 12.725 14 13.5 14H17V3H3zm3-2H2.5A1.5 1.5 0 0 0 1 2.5v15A1.5 1.5 0 0 0 2.5 19h15a1.5 1.5 0 0 0 1.5-1.5v-15A1.5 1.5 0 0 0 17.5 1H6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"76JC1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgUnknownDeviceMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgUnknownDeviceMajor = function SvgUnknownDeviceMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4 2h1V0H3.5A1.5 1.5 0 0 0 2 1.5V3h2V2zm4.685 10.502h2.136v-.141c.011-1.17.23-1.302 1.02-1.777l.238-.144c1.11-.664 1.805-1.57 1.805-2.952C13.884 5.448 12.296 4 9.99 4 7.877 4 6.06 5.193 6 7.487h2.267c.054-1.135.86-1.533 1.711-1.533.924 0 1.666.616 1.666 1.564 0 .845-.561 1.424-1.292 1.883-.102.064-.2.122-.293.178-.882.528-1.363.816-1.374 2.782v.14zm.979 4.34c.712 0 1.322-.591 1.328-1.328a1.342 1.342 0 0 0-1.328-1.316c-.737 0-1.334.592-1.328 1.316a1.32 1.32 0 0 0 1.328 1.328zM4 18v-1H2v1.5A1.5 1.5 0 0 0 3.5 20H5v-2H4zm11 0h1v-1h2v1.5a1.5 1.5 0 0 1-1.5 1.5H15v-2zM4 11v4H2v-4h2zm0-2V5H2v4h2zm14 2v4h-2v-4h2zm0-2V5h-2v4h2zm-2-6V2h-1V0h1.5A1.5 1.5 0 0 1 18 1.5V3h-2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jgRE9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgUpdateInventoryMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgUpdateInventoryMajor = function SvgUpdateInventoryMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m18 5.65-8-3.555L2 5.65V19H0V5c0-.396.232-.753.594-.913l9-4a.999.999 0 0 1 .812 0l9 4A1 1 0 0 1 20 5v14h-2V5.65z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M9 15a.997.997 0 0 1-.707-.293l-2-2a1 1 0 0 1 1.414-1.414L9 12.586l3.293-3.293a1 1 0 1 1 1.414 1.415l-4 4A.999.999 0 0 1 9 15z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7xQPM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgUploadMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgUploadMajor = function SvgUploadMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M20 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0s10 4.477 10 10zM5.293 8.293l4-4a1 1 0 0 1 1.414 0l4 4a1 1 0 0 1-1.414 1.414L11 7.414V15a1 1 0 1 1-2 0V7.414L6.707 9.707a1 1 0 0 1-1.414-1.414z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1HcKA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgVariantMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgVariantMajor = function SvgVariantMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.5 1A1.5 1.5 0 0 1 19 2.5v12a1.5 1.5 0 0 1-1.5 1.5H14v2.5a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 0 18.5v-11A1.5 1.5 0 0 1 1.5 6H4V2.5A1.5 1.5 0 0 1 5.5 1h12zM11 14h6V8l-6 6zm-9 4h10v-2.027l-6.495.022A1.5 1.5 0 0 1 4 14.495V8H2v10zM12 3H6v6l6-6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6Dh8g":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgViewMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _circle;
var SvgViewMajor = function SvgViewMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M19.928 9.629C17.791 4.286 13.681 1.85 9.573 2.064c-4.06.21-7.892 3.002-9.516 7.603L-.061 10l.118.333c1.624 4.601 5.455 7.393 9.516 7.603 4.108.213 8.218-2.222 10.355-7.565l.149-.371-.149-.371zM10 15a5 5 0 1 0 0-10 5 5 0 0 0 0 10z"
    })), _circle || (_circle = /*#__PURE__*/ _reactDefault.default.createElement("circle", {
        cx: 10,
        cy: 10,
        r: 3
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3VFJT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgViewMinor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgViewMinor = function SvgViewMinor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M17.928 9.628C17.837 9.399 15.611 4 10 4S2.162 9.399 2.07 9.628a1.017 1.017 0 0 0 0 .744C2.163 10.601 4.389 16 10 16s7.837-5.399 7.928-5.628a1.017 1.017 0 0 0 0-.744zM10 14a4 4 0 1 1 0-8 4 4 0 0 1 0 8zm0-6a2 2 0 1 0 .002 4.001A2 2 0 0 0 9.999 8z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kkgF0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgViewportNarrowMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgViewportNarrowMajor = function SvgViewportNarrowMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M14.414 9H19a1 1 0 1 1 0 2h-4.586l1.293 1.293a1 1 0 0 1-1.414 1.414l-3-3a1 1 0 0 1 0-1.414l3-3a1 1 0 1 1 1.414 1.414L14.414 9zM5.707 6.293l3 3a.999.999 0 0 1 0 1.414l-3 3a.997.997 0 0 1-1.631-.324 1 1 0 0 1 .217-1.09L5.586 11H1a1 1 0 0 1 0-2h4.586L4.293 7.707a1 1 0 0 1 1.414-1.414zM8 2v4L6 4V1.5A1.5 1.5 0 0 1 7.5 0h5A1.5 1.5 0 0 1 14 1.5V4l-2 2V2H8zm6 14-2-2v4H8v-4l-2 2v2.5A1.5 1.5 0 0 0 7.5 20h5a1.5 1.5 0 0 0 1.5-1.5V16z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8BOwu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgViewportWideMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgViewportWideMajor = function SvgViewportWideMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "m16.707 6.293 3 3a.998.998 0 0 1 0 1.414l-3 3a.997.997 0 0 1-1.631-.324 1 1 0 0 1 .217-1.09L16.586 11H12a1 1 0 1 1 0-2h4.586l-1.293-1.293a1 1 0 1 1 1.414-1.414zm-13.414 0a1 1 0 1 1 1.414 1.414L3.414 9H8a1 1 0 0 1 0 2H3.414l1.293 1.293a1.003 1.003 0 0 1 0 1.414 1 1 0 0 1-1.414 0l-3-3a.998.998 0 0 1 0-1.414l3-3z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M1 1.5A1.5 1.5 0 0 1 2.5 0h15A1.5 1.5 0 0 1 19 1.5V6l-2-2V2H3v2L1 6V1.5zM17 18v-2l2-2v4.5a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 18.5V14l2 2v2h14z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jAKVC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgVocabularyMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path, _path2;
var SvgVocabularyMajor = function SvgVocabularyMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M20 1.5A1.5 1.5 0 0 0 18.5 0H12c-.768 0-1.469.29-2 .766A2.987 2.987 0 0 0 8 0H1.5A1.5 1.5 0 0 0 0 1.5v15A1.5 1.5 0 0 0 1.5 18H8a1 1 0 0 1 1 1 1 1 0 1 0 2 0 1 1 0 0 1 1-1h6.5a1.5 1.5 0 0 0 1.5-1.5v-15zM18 16h-6c-.352 0-.687.067-1 .179V3a1 1 0 0 1 1-1h6v14zM8 16H2V2h6a1 1 0 0 1 1 1v13.179A2.959 2.959 0 0 0 8 16z"
    })), _path2 || (_path2 = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M4 4h3v2H4zm9 0h3v2h-3zM4 8h3v2H4zm9 0h3v2h-3zm-9 4h3v2H4z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dzhZC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgWandMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgWandMajor = function SvgWandMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15.666.376c.495-.501 1.189-.501 1.684 0l2.278 2.307c.496.502.496 1.204 0 1.706L15.963 8 12 3.987l3.666-3.61zM10.993 5 15 9.007 4.382 19.624c-.5.501-1.202.501-1.703 0L.376 17.321c-.501-.501-.501-1.203 0-1.703L10.993 5zM16 13c0-.6.4-1 1-1s1 .4 1 1 .4 1 1 1 1 .4 1 1-.4 1-1 1-1 .4-1 1-.4 1-1 1-1-.4-1-1-.4-1-1-1-1-.4-1-1 .4-1 1-1 1-.4 1-1zM4 1c0-.6.4-1 1-1s1 .4 1 1 .4 1 1 1 1 .4 1 1-.4 1-1 1-1 .4-1 1-.4 1-1 1-1-.4-1-1-.4-1-1-1-1-.4-1-1 .4-1 1-1 1-.4 1-1z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6RxOl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgWearableMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgWearableMajor = function SvgWearableMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M6 4a3 3 0 0 0-3 3v6a3 3 0 0 0 3 3v2.5A1.5 1.5 0 0 0 7.5 20h5a1.5 1.5 0 0 0 1.5-1.5V16a3 3 0 0 0 3-3v-1a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1V7a3 3 0 0 0-3-3V1.5A1.5 1.5 0 0 0 12.5 0h-5A1.5 1.5 0 0 0 6 1.5V4zm2 0V2h4v2H8zm4 12v2H8v-2h4zM6 6a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1H6z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"grBSM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgWholesaleMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgWholesaleMajor = function SvgWholesaleMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fillRule: "evenodd",
        d: "M17 3a1 1 0 1 0-2 0v5.392a2.5 2.5 0 0 0-.32-1.223l-2.184-3.892A2.5 2.5 0 0 0 10.316 2H7.5A2.5 2.5 0 0 0 5 4.5V6H2.5A1.5 1.5 0 0 0 1 7.5v2.585A1.5 1.5 0 0 0 0 11.5V17a3 3 0 1 0 6 0h3a3 3 0 1 0 6 0v-2h4a1 1 0 1 0 0-2h-2V3zM3 10h2V8H3v2zm10-1.608V10H7V4.5a.5.5 0 0 1 .5-.5h2.816a.5.5 0 0 1 .436.255l2.184 3.892a.5.5 0 0 1 .064.245zM4 17a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm8 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4Lhj3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "S", ()=>SvgWifiMajor
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _path;
var SvgWifiMajor = function SvgWifiMajor(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
    }, props), _path || (_path = /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M10 18a1.501 1.501 0 0 1 0-3 1.501 1.501 0 0 1 0 3zM1.004 8a.997.997 0 0 1-.607-1.795C3.106 4.138 6.516 3 10 3c3.483 0 6.892 1.137 9.598 3.202a1 1 0 1 1-1.212 1.59C16.026 5.991 13.048 5 10 5c-3.05 0-6.029.992-8.391 2.795A.988.988 0 0 1 1.004 8zM4 11a.996.996 0 0 1-.958-1.293.998.998 0 0 1 .352-.502C5.255 7.783 7.602 7 10 7c2.397 0 4.742.782 6.601 2.203a1 1 0 0 1-1.213 1.59C13.875 9.637 11.961 9 10 9c-1.962 0-3.877.638-5.392 1.795a.989.989 0 0 1-.605.205h-.002zm8.994 3a.994.994 0 0 1-.594-.197 4.052 4.052 0 0 0-4.804 0 .999.999 0 1 1-1.192-1.606c2.108-1.565 5.079-1.566 7.187 0A1 1 0 0 1 12.996 14z"
    }))));
};

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gLDAi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "findFirstFocusableNode", ()=>findFirstFocusableNode
);
parcelHelpers.export(exports, "findFirstFocusableNodeIncludingDisabled", ()=>findFirstFocusableNodeIncludingDisabled
);
parcelHelpers.export(exports, "findFirstKeyboardFocusableNode", ()=>findFirstKeyboardFocusableNode
);
parcelHelpers.export(exports, "findLastKeyboardFocusableNode", ()=>findLastKeyboardFocusableNode
);
parcelHelpers.export(exports, "focusFirstFocusableNode", ()=>focusFirstFocusableNode
);
parcelHelpers.export(exports, "focusFirstKeyboardFocusableNode", ()=>focusFirstKeyboardFocusableNode
);
parcelHelpers.export(exports, "focusLastKeyboardFocusableNode", ()=>focusLastKeyboardFocusableNode
);
parcelHelpers.export(exports, "focusNextFocusableNode", ()=>focusNextFocusableNode
);
parcelHelpers.export(exports, "handleMouseUpByBlurring", ()=>handleMouseUpByBlurring
);
parcelHelpers.export(exports, "nextFocusableNode", ()=>nextFocusableNode
);
var _isElementInViewportJs = require("./is-element-in-viewport.js");
const FOCUSABLE_SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';
const KEYBOARD_FOCUSABLE_SELECTORS = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]:not([tabindex="-1"])';
const handleMouseUpByBlurring = ({ currentTarget  })=>currentTarget.blur()
;
function nextFocusableNode(node, filter) {
    const allFocusableElements = [
        ...document.querySelectorAll(FOCUSABLE_SELECTOR)
    ];
    const sliceLocation = allFocusableElements.indexOf(node) + 1;
    const focusableElementsAfterNode = allFocusableElements.slice(sliceLocation);
    for (const focusableElement of focusableElementsAfterNode){
        if (_isElementInViewportJs.isElementInViewport(focusableElement) && (!filter || filter && filter(focusableElement))) return focusableElement;
    }
    return null;
}
function findFirstFocusableNode(element, onlyDescendants = true) {
    if (!onlyDescendants && matches1(element, FOCUSABLE_SELECTOR)) return element;
    return element.querySelector(FOCUSABLE_SELECTOR);
} // Popover needs to be able to find its activator even if it is disabled, which FOCUSABLE_SELECTOR doesn't support.
function findFirstFocusableNodeIncludingDisabled(element) {
    const focusableSelector = `a,button,frame,iframe,input:not([type=hidden]),select,textarea,*[tabindex]`;
    if (matches1(element, focusableSelector)) return element;
    return element.querySelector(focusableSelector);
}
function focusFirstFocusableNode(element, onlyDescendants = true) {
    var _findFirstFocusableNo;
    (_findFirstFocusableNo = findFirstFocusableNode(element, onlyDescendants)) === null || _findFirstFocusableNo === void 0 || _findFirstFocusableNo.focus();
}
function focusNextFocusableNode(node, filter) {
    const nextFocusable = nextFocusableNode(node, filter);
    if (nextFocusable && nextFocusable instanceof HTMLElement) {
        nextFocusable.focus();
        return true;
    }
    return false;
}
function findFirstKeyboardFocusableNode(element, onlyDescendants = true) {
    if (!onlyDescendants && matches1(element, KEYBOARD_FOCUSABLE_SELECTORS)) return element;
    return element.querySelector(KEYBOARD_FOCUSABLE_SELECTORS);
}
function focusFirstKeyboardFocusableNode(element, onlyDescendants = true) {
    const firstFocusable = findFirstKeyboardFocusableNode(element, onlyDescendants);
    if (firstFocusable) {
        firstFocusable.focus();
        return true;
    }
    return false;
}
function findLastKeyboardFocusableNode(element, onlyDescendants = true) {
    if (!onlyDescendants && matches1(element, KEYBOARD_FOCUSABLE_SELECTORS)) return element;
    const allFocusable = element.querySelectorAll(KEYBOARD_FOCUSABLE_SELECTORS);
    return allFocusable[allFocusable.length - 1];
}
function focusLastKeyboardFocusableNode(element, onlyDescendants = true) {
    const lastFocusable = findLastKeyboardFocusableNode(element, onlyDescendants);
    if (lastFocusable) {
        lastFocusable.focus();
        return true;
    }
    return false;
}
function matches1(node, selector) {
    if (node.matches) return node.matches(selector);
    const matches = (node.ownerDocument || document).querySelectorAll(selector);
    let i = matches.length;
    while(--i >= 0 && matches.item(i) !== node)return i > -1;
}

},{"./is-element-in-viewport.js":"egUbc","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"egUbc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isElementInViewport", ()=>isElementInViewport
);
function isElementInViewport(element) {
    const { top , left , bottom , right  } = element.getBoundingClientRect();
    return top >= 0 && right <= window.innerWidth && bottom <= window.innerHeight && left >= 0;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"e8o7g":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Button": "Polaris-Button",
    "pressed": "Polaris-Button--pressed",
    "disabled": "Polaris-Button--disabled",
    "connectedDisclosure": "Polaris-Button--connectedDisclosure",
    "Content": "Polaris-Button__Content",
    "plain": "Polaris-Button--plain",
    "textAlignLeft": "Polaris-Button--textAlignLeft",
    "textAlignCenter": "Polaris-Button--textAlignCenter",
    "textAlignRight": "Polaris-Button--textAlignRight",
    "Icon": "Polaris-Button__Icon",
    "fullWidth": "Polaris-Button--fullWidth",
    "hidden": "Polaris-Button--hidden",
    "Spinner": "Polaris-Button__Spinner",
    "primary": "Polaris-Button--primary",
    "destructive": "Polaris-Button--destructive",
    "outline": "Polaris-Button--outline",
    "loading": "Polaris-Button--loading",
    "removeUnderline": "Polaris-Button--removeUnderline",
    "iconOnly": "Polaris-Button--iconOnly",
    "sizeSlim": "Polaris-Button--sizeSlim",
    "sizeLarge": "Polaris-Button--sizeLarge",
    "monochrome": "Polaris-Button--monochrome",
    "Text": "Polaris-Button__Text",
    "ConnectedDisclosureWrapper": "Polaris-Button__ConnectedDisclosureWrapper",
    "ConnectedDisclosure": "Polaris-Button__ConnectedDisclosure"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"itKPn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Spinner", ()=>Spinner
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _useIsAfterInitialMountJs = require("../../utilities/use-is-after-initial-mount.js");
var _spinnerScssJs = require("./Spinner.scss.js");
var _spinnerScssJsDefault = parcelHelpers.interopDefault(_spinnerScssJs);
var _visuallyHiddenJs = require("../VisuallyHidden/VisuallyHidden.js");
function Spinner({ size ='large' , accessibilityLabel , hasFocusableParent  }) {
    const isAfterInitialMount = _useIsAfterInitialMountJs.useIsAfterInitialMount();
    const className = _cssJs.classNames(_spinnerScssJsDefault.default.Spinner, size && _spinnerScssJsDefault.default[_cssJs.variationName('size', size)]);
    const spinnerSVGMarkup = size === 'large' ? /*#__PURE__*/ _reactDefault.default.createElement("svg", {
        viewBox: "0 0 44 44",
        xmlns: "http://www.w3.org/2000/svg"
    }, /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M15.542 1.487A21.507 21.507 0 00.5 22c0 11.874 9.626 21.5 21.5 21.5 9.847 0 18.364-6.675 20.809-16.072a1.5 1.5 0 00-2.904-.756C37.803 34.755 30.473 40.5 22 40.5 11.783 40.5 3.5 32.217 3.5 22c0-8.137 5.3-15.247 12.942-17.65a1.5 1.5 0 10-.9-2.863z"
    })) : /*#__PURE__*/ _reactDefault.default.createElement("svg", {
        viewBox: "0 0 20 20",
        xmlns: "http://www.w3.org/2000/svg"
    }, /*#__PURE__*/ _reactDefault.default.createElement("path", {
        d: "M7.229 1.173a9.25 9.25 0 1011.655 11.412 1.25 1.25 0 10-2.4-.698 6.75 6.75 0 11-8.506-8.329 1.25 1.25 0 10-.75-2.385z"
    }));
    const spanAttributes = {
        ...!hasFocusableParent && {
            role: 'status'
        }
    };
    const accessibilityLabelMarkup = (isAfterInitialMount || !hasFocusableParent) && /*#__PURE__*/ _reactDefault.default.createElement(_visuallyHiddenJs.VisuallyHidden, null, accessibilityLabel);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: className
    }, spinnerSVGMarkup), /*#__PURE__*/ _reactDefault.default.createElement("span", spanAttributes, accessibilityLabelMarkup)));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","../../utilities/use-is-after-initial-mount.js":"3sveN","./Spinner.scss.js":"jNdzD","../VisuallyHidden/VisuallyHidden.js":"fGCM0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3sveN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useIsAfterInitialMount", ()=>useIsAfterInitialMount
);
var _react = require("react");
/**
 * useIsAfterInitialMount will trigger a re-render to provide
 * you with an updated value. Using this you enhance server-side
 * code that can only run on the client.
 * @returns MutableRefObject<T> - Returns a ref object with the
 * results from invoking initial value
 * @example
 * function ComponentExample({children}) {
 *  const isMounted = useIsAfterInitialMount();
 *  const content = isMounted ? children : null;
 *
 *  return <>{content}</>;
 * }
 */ function useIsAfterInitialMount() {
    const [isAfterInitialMount, setIsAfterInitialMount] = _react.useState(false);
    _react.useEffect(()=>{
        setIsAfterInitialMount(true);
    }, []);
    return isAfterInitialMount;
}

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jNdzD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Spinner": "Polaris-Spinner",
    "loading": "Polaris-Spinner--loading",
    "sizeSmall": "Polaris-Spinner--sizeSmall",
    "sizeLarge": "Polaris-Spinner--sizeLarge"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fGCM0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VisuallyHidden", ()=>VisuallyHidden
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _visuallyHiddenScssJs = require("./VisuallyHidden.scss.js");
var _visuallyHiddenScssJsDefault = parcelHelpers.interopDefault(_visuallyHiddenScssJs);
function VisuallyHidden({ children  }) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _visuallyHiddenScssJsDefault.default.VisuallyHidden
    }, children));
}

},{"react":"6fep5","./VisuallyHidden.scss.js":"jGMEg","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jGMEg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "VisuallyHidden": "Polaris-VisuallyHidden"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9ztCP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PopoverCloseSource", ()=>_popoverOverlayJs.PopoverCloseSource
);
parcelHelpers.export(exports, "Popover", ()=>Popover
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _focusJs = require("../../utilities/focus.js");
var _sharedJs = require("../shared.js");
var _setActivatorAttributesJs = require("./set-activator-attributes.js");
var _portalJs = require("../Portal/Portal.js");
var _popoverOverlayJs = require("./components/PopoverOverlay/PopoverOverlay.js");
var _paneJs = require("./components/Pane/Pane.js");
var _sectionJs = require("./components/Section/Section.js");
var _hooksJs = require("../../utilities/unique-id/hooks.js");
// TypeScript can't generate types that correctly infer the typing of
// subcomponents so explicitly state the subcomponents in the type definition.
// Letting this be implicit works in this project but fails in projects that use
// generated *.d.ts files.
const PopoverComponent = /*#__PURE__*/ _react.forwardRef(function Popover({ activatorWrapper ='div' , children , onClose , activator , preventFocusOnClose , active , fixed , ariaHaspopup , preferInputActivator =true , colorScheme , zIndexOverride , ...rest }, ref) {
    const [activatorNode, setActivatorNode] = _react.useState();
    const overlayRef = _react.useRef(null);
    const activatorContainer = _react.useRef(null);
    const WrapperComponent = activatorWrapper;
    const id = _hooksJs.useUniqueId('popover');
    function forceUpdatePosition() {
        var _overlayRef$current;
        (_overlayRef$current = overlayRef.current) === null || _overlayRef$current === void 0 || _overlayRef$current.forceUpdatePosition();
    }
    _react.useImperativeHandle(ref, ()=>{
        return {
            forceUpdatePosition
        };
    });
    const setAccessibilityAttributes = _react.useCallback(()=>{
        if (activatorContainer.current == null) return;
        const firstFocusable = _focusJs.findFirstFocusableNodeIncludingDisabled(activatorContainer.current);
        const focusableActivator = firstFocusable || activatorContainer.current;
        const activatorDisabled = 'disabled' in focusableActivator && Boolean(focusableActivator.disabled);
        _setActivatorAttributesJs.setActivatorAttributes(focusableActivator, {
            id,
            active,
            ariaHaspopup,
            activatorDisabled
        });
    }, [
        id,
        active,
        ariaHaspopup
    ]);
    const handleClose = (source)=>{
        onClose(source);
        if (activatorContainer.current == null || preventFocusOnClose) return;
        if ((source === _popoverOverlayJs.PopoverCloseSource.FocusOut || source === _popoverOverlayJs.PopoverCloseSource.EscapeKeypress) && activatorNode) {
            const focusableActivator = _focusJs.findFirstFocusableNodeIncludingDisabled(activatorNode) || _focusJs.findFirstFocusableNodeIncludingDisabled(activatorContainer.current) || activatorContainer.current;
            if (!_focusJs.focusNextFocusableNode(focusableActivator, isInPortal)) focusableActivator.focus();
        }
    };
    _react.useEffect(()=>{
        if (!activatorNode && activatorContainer.current) setActivatorNode(activatorContainer.current.firstElementChild);
        else if (activatorNode && activatorContainer.current && !activatorContainer.current.contains(activatorNode)) setActivatorNode(activatorContainer.current.firstElementChild);
        setAccessibilityAttributes();
    }, [
        activatorNode,
        setAccessibilityAttributes
    ]);
    _react.useEffect(()=>{
        if (activatorNode && activatorContainer.current) setActivatorNode(activatorContainer.current.firstElementChild);
        setAccessibilityAttributes();
    }, [
        activatorNode,
        setAccessibilityAttributes
    ]);
    const portal = activatorNode ? /*#__PURE__*/ _reactDefault.default.createElement(_portalJs.Portal, {
        idPrefix: "popover"
    }, /*#__PURE__*/ _reactDefault.default.createElement(_popoverOverlayJs.PopoverOverlay, Object.assign({
        ref: overlayRef,
        id: id,
        activator: activatorNode,
        preferInputActivator: preferInputActivator,
        onClose: handleClose,
        active: active,
        fixed: fixed,
        colorScheme: colorScheme,
        zIndexOverride: zIndexOverride
    }, rest), children)) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement(WrapperComponent, {
        ref: activatorContainer
    }, _react.Children.only(activator), portal));
});
function isInPortal(element) {
    let parentElement = element.parentElement;
    while(parentElement){
        if (parentElement.matches(_sharedJs.portal.selector)) return false;
        parentElement = parentElement.parentElement;
    }
    return true;
}
const Popover = Object.assign(PopoverComponent, {
    Pane: _paneJs.Pane,
    Section: _sectionJs.Section
});

},{"react":"6fep5","../../utilities/focus.js":"gLDAi","../shared.js":"jYa7v","./set-activator-attributes.js":"38T90","../Portal/Portal.js":"6irv6","./components/PopoverOverlay/PopoverOverlay.js":"7M1Xa","./components/Pane/Pane.js":"c0Aw6","./components/Section/Section.js":"k4TTR","../../utilities/unique-id/hooks.js":"kPfFC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"38T90":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setActivatorAttributes", ()=>setActivatorAttributes
);
function setActivatorAttributes(activator, { id , active =false , ariaHaspopup , activatorDisabled =false  }) {
    if (!activatorDisabled) activator.tabIndex = activator.tabIndex || 0;
    activator.setAttribute('aria-controls', id);
    activator.setAttribute('aria-owns', id);
    activator.setAttribute('aria-expanded', String(active));
    if (ariaHaspopup != null) activator.setAttribute('aria-haspopup', String(ariaHaspopup));
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6irv6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Portal", ()=>Portal
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactDom = require("react-dom");
var _hooksJs = require("../../utilities/portals/hooks.js");
var _hooksJs1 = require("../../utilities/unique-id/hooks.js");
function Portal({ children , idPrefix ='' , onPortalCreated =noop  }) {
    const { container  } = _hooksJs.usePortalsManager();
    const uniqueId = _hooksJs1.useUniqueId('portal');
    const portalId = idPrefix !== '' ? `${idPrefix}-${uniqueId}` : uniqueId;
    _react.useEffect(()=>{
        onPortalCreated();
    }, [
        onPortalCreated
    ]);
    return container ? /*#__PURE__*/ _reactDom.createPortal(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        "data-portal-id": portalId
    }, children), container) : null;
}
function noop() {
}

},{"react":"6fep5","react-dom":"jVjHr","../../utilities/portals/hooks.js":"40zkf","../../utilities/unique-id/hooks.js":"kPfFC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"40zkf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "usePortalsManager", ()=>usePortalsManager
);
var _react = require("react");
var _contextJs = require("./context.js");
function usePortalsManager() {
    const portalsManager = _react.useContext(_contextJs.PortalsManagerContext);
    if (!portalsManager) throw new Error('No portals manager was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/structure/app-provider for implementation instructions.');
    return portalsManager;
}

},{"react":"6fep5","./context.js":"8cyRL","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kPfFC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useUniqueId", ()=>useUniqueId
);
var _react = require("react");
var _errorsJs = require("../errors.js");
var _contextJs = require("./context.js");
/**
 * Returns a unique id that remains consistent across multiple re-renders of the
 * same hook
 * @param prefix Defines a prefix for the ID. You probably want to set this to
 *   the name of the component you're calling `useUniqueId` in.
 * @param overrideId Defines a fixed value to use instead of generating a unique
 *   ID. Useful for components that allow consumers to specify their own ID.
 */ function useUniqueId(prefix = '', overrideId = '') {
    const idFactory = _react.useContext(_contextJs.UniqueIdFactoryContext); // By using a ref to store the uniqueId for each invocation of the hook and
    // checking that it is not already populated we ensure that we don’t generate
    // a new ID on every re-render of a component.
    const uniqueIdRef = _react.useRef(null);
    if (!idFactory) throw new _errorsJs.MissingAppProviderError('No UniqueIdFactory was provided.');
     // If an override was specified, then use that instead of using a unique ID
    // Hooks can’t be called conditionally so this has to go after all use* calls
    if (overrideId) return overrideId;
     // If a unique id has not yet been generated, then get a new one
    if (!uniqueIdRef.current) uniqueIdRef.current = idFactory.nextId(prefix);
    return uniqueIdRef.current;
}

},{"react":"6fep5","../errors.js":"cGYyH","./context.js":"5eXfO","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cGYyH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MissingAppProviderError", ()=>MissingAppProviderError
);
class MissingAppProviderError extends Error {
    constructor(message = ''){
        super(`${message ? `${message} ` : message}Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/structure/app-provider for implementation instructions.`);
        this.name = 'MissingAppProviderError';
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7M1Xa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PopoverCloseSource", ()=>PopoverCloseSource1
);
parcelHelpers.export(exports, "PopoverOverlay", ()=>PopoverOverlay
);
parcelHelpers.export(exports, "nodeContainsDescendant", ()=>nodeContainsDescendant
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisTokens = require("@shopify/polaris-tokens");
var _focusJs = require("../../../../utilities/focus.js");
var _cssJs = require("../../../../utilities/css.js");
var _componentsJs = require("../../../../utilities/components.js");
var _typesJs = require("../../../../types.js");
var _sharedJs = require("../../../shared.js");
var _popoverScssJs = require("../../Popover.scss.js");
var _popoverScssJsDefault = parcelHelpers.interopDefault(_popoverScssJs);
var _keypressListenerJs = require("../../../KeypressListener/KeypressListener.js");
var _positionedOverlayJs = require("../../../PositionedOverlay/PositionedOverlay.js");
var _paneJs = require("../Pane/Pane.js");
var _eventListenerJs = require("../../../EventListener/EventListener.js");
var _themeProviderJs = require("../../../ThemeProvider/ThemeProvider.js");
let PopoverCloseSource1;
(function(PopoverCloseSource) {
    PopoverCloseSource[PopoverCloseSource["Click"] = 0] = "Click";
    PopoverCloseSource[PopoverCloseSource["EscapeKeypress"] = 1] = "EscapeKeypress";
    PopoverCloseSource[PopoverCloseSource["FocusOut"] = 2] = "FocusOut";
    PopoverCloseSource[PopoverCloseSource["ScrollOut"] = 3] = "ScrollOut";
})(PopoverCloseSource1 || (PopoverCloseSource1 = {
}));
var TransitionStatus1;
(function(TransitionStatus) {
    TransitionStatus["Entering"] = "entering";
    TransitionStatus["Entered"] = "entered";
    TransitionStatus["Exiting"] = "exiting";
    TransitionStatus["Exited"] = "exited";
})(TransitionStatus1 || (TransitionStatus1 = {
}));
class PopoverOverlay extends _react.PureComponent {
    constructor(props1){
        super(props1);
        this.state = {
            transitionStatus: this.props.active ? TransitionStatus1.Entering : TransitionStatus1.Exited
        };
        this.contentNode = /*#__PURE__*/ _react.createRef();
        this.enteringTimer = void 0;
        this.exitingTimer = void 0;
        this.overlayRef = void 0;
        this.renderPopover = (overlayDetails)=>{
            const { measuring , desiredHeight , positioning  } = overlayDetails;
            const { id , children , sectioned , fullWidth , fullHeight , fluidContent , hideOnPrint , colorScheme , autofocusTarget  } = this.props;
            const className = _cssJs.classNames(_popoverScssJsDefault.default.Popover, positioning === 'above' && _popoverScssJsDefault.default.positionedAbove, fullWidth && _popoverScssJsDefault.default.fullWidth, measuring && _popoverScssJsDefault.default.measuring, hideOnPrint && _popoverScssJsDefault.default['PopoverOverlay-hideOnPrint']);
            const contentStyles = measuring ? undefined : {
                height: desiredHeight
            };
            const contentClassNames = _cssJs.classNames(_popoverScssJsDefault.default.Content, fullHeight && _popoverScssJsDefault.default['Content-fullHeight'], fluidContent && _popoverScssJsDefault.default['Content-fluidContent']);
            const content = /*#__PURE__*/ _reactDefault.default.createElement("div", {
                id: id,
                tabIndex: autofocusTarget === 'none' ? undefined : -1,
                className: contentClassNames,
                style: contentStyles,
                ref: this.contentNode
            }, renderPopoverContent(children, {
                sectioned
            }));
            return(/*#__PURE__*/ _reactDefault.default.createElement("div", Object.assign({
                className: className
            }, _sharedJs.overlay.props), /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
                event: "click",
                handler: this.handleClick
            }), /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
                event: "touchstart",
                handler: this.handleClick
            }), /*#__PURE__*/ _reactDefault.default.createElement(_keypressListenerJs.KeypressListener, {
                keyCode: _typesJs.Key.Escape,
                handler: this.handleEscape
            }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _popoverScssJsDefault.default.FocusTracker // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex
                ,
                tabIndex: 0,
                onFocus: this.handleFocusFirstItem
            }), /*#__PURE__*/ _reactDefault.default.createElement(_themeProviderJs.ThemeProvider, {
                alwaysRenderCustomProperties: true,
                theme: {
                    colorScheme
                }
            }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _popoverScssJsDefault.default.Wrapper
            }, content)), /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _popoverScssJsDefault.default.FocusTracker // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex
                ,
                tabIndex: 0,
                onFocus: this.handleFocusLastItem
            })));
        };
        this.handleClick = (event)=>{
            const target = event.target;
            const { contentNode , props: { activator , onClose  }  } = this;
            const isDescendant = contentNode.current != null && nodeContainsDescendant(contentNode.current, target);
            const isActivatorDescendant = nodeContainsDescendant(activator, target);
            if (isDescendant || isActivatorDescendant || this.state.transitionStatus !== TransitionStatus1.Entered) return;
            onClose(PopoverCloseSource1.Click);
        };
        this.handleScrollOut = ()=>{
            this.props.onClose(PopoverCloseSource1.ScrollOut);
        };
        this.handleEscape = ()=>{
            this.props.onClose(PopoverCloseSource1.EscapeKeypress);
        };
        this.handleFocusFirstItem = ()=>{
            this.props.onClose(PopoverCloseSource1.FocusOut);
        };
        this.handleFocusLastItem = ()=>{
            this.props.onClose(PopoverCloseSource1.FocusOut);
        };
        this.overlayRef = /*#__PURE__*/ _react.createRef();
    }
    forceUpdatePosition() {
        var _this$overlayRef$curr;
        (_this$overlayRef$curr = this.overlayRef.current) === null || _this$overlayRef$curr === void 0 || _this$overlayRef$curr.forceUpdatePosition();
    }
    changeTransitionStatus(transitionStatus, cb) {
        this.setState({
            transitionStatus
        }, cb); // Forcing a reflow to enable the animation
        this.contentNode.current && this.contentNode.current.getBoundingClientRect();
    }
    componentDidMount() {
        if (this.props.active) {
            this.focusContent();
            this.changeTransitionStatus(TransitionStatus1.Entered);
        }
    }
    componentDidUpdate(oldProps) {
        if (this.props.active && !oldProps.active) {
            this.focusContent();
            this.changeTransitionStatus(TransitionStatus1.Entering, ()=>{
                this.clearTransitionTimeout();
                this.enteringTimer = window.setTimeout(()=>{
                    this.setState({
                        transitionStatus: TransitionStatus1.Entered
                    });
                }, _polarisTokens.durationFast);
            });
        }
        if (!this.props.active && oldProps.active) this.changeTransitionStatus(TransitionStatus1.Exiting, ()=>{
            this.clearTransitionTimeout();
            this.exitingTimer = window.setTimeout(()=>{
                this.setState({
                    transitionStatus: TransitionStatus1.Exited
                });
            }, _polarisTokens.durationFast);
        });
    }
    componentWillUnmount() {
        this.clearTransitionTimeout();
    }
    render() {
        const { active , activator , fullWidth , preferredPosition ='below' , preferredAlignment ='center' , preferInputActivator =true , fixed , zIndexOverride  } = this.props;
        const { transitionStatus  } = this.state;
        if (transitionStatus === TransitionStatus1.Exited && !active) return null;
        const className = _cssJs.classNames(_popoverScssJsDefault.default.PopoverOverlay, transitionStatus === TransitionStatus1.Entering && _popoverScssJsDefault.default['PopoverOverlay-entering'], transitionStatus === TransitionStatus1.Entered && _popoverScssJsDefault.default['PopoverOverlay-open'], transitionStatus === TransitionStatus1.Exiting && _popoverScssJsDefault.default['PopoverOverlay-exiting']);
        return(/*#__PURE__*/ _reactDefault.default.createElement(_positionedOverlayJs.PositionedOverlay, {
            ref: this.overlayRef,
            fullWidth: fullWidth,
            active: active,
            activator: activator,
            preferInputActivator: preferInputActivator,
            preferredPosition: preferredPosition,
            preferredAlignment: preferredAlignment,
            render: this.renderPopover.bind(this),
            fixed: fixed,
            onScrollOut: this.handleScrollOut,
            classNames: className,
            zIndexOverride: zIndexOverride
        }));
    }
    clearTransitionTimeout() {
        if (this.enteringTimer) window.clearTimeout(this.enteringTimer);
        if (this.exitingTimer) window.clearTimeout(this.exitingTimer);
    }
    focusContent() {
        const { autofocusTarget ='container'  } = this.props;
        if (autofocusTarget === 'none' || this.contentNode == null) return;
        requestAnimationFrame(()=>{
            if (this.contentNode.current == null) return;
            const focusableChild = _focusJs.findFirstFocusableNode(this.contentNode.current);
            if (focusableChild && autofocusTarget === 'first-node') focusableChild.focus({
                preventScroll: true
            });
            else this.contentNode.current.focus({
                preventScroll: true
            });
        });
    }
}
function renderPopoverContent(children, props) {
    const childrenArray = _react.Children.toArray(children);
    if (_componentsJs.isElementOfType(childrenArray[0], _paneJs.Pane)) return childrenArray;
    return _componentsJs.wrapWithComponent(childrenArray, _paneJs.Pane, props);
}
function nodeContainsDescendant(rootNode, descendant) {
    if (rootNode === descendant) return true;
    let parent = descendant.parentNode;
    while(parent != null){
        if (parent === rootNode) return true;
        parent = parent.parentNode;
    }
    return false;
}

},{"react":"6fep5","@shopify/polaris-tokens":"lyXEP","../../../../utilities/focus.js":"gLDAi","../../../../utilities/css.js":"kYdwV","../../../../utilities/components.js":"6E8xC","../../../../types.js":"atQnH","../../../shared.js":"jYa7v","../../Popover.scss.js":"lcOF5","../../../KeypressListener/KeypressListener.js":"2doU0","../../../PositionedOverlay/PositionedOverlay.js":"6aBMP","../Pane/Pane.js":"c0Aw6","../../../EventListener/EventListener.js":"gpcxo","../../../ThemeProvider/ThemeProvider.js":"10qny","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6E8xC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ConditionalRender", ()=>ConditionalRender
);
parcelHelpers.export(exports, "ConditionalWrapper", ()=>ConditionalWrapper
);
parcelHelpers.export(exports, "elementChildren", ()=>elementChildren
);
parcelHelpers.export(exports, "isElementOfType", ()=>isElementOfType
);
parcelHelpers.export(exports, "wrapWithComponent", ()=>wrapWithComponent
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
// `Component`. If `props` is passed, those will be added as props on the
// wrapped component. If `element` is null, the component is not wrapped.
function wrapWithComponent(element, Component, props) {
    if (element == null) return null;
    return isElementOfType(element, Component) ? element : /*#__PURE__*/ _reactDefault.default.createElement(Component, props, element);
} // In development, we compare based on the name of the function because
// React Hot Loader proxies React components in order to make updates. In
// production we can simply compare the components for equality.
const isComponent = hotReloadComponentCheck; // Checks whether `element` is a React element of type `Component` (or one of
// the passed components, if `Component` is an array of React components).
function isElementOfType(element, Component) {
    var _element$props;
    if (element == null || !/*#__PURE__*/ _react.isValidElement(element) || typeof element.type === 'string') return false;
    const { type: defaultType  } = element; // Type override allows components to bypass default wrapping behavior. Ex: Stack, ResourceList...
    // See https://github.com/Shopify/app-extension-libs/issues/996#issuecomment-710437088
    const overrideType = (_element$props = element.props) === null || _element$props === void 0 ? void 0 : _element$props.__type__;
    const type = overrideType || defaultType;
    const Components = Array.isArray(Component) ? Component : [
        Component
    ];
    return Components.some((AComponent)=>typeof type !== 'string' && isComponent(AComponent, type)
    );
} // Returns all children that are valid elements as an array. Can optionally be
// filtered by passing `predicate`.
function elementChildren(children, predicate = ()=>true
) {
    return _react.Children.toArray(children).filter((child)=>/*#__PURE__*/ _react.isValidElement(child) && predicate(child)
    );
}
function ConditionalWrapper({ condition , wrapper , children  }) {
    return condition ? wrapper(children) : children;
}
function ConditionalRender({ condition , children  }) {
    return condition ? children : null;
}
function hotReloadComponentCheck(AComponent, AnotherComponent) {
    const componentName = AComponent.name;
    const anotherComponentName = AnotherComponent.displayName;
    return AComponent === AnotherComponent || Boolean(componentName) && componentName === anotherComponentName;
}

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lcOF5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Popover": "Polaris-Popover",
    "PopoverOverlay": "Polaris-Popover__PopoverOverlay",
    "PopoverOverlay-entering": "Polaris-Popover__PopoverOverlay--entering",
    "PopoverOverlay-open": "Polaris-Popover__PopoverOverlay--open",
    "PopoverOverlay-exiting": "Polaris-Popover__PopoverOverlay--exiting",
    "measuring": "Polaris-Popover--measuring",
    "fullWidth": "Polaris-Popover--fullWidth",
    "Content": "Polaris-Popover__Content",
    "positionedAbove": "Polaris-Popover--positionedAbove",
    "Wrapper": "Polaris-Popover__Wrapper",
    "Content-fullHeight": "Polaris-Popover__Content--fullHeight",
    "Content-fluidContent": "Polaris-Popover__Content--fluidContent",
    "Pane": "Polaris-Popover__Pane",
    "Pane-fixed": "Polaris-Popover__Pane--fixed",
    "Section": "Polaris-Popover__Section",
    "FocusTracker": "Polaris-Popover__FocusTracker",
    "PopoverOverlay-hideOnPrint": "Polaris-Popover__PopoverOverlay--hideOnPrint"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2doU0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "KeypressListener", ()=>KeypressListener
);
var _react = require("react");
var _useIsomorphicLayoutEffectJs = require("../../utilities/use-isomorphic-layout-effect.js");
function KeypressListener({ keyCode: keyCode1 , handler: handler1 , keyEvent ='keyup'  }) {
    const tracked = _react.useRef({
        handler: handler1,
        keyCode: keyCode1
    });
    _useIsomorphicLayoutEffectJs.useIsomorphicLayoutEffect(()=>{
        tracked.current = {
            handler: handler1,
            keyCode: keyCode1
        };
    }, [
        handler1,
        keyCode1
    ]);
    const handleKeyEvent = _react.useCallback((event)=>{
        const { handler , keyCode  } = tracked.current;
        if (event.keyCode === keyCode) handler(event);
    }, []);
    _react.useEffect(()=>{
        document.addEventListener(keyEvent, handleKeyEvent);
        return ()=>{
            document.removeEventListener(keyEvent, handleKeyEvent);
        };
    }, [
        keyEvent,
        handleKeyEvent
    ]);
    return null;
}

},{"react":"6fep5","../../utilities/use-isomorphic-layout-effect.js":"9o5ZG","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9o5ZG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useIsomorphicLayoutEffect", ()=>useIsomorphicLayoutEffect
);
var _react = require("react");
var _targetJs = require("./target.js");
const useIsomorphicLayoutEffect = _targetJs.isServer ? _react.useEffect : _react.useLayoutEffect;

},{"react":"6fep5","./target.js":"gqfy9","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6aBMP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PositionedOverlay", ()=>PositionedOverlay
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _geometryJs = require("../../utilities/geometry.js");
var _sharedJs = require("../shared.js");
var _mathJs = require("./utilities/math.js");
var _positionedOverlayScssJs = require("./PositionedOverlay.scss.js");
var _positionedOverlayScssJsDefault = parcelHelpers.interopDefault(_positionedOverlayScssJs);
var _scrollableJs = require("../Scrollable/Scrollable.js");
var _eventListenerJs = require("../EventListener/EventListener.js");
const OBSERVER_CONFIG = {
    childList: true,
    subtree: true,
    characterData: true
};
class PositionedOverlay extends _react.PureComponent {
    constructor(props){
        super(props);
        this.state = {
            measuring: true,
            activatorRect: _geometryJs.getRectForNode(this.props.activator),
            right: undefined,
            left: undefined,
            top: 0,
            height: 0,
            width: null,
            positioning: 'below',
            zIndex: null,
            outsideScrollableContainer: false,
            lockPosition: false
        };
        this.overlay = null;
        this.scrollableContainer = null;
        this.observer = void 0;
        this.overlayDetails = ()=>{
            const { measuring , left , right , positioning , height , activatorRect  } = this.state;
            return {
                measuring,
                left,
                right,
                desiredHeight: height,
                positioning,
                activatorRect
            };
        };
        this.setOverlay = (node)=>{
            this.overlay = node;
        };
        this.handleMeasurement = ()=>{
            const { lockPosition , top: top1  } = this.state;
            this.observer.disconnect();
            this.setState(({ left , top , right  })=>({
                    left,
                    right,
                    top,
                    height: 0,
                    positioning: 'below',
                    measuring: true
                })
            , ()=>{
                if (this.overlay == null || this.scrollableContainer == null) return;
                const { activator , preferredPosition ='below' , preferredAlignment ='center' , onScrollOut , fullWidth , fixed , preferInputActivator =true  } = this.props;
                const preferredActivator = preferInputActivator ? activator.querySelector('input') || activator : activator;
                const activatorRect = _geometryJs.getRectForNode(preferredActivator);
                const currentOverlayRect = _geometryJs.getRectForNode(this.overlay);
                const scrollableElement = isDocument(this.scrollableContainer) ? document.body : this.scrollableContainer;
                const scrollableContainerRect = _geometryJs.getRectForNode(scrollableElement);
                const overlayRect = fullWidth ? new _geometryJs.Rect({
                    ...currentOverlayRect,
                    width: activatorRect.width
                }) : currentOverlayRect; // If `body` is 100% height, it still acts as though it were not constrained to that size. This adjusts for that.
                if (scrollableElement === document.body) scrollableContainerRect.height = document.body.scrollHeight;
                let topBarOffset = 0;
                const topBarElement = scrollableElement.querySelector(`${_sharedJs.dataPolarisTopBar.selector}`);
                if (topBarElement) topBarOffset = topBarElement.clientHeight;
                const overlayMargins = this.overlay.firstElementChild && this.overlay.firstChild instanceof HTMLElement ? getMarginsForNode(this.overlay.firstElementChild) : {
                    activator: 0,
                    container: 0,
                    horizontal: 0
                };
                const containerRect = _mathJs.windowRect();
                const zIndexForLayer = getZIndexForLayerFromNode(activator);
                const zIndex = zIndexForLayer == null ? zIndexForLayer : zIndexForLayer + 1;
                const verticalPosition = _mathJs.calculateVerticalPosition(activatorRect, overlayRect, overlayMargins, scrollableContainerRect, containerRect, preferredPosition, fixed, topBarOffset);
                const horizontalPosition = _mathJs.calculateHorizontalPosition(activatorRect, overlayRect, containerRect, overlayMargins, preferredAlignment);
                this.setState({
                    measuring: false,
                    activatorRect: _geometryJs.getRectForNode(activator),
                    left: preferredAlignment !== 'right' ? horizontalPosition : undefined,
                    right: preferredAlignment === 'right' ? horizontalPosition : undefined,
                    top: lockPosition ? top1 : verticalPosition.top,
                    lockPosition: Boolean(fixed),
                    height: verticalPosition.height || 0,
                    width: fullWidth ? overlayRect.width : null,
                    positioning: verticalPosition.positioning,
                    outsideScrollableContainer: onScrollOut != null && _mathJs.rectIsOutsideOfRect(activatorRect, _mathJs.intersectionWithViewport(scrollableContainerRect)),
                    zIndex
                }, ()=>{
                    if (!this.overlay) return;
                    this.observer.observe(this.overlay, OBSERVER_CONFIG);
                    this.observer.observe(activator, OBSERVER_CONFIG);
                });
            });
        };
        this.observer = new MutationObserver(this.handleMeasurement);
    }
    componentDidMount() {
        this.scrollableContainer = _scrollableJs.Scrollable.forNode(this.props.activator);
        if (this.scrollableContainer && !this.props.fixed) this.scrollableContainer.addEventListener('scroll', this.handleMeasurement);
        this.handleMeasurement();
    }
    componentWillUnmount() {
        if (this.scrollableContainer && !this.props.fixed) this.scrollableContainer.removeEventListener('scroll', this.handleMeasurement);
    }
    componentDidUpdate() {
        const { outsideScrollableContainer , top  } = this.state;
        const { onScrollOut , active  } = this.props;
        if (active && onScrollOut != null && top !== 0 && outsideScrollableContainer) onScrollOut();
    }
    render() {
        const { left , right , top , zIndex , width  } = this.state;
        const { render , fixed , preventInteraction , classNames: propClassNames , zIndexOverride  } = this.props;
        const style = {
            top: top == null || isNaN(top) ? undefined : top,
            left: left == null || isNaN(left) ? undefined : left,
            right: right == null || isNaN(right) ? undefined : right,
            width: width == null || isNaN(width) ? undefined : width,
            zIndex: zIndexOverride || zIndex || undefined
        };
        const className = _cssJs.classNames(_positionedOverlayScssJsDefault.default.PositionedOverlay, fixed && _positionedOverlayScssJsDefault.default.fixed, preventInteraction && _positionedOverlayScssJsDefault.default.preventInteraction, propClassNames);
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: className,
            style: style,
            ref: this.setOverlay
        }, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            event: "resize",
            handler: this.handleMeasurement
        }), render(this.overlayDetails())));
    }
    forceUpdatePosition() {
        // Wait a single animation frame before re-measuring.
        // Consumer's may also need to setup their own timers for
        // triggering forceUpdatePosition() `children` use animation.
        // Ideally, forceUpdatePosition() is fired at the end of a transition event.
        requestAnimationFrame(this.handleMeasurement);
    }
}
function getMarginsForNode(node) {
    const nodeStyles = window.getComputedStyle(node);
    return {
        activator: parseFloat(nodeStyles.marginTop || '0'),
        container: parseFloat(nodeStyles.marginBottom || '0'),
        horizontal: parseFloat(nodeStyles.marginLeft || '0')
    };
}
function getZIndexForLayerFromNode(node) {
    const layerNode = node.closest(_sharedJs.layer.selector) || document.body;
    const zIndex = layerNode === document.body ? 'auto' : parseInt(window.getComputedStyle(layerNode).zIndex || '0', 10);
    return zIndex === 'auto' || isNaN(zIndex) ? null : zIndex;
}
function isDocument(node) {
    return node === document;
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","../../utilities/geometry.js":"jJS9C","../shared.js":"jYa7v","./utilities/math.js":"4WDgJ","./PositionedOverlay.scss.js":"1Depm","../Scrollable/Scrollable.js":"6lHzT","../EventListener/EventListener.js":"gpcxo","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4WDgJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "calculateHorizontalPosition", ()=>calculateHorizontalPosition
);
parcelHelpers.export(exports, "calculateVerticalPosition", ()=>calculateVerticalPosition
);
parcelHelpers.export(exports, "intersectionWithViewport", ()=>intersectionWithViewport
);
parcelHelpers.export(exports, "rectIsOutsideOfRect", ()=>rectIsOutsideOfRect
);
parcelHelpers.export(exports, "windowRect", ()=>windowRect
);
var _geometryJs = require("../../../utilities/geometry.js");
function calculateVerticalPosition(activatorRect, overlayRect, overlayMargins, scrollableContainerRect, containerRect, preferredPosition, fixed, topBarOffset = 0) {
    const activatorTop = activatorRect.top;
    const activatorBottom = activatorTop + activatorRect.height;
    const spaceAbove = activatorRect.top - topBarOffset;
    const spaceBelow = containerRect.height - activatorRect.top - activatorRect.height;
    const desiredHeight = overlayRect.height;
    const verticalMargins = overlayMargins.activator + overlayMargins.container;
    const minimumSpaceToScroll = overlayMargins.container;
    const distanceToTopScroll = activatorRect.top - Math.max(scrollableContainerRect.top, 0);
    const distanceToBottomScroll = containerRect.top + Math.min(containerRect.height, scrollableContainerRect.top + scrollableContainerRect.height) - (activatorRect.top + activatorRect.height);
    const enoughSpaceFromTopScroll = distanceToTopScroll >= minimumSpaceToScroll;
    const enoughSpaceFromBottomScroll = distanceToBottomScroll >= minimumSpaceToScroll;
    const heightIfBelow = Math.min(spaceBelow, desiredHeight);
    const heightIfAbove = Math.min(spaceAbove, desiredHeight);
    const containerRectTop = fixed ? 0 : containerRect.top;
    const positionIfAbove = {
        height: heightIfAbove - verticalMargins,
        top: activatorTop + containerRectTop - heightIfAbove,
        positioning: 'above'
    };
    const positionIfBelow = {
        height: heightIfBelow - verticalMargins,
        top: activatorBottom + containerRectTop,
        positioning: 'below'
    };
    if (preferredPosition === 'above') return (enoughSpaceFromTopScroll || distanceToTopScroll >= distanceToBottomScroll && !enoughSpaceFromBottomScroll) && (spaceAbove > desiredHeight || spaceAbove > spaceBelow) ? positionIfAbove : positionIfBelow;
    if (preferredPosition === 'below') return (enoughSpaceFromBottomScroll || distanceToBottomScroll >= distanceToTopScroll && !enoughSpaceFromTopScroll) && (spaceBelow > desiredHeight || spaceBelow > spaceAbove) ? positionIfBelow : positionIfAbove;
    if (enoughSpaceFromTopScroll && enoughSpaceFromBottomScroll) return spaceAbove > spaceBelow ? positionIfAbove : positionIfBelow;
    return distanceToTopScroll > minimumSpaceToScroll ? positionIfAbove : positionIfBelow;
}
function calculateHorizontalPosition(activatorRect, overlayRect, containerRect, overlayMargins, preferredAlignment) {
    const maximum = containerRect.width - overlayRect.width;
    if (preferredAlignment === 'left') return Math.min(maximum, Math.max(0, activatorRect.left - overlayMargins.horizontal));
    else if (preferredAlignment === 'right') {
        const activatorRight = containerRect.width - (activatorRect.left + activatorRect.width);
        return Math.min(maximum, Math.max(0, activatorRight - overlayMargins.horizontal));
    }
    return Math.min(maximum, Math.max(0, activatorRect.center.x - overlayRect.width / 2));
}
function rectIsOutsideOfRect(inner, outer) {
    const { center  } = inner;
    return center.y < outer.top || center.y > outer.top + outer.height;
}
function intersectionWithViewport(rect, viewport = windowRect()) {
    const top = Math.max(rect.top, 0);
    const left = Math.max(rect.left, 0);
    const bottom = Math.min(rect.top + rect.height, viewport.height);
    const right = Math.min(rect.left + rect.width, viewport.width);
    return new _geometryJs.Rect({
        top,
        left,
        height: bottom - top,
        width: right - left
    });
}
function windowRect() {
    return new _geometryJs.Rect({
        top: window.scrollY,
        left: window.scrollX,
        height: window.innerHeight,
        width: document.body.clientWidth
    });
}

},{"../../../utilities/geometry.js":"jJS9C","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1Depm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "PositionedOverlay": "Polaris-PositionedOverlay",
    "fixed": "Polaris-PositionedOverlay--fixed",
    "calculating": "Polaris-PositionedOverlay--calculating",
    "preventInteraction": "Polaris-PositionedOverlay--preventInteraction"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6lHzT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Scrollable", ()=>Scrollable
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _cssJs = require("../../utilities/css.js");
var _sharedJs = require("../shared.js");
var _contextJs = require("./context.js");
var _scrollableScssJs = require("./Scrollable.scss.js");
var _scrollableScssJsDefault = parcelHelpers.interopDefault(_scrollableScssJs);
var _scrollToJs = require("./components/ScrollTo/ScrollTo.js");
var _stickyManagerJs = require("../../utilities/sticky-manager/sticky-manager.js");
var _contextJs1 = require("../../utilities/sticky-manager/context.js");
const MAX_SCROLL_DISTANCE = 100;
const DELTA_THRESHOLD = 0.2;
const DELTA_PERCENTAGE = 0.2;
const EVENTS_TO_LOCK = [
    'scroll',
    'touchmove',
    'wheel'
];
const PREFERS_REDUCED_MOTION = prefersReducedMotion();
const LOW_RES_BUFFER = 2;
class Scrollable extends _react.Component {
    constructor(...args){
        super(...args);
        this.state = {
            topShadow: false,
            bottomShadow: false,
            scrollPosition: 0,
            canScroll: false
        };
        this.stickyManager = new _stickyManagerJs.StickyManager();
        this.scrollArea = null;
        this.handleResize = _debounceDefault.default(()=>{
            this.handleScroll();
        }, 50, {
            trailing: true
        });
        this.setScrollArea = (scrollArea)=>{
            this.scrollArea = scrollArea;
        };
        this.handleScroll = ()=>{
            const { scrollArea  } = this;
            const { scrollPosition  } = this.state;
            const { shadow , onScrolledToBottom  } = this.props;
            if (scrollArea == null) return;
            const { scrollTop , clientHeight , scrollHeight  } = scrollArea;
            const shouldBottomShadow = Boolean(shadow && !(scrollTop + clientHeight >= scrollHeight));
            const shouldTopShadow = Boolean(shadow && scrollTop > 0 && scrollPosition > 0);
            const canScroll = scrollHeight > clientHeight;
            const hasScrolledToBottom = scrollHeight - scrollTop <= clientHeight + LOW_RES_BUFFER;
            if (canScroll && hasScrolledToBottom && onScrolledToBottom) onScrolledToBottom();
            this.setState({
                topShadow: shouldTopShadow,
                bottomShadow: shouldBottomShadow,
                scrollPosition: scrollTop,
                canScroll
            });
        };
        this.scrollHint = ()=>{
            const { scrollArea  } = this;
            if (scrollArea == null) return;
            const { clientHeight , scrollHeight  } = scrollArea;
            if (PREFERS_REDUCED_MOTION || this.state.scrollPosition > 0 || scrollHeight <= clientHeight) return;
            const scrollDistance = scrollHeight - clientHeight;
            this.toggleLock();
            this.setState({
                scrollPosition: scrollDistance > MAX_SCROLL_DISTANCE ? MAX_SCROLL_DISTANCE : scrollDistance
            }, ()=>{
                window.requestAnimationFrame(this.scrollStep);
            });
        };
        this.scrollStep = ()=>{
            this.setState(({ scrollPosition  })=>{
                const delta = scrollPosition * DELTA_PERCENTAGE;
                return {
                    scrollPosition: delta < DELTA_THRESHOLD ? 0 : scrollPosition - delta
                };
            }, ()=>{
                if (this.state.scrollPosition > 0) window.requestAnimationFrame(this.scrollStep);
                else this.toggleLock(false);
            });
        };
        this.scrollToPosition = (scrollY)=>{
            this.setState({
                scrollPosition: scrollY
            });
        };
    }
    static forNode(node) {
        const closestElement = node.closest(_sharedJs.scrollable.selector);
        return closestElement instanceof HTMLElement ? closestElement : document;
    }
    componentDidMount() {
        if (this.scrollArea == null) return;
        this.stickyManager.setContainer(this.scrollArea);
        this.scrollArea.addEventListener('scroll', ()=>{
            window.requestAnimationFrame(this.handleScroll);
        });
        window.addEventListener('resize', this.handleResize);
        window.requestAnimationFrame(()=>{
            this.handleScroll();
            if (this.props.hint) this.scrollHint();
        });
    }
    componentWillUnmount() {
        if (this.scrollArea == null) return;
        this.scrollArea.removeEventListener('scroll', this.handleScroll);
        window.removeEventListener('resize', this.handleResize);
        this.stickyManager.removeScrollListener();
    }
    componentDidUpdate() {
        const { scrollPosition  } = this.state;
        if (scrollPosition && this.scrollArea && scrollPosition > 0) this.scrollArea.scrollTop = scrollPosition;
    }
    render() {
        const { topShadow , bottomShadow , canScroll  } = this.state;
        const { children , className , horizontal , vertical =true , shadow , hint , focusable , onScrolledToBottom , ...rest } = this.props;
        const finalClassName = _cssJs.classNames(className, _scrollableScssJsDefault.default.Scrollable, vertical && _scrollableScssJsDefault.default.vertical, horizontal && _scrollableScssJsDefault.default.horizontal, topShadow && _scrollableScssJsDefault.default.hasTopShadow, bottomShadow && _scrollableScssJsDefault.default.hasBottomShadow, vertical && canScroll && _scrollableScssJsDefault.default.verticalHasScrolling);
        return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.ScrollableContext.Provider, {
            value: this.scrollToPosition
        }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs1.StickyManagerContext.Provider, {
            value: this.stickyManager
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", Object.assign({
            className: finalClassName
        }, _sharedJs.scrollable.props, rest, {
            ref: this.setScrollArea // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex
            ,
            tabIndex: focusable ? 0 : undefined
        }), children))));
    }
    toggleLock(shouldLock = true) {
        const { scrollArea  } = this;
        if (scrollArea == null) return;
        EVENTS_TO_LOCK.forEach((eventName)=>{
            if (shouldLock) scrollArea.addEventListener(eventName, prevent);
            else scrollArea.removeEventListener(eventName, prevent);
        });
    }
}
Scrollable.ScrollTo = _scrollToJs.ScrollTo;
function prevent(evt) {
    evt.preventDefault();
}
function prefersReducedMotion() {
    try {
        return window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    } catch (err) {
        return false;
    }
}

},{"react":"6fep5","lodash/debounce":"a9ymG","../../utilities/css.js":"kYdwV","../shared.js":"jYa7v","./context.js":"5pvg4","./Scrollable.scss.js":"2RSxL","./components/ScrollTo/ScrollTo.js":"a7gAL","../../utilities/sticky-manager/sticky-manager.js":"97nir","../../utilities/sticky-manager/context.js":"2p59M","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5pvg4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ScrollableContext", ()=>ScrollableContext
);
var _react = require("react");
const ScrollableContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2RSxL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Scrollable": "Polaris-Scrollable",
    "horizontal": "Polaris-Scrollable--horizontal",
    "vertical": "Polaris-Scrollable--vertical",
    "verticalHasScrolling": "Polaris-Scrollable--verticalHasScrolling",
    "hasTopShadow": "Polaris-Scrollable--hasTopShadow",
    "hasBottomShadow": "Polaris-Scrollable--hasBottomShadow"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"a7gAL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ScrollTo", ()=>ScrollTo
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _contextJs = require("../../context.js");
var _hooksJs = require("../../../../utilities/unique-id/hooks.js");
function ScrollTo() {
    const anchorNode = _react.useRef(null);
    const scrollToPosition = _react.useContext(_contextJs.ScrollableContext);
    _react.useEffect(()=>{
        if (!scrollToPosition || !anchorNode.current) return;
        scrollToPosition(anchorNode.current.offsetTop);
    }, [
        scrollToPosition
    ]);
    const id = _hooksJs.useUniqueId(`ScrollTo`); // eslint-disable-next-line jsx-a11y/anchor-is-valid
    return(/*#__PURE__*/ _reactDefault.default.createElement("a", {
        id: id,
        ref: anchorNode
    }));
}

},{"react":"6fep5","../../context.js":"5pvg4","../../../../utilities/unique-id/hooks.js":"kPfFC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"c0Aw6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Pane", ()=>Pane
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _componentsJs = require("../../../../utilities/components.js");
var _popoverScssJs = require("../../Popover.scss.js");
var _popoverScssJsDefault = parcelHelpers.interopDefault(_popoverScssJs);
var _sectionJs = require("../Section/Section.js");
var _scrollableJs = require("../../../Scrollable/Scrollable.js");
function Pane({ fixed , sectioned , children , onScrolledToBottom  }) {
    const className = _cssJs.classNames(_popoverScssJsDefault.default.Pane, fixed && _popoverScssJsDefault.default['Pane-fixed']);
    const content = sectioned ? _componentsJs.wrapWithComponent(children, _sectionJs.Section, {
    }) : children;
    return fixed ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, content) : /*#__PURE__*/ _reactDefault.default.createElement(_scrollableJs.Scrollable, {
        shadow: true,
        className: className,
        onScrolledToBottom: onScrolledToBottom
    }, content);
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/components.js":"6E8xC","../../Popover.scss.js":"lcOF5","../Section/Section.js":"k4TTR","../../../Scrollable/Scrollable.js":"6lHzT","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"k4TTR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Section", ()=>Section
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _popoverScssJs = require("../../Popover.scss.js");
var _popoverScssJsDefault = parcelHelpers.interopDefault(_popoverScssJs);
function Section({ children  }) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _popoverScssJsDefault.default.Section
    }, children));
}

},{"react":"6fep5","../../Popover.scss.js":"lcOF5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eTtta":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ActionList", ()=>ActionList
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _actionListScssJs = require("./ActionList.scss.js");
var _actionListScssJsDefault = parcelHelpers.interopDefault(_actionListScssJs);
var _sectionJs = require("./components/Section/Section.js");
function ActionList({ items , sections =[] , actionRole , onActionAnyItem  }) {
    let finalSections = [];
    if (items) finalSections = [
        {
            items
        },
        ...sections
    ];
    else if (sections) finalSections = sections;
    const className = _cssJs.classNames(_actionListScssJsDefault.default.ActionList);
    const hasMultipleSections = finalSections.length > 1;
    const Element = hasMultipleSections ? 'ul' : 'div';
    const sectionMarkup = finalSections.map((section, index)=>{
        return section.items.length > 0 ? /*#__PURE__*/ _reactDefault.default.createElement(_sectionJs.Section, {
            key: section.title || index,
            firstSection: index === 0,
            section: section,
            hasMultipleSections: hasMultipleSections,
            actionRole: actionRole,
            onActionAnyItem: onActionAnyItem
        }) : null;
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement(Element, {
        className: className
    }, sectionMarkup));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./ActionList.scss.js":"a3ERf","./components/Section/Section.js":"2ZFBe","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"a3ERf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ActionList": "Polaris-ActionList",
    "Section-withoutTitle": "Polaris-ActionList__Section--withoutTitle",
    "Actions": "Polaris-ActionList__Actions",
    "Section": "Polaris-ActionList__Section",
    "Title": "Polaris-ActionList__Title",
    "firstSectionWithTitle": "Polaris-ActionList--firstSectionWithTitle",
    "Item": "Polaris-ActionList__Item",
    "active": "Polaris-ActionList--active",
    "destructive": "Polaris-ActionList--destructive",
    "disabled": "Polaris-ActionList--disabled",
    "Prefix": "Polaris-ActionList__Prefix",
    "Suffix": "Polaris-ActionList__Suffix",
    "Content": "Polaris-ActionList__Content",
    "ContentBlock": "Polaris-ActionList__ContentBlock",
    "ContentBlockInner": "Polaris-ActionList__ContentBlockInner",
    "Text": "Polaris-ActionList__Text"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2ZFBe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Section", ()=>Section
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _actionListScssJs = require("../../ActionList.scss.js");
var _actionListScssJsDefault = parcelHelpers.interopDefault(_actionListScssJs);
var _itemJs = require("../Item/Item.js");
function Section({ section , hasMultipleSections , actionRole , firstSection , onActionAnyItem  }) {
    const handleAction = (itemOnAction)=>{
        return ()=>{
            if (itemOnAction) itemOnAction();
            if (onActionAnyItem) onActionAnyItem();
        };
    };
    const actionMarkup = section.items.map(({ content , helpText , onAction , ...item }, index)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement(_itemJs.Item, Object.assign({
            key: `${content}-${index}`,
            content: content,
            helpText: helpText,
            role: actionRole,
            onAction: handleAction(onAction)
        }, item)));
    });
    const className = section.title ? undefined : _actionListScssJsDefault.default['Section-withoutTitle'];
    const titleClassName = _cssJs.classNames(_actionListScssJsDefault.default.Title, firstSection && _actionListScssJsDefault.default.firstSectionWithTitle);
    const titleMarkup = section.title ? /*#__PURE__*/ _reactDefault.default.createElement("p", {
        className: titleClassName
    }, section.title) : null;
    const sectionRole = actionRole === 'option' ? 'presentation' : undefined;
    const sectionMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, titleMarkup, /*#__PURE__*/ _reactDefault.default.createElement("ul", {
        className: _actionListScssJsDefault.default.Actions,
        role: sectionRole
    }, actionMarkup));
    return hasMultipleSections ? /*#__PURE__*/ _reactDefault.default.createElement("li", {
        className: _actionListScssJsDefault.default.Section
    }, sectionMarkup) : sectionMarkup;
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../ActionList.scss.js":"a3ERf","../Item/Item.js":"1C0rt","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1C0rt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Item", ()=>Item
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _actionListScssJs = require("../../ActionList.scss.js");
var _actionListScssJsDefault = parcelHelpers.interopDefault(_actionListScssJs);
var _focusJs = require("../../../../utilities/focus.js");
var _iconJs = require("../../../Icon/Icon.js");
var _textStyleJs = require("../../../TextStyle/TextStyle.js");
var _badgeJs = require("../../../Badge/Badge.js");
var _unstyledLinkJs = require("../../../UnstyledLink/UnstyledLink.js");
var _scrollableJs = require("../../../Scrollable/Scrollable.js");
function Item({ id , badge , content , accessibilityLabel , helpText , url , onAction , icon , image , prefix , suffix , disabled , external , destructive , ellipsis , active , role  }) {
    const className = _cssJs.classNames(_actionListScssJsDefault.default.Item, disabled && _actionListScssJsDefault.default.disabled, destructive && _actionListScssJsDefault.default.destructive, active && _actionListScssJsDefault.default.active);
    let prefixMarkup = null;
    if (prefix) prefixMarkup = /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _actionListScssJsDefault.default.Prefix
    }, prefix);
    else if (icon) prefixMarkup = /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _actionListScssJsDefault.default.Prefix
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: icon
    }));
    else if (image) prefixMarkup = /*#__PURE__*/ _reactDefault.default.createElement("span", {
        role: "presentation",
        className: _actionListScssJsDefault.default.Prefix,
        style: {
            backgroundImage: `url(${image}`
        }
    });
    const contentText = ellipsis && content ? `${content}…` : content;
    const contentMarkup = helpText ? /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _actionListScssJsDefault.default.ContentBlock
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _actionListScssJsDefault.default.ContentBlockInner
    }, contentText), /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, {
        variation: "subdued"
    }, helpText)) : contentText;
    const badgeMarkup = badge && /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _actionListScssJsDefault.default.Suffix
    }, /*#__PURE__*/ _reactDefault.default.createElement(_badgeJs.Badge, {
        status: badge.status
    }, badge.content));
    const suffixMarkup = suffix && /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _actionListScssJsDefault.default.Suffix
    }, suffix);
    const textMarkup = /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _actionListScssJsDefault.default.Text
    }, contentMarkup);
    const contentElement = /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _actionListScssJsDefault.default.Content
    }, prefixMarkup, textMarkup, badgeMarkup, suffixMarkup);
    const scrollMarkup = active ? /*#__PURE__*/ _reactDefault.default.createElement(_scrollableJs.Scrollable.ScrollTo, null) : null;
    const control = url ? /*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, {
        id: id,
        url: disabled ? null : url,
        className: className,
        external: external,
        "aria-label": accessibilityLabel,
        onClick: disabled ? null : onAction
    }, contentElement) : /*#__PURE__*/ _reactDefault.default.createElement("button", {
        id: id,
        type: "button",
        className: className,
        disabled: disabled,
        "aria-label": accessibilityLabel,
        onClick: onAction,
        onMouseUp: _focusJs.handleMouseUpByBlurring
    }, contentElement);
    return(/*#__PURE__*/ _reactDefault.default.createElement("li", {
        role: role
    }, scrollMarkup, control));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../ActionList.scss.js":"a3ERf","../../../../utilities/focus.js":"gLDAi","../../../Icon/Icon.js":"flzpR","../../../TextStyle/TextStyle.js":"cC66D","../../../Badge/Badge.js":"hM2Xf","../../../UnstyledLink/UnstyledLink.js":"8AMgX","../../../Scrollable/Scrollable.js":"6lHzT","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"flzpR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Icon", ()=>Icon
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _iconScssJs = require("./Icon.scss.js");
var _iconScssJsDefault = parcelHelpers.interopDefault(_iconScssJs);
var _visuallyHiddenJs = require("../VisuallyHidden/VisuallyHidden.js");
const COLORS_WITH_BACKDROPS = [
    'base',
    'critical',
    'highlight',
    'success',
    'warning'
];
function Icon({ source , color , backdrop , accessibilityLabel  }) {
    let sourceType;
    if (typeof source === 'function') sourceType = 'function';
    else if (source === 'placeholder') sourceType = 'placeholder';
    else sourceType = 'external';
    if (color && sourceType === 'external') // eslint-disable-next-line no-console
    console.warn('Recoloring external SVGs is not supported. Set the intended color on your SVG instead.');
    if (backdrop && color && !COLORS_WITH_BACKDROPS.includes(color)) // eslint-disable-next-line no-console
    console.warn(`The ${color} variant does not have a supported backdrop color`);
    const className = _cssJs.classNames(_iconScssJsDefault.default.Icon, color && _iconScssJsDefault.default[_cssJs.variationName('color', color)], color && _iconScssJsDefault.default.applyColor, backdrop && _iconScssJsDefault.default.hasBackdrop);
    const SourceComponent = source;
    const contentMarkup = {
        function: /*#__PURE__*/ _reactDefault.default.createElement(SourceComponent, {
            className: _iconScssJsDefault.default.Svg,
            focusable: "false",
            "aria-hidden": "true"
        }),
        placeholder: /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _iconScssJsDefault.default.Placeholder
        }),
        external: /*#__PURE__*/ _reactDefault.default.createElement("img", {
            className: _iconScssJsDefault.default.Img,
            src: `data:image/svg+xml;utf8,${source}`,
            alt: "",
            "aria-hidden": "true"
        })
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: className
    }, /*#__PURE__*/ _reactDefault.default.createElement(_visuallyHiddenJs.VisuallyHidden, null, accessibilityLabel), contentMarkup[sourceType]));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./Icon.scss.js":"7xeUR","../VisuallyHidden/VisuallyHidden.js":"fGCM0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7xeUR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Icon": "Polaris-Icon",
    "applyColor": "Polaris-Icon--applyColor",
    "hasBackdrop": "Polaris-Icon--hasBackdrop",
    "colorBase": "Polaris-Icon--colorBase",
    "colorSubdued": "Polaris-Icon--colorSubdued",
    "colorCritical": "Polaris-Icon--colorCritical",
    "colorInteractive": "Polaris-Icon--colorInteractive",
    "colorWarning": "Polaris-Icon--colorWarning",
    "colorHighlight": "Polaris-Icon--colorHighlight",
    "colorSuccess": "Polaris-Icon--colorSuccess",
    "colorPrimary": "Polaris-Icon--colorPrimary",
    "Svg": "Polaris-Icon__Svg",
    "Img": "Polaris-Icon__Img",
    "Placeholder": "Polaris-Icon__Placeholder"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cC66D":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TextStyle", ()=>TextStyle
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _textStyleScssJs = require("./TextStyle.scss.js");
var _textStyleScssJsDefault = parcelHelpers.interopDefault(_textStyleScssJs);
var VariationValue1;
(function(VariationValue) {
    VariationValue["Positive"] = "positive";
    VariationValue["Negative"] = "negative";
    VariationValue["Strong"] = "strong";
    VariationValue["Subdued"] = "subdued";
    VariationValue["Code"] = "code";
})(VariationValue1 || (VariationValue1 = {
}));
function TextStyle({ variation , children  }) {
    const className = _cssJs.classNames(variation && _textStyleScssJsDefault.default[_cssJs.variationName('variation', variation)], variation === VariationValue1.Code && _textStyleScssJsDefault.default.code);
    const Element = variationElement(variation);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Element, {
        className: className
    }, children));
}
function variationElement(variation) {
    return variation === VariationValue1.Code ? 'code' : 'span';
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./TextStyle.scss.js":"2unzK","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2unzK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "variationPositive": "Polaris-TextStyle--variationPositive",
    "variationNegative": "Polaris-TextStyle--variationNegative",
    "variationCode": "Polaris-TextStyle--variationCode",
    "variationStrong": "Polaris-TextStyle--variationStrong",
    "variationSubdued": "Polaris-TextStyle--variationSubdued"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hM2Xf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Badge", ()=>Badge
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _withinFilterContextJs = require("../../utilities/within-filter-context.js");
var _badgeScssJs = require("./Badge.scss.js");
var _badgeScssJsDefault = parcelHelpers.interopDefault(_badgeScssJs);
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _visuallyHiddenJs = require("../VisuallyHidden/VisuallyHidden.js");
const PROGRESS_LABELS = {
    incomplete: 'incomplete',
    partiallyComplete: 'partiallyComplete',
    complete: 'complete'
};
const STATUS_LABELS = {
    info: 'info',
    success: 'success',
    warning: 'warning',
    critical: 'critical',
    attention: 'attention',
    new: 'new'
};
const DEFAULT_SIZE = 'medium';
function Badge({ children , status , progress , size =DEFAULT_SIZE , statusAndProgressLabelOverride  }) {
    const i18n = _hooksJs.useI18n();
    const withinFilter = _react.useContext(_withinFilterContextJs.WithinFilterContext);
    const className = _cssJs.classNames(_badgeScssJsDefault.default.Badge, status && _badgeScssJsDefault.default[_cssJs.variationName('status', status)], progress && _badgeScssJsDefault.default[_cssJs.variationName('progress', progress)], size && size !== DEFAULT_SIZE && _badgeScssJsDefault.default[_cssJs.variationName('size', size)], withinFilter && _badgeScssJsDefault.default.withinFilter);
    let progressLabel = '';
    switch(progress){
        case PROGRESS_LABELS.incomplete:
            progressLabel = i18n.translate('Polaris.Badge.PROGRESS_LABELS.incomplete');
            break;
        case PROGRESS_LABELS.partiallyComplete:
            progressLabel = i18n.translate('Polaris.Badge.PROGRESS_LABELS.partiallyComplete');
            break;
        case PROGRESS_LABELS.complete:
            progressLabel = i18n.translate('Polaris.Badge.PROGRESS_LABELS.complete');
            break;
    }
    let statusLabel = '';
    switch(status){
        case STATUS_LABELS.info:
            statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.info');
            break;
        case STATUS_LABELS.success:
            statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.success');
            break;
        case STATUS_LABELS.warning:
            statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.warning');
            break;
        case STATUS_LABELS.critical:
            statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.critical');
            break;
        case STATUS_LABELS.attention:
            statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.attention'); // eslint-disable-next-line no-console
            console.warn('Deprecation: The `attention` `status` on Badge is deprecated and will be removed in the next major version. Use the `warning` `status` instead.');
            break;
        case STATUS_LABELS.new:
            statusLabel = i18n.translate('Polaris.Badge.STATUS_LABELS.new');
            break;
    }
    const accessibilityLabel = statusAndProgressLabelOverride ? statusAndProgressLabelOverride : i18n.translate('Polaris.Badge.progressAndStatus', {
        progressLabel,
        statusLabel
    });
    const hasAccessibilityLabel = progressLabel || statusLabel || statusAndProgressLabelOverride;
    let accessibilityMarkup = hasAccessibilityLabel && /*#__PURE__*/ _reactDefault.default.createElement(_visuallyHiddenJs.VisuallyHidden, null, accessibilityLabel);
    if (progressLabel) accessibilityMarkup = /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _badgeScssJsDefault.default.Pip
    }, accessibilityMarkup);
    return(/*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: className
    }, accessibilityMarkup, children));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","../../utilities/within-filter-context.js":"k0GUB","./Badge.scss.js":"6ZOJb","../../utilities/i18n/hooks.js":"hHpYD","../VisuallyHidden/VisuallyHidden.js":"fGCM0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"k0GUB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "WithinFilterContext", ()=>WithinFilterContext
);
var _react = require("react");
const WithinFilterContext = /*#__PURE__*/ _react.createContext(false);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6ZOJb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Badge": "Polaris-Badge",
    "sizeSmall": "Polaris-Badge--sizeSmall",
    "statusSuccess": "Polaris-Badge--statusSuccess",
    "statusInfo": "Polaris-Badge--statusInfo",
    "statusAttention": "Polaris-Badge--statusAttention",
    "statusWarning": "Polaris-Badge--statusWarning",
    "statusCritical": "Polaris-Badge--statusCritical",
    "statusNew": "Polaris-Badge--statusNew",
    "Pip": "Polaris-Badge__Pip",
    "progressIncomplete": "Polaris-Badge--progressIncomplete",
    "progressPartiallyComplete": "Polaris-Badge--progressPartiallyComplete",
    "progressComplete": "Polaris-Badge--progressComplete",
    "withinFilter": "Polaris-Badge--withinFilter"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hHpYD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useI18n", ()=>useI18n
);
var _react = require("react");
var _errorsJs = require("../errors.js");
var _contextJs = require("./context.js");
function useI18n() {
    const i18n = _react.useContext(_contextJs.I18nContext);
    if (!i18n) throw new _errorsJs.MissingAppProviderError('No i18n was provided.');
    return i18n;
}

},{"react":"6fep5","../errors.js":"cGYyH","./context.js":"jLNtz","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8AMgX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "UnstyledLink", ()=>UnstyledLink
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _sharedJs = require("../shared.js");
var _hooksJs = require("../../utilities/link/hooks.js");
// that the interface defining the props is defined in this file, not imported
// from elsewhere. This silly workaround ensures that the Props Explorer table
// is generated correctly.
// Wrapping forwardRef in a memo gets a name set since
// https://github.com/facebook/react/issues/16722
// but eslint-plugin-react doesn't know that just yet
// eslint-disable-next-line react/display-name
const UnstyledLink = /*#__PURE__*/ _react.memo(/*#__PURE__*/ _react.forwardRef(function UnstyledLink(props, _ref) {
    const LinkComponent = _hooksJs.useLink();
    if (LinkComponent) return(/*#__PURE__*/ _reactDefault.default.createElement(LinkComponent, Object.assign({
    }, _sharedJs.unstyled.props, props)));
    const { external , url , ...rest } = props;
    const target = external ? '_blank' : undefined;
    const rel = external ? 'noopener noreferrer' : undefined;
    return(/*#__PURE__*/ _reactDefault.default.createElement("a", Object.assign({
        target: target
    }, rest, {
        href: url,
        rel: rel
    }, _sharedJs.unstyled.props)));
}));

},{"react":"6fep5","../shared.js":"jYa7v","../../utilities/link/hooks.js":"18vAd","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"18vAd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useLink", ()=>useLink
);
var _react = require("react");
var _contextJs = require("./context.js");
function useLink() {
    return _react.useContext(_contextJs.LinkContext);
}

},{"react":"6fep5","./context.js":"9F4RK","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hdvaV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "UnstyledButton", ()=>UnstyledButton
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _focusJs = require("../../utilities/focus.js");
var _unstyledLinkJs = require("../UnstyledLink/UnstyledLink.js");
function UnstyledButton({ id , children , className , url , external , download , submit , disabled , loading , pressed , accessibilityLabel , role , ariaControls , ariaExpanded , ariaDescribedBy , onClick , onFocus , onBlur , onKeyDown , onKeyPress , onKeyUp , onMouseEnter , onTouchStart , ...rest }) {
    let buttonMarkup;
    const commonProps = {
        id,
        className,
        'aria-label': accessibilityLabel
    };
    const interactiveProps = {
        ...commonProps,
        role,
        onClick,
        onFocus,
        onBlur,
        onMouseUp: _focusJs.handleMouseUpByBlurring,
        onMouseEnter,
        onTouchStart
    };
    if (url) buttonMarkup = disabled ? /*#__PURE__*/ // Render an `<a>` so toggling disabled/enabled state changes only the
    // `href` attribute instead of replacing the whole element.
    _reactDefault.default.createElement("a", commonProps, children) : /*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, Object.assign({
    }, interactiveProps, {
        url: url,
        external: external,
        download: download
    }, rest), children);
    else buttonMarkup = /*#__PURE__*/ _reactDefault.default.createElement("button", Object.assign({
    }, interactiveProps, {
        type: submit ? 'submit' : 'button',
        disabled: disabled,
        "aria-busy": loading ? true : undefined,
        "aria-controls": ariaControls,
        "aria-expanded": ariaExpanded,
        "aria-describedby": ariaDescribedBy,
        "aria-pressed": pressed,
        onKeyDown: onKeyDown,
        onKeyUp: onKeyUp,
        onKeyPress: onKeyPress
    }, rest), children);
    return buttonMarkup;
}

},{"react":"6fep5","../../utilities/focus.js":"gLDAi","../UnstyledLink/UnstyledLink.js":"8AMgX","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3tKAI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Header", ()=>Header
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cardScssJs = require("../../Card.scss.js");
var _cardScssJsDefault = parcelHelpers.interopDefault(_cardScssJs);
var _buttonGroupJs = require("../../../ButtonGroup/ButtonGroup.js");
var _utilsJs = require("../../../Button/utils.js");
var _stackJs = require("../../../Stack/Stack.js");
var _headingJs = require("../../../Heading/Heading.js");
function Header({ children , title , actions  }) {
    const actionMarkup = actions ? /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, null, _utilsJs.buttonsFrom(actions, {
        plain: true
    })) : null;
    const titleMarkup = /*#__PURE__*/ _react.isValidElement(title) ? title : /*#__PURE__*/ _reactDefault.default.createElement(_headingJs.Heading, null, title);
    const headingMarkup = actionMarkup || children ? /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
        alignment: "baseline"
    }, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack.Item, {
        fill: true
    }, titleMarkup), actionMarkup, children) : titleMarkup;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _cardScssJsDefault.default.Header
    }, headingMarkup));
}

},{"react":"6fep5","../../Card.scss.js":"gDLDM","../../../ButtonGroup/ButtonGroup.js":"kXBsg","../../../Button/utils.js":"9W95c","../../../Stack/Stack.js":"g05gm","../../../Heading/Heading.js":"7PinN","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kXBsg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ButtonGroup", ()=>ButtonGroup
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _componentsJs = require("../../utilities/components.js");
var _buttonGroupScssJs = require("./ButtonGroup.scss.js");
var _buttonGroupScssJsDefault = parcelHelpers.interopDefault(_buttonGroupScssJs);
var _itemJs = require("./components/Item/Item.js");
function ButtonGroup({ children , spacing , segmented , fullWidth , connectedTop  }) {
    const className = _cssJs.classNames(_buttonGroupScssJsDefault.default.ButtonGroup, spacing && _buttonGroupScssJsDefault.default[spacing], segmented && _buttonGroupScssJsDefault.default.segmented, fullWidth && _buttonGroupScssJsDefault.default.fullWidth);
    const contents = _componentsJs.elementChildren(children).map((child, index)=>/*#__PURE__*/ _reactDefault.default.createElement(_itemJs.Item, {
            button: child,
            key: index
        })
    );
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className,
        "data-buttongroup-segmented": segmented,
        "data-buttongroup-connected-top": connectedTop,
        "data-buttongroup-full-width": fullWidth
    }, contents));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","../../utilities/components.js":"6E8xC","./ButtonGroup.scss.js":"3Ux3t","./components/Item/Item.js":"iVsJn","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3Ux3t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ButtonGroup": "Polaris-ButtonGroup",
    "Item": "Polaris-ButtonGroup__Item",
    "Item-plain": "Polaris-ButtonGroup__Item--plain",
    "segmented": "Polaris-ButtonGroup--segmented",
    "Item-focused": "Polaris-ButtonGroup__Item--focused",
    "fullWidth": "Polaris-ButtonGroup--fullWidth",
    "extraTight": "Polaris-ButtonGroup--extraTight",
    "tight": "Polaris-ButtonGroup--tight",
    "loose": "Polaris-ButtonGroup--loose"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iVsJn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Item", ()=>Item
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _useToggleJs = require("../../../../utilities/use-toggle.js");
var _cssJs = require("../../../../utilities/css.js");
var _buttonGroupScssJs = require("../../ButtonGroup.scss.js");
var _buttonGroupScssJsDefault = parcelHelpers.interopDefault(_buttonGroupScssJs);
function Item({ button  }) {
    const { value: focused , setTrue: forceTrueFocused , setFalse: forceFalseFocused  } = _useToggleJs.useToggle(false);
    const className = _cssJs.classNames(_buttonGroupScssJsDefault.default.Item, focused && _buttonGroupScssJsDefault.default['Item-focused'], button.props.plain && _buttonGroupScssJsDefault.default['Item-plain']);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className,
        onFocus: forceTrueFocused,
        onBlur: forceFalseFocused
    }, button));
}

},{"react":"6fep5","../../../../utilities/use-toggle.js":"jHDnh","../../../../utilities/css.js":"kYdwV","../../ButtonGroup.scss.js":"3Ux3t","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"g05gm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Stack", ()=>Stack
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _componentsJs = require("../../utilities/components.js");
var _stackScssJs = require("./Stack.scss.js");
var _stackScssJsDefault = parcelHelpers.interopDefault(_stackScssJs);
var _itemJs = require("./components/Item/Item.js");
const Stack = /*#__PURE__*/ _react.memo(function Stack({ children , vertical , spacing , distribution , alignment , wrap  }) {
    const className = _cssJs.classNames(_stackScssJsDefault.default.Stack, vertical && _stackScssJsDefault.default.vertical, spacing && _stackScssJsDefault.default[_cssJs.variationName('spacing', spacing)], distribution && _stackScssJsDefault.default[_cssJs.variationName('distribution', distribution)], alignment && _stackScssJsDefault.default[_cssJs.variationName('alignment', alignment)], wrap === false && _stackScssJsDefault.default.noWrap);
    const itemMarkup = _componentsJs.elementChildren(children).map((child, index)=>{
        const props = {
            key: index
        };
        return _componentsJs.wrapWithComponent(child, _itemJs.Item, props);
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, itemMarkup));
});
Stack.Item = _itemJs.Item;

},{"react":"6fep5","../../utilities/css.js":"kYdwV","../../utilities/components.js":"6E8xC","./Stack.scss.js":"3ML8C","./components/Item/Item.js":"2WhEO","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3ML8C":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Stack": "Polaris-Stack",
    "Item": "Polaris-Stack__Item",
    "noWrap": "Polaris-Stack--noWrap",
    "spacingNone": "Polaris-Stack--spacingNone",
    "spacingExtraTight": "Polaris-Stack--spacingExtraTight",
    "spacingTight": "Polaris-Stack--spacingTight",
    "spacingBaseTight": "Polaris-Stack--spacingBaseTight",
    "spacingLoose": "Polaris-Stack--spacingLoose",
    "spacingExtraLoose": "Polaris-Stack--spacingExtraLoose",
    "distributionLeading": "Polaris-Stack--distributionLeading",
    "distributionTrailing": "Polaris-Stack--distributionTrailing",
    "distributionCenter": "Polaris-Stack--distributionCenter",
    "distributionEqualSpacing": "Polaris-Stack--distributionEqualSpacing",
    "distributionFill": "Polaris-Stack--distributionFill",
    "distributionFillEvenly": "Polaris-Stack--distributionFillEvenly",
    "alignmentLeading": "Polaris-Stack--alignmentLeading",
    "alignmentTrailing": "Polaris-Stack--alignmentTrailing",
    "alignmentCenter": "Polaris-Stack--alignmentCenter",
    "alignmentFill": "Polaris-Stack--alignmentFill",
    "alignmentBaseline": "Polaris-Stack--alignmentBaseline",
    "vertical": "Polaris-Stack--vertical",
    "Item-fill": "Polaris-Stack__Item--fill"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2WhEO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Item", ()=>Item
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _stackScssJs = require("../../Stack.scss.js");
var _stackScssJsDefault = parcelHelpers.interopDefault(_stackScssJs);
function Item({ children , fill  }) {
    const className = _cssJs.classNames(_stackScssJsDefault.default.Item, fill && _stackScssJsDefault.default['Item-fill']);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, children));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../Stack.scss.js":"3ML8C","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7PinN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Heading", ()=>Heading
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _headingScssJs = require("./Heading.scss.js");
var _headingScssJsDefault = parcelHelpers.interopDefault(_headingScssJs);
function Heading({ element: Element = 'h2' , children , id  }) {
    return(/*#__PURE__*/ _reactDefault.default.createElement(Element, {
        className: _headingScssJsDefault.default.Heading,
        id: id
    }, children));
}

},{"react":"6fep5","./Heading.scss.js":"bm7a5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bm7a5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Heading": "Polaris-Heading"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aN6b9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Section", ()=>Section
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _cardScssJs = require("../../Card.scss.js");
var _cardScssJsDefault = parcelHelpers.interopDefault(_cardScssJs);
var _subheadingJs = require("../../../Subheading/Subheading.js");
var _buttonGroupJs = require("../../../ButtonGroup/ButtonGroup.js");
var _utilsJs = require("../../../Button/utils.js");
var _stackJs = require("../../../Stack/Stack.js");
function Section({ children , title , subdued , flush , fullWidth , actions , hideOnPrint  }) {
    const className = _cssJs.classNames(_cardScssJsDefault.default.Section, flush && _cardScssJsDefault.default['Section-flush'], subdued && _cardScssJsDefault.default['Section-subdued'], fullWidth && _cardScssJsDefault.default['Section-fullWidth'], hideOnPrint && _cardScssJsDefault.default['Section-hideOnPrint']);
    const actionMarkup = actions ? /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, null, _utilsJs.buttonsFrom(actions, {
        plain: true
    })) : null;
    const titleMarkup = typeof title === 'string' ? /*#__PURE__*/ _reactDefault.default.createElement(_subheadingJs.Subheading, null, title) : title;
    const titleAreaMarkup = titleMarkup || actionMarkup ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _cardScssJsDefault.default.SectionHeader
    }, actionMarkup ? /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
        alignment: "baseline"
    }, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack.Item, {
        fill: true
    }, titleMarkup), actionMarkup) : titleMarkup) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, titleAreaMarkup, children));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../Card.scss.js":"gDLDM","../../../Subheading/Subheading.js":"gntIW","../../../ButtonGroup/ButtonGroup.js":"kXBsg","../../../Button/utils.js":"9W95c","../../../Stack/Stack.js":"g05gm","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gntIW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Subheading", ()=>Subheading
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _subheadingScssJs = require("./Subheading.scss.js");
var _subheadingScssJsDefault = parcelHelpers.interopDefault(_subheadingScssJs);
function Subheading({ element: Element = 'h3' , children  }) {
    const ariaLabel = typeof children === 'string' ? children : undefined;
    return(/*#__PURE__*/ _reactDefault.default.createElement(Element, {
        "aria-label": ariaLabel,
        className: _subheadingScssJsDefault.default.Subheading
    }, children));
}

},{"react":"6fep5","./Subheading.scss.js":"bsrQw","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bsrQw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Subheading": "Polaris-Subheading"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kJwJS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Subsection", ()=>Subsection
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cardScssJs = require("../../Card.scss.js");
var _cardScssJsDefault = parcelHelpers.interopDefault(_cardScssJs);
function Subsection({ children  }) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _cardScssJsDefault.default.Subsection
    }, children));
}

},{"react":"6fep5","../../Card.scss.js":"gDLDM","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kBX2S":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SettingAction", ()=>SettingAction
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _settingActionScssJs = require("./SettingAction.scss.js");
var _settingActionScssJsDefault = parcelHelpers.interopDefault(_settingActionScssJs);
function SettingAction({ action , children  }) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _settingActionScssJsDefault.default.SettingAction
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _settingActionScssJsDefault.default.Setting
    }, children), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _settingActionScssJsDefault.default.Action
    }, action)));
}

},{"react":"6fep5","./SettingAction.scss.js":"9eqcx","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9eqcx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "SettingAction": "Polaris-SettingAction",
    "Setting": "Polaris-SettingAction__Setting",
    "Action": "Polaris-SettingAction__Action"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lS61i":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Avatar", ()=>Avatar
);
parcelHelpers.export(exports, "STYLE_CLASSES", ()=>STYLE_CLASSES
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _useIsAfterInitialMountJs = require("../../utilities/use-is-after-initial-mount.js");
var _avatarScssJs = require("./Avatar.scss.js");
var _avatarScssJsDefault = parcelHelpers.interopDefault(_avatarScssJs);
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _imageJs = require("../Image/Image.js");
var Status1;
(function(Status) {
    Status["Pending"] = "PENDING";
    Status["Loaded"] = "LOADED";
    Status["Errored"] = "ERRORED";
})(Status1 || (Status1 = {
}));
const STYLE_CLASSES = [
    'one',
    'two',
    'three',
    'four',
    'five'
];
function Avatar({ name: name1 , source , onError , initials , customer , size ='medium' , accessibilityLabel  }) {
    const i18n = _hooksJs.useI18n();
    const isAfterInitialMount = _useIsAfterInitialMountJs.useIsAfterInitialMount();
    function styleClass(name) {
        return name ? STYLE_CLASSES[name.charCodeAt(0) % STYLE_CLASSES.length] : STYLE_CLASSES[0];
    }
    const [status, setStatus] = _react.useState(Status1.Pending); // If the source changes, set the status back to pending
    _react.useEffect(()=>{
        setStatus(Status1.Pending);
    }, [
        source
    ]);
    const handleError = _react.useCallback(()=>{
        setStatus(Status1.Errored);
        if (onError) onError();
    }, [
        onError
    ]);
    const handleLoad = _react.useCallback(()=>{
        setStatus(Status1.Loaded);
    }, []);
    const hasImage = source && status !== Status1.Errored;
    const nameString = name1 || initials;
    let label;
    if (accessibilityLabel) label = accessibilityLabel;
    else if (name1) label = name1;
    else if (initials) {
        const splitInitials = initials.split('').join(' ');
        label = i18n.translate('Polaris.Avatar.labelWithInitials', {
            initials: splitInitials
        });
    } else label = i18n.translate('Polaris.Avatar.label');
    const className = _cssJs.classNames(_avatarScssJsDefault.default.Avatar, size && _avatarScssJsDefault.default[_cssJs.variationName('size', size)], !customer && _avatarScssJsDefault.default[_cssJs.variationName('style', styleClass(nameString))], (hasImage || initials && initials.length === 0) && status !== Status1.Loaded && _avatarScssJsDefault.default.hidden, hasImage && _avatarScssJsDefault.default.hasImage);
    const imageMarkUp = source && isAfterInitialMount && status !== Status1.Errored ? /*#__PURE__*/ _reactDefault.default.createElement(_imageJs.Image, {
        className: _avatarScssJsDefault.default.Image,
        source: source,
        alt: "",
        role: "presentation",
        onLoad: handleLoad,
        onError: handleError
    }) : null; // Use `dominant-baseline: central` instead of `dy` when Edge supports it.
    const verticalOffset = '0.35em';
    const avatarBody = customer || !initials ? /*#__PURE__*/ _reactDefault.default.createElement("path", {
        fill: "currentColor",
        d: "M8.28 27.5A14.95 14.95 0 0120 21.8c4.76 0 8.97 2.24 11.72 5.7a14.02 14.02 0 01-8.25 5.91 14.82 14.82 0 01-6.94 0 14.02 14.02 0 01-8.25-5.9zM13.99 12.78a6.02 6.02 0 1112.03 0 6.02 6.02 0 01-12.03 0z"
    }) : /*#__PURE__*/ _reactDefault.default.createElement("text", {
        x: "50%",
        y: "50%",
        dy: verticalOffset,
        fill: "currentColor",
        fontSize: "20",
        textAnchor: "middle"
    }, initials);
    const svgMarkup = !hasImage ? /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _avatarScssJsDefault.default.Initials
    }, /*#__PURE__*/ _reactDefault.default.createElement("svg", {
        className: _avatarScssJsDefault.default.Svg,
        viewBox: "0 0 40 40"
    }, avatarBody)) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("span", {
        "aria-label": label,
        role: "img",
        className: className
    }, svgMarkup, imageMarkUp));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","../../utilities/use-is-after-initial-mount.js":"3sveN","./Avatar.scss.js":"1Xxhs","../../utilities/i18n/hooks.js":"hHpYD","../Image/Image.js":"jekWJ","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1Xxhs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Avatar": "Polaris-Avatar",
    "hidden": "Polaris-Avatar--hidden",
    "sizeExtraSmall": "Polaris-Avatar--sizeExtraSmall",
    "sizeSmall": "Polaris-Avatar--sizeSmall",
    "sizeMedium": "Polaris-Avatar--sizeMedium",
    "sizeLarge": "Polaris-Avatar--sizeLarge",
    "styleOne": "Polaris-Avatar--styleOne",
    "styleTwo": "Polaris-Avatar--styleTwo",
    "styleThree": "Polaris-Avatar--styleThree",
    "styleFour": "Polaris-Avatar--styleFour",
    "styleFive": "Polaris-Avatar--styleFive",
    "hasImage": "Polaris-Avatar--hasImage",
    "Image": "Polaris-Avatar__Image",
    "Initials": "Polaris-Avatar__Initials",
    "Svg": "Polaris-Avatar__Svg"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jekWJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Image", ()=>Image
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
function Image({ sourceSet , source , crossOrigin , ...rest }) {
    const finalSourceSet = sourceSet ? sourceSet.map(({ source: subSource , descriptor  })=>`${subSource} ${descriptor}`
    ).join(',') : null;
    return finalSourceSet ? /*#__PURE__*/ // eslint-disable-next-line jsx-a11y/alt-text
    _reactDefault.default.createElement("img", Object.assign({
        src: source,
        srcSet: finalSourceSet,
        crossOrigin: crossOrigin
    }, rest)) : /*#__PURE__*/ // eslint-disable-next-line jsx-a11y/alt-text
    _reactDefault.default.createElement("img", Object.assign({
        src: source
    }, rest, {
        crossOrigin: crossOrigin
    }));
}

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"20fgb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ActionMenu", ()=>ActionMenu
);
parcelHelpers.export(exports, "hasGroupsWithActions", ()=>hasGroupsWithActions
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _actionMenuScssJs = require("./ActionMenu.scss.js");
var _actionMenuScssJsDefault = parcelHelpers.interopDefault(_actionMenuScssJs);
var _rollupActionsJs = require("./components/RollupActions/RollupActions.js");
var _actionsJs = require("./components/Actions/Actions.js");
function ActionMenu({ actions =[] , groups =[] , rollup  }) {
    if (actions.length === 0 && groups.length === 0) return null;
    const actionMenuClassNames = _cssJs.classNames(_actionMenuScssJsDefault.default.ActionMenu, rollup && _actionMenuScssJsDefault.default.rollup);
    const rollupSections = groups.map((group)=>convertGroupToSection(group)
    );
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: actionMenuClassNames
    }, rollup ? /*#__PURE__*/ _reactDefault.default.createElement(_rollupActionsJs.RollupActions, {
        items: actions,
        sections: rollupSections
    }) : /*#__PURE__*/ _reactDefault.default.createElement(_actionsJs.Actions, {
        actions: actions,
        groups: groups
    })));
}
function hasGroupsWithActions(groups = []) {
    return groups.length === 0 ? false : groups.some((group)=>group.actions.length > 0
    );
}
function convertGroupToSection({ title , actions  }) {
    return {
        title,
        items: actions
    };
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./ActionMenu.scss.js":"kexsS","./components/RollupActions/RollupActions.js":"1mLPf","./components/Actions/Actions.js":"duuLz","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kexsS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ActionMenu": "Polaris-ActionMenu"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1mLPf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RollupActions", ()=>RollupActions
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _useToggleJs = require("../../../../utilities/use-toggle.js");
var _rollupActionsScssJs = require("./RollupActions.scss.js");
var _rollupActionsScssJsDefault = parcelHelpers.interopDefault(_rollupActionsScssJs);
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
var _buttonJs = require("../../../Button/Button.js");
var _popoverJs = require("../../../Popover/Popover.js");
var _actionListJs = require("../../../ActionList/ActionList.js");
function RollupActions({ items =[] , sections =[]  }) {
    const i18n = _hooksJs.useI18n();
    const { value: rollupOpen , toggle: toggleRollupOpen  } = _useToggleJs.useToggle(false);
    if (items.length === 0 && sections.length === 0) return null;
    const activatorMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _rollupActionsScssJsDefault.default.RollupActivator
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        outline: true,
        icon: _polarisIcons.HorizontalDotsMinor,
        accessibilityLabel: i18n.translate('Polaris.ActionMenu.RollupActions.rollupButton'),
        onClick: toggleRollupOpen
    }));
    return(/*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
        active: rollupOpen,
        activator: activatorMarkup,
        preferredAlignment: "right",
        onClose: toggleRollupOpen,
        hideOnPrint: true
    }, /*#__PURE__*/ _reactDefault.default.createElement(_actionListJs.ActionList, {
        items: items,
        sections: sections,
        onActionAnyItem: toggleRollupOpen
    })));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../../../utilities/use-toggle.js":"jHDnh","./RollupActions.scss.js":"d4xZD","../../../../utilities/i18n/hooks.js":"hHpYD","../../../Button/Button.js":"g06oC","../../../Popover/Popover.js":"9ztCP","../../../ActionList/ActionList.js":"eTtta","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"d4xZD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "RollupActivator": "Polaris-ActionMenu-RollupActions__RollupActivator"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"duuLz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Actions", ()=>Actions
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _actionsScssJs = require("./Actions.scss.js");
var _actionsScssJsDefault = parcelHelpers.interopDefault(_actionsScssJs);
var _menuGroupJs = require("../MenuGroup/MenuGroup.js");
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
var _secondaryActionJs = require("../SecondaryAction/SecondaryAction.js");
var _eventListenerJs = require("../../../EventListener/EventListener.js");
var _buttonGroupJs = require("../../../ButtonGroup/ButtonGroup.js");
const ACTION_SPACING = 8;
function Actions({ actions =[] , groups =[]  }) {
    const i18n = _hooksJs.useI18n();
    const actionsLayoutRef = _react.useRef(null);
    const menuGroupWidthRef = _react.useRef(0);
    const availableWidthRef = _react.useRef(0);
    const actionsAndGroupsLengthRef = _react.useRef(0);
    const timesMeasured = _react.useRef(0);
    const actionWidthsRef = _react.useRef([]);
    const [activeMenuGroup, setActiveMenuGroup] = _react.useState(undefined);
    const [measuredActions, setMeasuredActions] = _react.useState({
        showable: [],
        rolledUp: []
    });
    const defaultRollupGroup = {
        title: i18n.translate('Polaris.Actions.moreActions'),
        actions: []
    };
    const lastMenuGroup = [
        ...groups
    ].pop();
    const lastMenuGroupWidth = [
        ...actionWidthsRef.current
    ].pop() || 0;
    const handleActionsOffsetWidth = _react.useCallback((width)=>{
        actionWidthsRef.current = [
            ...actionWidthsRef.current,
            width
        ];
    }, []);
    const handleMenuGroupToggle = _react.useCallback((group)=>setActiveMenuGroup(activeMenuGroup ? undefined : group)
    , [
        activeMenuGroup
    ]);
    const handleMenuGroupClose = _react.useCallback(()=>setActiveMenuGroup(undefined)
    , []);
    const updateActions = _react.useCallback(()=>{
        let actionsAndGroups = [
            ...actions,
            ...groups
        ];
        if (groups.length > 0) // We don't want to include actions from the last group
        // since it is always rendered with its own actions
        actionsAndGroups = [
            ...actionsAndGroups
        ].slice(0, actionsAndGroups.length - 1);
        const showable = actionsAndGroups.slice(0, measuredActions.showable.length);
        const rolledUp = actionsAndGroups.slice(measuredActions.showable.length, actionsAndGroups.length);
        setMeasuredActions({
            showable,
            rolledUp
        });
    }, [
        actions,
        groups,
        measuredActions.showable.length
    ]);
    const measureActions = _react.useCallback(()=>{
        if (actionWidthsRef.current.length === 0 || availableWidthRef.current === 0) return;
        const actionsAndGroups = [
            ...actions,
            ...groups
        ];
        if (actionsAndGroups.length === 1) {
            setMeasuredActions({
                showable: actionsAndGroups,
                rolledUp: []
            });
            return;
        }
        let currentAvailableWidth = availableWidthRef.current;
        let newShowableActions = [];
        let newRolledUpActions = [];
        actionsAndGroups.forEach((action, index)=>{
            const canFitAction = actionWidthsRef.current[index] + menuGroupWidthRef.current + ACTION_SPACING + lastMenuGroupWidth <= currentAvailableWidth;
            if (canFitAction) {
                currentAvailableWidth -= actionWidthsRef.current[index] + ACTION_SPACING * 2;
                newShowableActions = [
                    ...newShowableActions,
                    action
                ];
            } else {
                currentAvailableWidth = 0; // Find last group if it exists and always render it as a rolled up action below
                if (action === lastMenuGroup) return;
                newRolledUpActions = [
                    ...newRolledUpActions,
                    action
                ];
            }
        });
        setMeasuredActions({
            showable: newShowableActions,
            rolledUp: newRolledUpActions
        });
        timesMeasured.current += 1;
        actionsAndGroupsLengthRef.current = actionsAndGroups.length;
    }, [
        actions,
        groups,
        lastMenuGroup,
        lastMenuGroupWidth
    ]);
    const handleResize = _react.useMemo(()=>_debounceDefault.default(()=>{
            if (!actionsLayoutRef.current) return;
            availableWidthRef.current = actionsLayoutRef.current.offsetWidth; // Set timesMeasured to 0 to allow re-measuring
            timesMeasured.current = 0;
            measureActions();
        }, 50, {
            leading: false,
            trailing: true
        })
    , [
        measureActions
    ]);
    _react.useEffect(()=>{
        if (!actionsLayoutRef.current) return;
        availableWidthRef.current = actionsLayoutRef.current.offsetWidth;
        if (// This accounts for the initial paint and re-flow
        timesMeasured.current >= 2 && [
            ...actions,
            ...groups
        ].length === actionsAndGroupsLengthRef.current) {
            updateActions();
            return;
        }
        measureActions();
    }, [
        actions,
        groups,
        measureActions,
        updateActions
    ]);
    const actionsMarkup = actions.map((action)=>{
        if (measuredActions.showable.length > 0 || measuredActions.rolledUp.includes(action)) return null;
        const { content , onAction , ...rest } = action;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_secondaryActionJs.SecondaryAction, Object.assign({
            key: content,
            onClick: onAction
        }, rest, {
            getOffsetWidth: handleActionsOffsetWidth
        }), content));
    });
    const rollUppableActionsMarkup = measuredActions.showable.length > 0 ? measuredActions.showable.map((action)=>action.content && /*#__PURE__*/ _reactDefault.default.createElement(_secondaryActionJs.SecondaryAction, Object.assign({
            key: action.content
        }, action, {
            getOffsetWidth: handleActionsOffsetWidth
        }), action.content)
    ) : null;
    const filteredGroups = [
        ...groups,
        defaultRollupGroup
    ].filter((group)=>{
        return groups.length === 0 ? group : group === lastMenuGroup || !measuredActions.rolledUp.some((rolledUpGroup)=>isMenuGroup(rolledUpGroup) && rolledUpGroup.title === group.title
        );
    });
    const groupsMarkup = filteredGroups.map((group)=>{
        const { title , actions: groupActions , ...rest } = group;
        const isDefaultGroup = group === defaultRollupGroup;
        const isLastMenuGroup = group === lastMenuGroup;
        const finalRolledUpActions = measuredActions.rolledUp.reduce((memo, action)=>{
            memo.push(...isMenuGroup(action) ? action.actions : [
                action
            ]);
            return memo;
        }, []);
        if (!isDefaultGroup && !isLastMenuGroup) // Render a normal MenuGroup with just its actions
        return(/*#__PURE__*/ _reactDefault.default.createElement(_menuGroupJs.MenuGroup, Object.assign({
            key: title,
            title: title,
            active: title === activeMenuGroup,
            actions: groupActions
        }, rest, {
            onOpen: handleMenuGroupToggle,
            onClose: handleMenuGroupClose,
            getOffsetWidth: handleActionsOffsetWidth
        })));
        else if (!isDefaultGroup && isLastMenuGroup) // render the last, rollup group with its actions and finalRolledupActions
        return(/*#__PURE__*/ _reactDefault.default.createElement(_menuGroupJs.MenuGroup, Object.assign({
            key: title,
            title: title,
            active: title === activeMenuGroup,
            actions: [
                ...finalRolledUpActions,
                ...groupActions
            ]
        }, rest, {
            onOpen: handleMenuGroupToggle,
            onClose: handleMenuGroupClose,
            getOffsetWidth: handleActionsOffsetWidth
        })));
        else if (isDefaultGroup && groups.length === 0 && finalRolledUpActions.length) // Render the default group to rollup into if one does not exist
        return(/*#__PURE__*/ _reactDefault.default.createElement(_menuGroupJs.MenuGroup, Object.assign({
            key: title,
            title: title,
            active: title === activeMenuGroup,
            actions: finalRolledUpActions
        }, rest, {
            onOpen: handleMenuGroupToggle,
            onClose: handleMenuGroupClose,
            getOffsetWidth: handleActionsOffsetWidth
        })));
    });
    const groupedActionsMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, {
        spacing: "extraTight"
    }, rollUppableActionsMarkup, actionsMarkup, groupsMarkup);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _actionsScssJsDefault.default.ActionsLayout,
        ref: actionsLayoutRef
    }, groupedActionsMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
        event: "resize",
        handler: handleResize
    })));
}
function isMenuGroup(actionOrMenuGroup) {
    return 'title' in actionOrMenuGroup;
}

},{"react":"6fep5","lodash/debounce":"a9ymG","./Actions.scss.js":"1qDtd","../MenuGroup/MenuGroup.js":"bodLq","../../../../utilities/i18n/hooks.js":"hHpYD","../SecondaryAction/SecondaryAction.js":"8gcqI","../../../EventListener/EventListener.js":"gpcxo","../../../ButtonGroup/ButtonGroup.js":"kXBsg","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1qDtd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ActionsLayout": "Polaris-ActionMenu-Actions__ActionsLayout"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bodLq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MenuGroup", ()=>MenuGroup
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _menuGroupScssJs = require("./MenuGroup.scss.js");
var _menuGroupScssJsDefault = parcelHelpers.interopDefault(_menuGroupScssJs);
var _secondaryActionJs = require("../SecondaryAction/SecondaryAction.js");
var _popoverJs = require("../../../Popover/Popover.js");
var _actionListJs = require("../../../ActionList/ActionList.js");
function MenuGroup({ accessibilityLabel , active , actions , details , title , icon , onClose , onOpen , getOffsetWidth  }) {
    const handleClose = _react.useCallback(()=>{
        onClose(title);
    }, [
        onClose,
        title
    ]);
    const handleOpen = _react.useCallback(()=>{
        onOpen(title);
    }, [
        onOpen,
        title
    ]);
    const handleOffsetWidth = _react.useCallback((width)=>{
        if (!getOffsetWidth) return;
        getOffsetWidth(width);
    }, [
        getOffsetWidth
    ]);
    const popoverActivator = /*#__PURE__*/ _reactDefault.default.createElement(_secondaryActionJs.SecondaryAction, {
        disclosure: true,
        icon: icon,
        accessibilityLabel: accessibilityLabel,
        onClick: handleOpen,
        getOffsetWidth: handleOffsetWidth
    }, title);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
        active: Boolean(active),
        activator: popoverActivator,
        preferredAlignment: "left",
        onClose: handleClose,
        hideOnPrint: true
    }, /*#__PURE__*/ _reactDefault.default.createElement(_actionListJs.ActionList, {
        items: actions,
        onActionAnyItem: handleClose
    }), details && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _menuGroupScssJsDefault.default.Details
    }, details)));
}

},{"react":"6fep5","./MenuGroup.scss.js":"60Cad","../SecondaryAction/SecondaryAction.js":"8gcqI","../../../Popover/Popover.js":"9ztCP","../../../ActionList/ActionList.js":"eTtta","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"60Cad":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Details": "Polaris-ActionMenu-MenuGroup__Details"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8gcqI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SecondaryAction", ()=>SecondaryAction
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _secondaryActionScssJs = require("./SecondaryAction.scss.js");
var _secondaryActionScssJsDefault = parcelHelpers.interopDefault(_secondaryActionScssJs);
var _buttonJs = require("../../../Button/Button.js");
function SecondaryAction({ children , onAction , getOffsetWidth , ...rest }) {
    const secondaryActionsRef = _react.useRef(null);
    _react.useEffect(()=>{
        var _secondaryActionsRef$;
        if (!getOffsetWidth || !secondaryActionsRef.current) return;
        getOffsetWidth((_secondaryActionsRef$ = secondaryActionsRef.current) === null || _secondaryActionsRef$ === void 0 ? void 0 : _secondaryActionsRef$.offsetWidth);
    }, [
        getOffsetWidth
    ]);
    return(/*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _secondaryActionScssJsDefault.default.SecondaryAction,
        ref: secondaryActionsRef
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, Object.assign({
        onClick: onAction
    }, rest), children)));
}

},{"react":"6fep5","./SecondaryAction.scss.js":"1IWzj","../../../Button/Button.js":"g06oC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1IWzj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "SecondaryAction": "Polaris-ActionMenu-SecondaryAction"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hrWIx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Autocomplete", ()=>Autocomplete
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _optionsJs = require("../../utilities/options.js");
var _autocompleteScssJs = require("./Autocomplete.scss.js");
var _autocompleteScssJsDefault = parcelHelpers.interopDefault(_autocompleteScssJs);
var _mappedOptionJs = require("./components/MappedOption/MappedOption.js");
var _comboboxJs = require("../Combobox/Combobox.js");
var _mappedActionJs = require("./components/MappedAction/MappedAction.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _listboxJs = require("../Listbox/Listbox.js");
// TypeScript can't generate types that correctly infer the typing of
// subcomponents so explicitly state the subcomponents in the type definition.
// Letting this be implicit works in this project but fails in projects that use
// generated *.d.ts files.
const Autocomplete = function Autocomplete({ options: options1 , selected , textField , preferredPosition , listTitle , allowMultiple , loading , actionBefore , willLoadMoreResults , emptyState , onSelect , onLoadMoreResults  }) {
    const i18n = _hooksJs.useI18n();
    const buildMappedOptionFromOption = _react.useCallback((options)=>{
        return options.map((option)=>/*#__PURE__*/ _reactDefault.default.createElement(_mappedOptionJs.MappedOption, Object.assign({
            }, option, {
                key: option.id || option.value,
                selected: selected.includes(option.value),
                singleSelection: !allowMultiple
            }))
        );
    }, [
        selected,
        allowMultiple
    ]);
    const optionsMarkup1 = _react.useMemo(()=>{
        const conditionalOptions = loading && !willLoadMoreResults ? [] : options1;
        if (_optionsJs.isSection(conditionalOptions)) {
            const noOptionsAvailable = conditionalOptions.every(({ options  })=>options.length === 0
            );
            if (noOptionsAvailable) return null;
            const optionsMarkup = conditionalOptions.map(({ options , title  })=>{
                if (options.length === 0) return null;
                const optionMarkup = buildMappedOptionFromOption(options);
                return(/*#__PURE__*/ _reactDefault.default.createElement(_listboxJs.Listbox.Section, {
                    divider: false,
                    title: /*#__PURE__*/ _reactDefault.default.createElement(_listboxJs.Listbox.Header, null, title),
                    key: title
                }, optionMarkup));
            });
            return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _autocompleteScssJsDefault.default.SectionWrapper
            }, optionsMarkup));
        }
        const optionList = conditionalOptions.length > 0 ? buildMappedOptionFromOption(conditionalOptions) : null;
        if (listTitle) return(/*#__PURE__*/ _reactDefault.default.createElement(_listboxJs.Listbox.Section, {
            divider: false,
            title: /*#__PURE__*/ _reactDefault.default.createElement(_listboxJs.Listbox.Header, null, listTitle)
        }, optionList));
        return optionList;
    }, [
        listTitle,
        loading,
        options1,
        willLoadMoreResults,
        buildMappedOptionFromOption
    ]);
    const loadingMarkup = loading ? /*#__PURE__*/ _reactDefault.default.createElement(_listboxJs.Listbox.Loading, {
        accessibilityLabel: i18n.translate('Polaris.Autocomplete.spinnerAccessibilityLabel')
    }) : null;
    const updateSelection = _react.useCallback((newSelection)=>{
        if (allowMultiple) {
            if (selected.includes(newSelection)) onSelect(selected.filter((option)=>option !== newSelection
            ));
            else onSelect([
                ...selected,
                newSelection
            ]);
        } else onSelect([
            newSelection
        ]);
    }, [
        allowMultiple,
        onSelect,
        selected
    ]);
    const actionMarkup = actionBefore && /*#__PURE__*/ _reactDefault.default.createElement(_mappedActionJs.MappedAction, actionBefore);
    const emptyStateMarkup = emptyState && options1.length < 1 && !loading && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        role: "status"
    }, emptyState);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_comboboxJs.Combobox, {
        activator: textField,
        allowMultiple: allowMultiple,
        onScrolledToBottom: onLoadMoreResults,
        preferredPosition: preferredPosition
    }, actionMarkup || optionsMarkup1 || loadingMarkup || emptyStateMarkup ? /*#__PURE__*/ _reactDefault.default.createElement(_listboxJs.Listbox, {
        onSelect: updateSelection
    }, actionMarkup, optionsMarkup1 && (!loading || willLoadMoreResults) ? optionsMarkup1 : null, loadingMarkup, emptyStateMarkup) : null));
};
Autocomplete.TextField = _comboboxJs.Combobox.TextField;

},{"react":"6fep5","../../utilities/options.js":"1xZHM","./Autocomplete.scss.js":"oAUby","./components/MappedOption/MappedOption.js":"5Q8ds","../Combobox/Combobox.js":"8lCNN","./components/MappedAction/MappedAction.js":"1Y3YZ","../../utilities/i18n/hooks.js":"hHpYD","../Listbox/Listbox.js":"fqeV1","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1xZHM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isSection", ()=>isSection
);
function isSection(arr) {
    return typeof arr[0] === 'object' && Object.prototype.hasOwnProperty.call(arr[0], 'options');
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"oAUby":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Loading": "Polaris-Autocomplete__Loading",
    "SectionWrapper": "Polaris-Autocomplete__SectionWrapper"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5Q8ds":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MappedOption", ()=>MappedOption
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _mappedOptionScssJs = require("./MappedOption.scss.js");
var _mappedOptionScssJsDefault = parcelHelpers.interopDefault(_mappedOptionScssJs);
var _listboxJs = require("../../../Listbox/Listbox.js");
const MappedOption = /*#__PURE__*/ _react.memo(function MappedOption({ label , value , disabled , media , selected , singleSelection  }) {
    const mediaClassNames = _cssJs.classNames(_mappedOptionScssJsDefault.default.Media, disabled && _mappedOptionScssJsDefault.default.disabledMedia, singleSelection && _mappedOptionScssJsDefault.default.singleSelectionMedia);
    const mediaMarkup = media ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: mediaClassNames
    }, media) : null;
    const accessibilityLabel = typeof label === 'string' ? label : undefined;
    return(/*#__PURE__*/ _reactDefault.default.createElement(_listboxJs.Listbox.Option, {
        accessibilityLabel: accessibilityLabel,
        key: value,
        selected: selected,
        value: value,
        disabled: disabled
    }, /*#__PURE__*/ _reactDefault.default.createElement(_listboxJs.Listbox.TextOption, {
        selected: selected,
        disabled: disabled
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _mappedOptionScssJsDefault.default.Content
    }, mediaMarkup, label))));
});

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","./MappedOption.scss.js":"es4NO","../../../Listbox/Listbox.js":"fqeV1","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"es4NO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Content": "Polaris-Autocomplete-MappedOption__Content",
    "Media": "Polaris-Autocomplete-MappedOption__Media",
    "singleSelectionMedia": "Polaris-Autocomplete-MappedOption--singleSelectionMedia",
    "disabledMedia": "Polaris-Autocomplete-MappedOption--disabledMedia"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fqeV1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Listbox", ()=>Listbox
);
parcelHelpers.export(exports, "scrollable", ()=>scrollable
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _cssJs = require("../../utilities/css.js");
var _useToggleJs = require("../../utilities/use-toggle.js");
var _typesJs = require("../../types.js");
var _closestParentMatchJs = require("../../utilities/closest-parent-match.js");
var _scrollIntoViewJs = require("../../utilities/scroll-into-view.js");
var _listboxScssJs = require("./Listbox.scss.js");
var _listboxScssJsDefault = parcelHelpers.interopDefault(_listboxScssJs);
var _hooksJs = require("../../utilities/combobox/hooks.js");
var _selectorsJs = require("./components/Section/selectors.js");
var _contextJs = require("../../utilities/listbox/context.js");
var _textOptionJs = require("./components/TextOption/TextOption.js");
var _loadingJs = require("./components/Loading/Loading.js");
var _sectionJs = require("./components/Section/Section.js");
var _headerJs = require("./components/Header/Header.js");
var _actionJs = require("./components/Action/Action.js");
var _hooksJs1 = require("../../utilities/unique-id/hooks.js");
var _keypressListenerJs = require("../KeypressListener/KeypressListener.js");
var _visuallyHiddenJs = require("../VisuallyHidden/VisuallyHidden.js");
var _optionJs = require("./components/Option/Option.js");
const scrollable = {
    props: {
        'data-polaris-scrollable': true
    },
    selector: '[data-polaris-scrollable]'
};
const LISTBOX_OPTION_SELECTOR = '[data-listbox-option]';
const LISTBOX_OPTION_VALUE_ATTRIBUTE = 'data-listbox-option-value';
const DATA_ATTRIBUTE = 'data-focused';
function Listbox({ children , enableKeyboardControl , accessibilityLabel , onSelect  }) {
    const listboxClassName = _cssJs.classNames(_listboxScssJsDefault.default.Listbox);
    const { value: keyboardEventsEnabled , setTrue: enableKeyboardEvents , setFalse: disableKeyboardEvents  } = _useToggleJs.useToggle(Boolean(enableKeyboardControl));
    const listId = _hooksJs1.useUniqueId('Listbox');
    const scrollableRef = _react.useRef(null);
    const listboxRef = _react.useRef(null);
    const [loading, setLoading] = _react.useState();
    const [currentActiveOption1, setCurrentActiveOption] = _react.useState();
    const { setActiveOptionId , setListboxId , listboxId , textFieldLabelId , onOptionSelected , onKeyToBottom , textFieldFocused  } = _hooksJs.useComboboxListbox();
    const inCombobox = Boolean(setActiveOptionId);
    _react.useEffect(()=>{
        if (setListboxId && !listboxId) setListboxId(listId);
    }, [
        setListboxId,
        listboxId,
        listId
    ]);
    _react.useEffect(()=>{
        if (!currentActiveOption1 || !setActiveOptionId) return;
        setActiveOptionId(currentActiveOption1.domId);
    }, [
        currentActiveOption1,
        setActiveOptionId
    ]); // eslint-disable-next-line react-hooks/exhaustive-deps
    const handleScrollIntoView = _react.useCallback(_debounceDefault.default((option, first)=>{
        if (scrollableRef.current) {
            const { element  } = option;
            const focusTarget = first ? _closestParentMatchJs.closestParentMatch(element, _selectorsJs.listboxSectionDataSelector.selector) || element : element;
            _scrollIntoViewJs.scrollIntoView(focusTarget, scrollableRef.current);
        }
    }, 15), []);
    const handleChangeActiveOption = _react.useCallback((nextOption)=>{
        setCurrentActiveOption((currentActiveOption)=>{
            if (currentActiveOption) currentActiveOption.element.removeAttribute(DATA_ATTRIBUTE);
            if (nextOption) {
                nextOption.element.setAttribute(DATA_ATTRIBUTE, 'true');
                if (scrollableRef.current) {
                    const first = getNavigableOptions().findIndex((element)=>element.id === nextOption.element.id
                    ) === 0;
                    handleScrollIntoView(nextOption, first);
                }
                return nextOption;
            } else return undefined;
        });
    }, [
        handleScrollIntoView
    ]);
    _react.useEffect(()=>{
        if (listboxRef.current) scrollableRef.current = listboxRef.current.closest(scrollable.selector);
    }, []);
    _react.useEffect(()=>{
        if (enableKeyboardControl && !keyboardEventsEnabled) enableKeyboardEvents();
    }, [
        enableKeyboardControl,
        keyboardEventsEnabled,
        enableKeyboardEvents
    ]);
    const onOptionSelect = _react.useCallback((option)=>{
        handleChangeActiveOption(option);
        if (onOptionSelected) onOptionSelected();
        if (onSelect) onSelect(option.value);
    }, [
        handleChangeActiveOption,
        onSelect,
        onOptionSelected
    ]);
    const listboxContext = _react.useMemo(()=>({
            onOptionSelect,
            setLoading
        })
    , [
        onOptionSelect
    ]);
    function findNextValidOption(type) {
        const isUp = type === 'up';
        const navItems = getNavigableOptions();
        let nextElement = currentActiveOption1 === null || currentActiveOption1 === void 0 ? void 0 : currentActiveOption1.element;
        let count = -1;
        while((count++) < navItems.length){
            var _nextElement2;
            let nextIndex;
            if (nextElement) {
                var _nextElement;
                const currentId = (_nextElement = nextElement) === null || _nextElement === void 0 ? void 0 : _nextElement.id;
                const currentIndex = navItems.findIndex((currentNavItem)=>currentNavItem.id === currentId
                );
                let increment = isUp ? -1 : 1;
                if (currentIndex === 0 && isUp) increment = navItems.length - 1;
                else if (currentIndex === navItems.length - 1 && !isUp) increment = -(navItems.length - 1);
                nextIndex = currentIndex + increment;
                nextElement = navItems[nextIndex];
            } else {
                nextIndex = isUp ? navItems.length - 1 : 0;
                nextElement = navItems[nextIndex];
            }
            if (((_nextElement2 = nextElement) === null || _nextElement2 === void 0 ? void 0 : _nextElement2.getAttribute('aria-disabled')) === 'true') continue;
            if (nextIndex === navItems.length - 1 && onKeyToBottom) onKeyToBottom();
            return nextElement;
        }
        return null;
    }
    function handleArrow(type, evt) {
        evt.preventDefault();
        const nextValidElement = findNextValidOption(type);
        if (!nextValidElement) return;
        const nextOption = {
            domId: nextValidElement.id,
            value: nextValidElement.getAttribute(LISTBOX_OPTION_VALUE_ATTRIBUTE) || '',
            element: nextValidElement,
            disabled: nextValidElement.getAttribute('aria-disabled') === 'true'
        };
        handleChangeActiveOption(nextOption);
    }
    function handleDownArrow(evt) {
        handleArrow('down', evt);
    }
    function handleUpArrow(evt) {
        handleArrow('up', evt);
    }
    function handleEnter(evt) {
        evt.preventDefault();
        evt.stopPropagation();
        if (currentActiveOption1) onOptionSelect(currentActiveOption1);
    }
    function handleFocus() {
        if (enableKeyboardControl) return;
        enableKeyboardEvents();
    }
    function handleBlur(event) {
        event.stopPropagation();
        if (keyboardEventsEnabled) handleChangeActiveOption();
        if (enableKeyboardControl) return;
        disableKeyboardEvents();
    }
    const listeners = keyboardEventsEnabled || textFieldFocused ? /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_keypressListenerJs.KeypressListener, {
        keyEvent: "keydown",
        keyCode: _typesJs.Key.DownArrow,
        handler: handleDownArrow
    }), /*#__PURE__*/ _reactDefault.default.createElement(_keypressListenerJs.KeypressListener, {
        keyEvent: "keydown",
        keyCode: _typesJs.Key.UpArrow,
        handler: handleUpArrow
    }), /*#__PURE__*/ _reactDefault.default.createElement(_keypressListenerJs.KeypressListener, {
        keyEvent: "keydown",
        keyCode: _typesJs.Key.Enter,
        handler: handleEnter
    })) : null;
    function getNavigableOptions() {
        var _listboxRef$current;
        return [
            ...new Set((_listboxRef$current = listboxRef.current) === null || _listboxRef$current === void 0 ? void 0 : _listboxRef$current.querySelectorAll(LISTBOX_OPTION_SELECTOR))
        ];
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, listeners, /*#__PURE__*/ _reactDefault.default.createElement(_visuallyHiddenJs.VisuallyHidden, null, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        "aria-live": "polite"
    }, loading ? loading : null)), /*#__PURE__*/ _reactDefault.default.createElement(_contextJs.ListboxContext.Provider, {
        value: listboxContext
    }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs.WithinListboxContext.Provider, {
        value: true
    }, children ? /*#__PURE__*/ _reactDefault.default.createElement("ul", {
        tabIndex: 0,
        role: "listbox",
        className: listboxClassName,
        "aria-label": inCombobox ? undefined : accessibilityLabel,
        "aria-labelledby": textFieldLabelId,
        "aria-busy": Boolean(loading),
        "aria-activedescendant": currentActiveOption1 && currentActiveOption1.domId,
        id: listId,
        onFocus: inCombobox ? undefined : handleFocus,
        onBlur: inCombobox ? undefined : handleBlur,
        ref: listboxRef
    }, children) : null))));
}
Listbox.Option = _optionJs.Option;
Listbox.TextOption = _textOptionJs.TextOption;
Listbox.Loading = _loadingJs.Loading;
Listbox.Section = _sectionJs.Section;
Listbox.Header = _headerJs.Header;
Listbox.Action = _actionJs.Action;

},{"react":"6fep5","lodash/debounce":"a9ymG","../../utilities/css.js":"kYdwV","../../utilities/use-toggle.js":"jHDnh","../../types.js":"atQnH","../../utilities/closest-parent-match.js":"k0hWa","../../utilities/scroll-into-view.js":"l5Rs2","./Listbox.scss.js":"6YyTZ","../../utilities/combobox/hooks.js":"e2OlE","./components/Section/selectors.js":"hd876","../../utilities/listbox/context.js":"7FZuT","./components/TextOption/TextOption.js":"5AalZ","./components/Loading/Loading.js":"2UUqO","./components/Section/Section.js":"68XcL","./components/Header/Header.js":"8uz4T","./components/Action/Action.js":"cDm8I","../../utilities/unique-id/hooks.js":"kPfFC","../KeypressListener/KeypressListener.js":"2doU0","../VisuallyHidden/VisuallyHidden.js":"fGCM0","./components/Option/Option.js":"52dwI","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"k0hWa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "closestParentMatch", ()=>closestParentMatch
);
function closestParentMatch(element, matcher) {
    let parent = element.parentElement;
    while(parent){
        if (parent.matches(matcher)) return parent;
        parent = parent.parentElement;
    }
    return parent;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"l5Rs2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "scrollIntoView", ()=>scrollIntoView
);
function scrollIntoView(element, container) {
    requestAnimationFrame(()=>{
        if (element) {
            const offset = element.offsetTop - container.scrollTop;
            container.scrollBy({
                top: offset
            });
        }
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6YyTZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Listbox": "Polaris-Listbox"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"e2OlE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useComboboxListbox", ()=>useComboboxListbox
);
parcelHelpers.export(exports, "useComboboxTextField", ()=>useComboboxTextField
);
var _react = require("react");
var _contextJs = require("./context.js");
function useComboboxTextField() {
    const context = _react.useContext(_contextJs.ComboboxTextFieldContext);
    if (!context) throw new Error('No Combobox was provided. Your component must be wrapped in a <Combobox> component.');
    return context;
}
function useComboboxListbox() {
    const context = _react.useContext(_contextJs.ComboboxListboxContext);
    return context;
}

},{"react":"6fep5","./context.js":"4DlpH","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4DlpH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ComboboxListboxContext", ()=>ComboboxListboxContext
);
parcelHelpers.export(exports, "ComboboxListboxOptionContext", ()=>ComboboxListboxOptionContext
);
parcelHelpers.export(exports, "ComboboxTextFieldContext", ()=>ComboboxTextFieldContext
);
var _react = require("react");
const ComboboxTextFieldContext = /*#__PURE__*/ _react.createContext(undefined);
const ComboboxListboxContext = /*#__PURE__*/ _react.createContext({
});
const ComboboxListboxOptionContext = /*#__PURE__*/ _react.createContext({
});

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hd876":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "listboxSectionDataSelector", ()=>listboxSectionDataSelector
);
parcelHelpers.export(exports, "listboxWithinSectionDataSelector", ()=>listboxWithinSectionDataSelector
);
const listboxSectionDataSelector = {
    props: {
        'data-polaris-listbox-section-item': true
    },
    selector: '[data-polaris-listbox-section-item]'
};
const listboxWithinSectionDataSelector = {
    attribute: 'data-polaris-listbox-within-section-item'
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7FZuT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ListboxContext", ()=>ListboxContext
);
parcelHelpers.export(exports, "WithinListboxContext", ()=>WithinListboxContext
);
var _react = require("react");
const ListboxContext = /*#__PURE__*/ _react.createContext(undefined);
const WithinListboxContext = /*#__PURE__*/ _react.createContext(false);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5AalZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TextOption", ()=>TextOption
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _contextJs = require("../../../../utilities/combobox/context.js");
var _textOptionScssJs = require("./TextOption.scss.js");
var _textOptionScssJsDefault = parcelHelpers.interopDefault(_textOptionScssJs);
var _contextJs1 = require("../../../../utilities/autocomplete/context.js");
var _checkboxJs = require("../../../Checkbox/Checkbox.js");
const TextOption = /*#__PURE__*/ _react.memo(function TextOption({ children , selected , disabled  }) {
    const { allowMultiple  } = _react.useContext(_contextJs.ComboboxListboxOptionContext);
    const { isAction  } = _react.useContext(_contextJs1.MappedActionContext);
    const textOptionClassName = _cssJs.classNames(_textOptionScssJsDefault.default.TextOption, selected && !allowMultiple && _textOptionScssJsDefault.default.selected, disabled && _textOptionScssJsDefault.default.disabled, allowMultiple && _textOptionScssJsDefault.default.allowMultiple, isAction && _textOptionScssJsDefault.default.isAction);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: textOptionClassName
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _textOptionScssJsDefault.default.Content
    }, allowMultiple ? /*#__PURE__*/ _reactDefault.default.createElement(_checkboxJs.Checkbox, {
        checked: selected,
        label: children
    }) : children)));
});

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/combobox/context.js":"4DlpH","./TextOption.scss.js":"ltZ5r","../../../../utilities/autocomplete/context.js":"SGNs7","../../../Checkbox/Checkbox.js":"irP0n","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ltZ5r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "TextOption": "Polaris-Listbox-TextOption",
    "allowMultiple": "Polaris-Listbox-TextOption--allowMultiple",
    "isAction": "Polaris-Listbox-TextOption--isAction",
    "disabled": "Polaris-Listbox-TextOption--disabled",
    "selected": "Polaris-Listbox-TextOption--selected",
    "Content": "Polaris-Listbox-TextOption__Content"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"SGNs7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MappedActionContext", ()=>MappedActionContext
);
var _react = require("react");
const MappedActionContext = /*#__PURE__*/ _react.createContext({
    isAction: false
});

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"irP0n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Checkbox", ()=>Checkbox
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _useToggleJs = require("../../utilities/use-toggle.js");
var _typesJs = require("../../types.js");
var _contextJs = require("../../utilities/listbox/context.js");
var _checkboxScssJs = require("./Checkbox.scss.js");
var _checkboxScssJsDefault = parcelHelpers.interopDefault(_checkboxScssJs);
var _choiceJs = require("../Choice/Choice.js");
var _inlineErrorJs = require("../InlineError/InlineError.js");
var _hooksJs = require("../../utilities/unique-id/hooks.js");
var _iconJs = require("../Icon/Icon.js");
const Checkbox = /*#__PURE__*/ _react.forwardRef(function Checkbox({ ariaControls , ariaDescribedBy: ariaDescribedByProp , label , labelHidden , checked =false , helpText , disabled , id: idProp , name , value , error , onChange , onFocus , onBlur  }, ref) {
    const inputNode = _react.useRef(null);
    const id = _hooksJs.useUniqueId('Checkbox', idProp);
    const { value: mouseOver , setTrue: handleMouseOver , setFalse: handleMouseOut  } = _useToggleJs.useToggle(false);
    const [keyFocused, setKeyFocused] = _react.useState(false);
    const isWithinListbox = _react.useContext(_contextJs.WithinListboxContext);
    _react.useImperativeHandle(ref, ()=>({
            focus: ()=>{
                if (inputNode.current) inputNode.current.focus();
            }
        })
    );
    const handleBlur = ()=>{
        onBlur && onBlur();
        setKeyFocused(false);
    };
    const handleInput = ()=>{
        if (onChange == null || inputNode.current == null || disabled) return;
        onChange(!inputNode.current.checked, id);
        inputNode.current.focus();
    };
    const handleKeyUp = (event)=>{
        const { keyCode  } = event;
        !keyFocused && setKeyFocused(true);
        if (keyCode === _typesJs.Key.Space) handleInput();
    };
    const describedBy = [];
    if (error && typeof error !== 'boolean') describedBy.push(_inlineErrorJs.errorTextID(id));
    if (helpText) describedBy.push(_choiceJs.helpTextID(id));
    if (ariaDescribedByProp) describedBy.push(ariaDescribedByProp);
    const ariaDescribedBy = describedBy.length ? describedBy.join(' ') : undefined;
    const wrapperClassName = _cssJs.classNames(_checkboxScssJsDefault.default.Checkbox, error && _checkboxScssJsDefault.default.error);
    const backdropClassName = _cssJs.classNames(_checkboxScssJsDefault.default.Backdrop, mouseOver && _checkboxScssJsDefault.default.hover);
    const isIndeterminate = checked === 'indeterminate';
    const isChecked = !isIndeterminate && Boolean(checked);
    const indeterminateAttributes = isIndeterminate ? {
        indeterminate: 'true',
        'aria-checked': 'mixed'
    } : {
        'aria-checked': isChecked
    };
    const iconSource = isIndeterminate ? _polarisIcons.MinusMinor : _polarisIcons.TickSmallMinor;
    const inputClassName = _cssJs.classNames(_checkboxScssJsDefault.default.Input, isIndeterminate && _checkboxScssJsDefault.default['Input-indeterminate'], keyFocused && _checkboxScssJsDefault.default.keyFocused);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_choiceJs.Choice, {
        id: id,
        label: label,
        labelHidden: labelHidden,
        helpText: helpText,
        error: error,
        disabled: disabled,
        onClick: handleInput,
        onMouseOver: handleMouseOver,
        onMouseOut: handleMouseOut
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: wrapperClassName
    }, /*#__PURE__*/ _reactDefault.default.createElement("input", Object.assign({
        onKeyUp: handleKeyUp,
        ref: inputNode,
        id: id,
        name: name,
        value: value,
        type: "checkbox",
        checked: isChecked,
        disabled: disabled,
        className: inputClassName,
        onFocus: onFocus,
        onBlur: handleBlur,
        onClick: stopPropagation,
        onChange: noop,
        "aria-invalid": error != null,
        "aria-controls": ariaControls,
        "aria-describedby": ariaDescribedBy,
        role: isWithinListbox ? 'presentation' : 'checkbox'
    }, indeterminateAttributes)), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: backdropClassName
    }), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _checkboxScssJsDefault.default.Icon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: iconSource
    })))));
});
function noop() {
}
function stopPropagation(event) {
    event.stopPropagation();
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","../../utilities/use-toggle.js":"jHDnh","../../types.js":"atQnH","../../utilities/listbox/context.js":"7FZuT","./Checkbox.scss.js":"6vlgA","../Choice/Choice.js":"TtJx8","../InlineError/InlineError.js":"5VVez","../../utilities/unique-id/hooks.js":"kPfFC","../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6vlgA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Checkbox": "Polaris-Checkbox",
    "Input": "Polaris-Checkbox__Input",
    "keyFocused": "Polaris-Checkbox--keyFocused",
    "Backdrop": "Polaris-Checkbox__Backdrop",
    "Input-indeterminate": "Polaris-Checkbox__Input--indeterminate",
    "Icon": "Polaris-Checkbox__Icon",
    "hover": "Polaris-Checkbox--hover",
    "error": "Polaris-Checkbox--error"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"TtJx8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Choice", ()=>Choice
);
parcelHelpers.export(exports, "helpTextID", ()=>helpTextID
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _choiceScssJs = require("./Choice.scss.js");
var _choiceScssJsDefault = parcelHelpers.interopDefault(_choiceScssJs);
var _inlineErrorJs = require("../InlineError/InlineError.js");
function Choice({ id , label , disabled , error , children , labelHidden , helpText , onClick , onMouseOut , onMouseOver  }) {
    const className = _cssJs.classNames(_choiceScssJsDefault.default.Choice, labelHidden && _choiceScssJsDefault.default.labelHidden, disabled && _choiceScssJsDefault.default.disabled);
    const labelMarkup = /*#__PURE__*/ _reactDefault.default.createElement("label", {
        className: className,
        htmlFor: id,
        onClick: onClick,
        onMouseOver: onMouseOver,
        onMouseOut: onMouseOut
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _choiceScssJsDefault.default.Control
    }, children), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _choiceScssJsDefault.default.Label
    }, label));
    const helpTextMarkup = helpText ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _choiceScssJsDefault.default.HelpText,
        id: helpTextID(id)
    }, helpText) : null;
    const errorMarkup = error && typeof error !== 'boolean' && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _choiceScssJsDefault.default.Error
    }, /*#__PURE__*/ _reactDefault.default.createElement(_inlineErrorJs.InlineError, {
        message: error,
        fieldID: id
    }));
    const descriptionMarkup = helpTextMarkup || errorMarkup ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _choiceScssJsDefault.default.Descriptions
    }, errorMarkup, helpTextMarkup) : null;
    return descriptionMarkup ? /*#__PURE__*/ _reactDefault.default.createElement("div", null, labelMarkup, descriptionMarkup) : labelMarkup;
}
function helpTextID(id) {
    return `${id}HelpText`;
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./Choice.scss.js":"ksjox","../InlineError/InlineError.js":"5VVez","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ksjox":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Choice": "Polaris-Choice",
    "labelHidden": "Polaris-Choice--labelHidden",
    "Label": "Polaris-Choice__Label",
    "Control": "Polaris-Choice__Control",
    "disabled": "Polaris-Choice--disabled",
    "Descriptions": "Polaris-Choice__Descriptions",
    "HelpText": "Polaris-Choice__HelpText"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5VVez":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "InlineError", ()=>InlineError
);
parcelHelpers.export(exports, "errorTextID", ()=>errorTextID
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _inlineErrorScssJs = require("./InlineError.scss.js");
var _inlineErrorScssJsDefault = parcelHelpers.interopDefault(_inlineErrorScssJs);
var _iconJs = require("../Icon/Icon.js");
function InlineError({ message , fieldID  }) {
    if (!message) return null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        id: errorTextID(fieldID),
        className: _inlineErrorScssJsDefault.default.InlineError
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _inlineErrorScssJsDefault.default.Icon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.AlertMinor
    })), message));
}
function errorTextID(id) {
    return `${id}Error`;
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","./InlineError.scss.js":"4xpCf","../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4xpCf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "InlineError": "Polaris-InlineError",
    "Icon": "Polaris-InlineError__Icon"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2UUqO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Loading", ()=>Loading
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _loadingScssJs = require("./Loading.scss.js");
var _loadingScssJsDefault = parcelHelpers.interopDefault(_loadingScssJs);
var _hooksJs = require("../../../../utilities/listbox/hooks.js");
var _spinnerJs = require("../../../Spinner/Spinner.js");
const Loading = /*#__PURE__*/ _react.memo(function LoadingOption({ children , accessibilityLabel: label  }) {
    const { setLoading  } = _hooksJs.useListbox();
    _react.useEffect(()=>{
        setLoading(label);
        return ()=>{
            setLoading(undefined);
        };
    }, [
        label,
        setLoading
    ]);
    return(/*#__PURE__*/ _reactDefault.default.createElement("li", {
        className: _loadingScssJsDefault.default.ListItem,
        role: "presentation"
    }, children ? children : /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _loadingScssJsDefault.default.Loading
    }, /*#__PURE__*/ _reactDefault.default.createElement(_spinnerJs.Spinner, {
        size: "small",
        accessibilityLabel: label
    }))));
});

},{"react":"6fep5","./Loading.scss.js":"2fCNB","../../../../utilities/listbox/hooks.js":"f58zP","../../../Spinner/Spinner.js":"itKPn","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2fCNB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ListItem": "Polaris-Listbox-Loading__ListItem",
    "Loading": "Polaris-Listbox-Loading"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"f58zP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useListbox", ()=>useListbox
);
var _react = require("react");
var _contextJs = require("./context.js");
function useListbox() {
    const listbox = _react.useContext(_contextJs.ListboxContext);
    if (!listbox) throw new Error('No Listbox was provided. Listbox components must be wrapped in a Listbox');
    return listbox;
}

},{"react":"6fep5","./context.js":"7FZuT","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"68XcL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Section", ()=>Section
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _selectorsJs = require("./selectors.js");
var _contextJs = require("./context.js");
var _sectionScssJs = require("./Section.scss.js");
var _sectionScssJsDefault = parcelHelpers.interopDefault(_sectionScssJs);
var _hooksJs = require("../../../../utilities/unique-id/hooks.js");
function Section({ children , divider =true , title  }) {
    const sectionId = _hooksJs.useUniqueId('ListboxSection');
    return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.SectionContext.Provider, {
        value: sectionId
    }, /*#__PURE__*/ _reactDefault.default.createElement("li", Object.assign({
        role: "presentation"
    }, _selectorsJs.listboxSectionDataSelector.props), title, /*#__PURE__*/ _reactDefault.default.createElement("ul", {
        role: "group",
        "aria-labelledby": sectionId,
        className: _cssJs.classNames(_sectionScssJsDefault.default.SectionGroup, !divider && _sectionScssJsDefault.default.noDivider)
    }, children))));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","./selectors.js":"hd876","./context.js":"8ofje","./Section.scss.js":"9eKb4","../../../../utilities/unique-id/hooks.js":"kPfFC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8ofje":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SectionContext", ()=>SectionContext
);
var _react = require("react");
const SectionContext = /*#__PURE__*/ _react.createContext(null);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9eKb4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "SectionGroup": "Polaris-Listbox-Section__SectionGroup",
    "noDivider": "Polaris-Listbox-Section--noDivider"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8uz4T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Header", ()=>Header
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _headerScssJs = require("./Header.scss.js");
var _headerScssJsDefault = parcelHelpers.interopDefault(_headerScssJs);
var _hooksJs = require("../Section/hooks.js");
function Header({ children  }) {
    const sectionId = _hooksJs.useSection() || '';
    const content = typeof children === 'string' ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.Header
    }, children) : children;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        "aria-hidden": true,
        id: sectionId
    }, content));
}

},{"react":"6fep5","./Header.scss.js":"4ss2y","../Section/hooks.js":"5RnGR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4ss2y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Header": "Polaris-Listbox-Header"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5RnGR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useSection", ()=>useSection
);
var _react = require("react");
var _contextJs = require("./context.js");
function useSection() {
    const context = _react.useContext(_contextJs.SectionContext);
    return context;
}

},{"react":"6fep5","./context.js":"8ofje","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cDm8I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Action", ()=>Action
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _actionScssJs = require("./Action.scss.js");
var _actionScssJsDefault = parcelHelpers.interopDefault(_actionScssJs);
var _optionJs = require("../Option/Option.js");
var _textOptionJs = require("../TextOption/TextOption.js");
var _iconJs = require("../../../Icon/Icon.js");
function Action(props) {
    const { selected , disabled , children , icon  } = props;
    const iconMarkup = icon && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _actionScssJsDefault.default.Icon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        color: "subdued",
        source: icon
    }));
    return(/*#__PURE__*/ _reactDefault.default.createElement(_optionJs.Option, props, /*#__PURE__*/ _reactDefault.default.createElement(_textOptionJs.TextOption, {
        selected: selected,
        disabled: disabled
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _actionScssJsDefault.default.Action
    }, iconMarkup, children))));
}

},{"react":"6fep5","./Action.scss.js":"loxPh","../Option/Option.js":"52dwI","../TextOption/TextOption.js":"5AalZ","../../../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"loxPh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Action": "Polaris-Listbox-Action",
    "Icon": "Polaris-Listbox-Action__Icon"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"52dwI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Option", ()=>Option
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _optionScssJs = require("./Option.scss.js");
var _optionScssJsDefault = parcelHelpers.interopDefault(_optionScssJs);
var _hooksJs = require("../../../../utilities/listbox/hooks.js");
var _hooksJs1 = require("../Section/hooks.js");
var _selectorsJs = require("../Section/selectors.js");
var _textOptionJs = require("../TextOption/TextOption.js");
var _contextJs = require("../../../../utilities/autocomplete/context.js");
var _hooksJs2 = require("../../../../utilities/unique-id/hooks.js");
var _unstyledLinkJs = require("../../../UnstyledLink/UnstyledLink.js");
const Option = /*#__PURE__*/ _react.memo(function Option({ value , children , selected , disabled =false , accessibilityLabel , divider  }) {
    const { onOptionSelect  } = _hooksJs.useListbox();
    const { role , url , external , onAction , destructive , isAction  } = _react.useContext(_contextJs.MappedActionContext);
    const listItemRef = _react.useRef(null);
    const domId = _hooksJs2.useUniqueId('ListboxOption');
    const sectionId = _hooksJs1.useSection();
    const isWithinSection = Boolean(sectionId);
    const handleOptionClick = _react.useCallback((evt)=>{
        evt.preventDefault();
        onAction && onAction();
        if (listItemRef.current && !isAction) onOptionSelect({
            domId,
            value,
            element: listItemRef.current,
            disabled
        });
    }, [
        domId,
        onOptionSelect,
        value,
        disabled,
        onAction,
        isAction
    ]); // prevents lost of focus on Textfield
    const handleMouseDown = (evt)=>{
        evt.preventDefault();
    };
    const content = typeof children === 'string' ? /*#__PURE__*/ _reactDefault.default.createElement(_textOptionJs.TextOption, {
        selected: selected,
        disabled: disabled
    }, children) : children;
    const sectionAttributes = {
        [_selectorsJs.listboxWithinSectionDataSelector.attribute]: isWithinSection
    };
    const legacyRoleSupport = role || 'option';
    const contentMarkup = url ? /*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, {
        url: url,
        external: external
    }, content) : content;
    return(/*#__PURE__*/ _reactDefault.default.createElement("li", Object.assign({
    }, sectionAttributes, {
        "data-within-section": isWithinSection,
        "data-listbox-option-value": value,
        "data-listbox-option-destructive": destructive,
        className: _cssJs.classNames(_optionScssJsDefault.default.Option, divider && _optionScssJsDefault.default.divider),
        id: domId,
        ref: listItemRef,
        tabIndex: -1,
        onMouseDown: handleMouseDown,
        "aria-disabled": disabled,
        onClick: disabled ? undefined : handleOptionClick,
        role: legacyRoleSupport,
        "aria-label": accessibilityLabel,
        "aria-selected": selected,
        "data-listbox-option": true
    }), contentMarkup));
});

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","./Option.scss.js":"7Ikpe","../../../../utilities/listbox/hooks.js":"f58zP","../Section/hooks.js":"5RnGR","../Section/selectors.js":"hd876","../TextOption/TextOption.js":"5AalZ","../../../../utilities/autocomplete/context.js":"SGNs7","../../../../utilities/unique-id/hooks.js":"kPfFC","../../../UnstyledLink/UnstyledLink.js":"8AMgX","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7Ikpe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Option": "Polaris-Listbox-Option",
    "divider": "Polaris-Listbox-Option--divider"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8lCNN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Combobox", ()=>Combobox
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _comboboxScssJs = require("./Combobox.scss.js");
var _comboboxScssJsDefault = parcelHelpers.interopDefault(_comboboxScssJs);
var _contextJs = require("../../utilities/combobox/context.js");
var _textFieldJs = require("./components/TextField/TextField.js");
var _popoverJs = require("../Popover/Popover.js");
function Combobox({ children , activator , allowMultiple , onScrolledToBottom , preferredPosition ='below'  }) {
    const [popoverActive, setPopoverActive] = _react.useState(false);
    const [activeOptionId, setActiveOptionId] = _react.useState();
    const [textFieldLabelId, setTextFieldLabelId] = _react.useState();
    const [listboxId, setListboxId] = _react.useState();
    const [textFieldFocused, setTextFieldFocused] = _react.useState(false);
    const shouldOpen = Boolean(!popoverActive && _react.Children.count(children) > 0);
    const onOptionSelected = _react.useCallback(()=>{
        if (!allowMultiple) {
            setPopoverActive(false);
            setActiveOptionId(undefined);
        }
    }, [
        allowMultiple
    ]);
    const handleClose = _react.useCallback(()=>{
        setPopoverActive(false);
        setActiveOptionId(undefined);
    }, []);
    const handleFocus = _react.useCallback(()=>{
        if (shouldOpen) setPopoverActive(true);
    }, [
        shouldOpen
    ]);
    const handleChange = _react.useCallback(()=>{
        if (shouldOpen) setPopoverActive(true);
    }, [
        shouldOpen
    ]);
    const handleBlur = _react.useCallback(()=>{
        if (popoverActive) {
            setPopoverActive(false);
            setActiveOptionId(undefined);
        }
    }, [
        popoverActive
    ]);
    const textFieldContextValue = _react.useMemo(()=>({
            activeOptionId,
            expanded: popoverActive,
            listboxId,
            setTextFieldFocused,
            setTextFieldLabelId,
            onTextFieldFocus: handleFocus,
            onTextFieldChange: handleChange,
            onTextFieldBlur: handleBlur
        })
    , [
        activeOptionId,
        popoverActive,
        listboxId,
        setTextFieldFocused,
        setTextFieldLabelId,
        handleFocus,
        handleChange,
        handleBlur
    ]);
    const listboxOptionContextValue = _react.useMemo(()=>({
            allowMultiple
        })
    , [
        allowMultiple
    ]);
    const listboxContextValue = _react.useMemo(()=>({
            setActiveOptionId,
            setListboxId,
            listboxId,
            textFieldLabelId,
            onOptionSelected,
            textFieldFocused,
            onKeyToBottom: onScrolledToBottom
        })
    , [
        setActiveOptionId,
        setListboxId,
        listboxId,
        textFieldLabelId,
        onOptionSelected,
        textFieldFocused,
        onScrolledToBottom
    ]);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
        active: popoverActive,
        onClose: handleClose,
        activator: /*#__PURE__*/ _reactDefault.default.createElement(_contextJs.ComboboxTextFieldContext.Provider, {
            value: textFieldContextValue
        }, activator),
        autofocusTarget: "none",
        preventFocusOnClose: true,
        fullWidth: true,
        preferInputActivator: false,
        preferredPosition: preferredPosition
    }, /*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover.Pane, {
        onScrolledToBottom: onScrolledToBottom
    }, _react.Children.count(children) > 0 ? /*#__PURE__*/ _reactDefault.default.createElement(_contextJs.ComboboxListboxContext.Provider, {
        value: listboxContextValue
    }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs.ComboboxListboxOptionContext.Provider, {
        value: listboxOptionContextValue
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _comboboxScssJsDefault.default.Listbox
    }, children))) : null)));
}
Combobox.TextField = _textFieldJs.TextField;

},{"react":"6fep5","./Combobox.scss.js":"lhU7u","../../utilities/combobox/context.js":"4DlpH","./components/TextField/TextField.js":"cz2RU","../Popover/Popover.js":"9ztCP","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lhU7u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Listbox": "Polaris-Combobox__Listbox"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cz2RU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TextField", ()=>TextField
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _hooksJs = require("../../../../utilities/combobox/hooks.js");
var _textFieldJs = require("../../../TextField/TextField.js");
var _hooksJs1 = require("../../../../utilities/unique-id/hooks.js");
var _labelJs = require("../../../Label/Label.js");
function TextField({ value: value1 , id: idProp , onFocus , onBlur , onChange , ...rest }) {
    const comboboxTextFieldContext = _hooksJs.useComboboxTextField();
    const { activeOptionId , listboxId , expanded , setTextFieldFocused , setTextFieldLabelId , onTextFieldFocus , onTextFieldChange , onTextFieldBlur  } = comboboxTextFieldContext;
    const uniqueId = _hooksJs1.useUniqueId('ComboboxTextField');
    const textFieldId = _react.useMemo(()=>idProp || uniqueId
    , [
        uniqueId,
        idProp
    ]);
    const labelId = _react.useMemo(()=>_labelJs.labelID(idProp || uniqueId)
    , [
        uniqueId,
        idProp
    ]);
    _react.useEffect(()=>{
        if (setTextFieldLabelId) setTextFieldLabelId(labelId);
    }, [
        labelId,
        setTextFieldLabelId
    ]);
    const handleFocus = _react.useCallback(()=>{
        if (onFocus) onFocus();
        if (onTextFieldFocus) onTextFieldFocus();
        if (setTextFieldFocused) setTextFieldFocused(true);
    }, [
        onFocus,
        onTextFieldFocus,
        setTextFieldFocused
    ]);
    const handleBlur = _react.useCallback(()=>{
        if (onBlur) onBlur();
        if (onTextFieldBlur) onTextFieldBlur();
        if (setTextFieldFocused) setTextFieldFocused(false);
    }, [
        onBlur,
        onTextFieldBlur,
        setTextFieldFocused
    ]);
    const handleChange = _react.useCallback((value, id)=>{
        if (onChange) onChange(value, id);
        if (onTextFieldChange) onTextFieldChange();
    }, [
        onChange,
        onTextFieldChange
    ]);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_textFieldJs.TextField, Object.assign({
    }, rest, {
        value: value1,
        id: textFieldId,
        onFocus: handleFocus,
        onBlur: handleBlur,
        onChange: handleChange,
        ariaAutocomplete: "list",
        "aria-haspopup": "listbox",
        ariaActiveDescendant: activeOptionId,
        ariaControls: listboxId,
        role: "combobox",
        ariaExpanded: expanded
    })));
}

},{"react":"6fep5","../../../../utilities/combobox/hooks.js":"e2OlE","../../../TextField/TextField.js":"bVuNq","../../../../utilities/unique-id/hooks.js":"kPfFC","../../../Label/Label.js":"c5NsR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bVuNq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TextField", ()=>TextField
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _useIsAfterInitialMountJs = require("../../utilities/use-is-after-initial-mount.js");
var _typesJs = require("../../types.js");
var _textFieldScssJs = require("./TextField.scss.js");
var _textFieldScssJsDefault = parcelHelpers.interopDefault(_textFieldScssJs);
var _labelledJs = require("../Labelled/Labelled.js");
var _connectedJs = require("../Connected/Connected.js");
var _spinnerJs = require("./components/Spinner/Spinner.js");
var _resizerJs = require("./components/Resizer/Resizer.js");
var _labelJs = require("../Label/Label.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _hooksJs1 = require("../../utilities/unique-id/hooks.js");
var _visuallyHiddenJs = require("../VisuallyHidden/VisuallyHidden.js");
var _iconJs = require("../Icon/Icon.js");
function TextField({ prefix , suffix , placeholder , value , helpText , label , labelAction , labelHidden , disabled , clearButton , readOnly , autoFocus , focused , multiline , error , connectedRight , connectedLeft , type , name , id: idProp , role , step , autoComplete , max , maxLength , maxHeight , min , minLength , pattern , inputMode , spellCheck , ariaOwns , ariaControls , ariaExpanded , ariaActiveDescendant , ariaAutocomplete , showCharacterCount , align , onClearButtonClick , onChange: onChange1 , onFocus , onBlur , requiredIndicator , monospaced  }) {
    const i18n = _hooksJs.useI18n();
    const [height1, setHeight] = _react.useState(null);
    const [focus, setFocus] = _react.useState(Boolean(focused));
    const isAfterInitial = _useIsAfterInitialMountJs.useIsAfterInitialMount();
    const id = _hooksJs1.useUniqueId('TextField', idProp);
    const inputRef = _react.useRef(null);
    const prefixRef = _react.useRef(null);
    const suffixRef = _react.useRef(null);
    const buttonPressTimer = _react.useRef();
    _react.useEffect(()=>{
        const input = inputRef.current;
        if (!input || focused === undefined) return;
        focused ? input.focus() : input.blur();
    }, [
        focused
    ]); // Use a typeof check here as Typescript mostly protects us from non-stringy
    // values but overzealous usage of `any` in consuming apps means people have
    // been known to pass a number in, so make it clear that doesn't work.
    const normalizedValue = typeof value === 'string' ? value : '';
    const normalizedStep = step != null ? step : 1;
    const normalizedMax = max != null ? max : Infinity;
    const normalizedMin = min != null ? min : -Infinity;
    const className = _cssJs.classNames(_textFieldScssJsDefault.default.TextField, Boolean(normalizedValue) && _textFieldScssJsDefault.default.hasValue, disabled && _textFieldScssJsDefault.default.disabled, readOnly && _textFieldScssJsDefault.default.readOnly, error && _textFieldScssJsDefault.default.error, multiline && _textFieldScssJsDefault.default.multiline, focus && _textFieldScssJsDefault.default.focus);
    const inputType = type === 'currency' ? 'text' : type;
    const prefixMarkup = prefix ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _textFieldScssJsDefault.default.Prefix,
        id: `${id}Prefix`,
        ref: prefixRef
    }, prefix) : null;
    const suffixMarkup = suffix ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _textFieldScssJsDefault.default.Suffix,
        id: `${id}Suffix`,
        ref: suffixRef
    }, suffix) : null;
    let characterCountMarkup = null;
    if (showCharacterCount) {
        const characterCount = normalizedValue.length;
        const characterCountLabel = maxLength ? i18n.translate('Polaris.TextField.characterCountWithMaxLength', {
            count: characterCount,
            limit: maxLength
        }) : i18n.translate('Polaris.TextField.characterCount', {
            count: characterCount
        });
        const characterCountClassName = _cssJs.classNames(_textFieldScssJsDefault.default.CharacterCount, multiline && _textFieldScssJsDefault.default.AlignFieldBottom);
        const characterCountText = !maxLength ? characterCount : `${characterCount}/${maxLength}`;
        characterCountMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            id: `${id}CharacterCounter`,
            className: characterCountClassName,
            "aria-label": characterCountLabel,
            "aria-live": focus ? 'polite' : 'off',
            "aria-atomic": "true"
        }, characterCountText);
    }
    const clearButtonVisible = normalizedValue !== '';
    const clearButtonMarkup = clearButtonVisible && clearButton ? /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        className: _textFieldScssJsDefault.default.ClearButton,
        onClick: handleClearButtonPress,
        disabled: disabled
    }, /*#__PURE__*/ _reactDefault.default.createElement(_visuallyHiddenJs.VisuallyHidden, null, i18n.translate('Polaris.Common.clear')), /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.CircleCancelMinor,
        color: "base"
    })) : null;
    const handleNumberChange = _react.useCallback((steps)=>{
        if (onChange1 == null) return;
         // Returns the length of decimal places in a number
        const dpl = (num)=>(num.toString().split('.')[1] || []).length
        ;
        const numericValue = value ? parseFloat(value) : 0;
        if (isNaN(numericValue)) return;
         // Making sure the new value has the same length of decimal places as the
        // step / value has.
        const decimalPlaces = Math.max(dpl(numericValue), dpl(normalizedStep));
        const newValue = Math.min(Number(normalizedMax), Math.max(numericValue + steps * normalizedStep, Number(normalizedMin)));
        onChange1(String(newValue.toFixed(decimalPlaces)), id);
    }, [
        id,
        normalizedMax,
        normalizedMin,
        onChange1,
        normalizedStep,
        value
    ]);
    const handleButtonRelease = _react.useCallback(()=>{
        clearTimeout(buttonPressTimer.current);
    }, []);
    const handleButtonPress = _react.useCallback((onChange)=>{
        const minInterval = 50;
        const decrementBy = 10;
        let interval = 200;
        const onChangeInterval = ()=>{
            if (interval > minInterval) interval -= decrementBy;
            onChange(0);
            buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);
        };
        buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);
        document.addEventListener('mouseup', handleButtonRelease, {
            once: true
        });
    }, [
        handleButtonRelease
    ]);
    const spinnerMarkup = type === 'number' && step !== 0 && !disabled && !readOnly ? /*#__PURE__*/ _reactDefault.default.createElement(_spinnerJs.Spinner, {
        onChange: handleNumberChange,
        onMouseDown: handleButtonPress,
        onMouseUp: handleButtonRelease
    }) : null;
    const style = multiline && height1 ? {
        height: height1,
        maxHeight
    } : null;
    const handleExpandingResize = _react.useCallback((height)=>{
        setHeight(height);
    }, []);
    const resizer = multiline && isAfterInitial ? /*#__PURE__*/ _reactDefault.default.createElement(_resizerJs.Resizer, {
        contents: normalizedValue || placeholder,
        currentHeight: height1,
        minimumLines: typeof multiline === 'number' ? multiline : 1,
        onHeightChange: handleExpandingResize
    }) : null;
    const describedBy = [];
    if (error) describedBy.push(`${id}Error`);
    if (helpText) describedBy.push(_labelledJs.helpTextID(id));
    if (showCharacterCount) describedBy.push(`${id}CharacterCounter`);
    const labelledBy = [];
    if (prefix) labelledBy.push(`${id}Prefix`);
    if (suffix) labelledBy.push(`${id}Suffix`);
    labelledBy.unshift(_labelJs.labelID(id));
    const inputClassName = _cssJs.classNames(_textFieldScssJsDefault.default.Input, align && _textFieldScssJsDefault.default[_cssJs.variationName('Input-align', align)], suffix && _textFieldScssJsDefault.default['Input-suffixed'], clearButton && _textFieldScssJsDefault.default['Input-hasClearButton'], monospaced && _textFieldScssJsDefault.default.monospaced);
    const input1 = /*#__PURE__*/ _react.createElement(multiline ? 'textarea' : 'input', {
        name,
        id,
        disabled,
        readOnly,
        role,
        autoFocus,
        value: normalizedValue,
        placeholder,
        onFocus,
        onBlur,
        onKeyPress: handleKeyPress,
        style,
        autoComplete,
        className: inputClassName,
        onChange: handleChange,
        ref: inputRef,
        min,
        max,
        step,
        minLength,
        maxLength,
        spellCheck,
        pattern,
        inputMode,
        type: inputType,
        'aria-describedby': describedBy.length ? describedBy.join(' ') : undefined,
        'aria-labelledby': labelledBy.join(' '),
        'aria-invalid': Boolean(error),
        'aria-owns': ariaOwns,
        'aria-activedescendant': ariaActiveDescendant,
        'aria-autocomplete': ariaAutocomplete,
        'aria-controls': ariaControls,
        'aria-expanded': ariaExpanded,
        'aria-required': requiredIndicator,
        ...normalizeAriaMultiline(multiline)
    });
    const backdropClassName = _cssJs.classNames(_textFieldScssJsDefault.default.Backdrop, connectedLeft && _textFieldScssJsDefault.default['Backdrop-connectedLeft'], connectedRight && _textFieldScssJsDefault.default['Backdrop-connectedRight']);
    function handleClearButtonPress() {
        onClearButtonClick && onClearButtonClick(id);
    }
    function handleKeyPress(event) {
        const { key , which  } = event;
        const numbersSpec = /[\d.eE+-]$/;
        if (type !== 'number' || which === _typesJs.Key.Enter || numbersSpec.test(key)) {
            return;
        }
        event.preventDefault();
    }
    function containsAffix(target) {
        return target instanceof HTMLElement && (prefixRef.current && prefixRef.current.contains(target) || suffixRef.current && suffixRef.current.contains(target));
    }
    function handleChange(event) {
        onChange1 && onChange1(event.currentTarget.value, id);
    }
    function handleFocus({ target  }) {
        if (containsAffix(target)) {
            return;
        }
        setFocus(true);
    }
    function handleBlur() {
        setFocus(false);
    }
    function handleClick({ target  }) {
        var _inputRef$current;
        if (containsAffix(target) || focus) {
            return;
        }
        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement(_labelledJs.Labelled, {
        label: label,
        id: id,
        error: error,
        action: labelAction,
        labelHidden: labelHidden,
        helpText: helpText,
        requiredIndicator: requiredIndicator
    }, /*#__PURE__*/ _reactDefault.default.createElement(_connectedJs.Connected, {
        left: connectedLeft,
        right: connectedRight
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className,
        onFocus: handleFocus,
        onBlur: handleBlur,
        onClick: handleClick
    }, prefixMarkup, input1, suffixMarkup, characterCountMarkup, clearButtonMarkup, spinnerMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: backdropClassName
    }), resizer))));
}
function normalizeAriaMultiline(multiline) {
    if (!multiline) return undefined;
    return Boolean(multiline) || multiline > 0 ? {
        'aria-multiline': true
    } : undefined;
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","../../utilities/use-is-after-initial-mount.js":"3sveN","../../types.js":"atQnH","./TextField.scss.js":"fpue3","../Labelled/Labelled.js":"1YPAe","../Connected/Connected.js":"jBkqN","./components/Spinner/Spinner.js":"3T72H","./components/Resizer/Resizer.js":"gqlFq","../Label/Label.js":"c5NsR","../../utilities/i18n/hooks.js":"hHpYD","../../utilities/unique-id/hooks.js":"kPfFC","../VisuallyHidden/VisuallyHidden.js":"fGCM0","../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fpue3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "TextField": "Polaris-TextField",
    "multiline": "Polaris-TextField--multiline",
    "Input": "Polaris-TextField__Input",
    "hasValue": "Polaris-TextField--hasValue",
    "focus": "Polaris-TextField--focus",
    "Backdrop": "Polaris-TextField__Backdrop",
    "error": "Polaris-TextField--error",
    "readOnly": "Polaris-TextField--readOnly",
    "disabled": "Polaris-TextField--disabled",
    "Prefix": "Polaris-TextField__Prefix",
    "Input-hasClearButton": "Polaris-TextField__Input--hasClearButton",
    "Input-suffixed": "Polaris-TextField__Input--suffixed",
    "Input-alignRight": "Polaris-TextField__Input--alignRight",
    "Input-alignLeft": "Polaris-TextField__Input--alignLeft",
    "Input-alignCenter": "Polaris-TextField__Input--alignCenter",
    "Suffix": "Polaris-TextField__Suffix",
    "CharacterCount": "Polaris-TextField__CharacterCount",
    "AlignFieldBottom": "Polaris-TextField__AlignFieldBottom",
    "ClearButton": "Polaris-TextField__ClearButton",
    "Spinner": "Polaris-TextField__Spinner",
    "SpinnerIcon": "Polaris-TextField__SpinnerIcon",
    "Resizer": "Polaris-TextField__Resizer",
    "DummyInput": "Polaris-TextField__DummyInput",
    "Segment": "Polaris-TextField__Segment",
    "monospaced": "Polaris-TextField--monospaced"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1YPAe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "labelID", ()=>_labelJs.labelID
);
parcelHelpers.export(exports, "Labelled", ()=>Labelled
);
parcelHelpers.export(exports, "helpTextID", ()=>helpTextID
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _labelledScssJs = require("./Labelled.scss.js");
var _labelledScssJsDefault = parcelHelpers.interopDefault(_labelledScssJs);
var _inlineErrorJs = require("../InlineError/InlineError.js");
var _labelJs = require("../Label/Label.js");
var _utilsJs = require("../Button/utils.js");
function Labelled({ id , label , error , action , helpText , children , labelHidden , requiredIndicator , ...rest }) {
    const className = _cssJs.classNames(labelHidden && _labelledScssJsDefault.default.hidden);
    const actionMarkup = action ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _labelledScssJsDefault.default.Action
    }, _utilsJs.buttonFrom(action, {
        plain: true
    })) : null;
    const helpTextMarkup = helpText ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _labelledScssJsDefault.default.HelpText,
        id: helpTextID(id)
    }, helpText) : null;
    const errorMarkup = error && typeof error !== 'boolean' && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _labelledScssJsDefault.default.Error
    }, /*#__PURE__*/ _reactDefault.default.createElement(_inlineErrorJs.InlineError, {
        message: error,
        fieldID: id
    }));
    const labelMarkup = label ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _labelledScssJsDefault.default.LabelWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement(_labelJs.Label, Object.assign({
        id: id,
        requiredIndicator: requiredIndicator
    }, rest, {
        hidden: false
    }), label), actionMarkup) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, labelMarkup, children, errorMarkup, helpTextMarkup));
}
function helpTextID(id) {
    return `${id}HelpText`;
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./Labelled.scss.js":"5P7Ra","../InlineError/InlineError.js":"5VVez","../Label/Label.js":"c5NsR","../Button/utils.js":"9W95c","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5P7Ra":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "hidden": "Polaris-Labelled--hidden",
    "LabelWrapper": "Polaris-Labelled__LabelWrapper",
    "HelpText": "Polaris-Labelled__HelpText",
    "Error": "Polaris-Labelled__Error",
    "Action": "Polaris-Labelled__Action"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"c5NsR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Label", ()=>Label
);
parcelHelpers.export(exports, "labelID", ()=>labelID
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _labelScssJs = require("./Label.scss.js");
var _labelScssJsDefault = parcelHelpers.interopDefault(_labelScssJs);
function labelID(id) {
    return `${id}Label`;
}
function Label({ children , id , hidden , requiredIndicator  }) {
    const className = _cssJs.classNames(_labelScssJsDefault.default.Label, hidden && _labelScssJsDefault.default.hidden);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
        id: labelID(id),
        htmlFor: id,
        className: _cssJs.classNames(_labelScssJsDefault.default.Text, requiredIndicator && _labelScssJsDefault.default.RequiredIndicator)
    }, children)));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./Label.scss.js":"9Re9o","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9Re9o":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Label": "Polaris-Label",
    "hidden": "Polaris-Label--hidden",
    "Text": "Polaris-Label__Text",
    "RequiredIndicator": "Polaris-Label__RequiredIndicator"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jBkqN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Connected", ()=>Connected
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _connectedScssJs = require("./Connected.scss.js");
var _connectedScssJsDefault = parcelHelpers.interopDefault(_connectedScssJs);
var _itemJs = require("./components/Item/Item.js");
function Connected({ children , left , right  }) {
    const leftConnectionMarkup = left ? /*#__PURE__*/ _reactDefault.default.createElement(_itemJs.Item, {
        position: "left"
    }, left) : null;
    const rightConnectionMarkup = right ? /*#__PURE__*/ _reactDefault.default.createElement(_itemJs.Item, {
        position: "right"
    }, right) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _connectedScssJsDefault.default.Connected
    }, leftConnectionMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_itemJs.Item, {
        position: "primary"
    }, children), rightConnectionMarkup));
}

},{"react":"6fep5","./Connected.scss.js":"ldH0N","./components/Item/Item.js":"cDdss","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ldH0N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Connected": "Polaris-Connected",
    "Item": "Polaris-Connected__Item",
    "Item-primary": "Polaris-Connected__Item--primary",
    "Item-focused": "Polaris-Connected__Item--focused"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cDdss":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Item", ()=>Item
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _useToggleJs = require("../../../../utilities/use-toggle.js");
var _connectedScssJs = require("../../Connected.scss.js");
var _connectedScssJsDefault = parcelHelpers.interopDefault(_connectedScssJs);
function Item({ children , position  }) {
    const { value: focused , setTrue: forceTrueFocused , setFalse: forceFalseFocused  } = _useToggleJs.useToggle(false);
    const className = _cssJs.classNames(_connectedScssJsDefault.default.Item, focused && _connectedScssJsDefault.default['Item-focused'], position === 'primary' ? _connectedScssJsDefault.default['Item-primary'] : _connectedScssJsDefault.default['Item-connection']);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        onBlur: forceFalseFocused,
        onFocus: forceTrueFocused,
        className: className
    }, children));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/use-toggle.js":"jHDnh","../../Connected.scss.js":"ldH0N","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3T72H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Spinner", ()=>Spinner
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _textFieldScssJs = require("../../TextField.scss.js");
var _textFieldScssJsDefault = parcelHelpers.interopDefault(_textFieldScssJs);
var _iconJs = require("../../../Icon/Icon.js");
function Spinner({ onChange: onChange1 , onClick , onMouseDown , onMouseUp  }) {
    function handleStep(step) {
        return ()=>onChange1(step)
        ;
    }
    function handleMouseDown(onChange) {
        return (event)=>{
            if (event.button !== 0) return;
            onMouseDown(onChange);
        };
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _textFieldScssJsDefault.default.Spinner,
        onClick: onClick,
        "aria-hidden": true
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        role: "button",
        className: _textFieldScssJsDefault.default.Segment,
        tabIndex: -1,
        onClick: handleStep(1),
        onMouseDown: handleMouseDown(handleStep(1)),
        onMouseUp: onMouseUp
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _textFieldScssJsDefault.default.SpinnerIcon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.CaretUpMinor
    }))), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        role: "button",
        className: _textFieldScssJsDefault.default.Segment,
        tabIndex: -1,
        onClick: handleStep(-1),
        onMouseDown: handleMouseDown(handleStep(-1)),
        onMouseUp: onMouseUp
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _textFieldScssJsDefault.default.SpinnerIcon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.CaretDownMinor
    })))));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../TextField.scss.js":"fpue3","../../../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gqlFq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Resizer", ()=>Resizer
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _textFieldScssJs = require("../../TextField.scss.js");
var _textFieldScssJsDefault = parcelHelpers.interopDefault(_textFieldScssJs);
var _eventListenerJs = require("../../../EventListener/EventListener.js");
function Resizer({ contents , currentHeight: currentHeightProp = null , minimumLines , onHeightChange  }) {
    const contentNode = _react.useRef(null);
    const minimumLinesNode = _react.useRef(null);
    const animationFrame = _react.useRef();
    const currentHeight = _react.useRef(currentHeightProp);
    if (currentHeightProp !== currentHeight.current) currentHeight.current = currentHeightProp;
    _react.useEffect(()=>{
        return ()=>{
            if (animationFrame.current) cancelAnimationFrame(animationFrame.current);
        };
    }, []);
    const minimumLinesMarkup = minimumLines ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        ref: minimumLinesNode,
        className: _textFieldScssJsDefault.default.DummyInput,
        dangerouslySetInnerHTML: {
            __html: getContentsForMinimumLines(minimumLines)
        }
    }) : null;
    const handleHeightCheck = _react.useCallback(()=>{
        if (animationFrame.current) cancelAnimationFrame(animationFrame.current);
        animationFrame.current = requestAnimationFrame(()=>{
            if (!contentNode.current || !minimumLinesNode.current) return;
            const newHeight = Math.max(contentNode.current.offsetHeight, minimumLinesNode.current.offsetHeight);
            if (newHeight !== currentHeight.current) onHeightChange(newHeight);
        });
    }, [
        onHeightChange
    ]);
    _react.useLayoutEffect(()=>{
        handleHeightCheck();
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        "aria-hidden": true,
        className: _textFieldScssJsDefault.default.Resizer
    }, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
        event: "resize",
        handler: handleHeightCheck
    }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        ref: contentNode,
        className: _textFieldScssJsDefault.default.DummyInput,
        dangerouslySetInnerHTML: {
            __html: getFinalContents(contents)
        }
    }), minimumLinesMarkup));
}
const ENTITIES_TO_REPLACE = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '\n': '<br>',
    '\r': ''
};
const REPLACE_REGEX = new RegExp(`[${Object.keys(ENTITIES_TO_REPLACE).join()}]`, 'g');
function replaceEntity(entity) {
    return ENTITIES_TO_REPLACE[entity];
}
function getContentsForMinimumLines(minimumLines) {
    let content = '';
    for(let line = 0; line < minimumLines; line++)content += '<br>';
    return content;
}
function getFinalContents(contents) {
    return contents ? `${contents.replace(REPLACE_REGEX, replaceEntity)}<br>` : '<br>';
}

},{"react":"6fep5","../../TextField.scss.js":"fpue3","../../../EventListener/EventListener.js":"gpcxo","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1Y3YZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MappedAction", ()=>MappedAction
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _mappedActionScssJs = require("./MappedAction.scss.js");
var _mappedActionScssJsDefault = parcelHelpers.interopDefault(_mappedActionScssJs);
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
var _iconJs = require("../../../Icon/Icon.js");
var _badgeJs = require("../../../Badge/Badge.js");
var _textStyleJs = require("../../../TextStyle/TextStyle.js");
var _contextJs = require("../../../../utilities/autocomplete/context.js");
var _listboxJs = require("../../../Listbox/Listbox.js");
function MappedAction({ active , content , disabled , icon , image , prefix , suffix , ellipsis , role , url , external , onAction , destructive , badge , helpText , wrapOverflow =false  }) {
    const i18n = _hooksJs.useI18n();
    let prefixMarkup = null;
    const contentOverflowStyle = wrapOverflow ? _mappedActionScssJsDefault.default.ContentWrap : undefined;
    if (prefix) prefixMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _mappedActionScssJsDefault.default.Prefix
    }, prefix);
    else if (icon) prefixMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _mappedActionScssJsDefault.default.Prefix
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: icon
    }));
    else if (image) prefixMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        role: "presentation",
        className: _mappedActionScssJsDefault.default.Prefix,
        style: {
            backgroundImage: `url(${image}`
        }
    });
    const badgeMarkup = badge && /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _mappedActionScssJsDefault.default.Suffix
    }, /*#__PURE__*/ _reactDefault.default.createElement(_badgeJs.Badge, {
        status: badge.status
    }, badge.content));
    const suffixMarkup = suffix && /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _mappedActionScssJsDefault.default.Suffix
    }, suffix);
    const contentText = ellipsis && content ? i18n.translate('Polaris.Autocomplete.ellipsis', {
        content
    }) : content;
    const contentMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _mappedActionScssJsDefault.default.Text
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: contentOverflowStyle
    }, contentText), helpText ? /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, {
        variation: "subdued"
    }, helpText) : null);
    const context = _react.useMemo(()=>({
            role,
            url,
            external,
            onAction,
            destructive,
            isAction: true
        })
    , [
        role,
        url,
        external,
        onAction,
        destructive
    ]);
    const actionClassNames = _cssJs.classNames(_mappedActionScssJsDefault.default.Action, disabled && _mappedActionScssJsDefault.default.disabled, destructive && _mappedActionScssJsDefault.default.destructive, active && _mappedActionScssJsDefault.default.selected);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.MappedActionContext.Provider, {
        value: context
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _mappedActionScssJsDefault.default.ActionContainer
    }, /*#__PURE__*/ _reactDefault.default.createElement(_listboxJs.Listbox.Action, {
        selected: active,
        disabled: disabled,
        value: content || ''
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: actionClassNames
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _mappedActionScssJsDefault.default.Content
    }, prefixMarkup, contentMarkup, badgeMarkup, suffixMarkup))))));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","./MappedAction.scss.js":"1ilRA","../../../../utilities/i18n/hooks.js":"hHpYD","../../../Icon/Icon.js":"flzpR","../../../Badge/Badge.js":"hM2Xf","../../../TextStyle/TextStyle.js":"cC66D","../../../../utilities/autocomplete/context.js":"SGNs7","../../../Listbox/Listbox.js":"fqeV1","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1ilRA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ActionContainer": "Polaris-Autocomplete-MappedAction__ActionContainer",
    "Action": "Polaris-Autocomplete-MappedAction__Action",
    "destructive": "Polaris-Autocomplete-MappedAction--destructive",
    "selected": "Polaris-Autocomplete-MappedAction--selected",
    "disabled": "Polaris-Autocomplete-MappedAction--disabled",
    "Prefix": "Polaris-Autocomplete-MappedAction__Prefix",
    "Suffix": "Polaris-Autocomplete-MappedAction__Suffix",
    "Content": "Polaris-Autocomplete-MappedAction__Content",
    "Text": "Polaris-Autocomplete-MappedAction__Text",
    "ContentWrap": "Polaris-Autocomplete-MappedAction__ContentWrap"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8AIrG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Backdrop", ()=>Backdrop
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _backdropScssJs = require("./Backdrop.scss.js");
var _backdropScssJsDefault = parcelHelpers.interopDefault(_backdropScssJs);
var _scrollLockJs = require("../ScrollLock/ScrollLock.js");
function Backdrop(props) {
    const { onClick , onTouchStart , belowNavigation , transparent  } = props;
    const className = _cssJs.classNames(_backdropScssJsDefault.default.Backdrop, belowNavigation && _backdropScssJsDefault.default.belowNavigation, transparent && _backdropScssJsDefault.default.transparent);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_scrollLockJs.ScrollLock, null), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className,
        onClick: onClick,
        onTouchStart: onTouchStart
    })));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./Backdrop.scss.js":"4nFmy","../ScrollLock/ScrollLock.js":"6Ygxi","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4nFmy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Backdrop": "Polaris-Backdrop",
    "fade-in": "Polaris-Backdrop__fade--in",
    "transparent": "Polaris-Backdrop--transparent",
    "belowNavigation": "Polaris-Backdrop--belowNavigation"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6Ygxi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ScrollLock", ()=>ScrollLock
);
var _react = require("react");
var _scrollLockScssJs = require("./ScrollLock.scss.js");
var _hooksJs = require("../../utilities/scroll-lock-manager/hooks.js");
// Even though this has no args, reference ScrollLockProps so the prop explorer
// in the styleguide works without warnings about unfound props
function ScrollLock(_) {
    const scrollLockManager = _hooksJs.useScrollLockManager();
    _react.useEffect(()=>{
        scrollLockManager.registerScrollLock();
        return ()=>{
            scrollLockManager.unregisterScrollLock();
        };
    }, [
        scrollLockManager
    ]);
    return null;
}

},{"react":"6fep5","./ScrollLock.scss.js":"bEUGR","../../utilities/scroll-lock-manager/hooks.js":"izGDH","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bEUGR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ScrollLock
);
var ScrollLock = {
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"izGDH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useScrollLockManager", ()=>useScrollLockManager
);
var _react = require("react");
var _errorsJs = require("../errors.js");
var _contextJs = require("./context.js");
function useScrollLockManager() {
    const scrollLockManager = _react.useContext(_contextJs.ScrollLockManagerContext);
    if (!scrollLockManager) throw new _errorsJs.MissingAppProviderError('No ScrollLockManager was provided.');
    return scrollLockManager;
}

},{"react":"6fep5","../errors.js":"cGYyH","./context.js":"2vyo0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6pgy1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Banner", ()=>Banner
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _bannerContextJs = require("../../utilities/banner-context.js");
var _withinContentContextJs = require("../../utilities/within-content-context.js");
var _bannerScssJs = require("./Banner.scss.js");
var _bannerScssJsDefault = parcelHelpers.interopDefault(_bannerScssJs);
var _utilsJs = require("../UnstyledButton/utils.js");
var _hooksJs = require("../../utilities/unique-id/hooks.js");
var _hooksJs1 = require("../../utilities/i18n/hooks.js");
var _headingJs = require("../Heading/Heading.js");
var _spinnerJs = require("../Spinner/Spinner.js");
var _buttonGroupJs = require("../ButtonGroup/ButtonGroup.js");
var _buttonJs = require("../Button/Button.js");
var _iconJs = require("../Icon/Icon.js");
var _unstyledLinkJs = require("../UnstyledLink/UnstyledLink.js");
var _unstyledButtonJs = require("../UnstyledButton/UnstyledButton.js");
const Banner = /*#__PURE__*/ _react.forwardRef(function Banner({ icon , action , secondaryAction , title , children , status , onDismiss , stopAnnouncements  }, bannerRef) {
    const withinContentContainer = _react.useContext(_withinContentContextJs.WithinContentContext);
    const id = _hooksJs.useUniqueId('Banner');
    const i18n = _hooksJs1.useI18n();
    const { wrapperRef , handleKeyUp , handleBlur , handleMouseUp , shouldShowFocus  } = useBannerFocus(bannerRef);
    const { defaultIcon , iconColor , ariaRoleType  } = useBannerAttributes(status);
    const iconName = icon || defaultIcon;
    const className = _cssJs.classNames(_bannerScssJsDefault.default.Banner, status && _bannerScssJsDefault.default[_cssJs.variationName('status', status)], onDismiss && _bannerScssJsDefault.default.hasDismiss, shouldShowFocus && _bannerScssJsDefault.default.keyFocused, withinContentContainer ? _bannerScssJsDefault.default.withinContentContainer : _bannerScssJsDefault.default.withinPage);
    let headingMarkup = null;
    let headingID;
    if (title) {
        headingID = `${id}Heading`;
        headingMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _bannerScssJsDefault.default.Heading,
            id: headingID
        }, /*#__PURE__*/ _reactDefault.default.createElement(_headingJs.Heading, {
            element: "p"
        }, title));
    }
    const spinnerMarkup = action !== null && action !== void 0 && action.loading ? /*#__PURE__*/ _reactDefault.default.createElement("button", {
        disabled: true,
        "aria-busy": true,
        className: _cssJs.classNames(_bannerScssJsDefault.default.Button, _bannerScssJsDefault.default.loading)
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _bannerScssJsDefault.default.Spinner
    }, /*#__PURE__*/ _reactDefault.default.createElement(_spinnerJs.Spinner, {
        size: "small",
        accessibilityLabel: i18n.translate('Polaris.Button.spinnerAccessibilityLabel')
    })), action.content) : null;
    const primaryActionMarkup = action ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _bannerScssJsDefault.default.PrimaryAction
    }, action.loading ? spinnerMarkup : _utilsJs.unstyledButtonFrom(action, {
        className: _bannerScssJsDefault.default.Button
    })) : null;
    const secondaryActionMarkup = secondaryAction ? /*#__PURE__*/ _reactDefault.default.createElement(SecondaryActionFrom, {
        action: secondaryAction
    }) : null;
    const actionMarkup = action || secondaryAction ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _bannerScssJsDefault.default.Actions
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, null, primaryActionMarkup, secondaryActionMarkup)) : null;
    let contentMarkup = null;
    let contentID;
    if (children || actionMarkup) {
        contentID = `${id}Content`;
        contentMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _bannerScssJsDefault.default.Content,
            id: contentID
        }, children, actionMarkup);
    }
    const dismissButton = onDismiss && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _bannerScssJsDefault.default.Dismiss
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        plain: true,
        icon: _polarisIcons.CancelSmallMinor,
        onClick: onDismiss,
        accessibilityLabel: "Dismiss notification"
    }));
    return(/*#__PURE__*/ _reactDefault.default.createElement(_bannerContextJs.BannerContext.Provider, {
        value: true
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex
        ,
        tabIndex: 0,
        ref: wrapperRef,
        role: ariaRoleType,
        "aria-live": stopAnnouncements ? 'off' : 'polite',
        onMouseUp: handleMouseUp,
        onKeyUp: handleKeyUp,
        onBlur: handleBlur,
        "aria-labelledby": headingID,
        "aria-describedby": contentID
    }, dismissButton, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _bannerScssJsDefault.default.Ribbon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: iconName,
        color: iconColor
    })), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _bannerScssJsDefault.default.ContentWrapper
    }, headingMarkup, contentMarkup))));
});
function SecondaryActionFrom({ action  }) {
    if (action.url) return(/*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, {
        className: _bannerScssJsDefault.default.SecondaryAction,
        url: action.url,
        external: action.external
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _bannerScssJsDefault.default.Text
    }, action.content)));
    return(/*#__PURE__*/ _reactDefault.default.createElement(_unstyledButtonJs.UnstyledButton, {
        className: _bannerScssJsDefault.default.SecondaryAction,
        onClick: action.onAction
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _bannerScssJsDefault.default.Text
    }, action.content)));
}
function useBannerAttributes(status) {
    switch(status){
        case 'success':
            return {
                defaultIcon: _polarisIcons.CircleTickMajor,
                iconColor: 'success',
                ariaRoleType: 'status'
            };
        case 'info':
            return {
                defaultIcon: _polarisIcons.CircleInformationMajor,
                iconColor: 'highlight',
                ariaRoleType: 'status'
            };
        case 'warning':
            return {
                defaultIcon: _polarisIcons.CircleAlertMajor,
                iconColor: 'warning',
                ariaRoleType: 'alert'
            };
        case 'critical':
            return {
                defaultIcon: _polarisIcons.DiamondAlertMajor,
                iconColor: 'critical',
                ariaRoleType: 'alert'
            };
        default:
            return {
                defaultIcon: _polarisIcons.CircleInformationMajor,
                iconColor: 'base',
                ariaRoleType: 'status'
            };
    }
}
function useBannerFocus(bannerRef) {
    const wrapperRef = _react.useRef(null);
    const [shouldShowFocus, setShouldShowFocus] = _react.useState(false);
    _react.useImperativeHandle(bannerRef, ()=>({
            focus: ()=>{
                var _wrapperRef$current;
                (_wrapperRef$current = wrapperRef.current) === null || _wrapperRef$current === void 0 || _wrapperRef$current.focus();
                setShouldShowFocus(true);
            }
        })
    , []);
    const handleKeyUp = (event)=>{
        if (event.target === wrapperRef.current) setShouldShowFocus(true);
    };
    const handleBlur = ()=>setShouldShowFocus(false)
    ;
    const handleMouseUp = (event)=>{
        event.currentTarget.blur();
        setShouldShowFocus(false);
    };
    return {
        wrapperRef,
        handleKeyUp,
        handleBlur,
        handleMouseUp,
        shouldShowFocus
    };
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","../../utilities/banner-context.js":"lB0Fb","../../utilities/within-content-context.js":"8TZsv","./Banner.scss.js":"7ektb","../UnstyledButton/utils.js":"9ddcn","../../utilities/unique-id/hooks.js":"kPfFC","../../utilities/i18n/hooks.js":"hHpYD","../Heading/Heading.js":"7PinN","../Spinner/Spinner.js":"itKPn","../ButtonGroup/ButtonGroup.js":"kXBsg","../Button/Button.js":"g06oC","../Icon/Icon.js":"flzpR","../UnstyledLink/UnstyledLink.js":"8AMgX","../UnstyledButton/UnstyledButton.js":"hdvaV","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lB0Fb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BannerContext", ()=>BannerContext
);
var _react = require("react");
const BannerContext = /*#__PURE__*/ _react.createContext(false);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7ektb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Banner": "Polaris-Banner",
    "statusCritical": "Polaris-Banner--statusCritical",
    "PrimaryAction": "Polaris-Banner__PrimaryAction",
    "Button": "Polaris-Banner__Button",
    "statusWarning": "Polaris-Banner--statusWarning",
    "statusInfo": "Polaris-Banner--statusInfo",
    "statusSuccess": "Polaris-Banner--statusSuccess",
    "ContentWrapper": "Polaris-Banner__ContentWrapper",
    "withinContentContainer": "Polaris-Banner--withinContentContainer",
    "Dismiss": "Polaris-Banner__Dismiss",
    "Ribbon": "Polaris-Banner__Ribbon",
    "keyFocused": "Polaris-Banner--keyFocused",
    "Actions": "Polaris-Banner__Actions",
    "withinPage": "Polaris-Banner--withinPage",
    "hasDismiss": "Polaris-Banner--hasDismiss",
    "Heading": "Polaris-Banner__Heading",
    "Content": "Polaris-Banner__Content",
    "SecondaryAction": "Polaris-Banner__SecondaryAction",
    "Text": "Polaris-Banner__Text",
    "pressed": "Polaris-Banner--pressed",
    "loading": "Polaris-Banner--loading",
    "Spinner": "Polaris-Banner__Spinner"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9ddcn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unstyledButtonFrom", ()=>unstyledButtonFrom
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _unstyledButtonJs = require("./UnstyledButton.js");
function unstyledButtonFrom({ content , onAction , ...action }, overrides, key) {
    return(/*#__PURE__*/ _reactDefault.default.createElement(_unstyledButtonJs.UnstyledButton, Object.assign({
        key: key,
        onClick: onAction
    }, action, overrides), content));
}

},{"react":"6fep5","./UnstyledButton.js":"hdvaV","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"adsbe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Breadcrumbs", ()=>Breadcrumbs
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _focusJs = require("../../utilities/focus.js");
var _breadcrumbsScssJs = require("./Breadcrumbs.scss.js");
var _breadcrumbsScssJsDefault = parcelHelpers.interopDefault(_breadcrumbsScssJs);
var _iconJs = require("../Icon/Icon.js");
var _visuallyHiddenJs = require("../VisuallyHidden/VisuallyHidden.js");
var _unstyledLinkJs = require("../UnstyledLink/UnstyledLink.js");
function Breadcrumbs({ breadcrumbs  }) {
    const breadcrumb = breadcrumbs[breadcrumbs.length - 1];
    if (breadcrumb == null) return null;
    const { content  } = breadcrumb;
    const contentMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _breadcrumbsScssJsDefault.default.Icon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.ArrowLeftMinor
    })), /*#__PURE__*/ _reactDefault.default.createElement(_visuallyHiddenJs.VisuallyHidden, null, content));
    const breadcrumbMarkup = 'url' in breadcrumb ? /*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, {
        key: content,
        url: breadcrumb.url,
        className: _breadcrumbsScssJsDefault.default.Breadcrumb,
        onMouseUp: _focusJs.handleMouseUpByBlurring,
        "aria-label": breadcrumb.accessibilityLabel
    }, contentMarkup) : /*#__PURE__*/ _reactDefault.default.createElement("button", {
        key: content,
        className: _breadcrumbsScssJsDefault.default.Breadcrumb,
        onClick: breadcrumb.onAction,
        onMouseUp: _focusJs.handleMouseUpByBlurring,
        type: "button",
        "aria-label": breadcrumb.accessibilityLabel
    }, contentMarkup);
    return(/*#__PURE__*/ _reactDefault.default.createElement("nav", {
        role: "navigation"
    }, breadcrumbMarkup));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/focus.js":"gLDAi","./Breadcrumbs.scss.js":"8nGC5","../Icon/Icon.js":"flzpR","../VisuallyHidden/VisuallyHidden.js":"fGCM0","../UnstyledLink/UnstyledLink.js":"8AMgX","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8nGC5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Breadcrumb": "Polaris-Breadcrumbs__Breadcrumb",
    "Icon": "Polaris-Breadcrumbs__Icon",
    "Content": "Polaris-Breadcrumbs__Content"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1JynG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BulkActions", ()=>BulkActions
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _polarisTokens = require("@shopify/polaris-tokens");
var _reactTransitionGroup = require("react-transition-group");
var _cssJs = require("../../utilities/css.js");
var _clampJs = require("../../utilities/clamp.js");
var _bulkActionsScssJs = require("./BulkActions.scss.js");
var _bulkActionsScssJsDefault = parcelHelpers.interopDefault(_bulkActionsScssJs);
var _bulkActionMenuJs = require("./components/BulkActionMenu/BulkActionMenu.js");
var _checkableButtonJs = require("../CheckableButton/CheckableButton.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _buttonJs = require("../Button/Button.js");
var _popoverJs = require("../Popover/Popover.js");
var _bulkActionButtonJs = require("./components/BulkActionButton/BulkActionButton.js");
var _actionListJs = require("../ActionList/ActionList.js");
var _buttonGroupJs = require("../ButtonGroup/ButtonGroup.js");
var _eventListenerJs = require("../EventListener/EventListener.js");
const MAX_PROMOTED_ACTIONS = 2;
const slideClasses = {
    appear: _cssJs.classNames(_bulkActionsScssJsDefault.default.Slide, _bulkActionsScssJsDefault.default['Slide-appear']),
    appearActive: _cssJs.classNames(_bulkActionsScssJsDefault.default.Slide, _bulkActionsScssJsDefault.default['Slide-appearing']),
    enter: _cssJs.classNames(_bulkActionsScssJsDefault.default.Slide, _bulkActionsScssJsDefault.default['Slide-enter']),
    enterActive: _cssJs.classNames(_bulkActionsScssJsDefault.default.Slide, _bulkActionsScssJsDefault.default['Slide-entering']),
    exit: _cssJs.classNames(_bulkActionsScssJsDefault.default.Slide, _bulkActionsScssJsDefault.default['Slide-exit'])
};
class BulkActionsInner extends _react.PureComponent {
    constructor(...args){
        super(...args);
        this.state = {
            smallScreenPopoverVisible: false,
            largeScreenPopoverVisible: false,
            containerWidth: 0,
            measuring: true
        };
        this.containerNode = null;
        this.largeScreenButtonsNode = null;
        this.moreActionsNode = null;
        this.checkableWrapperNode = /*#__PURE__*/ _react.createRef();
        this.largeScreenGroupNode = /*#__PURE__*/ _react.createRef();
        this.smallScreenGroupNode = /*#__PURE__*/ _react.createRef();
        this.promotedActionsWidths = [];
        this.bulkActionsWidth = 0;
        this.addedMoreActionsWidthForMeasuring = 0;
        this.handleResize = _debounceDefault.default(()=>{
            const { smallScreenPopoverVisible , largeScreenPopoverVisible  } = this.state;
            if (this.containerNode) {
                const containerWidth = this.containerNode.getBoundingClientRect().width;
                if (containerWidth > 0) this.setState({
                    containerWidth
                });
            }
            if (smallScreenPopoverVisible || largeScreenPopoverVisible) this.setState({
                smallScreenPopoverVisible: false,
                largeScreenPopoverVisible: false
            });
        }, 50, {
            trailing: true
        });
        this.setLargeScreenButtonsNode = (node)=>{
            this.largeScreenButtonsNode = node;
        };
        this.setContainerNode = (node)=>{
            this.containerNode = node;
        };
        this.setMoreActionsNode = (node)=>{
            this.moreActionsNode = node;
        };
        this.setSelectMode = (val)=>{
            const { onSelectModeToggle  } = this.props;
            if (onSelectModeToggle) onSelectModeToggle(val);
        };
        this.toggleSmallScreenPopover = ()=>{
            if (this.props.onMoreActionPopoverToggle) this.props.onMoreActionPopoverToggle(this.state.smallScreenPopoverVisible);
            this.setState(({ smallScreenPopoverVisible  })=>({
                    smallScreenPopoverVisible: !smallScreenPopoverVisible
                })
            );
        };
        this.toggleLargeScreenPopover = ()=>{
            if (this.props.onMoreActionPopoverToggle) this.props.onMoreActionPopoverToggle(this.state.largeScreenPopoverVisible);
            this.setState(({ largeScreenPopoverVisible  })=>({
                    largeScreenPopoverVisible: !largeScreenPopoverVisible
                })
            );
        };
        this.handleMeasurement = (width)=>{
            const { measuring  } = this.state;
            if (measuring) this.promotedActionsWidths.push(width);
        };
    }
    numberOfPromotedActionsToRender() {
        const { promotedActions  } = this.props;
        const { containerWidth , measuring  } = this.state;
        if (!promotedActions) return 0;
        if (containerWidth >= this.bulkActionsWidth || measuring) return promotedActions.length;
        let sufficientSpace = false;
        let counter = promotedActions.length - 1;
        let totalWidth = 0;
        while(!sufficientSpace && counter >= 0){
            totalWidth += this.promotedActionsWidths[counter];
            const widthWithRemovedAction = this.bulkActionsWidth - totalWidth + this.addedMoreActionsWidthForMeasuring;
            if (containerWidth >= widthWithRemovedAction) sufficientSpace = true;
            else counter--;
        }
        return _clampJs.clamp(counter, 0, promotedActions.length);
    }
    hasActions() {
        const { promotedActions , actions  } = this.props;
        return Boolean(promotedActions && promotedActions.length > 0 || actions && actions.length > 0);
    }
    actionSections() {
        const { actions  } = this.props;
        if (!actions || actions.length === 0) return;
        if (instanceOfBulkActionListSectionArray(actions)) return actions;
        if (instanceOfBulkActionArray(actions)) return [
            {
                items: actions
            }
        ];
    }
    rolledInPromotedActions() {
        const { promotedActions  } = this.props;
        const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();
        if (!promotedActions || promotedActions.length === 0 || numberOfPromotedActionsToRender >= promotedActions.length) return [];
        const rolledInPromotedActions = promotedActions.map((action)=>{
            if (instanceOfMenuGroupDescriptor(action)) return {
                items: [
                    ...action.actions
                ]
            };
            return {
                items: [
                    action
                ]
            };
        });
        return rolledInPromotedActions.slice(numberOfPromotedActionsToRender);
    }
    componentDidMount() {
        const { actions , promotedActions  } = this.props;
        if (promotedActions && !actions && this.moreActionsNode) this.addedMoreActionsWidthForMeasuring = this.moreActionsNode.getBoundingClientRect().width;
        this.bulkActionsWidth = this.largeScreenButtonsNode ? this.largeScreenButtonsNode.getBoundingClientRect().width - this.addedMoreActionsWidthForMeasuring : 0;
        if (this.containerNode) this.setState({
            containerWidth: this.containerNode.getBoundingClientRect().width,
            measuring: false
        });
    }
    render() {
        const { selectMode , accessibilityLabel , label ='' , onToggleAll , selected , smallScreen , disabled , promotedActions , paginatedSelectAllText =null , paginatedSelectAllAction , i18n  } = this.props;
        const actionSections = this.actionSections();
        if (promotedActions && promotedActions.length > MAX_PROMOTED_ACTIONS) // eslint-disable-next-line no-console
        console.warn(i18n.translate('Polaris.ResourceList.BulkActions.warningMessage', {
            maxPromotedActions: MAX_PROMOTED_ACTIONS
        }));
        const { smallScreenPopoverVisible , largeScreenPopoverVisible , measuring  } = this.state;
        const paginatedSelectAllActionMarkup = paginatedSelectAllAction ? /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
            onClick: paginatedSelectAllAction.onAction,
            plain: true,
            disabled: disabled
        }, paginatedSelectAllAction.content) : null;
        const paginatedSelectAllTextMarkup = paginatedSelectAllText && paginatedSelectAllAction ? /*#__PURE__*/ _reactDefault.default.createElement("span", {
            "aria-live": "polite"
        }, paginatedSelectAllText) : paginatedSelectAllText;
        const paginatedSelectAllMarkup = paginatedSelectAllActionMarkup || paginatedSelectAllTextMarkup ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _bulkActionsScssJsDefault.default.PaginatedSelectAll
        }, paginatedSelectAllTextMarkup, " ", paginatedSelectAllActionMarkup) : null;
        const cancelButton = /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
            onClick: this.setSelectMode.bind(this, false),
            disabled: disabled
        }, i18n.translate('Polaris.Common.cancel'));
        const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();
        const allActionsPopover = this.hasActions() ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _bulkActionsScssJsDefault.default.Popover,
            ref: this.setMoreActionsNode
        }, /*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
            active: smallScreenPopoverVisible,
            activator: /*#__PURE__*/ _reactDefault.default.createElement(_bulkActionButtonJs.BulkActionButton, {
                disclosure: true,
                onAction: this.toggleSmallScreenPopover,
                content: i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel'),
                disabled: disabled,
                indicator: this.isNewBadgeInBadgeActions()
            }),
            onClose: this.toggleSmallScreenPopover
        }, /*#__PURE__*/ _reactDefault.default.createElement(_actionListJs.ActionList, {
            items: promotedActions,
            sections: actionSections,
            onActionAnyItem: this.toggleSmallScreenPopover
        }))) : null;
        const promotedActionsMarkup = promotedActions && numberOfPromotedActionsToRender > 0 ? [
            ...promotedActions
        ].slice(0, numberOfPromotedActionsToRender).map((action, index)=>{
            if (instanceOfMenuGroupDescriptor(action)) return(/*#__PURE__*/ _reactDefault.default.createElement(_bulkActionMenuJs.BulkActionMenu, Object.assign({
                key: index
            }, action, {
                isNewBadgeInBadgeActions: this.isNewBadgeInBadgeActions()
            })));
            return(/*#__PURE__*/ _reactDefault.default.createElement(_bulkActionButtonJs.BulkActionButton, Object.assign({
                disabled: disabled
            }, action, {
                key: index,
                handleMeasurement: this.handleMeasurement
            })));
        }) : null;
        const rolledInPromotedActions = this.rolledInPromotedActions();
        const activatorLabel = !promotedActions || promotedActions && numberOfPromotedActionsToRender === 0 && !measuring ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');
        let combinedActions = [];
        if (actionSections && rolledInPromotedActions.length > 0) combinedActions = [
            ...rolledInPromotedActions,
            ...actionSections
        ];
        else if (actionSections) combinedActions = actionSections;
        else if (rolledInPromotedActions.length > 0) combinedActions = [
            ...rolledInPromotedActions
        ];
        const actionsPopover = actionSections || rolledInPromotedActions.length > 0 || measuring ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _bulkActionsScssJsDefault.default.Popover,
            ref: this.setMoreActionsNode
        }, /*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
            active: largeScreenPopoverVisible,
            activator: /*#__PURE__*/ _reactDefault.default.createElement(_bulkActionButtonJs.BulkActionButton, {
                disclosure: true,
                onAction: this.toggleLargeScreenPopover,
                content: activatorLabel,
                disabled: disabled,
                indicator: this.isNewBadgeInBadgeActions()
            }),
            onClose: this.toggleLargeScreenPopover
        }, /*#__PURE__*/ _reactDefault.default.createElement(_actionListJs.ActionList, {
            sections: combinedActions,
            onActionAnyItem: this.toggleLargeScreenPopover
        }))) : null;
        const checkableButtonProps = {
            accessibilityLabel,
            label,
            selected,
            selectMode,
            onToggleAll,
            measuring,
            disabled
        };
        const smallScreenGroup = smallScreen ? /*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.Transition, {
            timeout: 0,
            in: selectMode,
            key: "smallGroup",
            nodeRef: this.smallScreenGroupNode
        }, (status)=>{
            const smallScreenGroupClassName = _cssJs.classNames(_bulkActionsScssJsDefault.default.Group, _bulkActionsScssJsDefault.default['Group-smallScreen'], _bulkActionsScssJsDefault.default[`Group-${status}`]);
            return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: smallScreenGroupClassName,
                ref: this.smallScreenGroupNode
            }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _bulkActionsScssJsDefault.default.ButtonGroupWrapper
            }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, {
                segmented: true
            }, /*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.CSSTransition, {
                nodeRef: this.checkableWrapperNode,
                in: selectMode,
                timeout: _polarisTokens.durationBase,
                classNames: slideClasses,
                appear: !selectMode
            }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _bulkActionsScssJsDefault.default.CheckableContainer,
                ref: this.checkableWrapperNode
            }, /*#__PURE__*/ _reactDefault.default.createElement(_checkableButtonJs.CheckableButton, Object.assign({
            }, checkableButtonProps, {
                smallScreen: true
            })))), allActionsPopover, cancelButton)), paginatedSelectAllMarkup));
        }) : null;
        const largeGroupContent = promotedActionsMarkup || actionsPopover ? /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, {
            segmented: true
        }, /*#__PURE__*/ _reactDefault.default.createElement(_checkableButtonJs.CheckableButton, checkableButtonProps), promotedActionsMarkup, actionsPopover) : /*#__PURE__*/ _reactDefault.default.createElement(_checkableButtonJs.CheckableButton, checkableButtonProps);
        const largeScreenGroup = smallScreen ? null : /*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.Transition, {
            timeout: 0,
            in: selectMode,
            key: "largeGroup",
            nodeRef: this.largeScreenGroupNode
        }, (status)=>{
            const largeScreenGroupClassName = _cssJs.classNames(_bulkActionsScssJsDefault.default.Group, _bulkActionsScssJsDefault.default['Group-largeScreen'], !measuring && _bulkActionsScssJsDefault.default[`Group-${status}`], measuring && _bulkActionsScssJsDefault.default['Group-measuring']);
            return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: largeScreenGroupClassName,
                ref: this.largeScreenGroupNode
            }, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
                event: "resize",
                handler: this.handleResize
            }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _bulkActionsScssJsDefault.default.ButtonGroupWrapper,
                ref: this.setLargeScreenButtonsNode
            }, largeGroupContent), paginatedSelectAllMarkup));
        });
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            ref: this.setContainerNode
        }, smallScreenGroup, largeScreenGroup));
    }
    isNewBadgeInBadgeActions() {
        const actions = this.actionSections();
        if (!actions) return false;
        for (const action of actions)for (const item of action.items){
            var _item$badge;
            if (((_item$badge = item.badge) === null || _item$badge === void 0 ? void 0 : _item$badge.status) === 'new') return true;
        }
        return false;
    }
}
function instanceOfBulkActionListSectionArray(actions) {
    const validList = actions.filter((action)=>{
        return action.items;
    });
    return actions.length === validList.length;
}
function instanceOfBulkActionArray(actions) {
    const validList = actions.filter((action)=>{
        return !action.items;
    });
    return actions.length === validList.length;
}
function instanceOfMenuGroupDescriptor(action) {
    return 'title' in action;
}
function BulkActions(props) {
    const i18n = _hooksJs.useI18n();
    return(/*#__PURE__*/ _reactDefault.default.createElement(BulkActionsInner, Object.assign({
    }, props, {
        i18n: i18n
    })));
}

},{"react":"6fep5","lodash/debounce":"a9ymG","@shopify/polaris-tokens":"lyXEP","react-transition-group":"eACYM","../../utilities/css.js":"kYdwV","../../utilities/clamp.js":"h5zK3","./BulkActions.scss.js":"cxxno","./components/BulkActionMenu/BulkActionMenu.js":"7BdIm","../CheckableButton/CheckableButton.js":"djzx0","../../utilities/i18n/hooks.js":"hHpYD","../Button/Button.js":"g06oC","../Popover/Popover.js":"9ztCP","./components/BulkActionButton/BulkActionButton.js":"frWo3","../ActionList/ActionList.js":"eTtta","../ButtonGroup/ButtonGroup.js":"kXBsg","../EventListener/EventListener.js":"gpcxo","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eACYM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CSSTransition", ()=>_csstransitionDefault.default
);
parcelHelpers.export(exports, "ReplaceTransition", ()=>_replaceTransitionDefault.default
);
parcelHelpers.export(exports, "SwitchTransition", ()=>_switchTransitionDefault.default
);
parcelHelpers.export(exports, "TransitionGroup", ()=>_transitionGroupDefault.default
);
parcelHelpers.export(exports, "Transition", ()=>_transitionDefault.default
);
parcelHelpers.export(exports, "config", ()=>_configDefault.default
);
var _csstransition = require("./CSSTransition");
var _csstransitionDefault = parcelHelpers.interopDefault(_csstransition);
var _replaceTransition = require("./ReplaceTransition");
var _replaceTransitionDefault = parcelHelpers.interopDefault(_replaceTransition);
var _switchTransition = require("./SwitchTransition");
var _switchTransitionDefault = parcelHelpers.interopDefault(_switchTransition);
var _transitionGroup = require("./TransitionGroup");
var _transitionGroupDefault = parcelHelpers.interopDefault(_transitionGroup);
var _transition = require("./Transition");
var _transitionDefault = parcelHelpers.interopDefault(_transition);
var _config = require("./config");
var _configDefault = parcelHelpers.interopDefault(_config);

},{"./CSSTransition":"f1V54","./ReplaceTransition":"heBlR","./SwitchTransition":"c1xkU","./TransitionGroup":"aAJvW","./Transition":"dvk94","./config":"cF0Ng","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"f1V54":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutPropertiesLoose = require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _inheritsLoose = require("@babel/runtime/helpers/esm/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _addClass = require("dom-helpers/addClass");
var _addClassDefault = parcelHelpers.interopDefault(_addClass);
var _removeClass = require("dom-helpers/removeClass");
var _removeClassDefault = parcelHelpers.interopDefault(_removeClass);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _transition = require("./Transition");
var _transitionDefault = parcelHelpers.interopDefault(_transition);
var _propTypes1 = require("./utils/PropTypes");
var _addClass1 = function addClass(node, classes) {
    return node && classes && classes.split(' ').forEach(function(c) {
        return _addClassDefault.default(node, c);
    });
};
var removeClass = function removeClass(node, classes) {
    return node && classes && classes.split(' ').forEach(function(c) {
        return _removeClassDefault.default(node, c);
    });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should
 * use it if you're using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**, so it's
 * important to add `transition` declaration only to them, otherwise transitions
 * might not behave as intended! This might not be obvious when the transitions
 * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in
 * the example above (minus `transition`), but it becomes apparent in more
 * complex transitions.
 *
 * **Note**: If you're using the
 * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)
 * prop, make sure to define styles for `.appear-*` classes as well.
 */ var CSSTransition1 = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(CSSTransition, _React$Component);
    function CSSTransition() {
        var _this;
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _React$Component.call.apply(_React$Component, [
            this
        ].concat(args)) || this;
        _this.appliedClasses = {
            appear: {
            },
            enter: {
            },
            exit: {
            }
        };
        _this.onEnter = function(maybeNode, maybeAppearing) {
            var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
            _this.removeClasses(node, 'exit');
            _this.addClass(node, appearing ? 'appear' : 'enter', 'base');
            if (_this.props.onEnter) _this.props.onEnter(maybeNode, maybeAppearing);
        };
        _this.onEntering = function(maybeNode, maybeAppearing) {
            var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
            var type = appearing ? 'appear' : 'enter';
            _this.addClass(node, type, 'active');
            if (_this.props.onEntering) _this.props.onEntering(maybeNode, maybeAppearing);
        };
        _this.onEntered = function(maybeNode, maybeAppearing) {
            var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
            var type = appearing ? 'appear' : 'enter';
            _this.removeClasses(node, type);
            _this.addClass(node, type, 'done');
            if (_this.props.onEntered) _this.props.onEntered(maybeNode, maybeAppearing);
        };
        _this.onExit = function(maybeNode) {
            var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node = _this$resolveArgument4[0];
            _this.removeClasses(node, 'appear');
            _this.removeClasses(node, 'enter');
            _this.addClass(node, 'exit', 'base');
            if (_this.props.onExit) _this.props.onExit(maybeNode);
        };
        _this.onExiting = function(maybeNode) {
            var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node = _this$resolveArgument5[0];
            _this.addClass(node, 'exit', 'active');
            if (_this.props.onExiting) _this.props.onExiting(maybeNode);
        };
        _this.onExited = function(maybeNode) {
            var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node = _this$resolveArgument6[0];
            _this.removeClasses(node, 'exit');
            _this.addClass(node, 'exit', 'done');
            if (_this.props.onExited) _this.props.onExited(maybeNode);
        };
        _this.resolveArguments = function(maybeNode, maybeAppearing) {
            return _this.props.nodeRef ? [
                _this.props.nodeRef.current,
                maybeNode
            ] // here `maybeNode` is actually `appearing`
             : [
                maybeNode,
                maybeAppearing
            ];
        };
        _this.getClassNames = function(type) {
            var classNames = _this.props.classNames;
            var isStringClassNames = typeof classNames === 'string';
            var prefix = isStringClassNames && classNames ? classNames + "-" : '';
            var baseClassName = isStringClassNames ? "" + prefix + type : classNames[type];
            var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
            var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
            return {
                baseClassName: baseClassName,
                activeClassName: activeClassName,
                doneClassName: doneClassName
            };
        };
        return _this;
    }
    var _proto = CSSTransition.prototype;
    _proto.addClass = function addClass(node, type, phase) {
        var className = this.getClassNames(type)[phase + "ClassName"];
        var _this$getClassNames = this.getClassNames('enter'), doneClassName = _this$getClassNames.doneClassName;
        if (type === 'appear' && phase === 'done' && doneClassName) className += " " + doneClassName;
         // This is to force a repaint,
        // which is necessary in order to transition styles when adding a class name.
        if (phase === 'active') /* eslint-disable no-unused-expressions */ node && node.scrollTop;
        if (className) {
            this.appliedClasses[type][phase] = className;
            _addClass1(node, className);
        }
    };
    _proto.removeClasses = function removeClasses(node, type) {
        var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
        this.appliedClasses[type] = {
        };
        if (baseClassName) removeClass(node, baseClassName);
        if (activeClassName) removeClass(node, activeClassName);
        if (doneClassName) removeClass(node, doneClassName);
    };
    _proto.render = function render() {
        var _this$props = this.props, _ = _this$props.classNames, props = _objectWithoutPropertiesLooseDefault.default(_this$props, [
            "classNames"
        ]);
        return(/*#__PURE__*/ _reactDefault.default.createElement(_transitionDefault.default, _extendsDefault.default({
        }, props, {
            onEnter: this.onEnter,
            onEntered: this.onEntered,
            onEntering: this.onEntering,
            onExit: this.onExit,
            onExiting: this.onExiting,
            onExited: this.onExited
        })));
    };
    return CSSTransition;
}(_reactDefault.default.Component);
CSSTransition1.defaultProps = {
    classNames: ''
};
CSSTransition1.propTypes = _extendsDefault.default({
}, _transitionDefault.default.propTypes, {
    /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */ classNames: _propTypes1.classNamesShape,
    /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */ onEnter: _propTypesDefault.default.func,
    /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */ onEntering: _propTypesDefault.default.func,
    /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */ onEntered: _propTypesDefault.default.func,
    /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */ onExit: _propTypesDefault.default.func,
    /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */ onExiting: _propTypesDefault.default.func,
    /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */ onExited: _propTypesDefault.default.func
});
exports.default = CSSTransition1;

},{"@babel/runtime/helpers/esm/extends":"82S7U","@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"hnBMo","@babel/runtime/helpers/esm/inheritsLoose":"cEWe3","prop-types":"hBziQ","dom-helpers/addClass":"6Yhbf","dom-helpers/removeClass":"dES6a","react":"6fep5","./Transition":"dvk94","./utils/PropTypes":"gnB25","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"82S7U":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
exports.default = _extends;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hnBMo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {
    };
    var target = {
    };
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
exports.default = _objectWithoutPropertiesLoose;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cEWe3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _setPrototypeOfJs = require("./setPrototypeOf.js");
var _setPrototypeOfJsDefault = parcelHelpers.interopDefault(_setPrototypeOfJs);
function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    _setPrototypeOfJsDefault.default(subClass, superClass);
}
exports.default = _inheritsLoose;

},{"./setPrototypeOf.js":"7UGi3","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7UGi3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _setPrototypeOf(o1, p1) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o1, p1);
}
exports.default = _setPrototypeOf;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hBziQ":[function(require,module,exports) {
var ReactIs = require('react-is');
// By explicitly using `prop-types` you are opting into new development behavior.
// http://fb.me/prop-types-in-prod
var throwOnDirectAccess = true;
module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);

},{"react-is":"l6m0D","./factoryWithTypeCheckers":"eCHCR"}],"l6m0D":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react-is.development.js');

},{"./cjs/react-is.development.js":"i6ofL"}],"i6ofL":[function(require,module,exports) {
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 60103;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 60106;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 60107;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 60108;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 60114;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 60109;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 60110; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 60111;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 60111;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 60112;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 60113;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 60120;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 60115;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 60116;
    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 60121;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 60117;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 60118;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 60119;
    function isValidElementType(type) {
        return typeof type === 'string' || typeof type === 'function' || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
    }
    function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_ASYNC_MODE_TYPE:
                        case REACT_CONCURRENT_MODE_TYPE:
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    } // AsyncMode is deprecated along with isAsyncMode
    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }
    function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"eCHCR":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactIs = require('react-is');
var assign = require('object-assign');
var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var checkPropTypes = require('./checkPropTypes');
var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {
};
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {
    }
};
function emptyFunctionThatReturnsNull() {
    return null;
}
module.exports = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
    /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */ function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') return iteratorFn;
    }
    /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */ var ANONYMOUS = '<<anonymous>>';
    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
    };
    /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */ /*eslint-disable no-self-compare*/ function is(x, y) {
        // SameValue algorithm
        if (x === y) // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
        else // Step 6.a: NaN == NaN
        return x !== x && y !== y;
    }
    /*eslint-enable no-self-compare*/ /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */ function PropTypeError(message) {
        this.message = message;
        this.stack = '';
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
        var manualPropTypeCallCache = {
        };
        var manualPropTypeWarningCount = 0;
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                    // New behavior only for users of `prop-types` package
                    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                    err.name = 'Invariant Violation';
                    throw err;
                } else if (typeof console !== 'undefined') {
                    // Old behavior for people using React.PropTypes
                    var cacheKey = componentName + ':' + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                        printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
                        manualPropTypeCallCache[cacheKey] = true;
                        manualPropTypeWarningCount++;
                    }
                }
            }
            if (props[propName] == null) {
                if (isRequired) {
                    if (props[propName] === null) return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
                    return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
                }
                return null;
            } else return validate(props, propName, componentName, location, propFullName);
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
            }
            for(var i = 0; i < propValue.length; i++){
                var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
            {
                if (arguments.length > 1) printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
                else printWarning('Invalid argument supplied to oneOf, expected an array.');
            }
            return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for(var i = 0; i < expectedValues.length; i++){
                if (is(propValue, expectedValues[i])) return null;
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === 'symbol') return String(value);
                return value;
            });
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
            for(var key in propValue)if (has(propValue, key)) {
                var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
            printWarning('Invalid argument supplied to oneOfType, expected an instance of array.');
            return emptyFunctionThatReturnsNull;
        }
        for(var i1 = 0; i1 < arrayOfTypeCheckers.length; i1++){
            var checker = arrayOfTypeCheckers[i1];
            if (typeof checker !== 'function') {
                printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + ' at index ' + i1 + '.');
                return emptyFunctionThatReturnsNull;
            }
        }
        function validate(props, propName, componentName, location, propFullName) {
            for(var i = 0; i < arrayOfTypeCheckers.length; i++){
                var checker = arrayOfTypeCheckers[i];
                if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) return null;
            }
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            for(var key in shapeTypes){
                var checker = shapeTypes[key];
                if (!checker) continue;
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            // We need to check all keys in case some are required but missing from
            // props.
            var allKeys = assign({
            }, props[propName], shapeTypes);
            for(var key in allKeys){
                var checker = shapeTypes[key];
                if (!checker) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
        switch(typeof propValue){
            case 'number':
            case 'string':
            case 'undefined':
                return true;
            case 'boolean':
                return !propValue;
            case 'object':
                if (Array.isArray(propValue)) return propValue.every(isNode);
                if (propValue === null || isValidElement(propValue)) return true;
                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) while(!(step = iterator.next()).done){
                        if (!isNode(step.value)) return false;
                    }
                    else // Iterator will provide entry [k,v] tuples rather than values.
                    while(!(step = iterator.next()).done){
                        var entry = step.value;
                        if (entry) {
                            if (!isNode(entry[1])) return false;
                        }
                    }
                } else return false;
                return true;
            default:
                return false;
        }
    }
    function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === 'symbol') return true;
        // falsy value can't be a Symbol
        if (!propValue) return false;
        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue['@@toStringTag'] === 'Symbol') return true;
        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === 'function' && propValue instanceof Symbol) return true;
        return false;
    }
    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) return 'array';
        if (propValue instanceof RegExp) // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return 'object';
        if (isSymbol(propType, propValue)) return 'symbol';
        return propType;
    }
    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) return '' + propValue;
        var propType = getPropType(propValue);
        if (propType === 'object') {
            if (propValue instanceof Date) return 'date';
            else if (propValue instanceof RegExp) return 'regexp';
        }
        return propType;
    }
    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch(type){
            case 'array':
            case 'object':
                return 'an ' + type;
            case 'boolean':
            case 'date':
            case 'regexp':
                return 'a ' + type;
            default:
                return type;
        }
    }
    // Returns class name of the object, if any.
    function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) return ANONYMOUS;
        return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

},{"react-is":"l6m0D","object-assign":"dDdxj","./lib/ReactPropTypesSecret":"ckpyF","./checkPropTypes":"dXZ7R"}],"ckpyF":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

},{}],"dXZ7R":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var printWarning = function() {
};
var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var loggedTypeFailures = {
};
var has = Function.call.bind(Object.prototype.hasOwnProperty);
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {
    }
};
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.');
                err.name = 'Invariant Violation';
                throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
            error = ex;
        }
        if (error && !(error instanceof Error)) printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : '';
            printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
    }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */ checkPropTypes.resetWarningCache = function() {
    loggedTypeFailures = {
    };
};
module.exports = checkPropTypes;

},{"./lib/ReactPropTypesSecret":"ckpyF"}],"6Yhbf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _hasClass = require("./hasClass");
var _hasClassDefault = parcelHelpers.interopDefault(_hasClass);
function addClass(element, className) {
    if (element.classList) element.classList.add(className);
    else if (!_hasClassDefault.default(element, className)) {
        if (typeof element.className === 'string') element.className = element.className + " " + className;
        else element.setAttribute('class', (element.className && element.className.baseVal || '') + " " + className);
    }
}
exports.default = addClass;

},{"./hasClass":"cDtAw","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cDtAw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function hasClass(element, className) {
    if (element.classList) return !!className && element.classList.contains(className);
    return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}
exports.default = hasClass;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dES6a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function replaceClassName(origClass, classToRemove) {
    return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}
function removeClass(element, className) {
    if (element.classList) element.classList.remove(className);
    else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);
    else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
}
exports.default = removeClass;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dvk94":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "UNMOUNTED", ()=>UNMOUNTED
);
parcelHelpers.export(exports, "EXITED", ()=>EXITED
);
parcelHelpers.export(exports, "ENTERING", ()=>ENTERING
);
parcelHelpers.export(exports, "ENTERED", ()=>ENTERED
);
parcelHelpers.export(exports, "EXITING", ()=>EXITING
);
var _objectWithoutPropertiesLoose = require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _inheritsLoose = require("@babel/runtime/helpers/esm/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactDom = require("react-dom");
var _reactDomDefault = parcelHelpers.interopDefault(_reactDom);
var _config = require("./config");
var _configDefault = parcelHelpers.interopDefault(_config);
var _propTypes1 = require("./utils/PropTypes");
var _transitionGroupContext = require("./TransitionGroupContext");
var _transitionGroupContextDefault = parcelHelpers.interopDefault(_transitionGroupContext);
var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */ var Transition1 = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(Transition, _React$Component);
    function Transition(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var parentGroup = context; // In the context of a TransitionGroup all enters are really appears
        var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
        var initialStatus;
        _this.appearStatus = null;
        if (props.in) {
            if (appear) {
                initialStatus = EXITED;
                _this.appearStatus = ENTERING;
            } else initialStatus = ENTERED;
        } else if (props.unmountOnExit || props.mountOnEnter) initialStatus = UNMOUNTED;
        else initialStatus = EXITED;
        _this.state = {
            status: initialStatus
        };
        _this.nextCallback = null;
        return _this;
    }
    Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
        var nextIn = _ref.in;
        if (nextIn && prevState.status === UNMOUNTED) return {
            status: EXITED
        };
        return null;
    } // getSnapshotBeforeUpdate(prevProps) {
    ;
    var _proto = Transition.prototype;
    _proto.componentDidMount = function componentDidMount() {
        this.updateStatus(true, this.appearStatus);
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
        var nextStatus = null;
        if (prevProps !== this.props) {
            var status = this.state.status;
            if (this.props.in) {
                if (status !== ENTERING && status !== ENTERED) nextStatus = ENTERING;
            } else if (status === ENTERING || status === ENTERED) nextStatus = EXITING;
        }
        this.updateStatus(false, nextStatus);
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.cancelNextCallback();
    };
    _proto.getTimeouts = function getTimeouts() {
        var timeout = this.props.timeout;
        var exit, enter, appear;
        exit = enter = appear = timeout;
        if (timeout != null && typeof timeout !== 'number') {
            exit = timeout.exit;
            enter = timeout.enter; // TODO: remove fallback for next major
            appear = timeout.appear !== undefined ? timeout.appear : enter;
        }
        return {
            exit: exit,
            enter: enter,
            appear: appear
        };
    };
    _proto.updateStatus = function updateStatus(mounting, nextStatus) {
        if (mounting === void 0) mounting = false;
        if (nextStatus !== null) {
            // nextStatus will always be ENTERING or EXITING.
            this.cancelNextCallback();
            if (nextStatus === ENTERING) this.performEnter(mounting);
            else this.performExit();
        } else if (this.props.unmountOnExit && this.state.status === EXITED) this.setState({
            status: UNMOUNTED
        });
    };
    _proto.performEnter = function performEnter(mounting) {
        var _this2 = this;
        var enter = this.props.enter;
        var appearing = this.context ? this.context.isMounting : mounting;
        var _ref2 = this.props.nodeRef ? [
            appearing
        ] : [
            _reactDomDefault.default.findDOMNode(this),
            appearing
        ], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
        var timeouts = this.getTimeouts();
        var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
        // if we are mounting and running this it means appear _must_ be set
        if (!mounting && !enter || _configDefault.default.disabled) {
            this.safeSetState({
                status: ENTERED
            }, function() {
                _this2.props.onEntered(maybeNode);
            });
            return;
        }
        this.props.onEnter(maybeNode, maybeAppearing);
        this.safeSetState({
            status: ENTERING
        }, function() {
            _this2.props.onEntering(maybeNode, maybeAppearing);
            _this2.onTransitionEnd(enterTimeout, function() {
                _this2.safeSetState({
                    status: ENTERED
                }, function() {
                    _this2.props.onEntered(maybeNode, maybeAppearing);
                });
            });
        });
    };
    _proto.performExit = function performExit() {
        var _this3 = this;
        var exit = this.props.exit;
        var timeouts = this.getTimeouts();
        var maybeNode = this.props.nodeRef ? undefined : _reactDomDefault.default.findDOMNode(this); // no exit animation skip right to EXITED
        if (!exit || _configDefault.default.disabled) {
            this.safeSetState({
                status: EXITED
            }, function() {
                _this3.props.onExited(maybeNode);
            });
            return;
        }
        this.props.onExit(maybeNode);
        this.safeSetState({
            status: EXITING
        }, function() {
            _this3.props.onExiting(maybeNode);
            _this3.onTransitionEnd(timeouts.exit, function() {
                _this3.safeSetState({
                    status: EXITED
                }, function() {
                    _this3.props.onExited(maybeNode);
                });
            });
        });
    };
    _proto.cancelNextCallback = function cancelNextCallback() {
        if (this.nextCallback !== null) {
            this.nextCallback.cancel();
            this.nextCallback = null;
        }
    };
    _proto.safeSetState = function safeSetState(nextState, callback) {
        // This shouldn't be necessary, but there are weird race conditions with
        // setState callbacks and unmounting in testing, so always make sure that
        // we can cancel any pending setState callbacks after we unmount.
        callback = this.setNextCallback(callback);
        this.setState(nextState, callback);
    };
    _proto.setNextCallback = function setNextCallback(callback) {
        var _this4 = this;
        var active = true;
        this.nextCallback = function(event) {
            if (active) {
                active = false;
                _this4.nextCallback = null;
                callback(event);
            }
        };
        this.nextCallback.cancel = function() {
            active = false;
        };
        return this.nextCallback;
    };
    _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
        this.setNextCallback(handler);
        var node = this.props.nodeRef ? this.props.nodeRef.current : _reactDomDefault.default.findDOMNode(this);
        var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
        if (!node || doesNotHaveTimeoutOrListener) {
            setTimeout(this.nextCallback, 0);
            return;
        }
        if (this.props.addEndListener) {
            var _ref3 = this.props.nodeRef ? [
                this.nextCallback
            ] : [
                node,
                this.nextCallback
            ], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
            this.props.addEndListener(maybeNode, maybeNextCallback);
        }
        if (timeout != null) setTimeout(this.nextCallback, timeout);
    };
    _proto.render = function render() {
        var status = this.state.status;
        if (status === UNMOUNTED) return null;
        var _this$props = this.props, children = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLooseDefault.default(_this$props, [
            "children",
            "in",
            "mountOnEnter",
            "unmountOnExit",
            "appear",
            "enter",
            "exit",
            "timeout",
            "addEndListener",
            "onEnter",
            "onEntering",
            "onEntered",
            "onExit",
            "onExiting",
            "onExited",
            "nodeRef"
        ]);
        return(/*#__PURE__*/ // allows for nested Transitions
        _reactDefault.default.createElement(_transitionGroupContextDefault.default.Provider, {
            value: null
        }, typeof children === 'function' ? children(status, childProps) : _reactDefault.default.cloneElement(_reactDefault.default.Children.only(children), childProps)));
    };
    return Transition;
}(_reactDefault.default.Component);
Transition1.contextType = _transitionGroupContextDefault.default;
Transition1.propTypes = {
    /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */ nodeRef: _propTypesDefault.default.shape({
        current: typeof Element === 'undefined' ? _propTypesDefault.default.any : function(propValue, key, componentName, location, propFullName, secret) {
            var value = propValue[key];
            return _propTypesDefault.default.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
        }
    }),
    /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */ children: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.func.isRequired,
        _propTypesDefault.default.element.isRequired
    ]).isRequired,
    /**
   * Show the component; triggers the enter or exit states
   */ in: _propTypesDefault.default.bool,
    /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */ mountOnEnter: _propTypesDefault.default.bool,
    /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */ unmountOnExit: _propTypesDefault.default.bool,
    /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */ appear: _propTypesDefault.default.bool,
    /**
   * Enable or disable enter transitions.
   */ enter: _propTypesDefault.default.bool,
    /**
   * Enable or disable exit transitions.
   */ exit: _propTypesDefault.default.bool,
    /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */ timeout: function timeout(props) {
        var pt = _propTypes1.timeoutsShape;
        if (!props.addEndListener) pt = pt.isRequired;
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        return pt.apply(void 0, [
            props
        ].concat(args));
    },
    /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */ addEndListener: _propTypesDefault.default.func,
    /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */ onEnter: _propTypesDefault.default.func,
    /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */ onEntering: _propTypesDefault.default.func,
    /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */ onEntered: _propTypesDefault.default.func,
    /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */ onExit: _propTypesDefault.default.func,
    /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */ onExiting: _propTypesDefault.default.func,
    /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */ onExited: _propTypesDefault.default.func
}; // Name the function so it is clearer in the documentation
function noop() {
}
Transition1.defaultProps = {
    in: false,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    enter: true,
    exit: true,
    onEnter: noop,
    onEntering: noop,
    onEntered: noop,
    onExit: noop,
    onExiting: noop,
    onExited: noop
};
Transition1.UNMOUNTED = UNMOUNTED;
Transition1.EXITED = EXITED;
Transition1.ENTERING = ENTERING;
Transition1.ENTERED = ENTERED;
Transition1.EXITING = EXITING;
exports.default = Transition1;

},{"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"hnBMo","@babel/runtime/helpers/esm/inheritsLoose":"cEWe3","prop-types":"hBziQ","react":"6fep5","react-dom":"jVjHr","./config":"cF0Ng","./utils/PropTypes":"gnB25","./TransitionGroupContext":"XU9P5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cF0Ng":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = {
    disabled: false
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gnB25":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "timeoutsShape", ()=>timeoutsShape
);
parcelHelpers.export(exports, "classNamesShape", ()=>classNamesShape
);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var timeoutsShape = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.number,
    _propTypesDefault.default.shape({
        enter: _propTypesDefault.default.number,
        exit: _propTypesDefault.default.number,
        appear: _propTypesDefault.default.number
    }).isRequired
]);
var classNamesShape = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.string,
    _propTypesDefault.default.shape({
        enter: _propTypesDefault.default.string,
        exit: _propTypesDefault.default.string,
        active: _propTypesDefault.default.string
    }),
    _propTypesDefault.default.shape({
        enter: _propTypesDefault.default.string,
        enterDone: _propTypesDefault.default.string,
        enterActive: _propTypesDefault.default.string,
        exit: _propTypesDefault.default.string,
        exitDone: _propTypesDefault.default.string,
        exitActive: _propTypesDefault.default.string
    })
]);

},{"prop-types":"hBziQ","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"XU9P5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
exports.default = _reactDefault.default.createContext(null);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"heBlR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _objectWithoutPropertiesLoose = require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _inheritsLoose = require("@babel/runtime/helpers/esm/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactDom = require("react-dom");
var _reactDomDefault = parcelHelpers.interopDefault(_reactDom);
var _transitionGroup = require("./TransitionGroup");
var _transitionGroupDefault = parcelHelpers.interopDefault(_transitionGroup);
/**
 * The `<ReplaceTransition>` component is a specialized `Transition` component
 * that animates between two children.
 *
 * ```jsx
 * <ReplaceTransition in>
 *   <Fade><div>I appear first</div></Fade>
 *   <Fade><div>I replace the above</div></Fade>
 * </ReplaceTransition>
 * ```
 */ var ReplaceTransition1 = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(ReplaceTransition, _React$Component);
    function ReplaceTransition() {
        var _this;
        for(var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++)_args[_key] = arguments[_key];
        _this = _React$Component.call.apply(_React$Component, [
            this
        ].concat(_args)) || this;
        _this.handleEnter = function() {
            for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];
            return _this.handleLifecycle('onEnter', 0, args);
        };
        _this.handleEntering = function() {
            for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)args[_key3] = arguments[_key3];
            return _this.handleLifecycle('onEntering', 0, args);
        };
        _this.handleEntered = function() {
            for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++)args[_key4] = arguments[_key4];
            return _this.handleLifecycle('onEntered', 0, args);
        };
        _this.handleExit = function() {
            for(var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++)args[_key5] = arguments[_key5];
            return _this.handleLifecycle('onExit', 1, args);
        };
        _this.handleExiting = function() {
            for(var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++)args[_key6] = arguments[_key6];
            return _this.handleLifecycle('onExiting', 1, args);
        };
        _this.handleExited = function() {
            for(var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++)args[_key7] = arguments[_key7];
            return _this.handleLifecycle('onExited', 1, args);
        };
        return _this;
    }
    var _proto = ReplaceTransition.prototype;
    _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
        var _child$props;
        var children = this.props.children;
        var child = _reactDefault.default.Children.toArray(children)[idx];
        if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
        if (this.props[handler]) {
            var maybeNode = child.props.nodeRef ? undefined : _reactDomDefault.default.findDOMNode(this);
            this.props[handler](maybeNode);
        }
    };
    _proto.render = function render() {
        var _this$props = this.props, children = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLooseDefault.default(_this$props, [
            "children",
            "in"
        ]);
        var _React$Children$toArr = _reactDefault.default.Children.toArray(children), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
        delete props.onEnter;
        delete props.onEntering;
        delete props.onEntered;
        delete props.onExit;
        delete props.onExiting;
        delete props.onExited;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_transitionGroupDefault.default, props, inProp ? _reactDefault.default.cloneElement(first, {
            key: 'first',
            onEnter: this.handleEnter,
            onEntering: this.handleEntering,
            onEntered: this.handleEntered
        }) : _reactDefault.default.cloneElement(second, {
            key: 'second',
            onEnter: this.handleExit,
            onEntering: this.handleExiting,
            onEntered: this.handleExited
        })));
    };
    return ReplaceTransition;
}(_reactDefault.default.Component);
ReplaceTransition1.propTypes = {
    in: _propTypesDefault.default.bool.isRequired,
    children: function children(props, propName) {
        if (_reactDefault.default.Children.count(props[propName]) !== 2) return new Error("\"" + propName + "\" must be exactly two transition components.");
        return null;
    }
};
exports.default = ReplaceTransition1;

},{"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"hnBMo","@babel/runtime/helpers/esm/inheritsLoose":"cEWe3","prop-types":"hBziQ","react":"6fep5","react-dom":"jVjHr","./TransitionGroup":"aAJvW","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aAJvW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _objectWithoutPropertiesLoose = require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _assertThisInitialized = require("@babel/runtime/helpers/esm/assertThisInitialized");
var _assertThisInitializedDefault = parcelHelpers.interopDefault(_assertThisInitialized);
var _inheritsLoose = require("@babel/runtime/helpers/esm/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _transitionGroupContext = require("./TransitionGroupContext");
var _transitionGroupContextDefault = parcelHelpers.interopDefault(_transitionGroupContext);
var _childMapping = require("./utils/ChildMapping");
var values = Object.values || function(obj) {
    return Object.keys(obj).map(function(k) {
        return obj[k];
    });
};
var defaultProps = {
    component: 'div',
    childFactory: function childFactory(child) {
        return child;
    }
};
/**
 * The `<TransitionGroup>` component manages a set of transition components
 * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
 * components, `<TransitionGroup>` is a state machine for managing the mounting
 * and unmounting of components over time.
 *
 * Consider the example below. As items are removed or added to the TodoList the
 * `in` prop is toggled automatically by the `<TransitionGroup>`.
 *
 * Note that `<TransitionGroup>`  does not define any animation behavior!
 * Exactly _how_ a list item animates is up to the individual transition
 * component. This means you can mix and match animations across different list
 * items.
 */ var TransitionGroup1 = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(TransitionGroup, _React$Component);
    function TransitionGroup(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var handleExited = _this.handleExited.bind(_assertThisInitializedDefault.default(_this)); // Initial children should all be entering, dependent on appear
        _this.state = {
            contextValue: {
                isMounting: true
            },
            handleExited: handleExited,
            firstRender: true
        };
        return _this;
    }
    var _proto = TransitionGroup.prototype;
    _proto.componentDidMount = function componentDidMount() {
        this.mounted = true;
        this.setState({
            contextValue: {
                isMounting: false
            }
        });
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.mounted = false;
    };
    TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
        var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
        return {
            children: firstRender ? _childMapping.getInitialChildMapping(nextProps, handleExited) : _childMapping.getNextChildMapping(nextProps, prevChildMapping, handleExited),
            firstRender: false
        };
    } // node is `undefined` when user provided `nodeRef` prop
    ;
    _proto.handleExited = function handleExited(child, node) {
        var currentChildMapping = _childMapping.getChildMapping(this.props.children);
        if (child.key in currentChildMapping) return;
        if (child.props.onExited) child.props.onExited(node);
        if (this.mounted) this.setState(function(state) {
            var children = _extendsDefault.default({
            }, state.children);
            delete children[child.key];
            return {
                children: children
            };
        });
    };
    _proto.render = function render() {
        var _this$props = this.props, Component = _this$props.component, childFactory = _this$props.childFactory, props = _objectWithoutPropertiesLooseDefault.default(_this$props, [
            "component",
            "childFactory"
        ]);
        var contextValue = this.state.contextValue;
        var children = values(this.state.children).map(childFactory);
        delete props.appear;
        delete props.enter;
        delete props.exit;
        if (Component === null) return(/*#__PURE__*/ _reactDefault.default.createElement(_transitionGroupContextDefault.default.Provider, {
            value: contextValue
        }, children));
        return(/*#__PURE__*/ _reactDefault.default.createElement(_transitionGroupContextDefault.default.Provider, {
            value: contextValue
        }, /*#__PURE__*/ _reactDefault.default.createElement(Component, props, children)));
    };
    return TransitionGroup;
}(_reactDefault.default.Component);
TransitionGroup1.propTypes = {
    /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */ component: _propTypesDefault.default.any,
    /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */ children: _propTypesDefault.default.node,
    /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */ appear: _propTypesDefault.default.bool,
    /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */ enter: _propTypesDefault.default.bool,
    /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */ exit: _propTypesDefault.default.bool,
    /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */ childFactory: _propTypesDefault.default.func
};
TransitionGroup1.defaultProps = defaultProps;
exports.default = TransitionGroup1;

},{"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"hnBMo","@babel/runtime/helpers/esm/extends":"82S7U","@babel/runtime/helpers/esm/assertThisInitialized":"jab6w","@babel/runtime/helpers/esm/inheritsLoose":"cEWe3","prop-types":"hBziQ","react":"6fep5","./TransitionGroupContext":"XU9P5","./utils/ChildMapping":"4qcmp","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jab6w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
exports.default = _assertThisInitialized;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4qcmp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */ parcelHelpers.export(exports, "getChildMapping", ()=>getChildMapping
);
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */ parcelHelpers.export(exports, "mergeChildMappings", ()=>mergeChildMappings
);
parcelHelpers.export(exports, "getInitialChildMapping", ()=>getInitialChildMapping
);
parcelHelpers.export(exports, "getNextChildMapping", ()=>getNextChildMapping
);
var _react = require("react");
function getChildMapping(children, mapFn) {
    var mapper = function mapper(child) {
        return mapFn && _react.isValidElement(child) ? mapFn(child) : child;
    };
    var result = Object.create(null);
    if (children) _react.Children.map(children, function(c) {
        return c;
    }).forEach(function(child) {
        // run the map function here instead so that the key is the computed one
        result[child.key] = mapper(child);
    });
    return result;
}
function mergeChildMappings(prev, next) {
    prev = prev || {
    };
    next = next || {
    };
    function getValueForKey(key) {
        return key in next ? next[key] : prev[key];
    } // For each key of `next`, the list of keys to insert before that key in
    // the combined list
    var nextKeysPending = Object.create(null);
    var pendingKeys = [];
    for(var prevKey in prev){
        if (prevKey in next) {
            if (pendingKeys.length) {
                nextKeysPending[prevKey] = pendingKeys;
                pendingKeys = [];
            }
        } else pendingKeys.push(prevKey);
    }
    var i;
    var childMapping = {
    };
    for(var nextKey in next){
        if (nextKeysPending[nextKey]) for(i = 0; i < nextKeysPending[nextKey].length; i++){
            var pendingNextKey = nextKeysPending[nextKey][i];
            childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
        }
        childMapping[nextKey] = getValueForKey(nextKey);
    } // Finally, add the keys which didn't appear before any key in `next`
    for(i = 0; i < pendingKeys.length; i++)childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
    return childMapping;
}
function getProp(child, prop, props) {
    return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
    return getChildMapping(props.children, function(child) {
        return _react.cloneElement(child, {
            onExited: onExited.bind(null, child),
            in: true,
            appear: getProp(child, 'appear', props),
            enter: getProp(child, 'enter', props),
            exit: getProp(child, 'exit', props)
        });
    });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
    var nextChildMapping = getChildMapping(nextProps.children);
    var children = mergeChildMappings(prevChildMapping, nextChildMapping);
    Object.keys(children).forEach(function(key) {
        var child = children[key];
        if (!_react.isValidElement(child)) return;
        var hasPrev = key in prevChildMapping;
        var hasNext = key in nextChildMapping;
        var prevChild = prevChildMapping[key];
        var isLeaving = _react.isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)
        if (hasNext && (!hasPrev || isLeaving)) // console.log('entering', key)
        children[key] = _react.cloneElement(child, {
            onExited: onExited.bind(null, child),
            in: true,
            exit: getProp(child, 'exit', nextProps),
            enter: getProp(child, 'enter', nextProps)
        });
        else if (!hasNext && hasPrev && !isLeaving) // item is old (exiting)
        // console.log('leaving', key)
        children[key] = _react.cloneElement(child, {
            in: false
        });
        else if (hasNext && hasPrev && _react.isValidElement(prevChild)) // item hasn't changed transition states
        // copy over the last transition props;
        // console.log('unchanged', key)
        children[key] = _react.cloneElement(child, {
            onExited: onExited.bind(null, child),
            in: prevChild.props.in,
            exit: getProp(child, 'exit', nextProps),
            enter: getProp(child, 'enter', nextProps)
        });
    });
    return children;
}

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"c1xkU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "modes", ()=>modes
);
var _inheritsLoose = require("@babel/runtime/helpers/esm/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _transition = require("./Transition");
var _transitionGroupContext = require("./TransitionGroupContext");
var _transitionGroupContextDefault = parcelHelpers.interopDefault(_transitionGroupContext);
var _leaveRenders, _enterRenders;
function areChildrenDifferent(oldChildren, newChildren) {
    if (oldChildren === newChildren) return false;
    if (_reactDefault.default.isValidElement(oldChildren) && _reactDefault.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) return false;
    return true;
}
var modes = {
    out: 'out-in',
    in: 'in-out'
};
var callHook = function callHook(element, name, cb) {
    return function() {
        var _element$props;
        element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);
        cb();
    };
};
var leaveRenders = (_leaveRenders = {
}, _leaveRenders[modes.out] = function(_ref) {
    var current = _ref.current, changeState = _ref.changeState;
    return _reactDefault.default.cloneElement(current, {
        in: false,
        onExited: callHook(current, 'onExited', function() {
            changeState(_transition.ENTERING, null);
        })
    });
}, _leaveRenders[modes.in] = function(_ref2) {
    var current = _ref2.current, changeState = _ref2.changeState, children = _ref2.children;
    return [
        current,
        _reactDefault.default.cloneElement(children, {
            in: true,
            onEntered: callHook(children, 'onEntered', function() {
                changeState(_transition.ENTERING);
            })
        })
    ];
}, _leaveRenders);
var enterRenders = (_enterRenders = {
}, _enterRenders[modes.out] = function(_ref3) {
    var children = _ref3.children, changeState = _ref3.changeState;
    return _reactDefault.default.cloneElement(children, {
        in: true,
        onEntered: callHook(children, 'onEntered', function() {
            changeState(_transition.ENTERED, _reactDefault.default.cloneElement(children, {
                in: true
            }));
        })
    });
}, _enterRenders[modes.in] = function(_ref4) {
    var current = _ref4.current, children = _ref4.children, changeState = _ref4.changeState;
    return [
        _reactDefault.default.cloneElement(current, {
            in: false,
            onExited: callHook(current, 'onExited', function() {
                changeState(_transition.ENTERED, _reactDefault.default.cloneElement(children, {
                    in: true
                }));
            })
        }),
        _reactDefault.default.cloneElement(children, {
            in: true
        })
    ];
}, _enterRenders);
/**
 * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).
 * You can use it when you want to control the render between state transitions.
 * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.
 *
 * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.
 * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.
 *
 * **Note**: If you want the animation to happen simultaneously
 * (that is, to have the old child removed and a new child inserted **at the same time**),
 * you should use
 * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)
 * instead.
 *
 * ```jsx
 * function App() {
 *  const [state, setState] = useState(false);
 *  return (
 *    <SwitchTransition>
 *      <CSSTransition
 *        key={state ? "Goodbye, world!" : "Hello, world!"}
 *        addEndListener={(node, done) => node.addEventListener("transitionend", done, false)}
 *        classNames='fade'
 *      >
 *        <button onClick={() => setState(state => !state)}>
 *          {state ? "Goodbye, world!" : "Hello, world!"}
 *        </button>
 *      </CSSTransition>
 *    </SwitchTransition>
 *  );
 * }
 * ```
 *
 * ```css
 * .fade-enter{
 *    opacity: 0;
 * }
 * .fade-exit{
 *    opacity: 1;
 * }
 * .fade-enter-active{
 *    opacity: 1;
 * }
 * .fade-exit-active{
 *    opacity: 0;
 * }
 * .fade-enter-active,
 * .fade-exit-active{
 *    transition: opacity 500ms;
 * }
 * ```
 */ var SwitchTransition1 = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(SwitchTransition, _React$Component);
    function SwitchTransition() {
        var _this;
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _React$Component.call.apply(_React$Component, [
            this
        ].concat(args)) || this;
        _this.state = {
            status: _transition.ENTERED,
            current: null
        };
        _this.appeared = false;
        _this.changeState = function(status, current) {
            if (current === void 0) current = _this.state.current;
            _this.setState({
                status: status,
                current: current
            });
        };
        return _this;
    }
    var _proto = SwitchTransition.prototype;
    _proto.componentDidMount = function componentDidMount() {
        this.appeared = true;
    };
    SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if (props.children == null) return {
            current: null
        };
        if (state.status === _transition.ENTERING && props.mode === modes.in) return {
            status: _transition.ENTERING
        };
        if (state.current && areChildrenDifferent(state.current, props.children)) return {
            status: _transition.EXITING
        };
        return {
            current: _reactDefault.default.cloneElement(props.children, {
                in: true
            })
        };
    };
    _proto.render = function render() {
        var _this$props = this.props, children = _this$props.children, mode = _this$props.mode, _this$state = this.state, status = _this$state.status, current = _this$state.current;
        var data = {
            children: children,
            current: current,
            changeState: this.changeState,
            status: status
        };
        var component;
        switch(status){
            case _transition.ENTERING:
                component = enterRenders[mode](data);
                break;
            case _transition.EXITING:
                component = leaveRenders[mode](data);
                break;
            case _transition.ENTERED:
                component = current;
        }
        return(/*#__PURE__*/ _reactDefault.default.createElement(_transitionGroupContextDefault.default.Provider, {
            value: {
                isMounting: !this.appeared
            }
        }, component));
    };
    return SwitchTransition;
}(_reactDefault.default.Component);
SwitchTransition1.propTypes = {
    /**
   * Transition modes.
   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.
   * `in-out`: New element transitions in first, then when complete, the current element transitions out.
   *
   * @type {'out-in'|'in-out'}
   */ mode: _propTypesDefault.default.oneOf([
        modes.in,
        modes.out
    ]),
    /**
   * Any `Transition` or `CSSTransition` component.
   */ children: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.element.isRequired
    ])
};
SwitchTransition1.defaultProps = {
    mode: modes.out
};
exports.default = SwitchTransition1;

},{"@babel/runtime/helpers/esm/inheritsLoose":"cEWe3","react":"6fep5","prop-types":"hBziQ","./Transition":"dvk94","./TransitionGroupContext":"XU9P5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cxxno":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Group": "Polaris-BulkActions__Group",
    "Group-measuring": "Polaris-BulkActions__Group--measuring",
    "Group-entering": "Polaris-BulkActions__Group--entering",
    "Group-exiting": "Polaris-BulkActions__Group--exiting",
    "Group-entered": "Polaris-BulkActions__Group--entered",
    "Group-exited": "Polaris-BulkActions__Group--exited",
    "Group-smallScreen": "Polaris-BulkActions__Group--smallScreen",
    "Group-largeScreen": "Polaris-BulkActions__Group--largeScreen",
    "ButtonGroupWrapper": "Polaris-BulkActions__ButtonGroupWrapper",
    "BulkActionButton": "Polaris-BulkActions__BulkActionButton",
    "CheckableContainer": "Polaris-BulkActions__CheckableContainer",
    "disabled": "Polaris-BulkActions--disabled",
    "PaginatedSelectAll": "Polaris-BulkActions__PaginatedSelectAll",
    "Slide": "Polaris-BulkActions__Slide",
    "Slide-appear": "Polaris-BulkActions__Slide--appear",
    "Slide-enter": "Polaris-BulkActions__Slide--enter",
    "Slide-exit": "Polaris-BulkActions__Slide--exit",
    "Slide-appearing": "Polaris-BulkActions__Slide--appearing",
    "Slide-entering": "Polaris-BulkActions__Slide--entering"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7BdIm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BulkActionMenu", ()=>BulkActionMenu
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _useToggleJs = require("../../../../utilities/use-toggle.js");
var _bulkActionButtonJs = require("../BulkActionButton/BulkActionButton.js");
var _popoverJs = require("../../../Popover/Popover.js");
var _actionListJs = require("../../../ActionList/ActionList.js");
function BulkActionMenu({ title , actions , isNewBadgeInBadgeActions  }) {
    const { value: isVisible , toggle: toggleMenuVisibility  } = _useToggleJs.useToggle(false);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
        active: isVisible,
        activator: /*#__PURE__*/ _reactDefault.default.createElement(_bulkActionButtonJs.BulkActionButton, {
            disclosure: true,
            onAction: toggleMenuVisibility,
            content: title,
            indicator: isNewBadgeInBadgeActions
        }),
        onClose: toggleMenuVisibility,
        preferInputActivator: true
    }, /*#__PURE__*/ _reactDefault.default.createElement(_actionListJs.ActionList, {
        items: actions,
        onActionAnyItem: toggleMenuVisibility
    }))));
}

},{"react":"6fep5","../../../../utilities/use-toggle.js":"jHDnh","../BulkActionButton/BulkActionButton.js":"frWo3","../../../Popover/Popover.js":"9ztCP","../../../ActionList/ActionList.js":"eTtta","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"frWo3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BulkActionButton", ()=>BulkActionButton
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _useComponentDidMountJs = require("../../../../utilities/use-component-did-mount.js");
var _bulkActionsScssJs = require("../../BulkActions.scss.js");
var _bulkActionsScssJsDefault = parcelHelpers.interopDefault(_bulkActionsScssJs);
var _indicatorJs = require("../../../Indicator/Indicator.js");
var _buttonJs = require("../../../Button/Button.js");
function BulkActionButton({ handleMeasurement , url , external , onAction , content , disclosure , accessibilityLabel , disabled , indicator  }) {
    const bulkActionButton = _react.useRef(null);
    _useComponentDidMountJs.useComponentDidMount(()=>{
        if (handleMeasurement && bulkActionButton.current) {
            const width = bulkActionButton.current.getBoundingClientRect().width;
            handleMeasurement(width);
        }
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _bulkActionsScssJsDefault.default.BulkActionButton,
        ref: bulkActionButton
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        external: external,
        url: url,
        "aria-label": accessibilityLabel,
        onClick: onAction,
        disabled: disabled,
        disclosure: disclosure
    }, content), indicator && /*#__PURE__*/ _reactDefault.default.createElement(_indicatorJs.Indicator, null)));
}

},{"react":"6fep5","../../../../utilities/use-component-did-mount.js":"fbwJ3","../../BulkActions.scss.js":"cxxno","../../../Indicator/Indicator.js":"7sG3E","../../../Button/Button.js":"g06oC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fbwJ3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useComponentDidMount", ()=>useComponentDidMount
);
var _react = require("react");
var _useIsAfterInitialMountJs = require("./use-is-after-initial-mount.js");
/**
 * Similarly to the life-cycle method componentDidMount, useComponentDidMount
 * will be invoked after the component has mounted, and only the initial mount.
 * @param callback Defines a callback to invoke once the component has
 * initially mounted.
 * @example
 * function Playground({active}) {
 *  useComponentDidMount(() => {
 *    if (active) {
 *      console.warning(`Component has mounted.`);
 *    }
 *  });
 *
 *  return null;
 * }
 */ function useComponentDidMount(callback) {
    const isAfterInitialMount = _useIsAfterInitialMountJs.useIsAfterInitialMount();
    const hasInvokedLifeCycle = _react.useRef(false);
    if (isAfterInitialMount && !hasInvokedLifeCycle.current) {
        hasInvokedLifeCycle.current = true;
        return callback();
    }
}

},{"react":"6fep5","./use-is-after-initial-mount.js":"3sveN","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7sG3E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Indicator", ()=>Indicator
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _indicatorScssJs = require("./Indicator.scss.js");
var _indicatorScssJsDefault = parcelHelpers.interopDefault(_indicatorScssJs);
function Indicator({ pulse =true  }) {
    const className = _cssJs.classNames(_indicatorScssJsDefault.default.Indicator, pulse && _indicatorScssJsDefault.default.pulseIndicator);
    return(/*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: className
    }));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./Indicator.scss.js":"5GCgk","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5GCgk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Indicator": "Polaris-Indicator",
    "pulseIndicator": "Polaris-Indicator--pulseIndicator",
    "bounce": "Polaris-Indicator--bounce",
    "pulse": "Polaris-Indicator--pulse"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"djzx0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CheckableButton", ()=>CheckableButton
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _checkableButtonScssJs = require("./CheckableButton.scss.js");
var _checkableButtonScssJsDefault = parcelHelpers.interopDefault(_checkableButtonScssJs);
var _contextJs = require("../../utilities/resource-list/context.js");
var _checkboxJs = require("../Checkbox/Checkbox.js");
function CheckableButton({ accessibilityLabel , label ='' , onToggleAll , selected , selectMode , plain , measuring , disabled , smallScreen  }) {
    const checkBoxRef = _react.useRef(null);
    const { registerCheckableButtons  } = _react.useContext(_contextJs.ResourceListContext);
    let currentKey = 'bulkLg';
    if (plain) currentKey = 'plain';
    else if (smallScreen) currentKey = 'bulkSm';
    _react.useEffect(()=>{
        if (checkBoxRef.current && registerCheckableButtons) registerCheckableButtons(currentKey, checkBoxRef.current);
    }, [
        currentKey,
        registerCheckableButtons
    ]);
    const className = plain ? _cssJs.classNames(_checkableButtonScssJsDefault.default.CheckableButton, _checkableButtonScssJsDefault.default['CheckableButton-plain']) : _cssJs.classNames(_checkableButtonScssJsDefault.default.CheckableButton, selectMode && _checkableButtonScssJsDefault.default['CheckableButton-selectMode'], selected && _checkableButtonScssJsDefault.default['CheckableButton-selected'], measuring && _checkableButtonScssJsDefault.default['CheckableButton-measuring']);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className,
        onClick: onToggleAll
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _checkableButtonScssJsDefault.default.Checkbox
    }, /*#__PURE__*/ _reactDefault.default.createElement(_checkboxJs.Checkbox, {
        label: accessibilityLabel,
        labelHidden: true,
        checked: selected,
        disabled: disabled,
        onChange: onToggleAll,
        ref: checkBoxRef
    })), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _checkableButtonScssJsDefault.default.Label
    }, label)));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./CheckableButton.scss.js":"aXPHy","../../utilities/resource-list/context.js":"65WNK","../Checkbox/Checkbox.js":"irP0n","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aXPHy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "CheckableButton": "Polaris-CheckableButton",
    "CheckableButton-measuring": "Polaris-CheckableButton__CheckableButton--measuring",
    "CheckableButton-plain": "Polaris-CheckableButton__CheckableButton--plain",
    "CheckableButton-selectMode": "Polaris-CheckableButton__CheckableButton--selectMode",
    "CheckableButton-selected": "Polaris-CheckableButton__CheckableButton--selected",
    "Checkbox": "Polaris-CheckableButton__Checkbox",
    "Label": "Polaris-CheckableButton__Label"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"65WNK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResourceListContext", ()=>ResourceListContext
);
var _react = require("react");
const ResourceListContext = /*#__PURE__*/ _react.createContext({
});

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"blkMu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CalloutCard", ()=>CalloutCard
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _calloutCardScssJs = require("./CalloutCard.scss.js");
var _calloutCardScssJsDefault = parcelHelpers.interopDefault(_calloutCardScssJs);
var _textContainerJs = require("../TextContainer/TextContainer.js");
var _utilsJs = require("../Button/utils.js");
var _buttonJs = require("../Button/Button.js");
var _cardJs = require("../Card/Card.js");
var _headingJs = require("../Heading/Heading.js");
var _imageJs = require("../Image/Image.js");
var _buttonGroupJs = require("../ButtonGroup/ButtonGroup.js");
function CalloutCard({ title , children , illustration , primaryAction , secondaryAction , onDismiss  }) {
    const primaryActionMarkup = _utilsJs.buttonFrom(primaryAction);
    const secondaryActionMarkup = secondaryAction ? _utilsJs.buttonFrom(secondaryAction, {
        plain: true
    }) : null;
    const buttonMarkup = secondaryActionMarkup ? /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, null, primaryActionMarkup, secondaryActionMarkup) : primaryActionMarkup;
    const dismissButton = onDismiss ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _calloutCardScssJsDefault.default.Dismiss
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        plain: true,
        icon: _polarisIcons.CancelSmallMinor,
        onClick: onDismiss,
        accessibilityLabel: "Dismiss card"
    })) : null;
    const imageClassName = _cssJs.classNames(_calloutCardScssJsDefault.default.Image, onDismiss && _calloutCardScssJsDefault.default.DismissImage);
    const containerClassName = _cssJs.classNames(_calloutCardScssJsDefault.default.Container, onDismiss && _calloutCardScssJsDefault.default.hasDismiss);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_cardJs.Card, null, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: containerClassName
    }, dismissButton, /*#__PURE__*/ _reactDefault.default.createElement(_cardJs.Card.Section, null, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _calloutCardScssJsDefault.default.CalloutCard
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _calloutCardScssJsDefault.default.Content
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _calloutCardScssJsDefault.default.Title
    }, /*#__PURE__*/ _reactDefault.default.createElement(_headingJs.Heading, null, title)), /*#__PURE__*/ _reactDefault.default.createElement(_textContainerJs.TextContainer, null, children), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _calloutCardScssJsDefault.default.Buttons
    }, buttonMarkup)), /*#__PURE__*/ _reactDefault.default.createElement(_imageJs.Image, {
        alt: "",
        className: imageClassName,
        source: illustration
    }))))));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","./CalloutCard.scss.js":"k5LRM","../TextContainer/TextContainer.js":"TbRw7","../Button/utils.js":"9W95c","../Button/Button.js":"g06oC","../Card/Card.js":"kiG4Y","../Heading/Heading.js":"7PinN","../Image/Image.js":"jekWJ","../ButtonGroup/ButtonGroup.js":"kXBsg","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"k5LRM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "CalloutCard": "Polaris-CalloutCard",
    "Image": "Polaris-CalloutCard__Image",
    "DismissImage": "Polaris-CalloutCard__DismissImage",
    "Content": "Polaris-CalloutCard__Content",
    "Title": "Polaris-CalloutCard__Title",
    "Buttons": "Polaris-CalloutCard__Buttons",
    "Container": "Polaris-CalloutCard__Container",
    "Dismiss": "Polaris-CalloutCard__Dismiss",
    "hasDismiss": "Polaris-CalloutCard--hasDismiss"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"TbRw7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TextContainer", ()=>TextContainer
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _textContainerScssJs = require("./TextContainer.scss.js");
var _textContainerScssJsDefault = parcelHelpers.interopDefault(_textContainerScssJs);
function TextContainer({ spacing , children  }) {
    const className = _cssJs.classNames(_textContainerScssJsDefault.default.TextContainer, spacing && _textContainerScssJsDefault.default[_cssJs.variationName('spacing', spacing)]);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, children));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./TextContainer.scss.js":"ezO6u","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ezO6u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "TextContainer": "Polaris-TextContainer",
    "spacingTight": "Polaris-TextContainer--spacingTight",
    "spacingLoose": "Polaris-TextContainer--spacingLoose"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eKCG1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Caption", ()=>Caption
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _captionScssJs = require("./Caption.scss.js");
var _captionScssJsDefault = parcelHelpers.interopDefault(_captionScssJs);
function Caption({ children  }) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("p", {
        className: _captionScssJsDefault.default.Caption
    }, children));
}

},{"react":"6fep5","./Caption.scss.js":"b4gvQ","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"b4gvQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Caption": "Polaris-Caption"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hRJPO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ChoiceList", ()=>ChoiceList
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _choiceListScssJs = require("./ChoiceList.scss.js");
var _choiceListScssJsDefault = parcelHelpers.interopDefault(_choiceListScssJs);
var _radioButtonJs = require("../RadioButton/RadioButton.js");
var _hooksJs = require("../../utilities/unique-id/hooks.js");
var _inlineErrorJs = require("../InlineError/InlineError.js");
var _checkboxJs = require("../Checkbox/Checkbox.js");
function ChoiceList({ title , titleHidden , allowMultiple , choices , selected , onChange =noop , error , disabled =false , name: nameProp  }) {
    // Type asserting to any is required for TS3.2 but can be removed when we update to 3.3
    // see https://github.com/Microsoft/TypeScript/issues/28768
    const ControlComponent = allowMultiple ? _checkboxJs.Checkbox : _radioButtonJs.RadioButton;
    const name = _hooksJs.useUniqueId('ChoiceList', nameProp);
    const finalName = allowMultiple ? `${name}[]` : name;
    const className = _cssJs.classNames(_choiceListScssJsDefault.default.ChoiceList, titleHidden && _choiceListScssJsDefault.default.titleHidden);
    const titleMarkup = title ? /*#__PURE__*/ _reactDefault.default.createElement("legend", {
        className: _choiceListScssJsDefault.default.Title
    }, title) : null;
    const choicesMarkup = choices.map((choice)=>{
        const { value , label , helpText , disabled: choiceDisabled , describedByError  } = choice;
        function handleChange(checked) {
            onChange(updateSelectedChoices(choice, checked, selected, allowMultiple), name);
        }
        const isSelected = choiceIsSelected(choice, selected);
        const renderedChildren = choice.renderChildren ? choice.renderChildren(isSelected) : null;
        const children = renderedChildren ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _choiceListScssJsDefault.default.ChoiceChildren
        }, renderedChildren) : null;
        return(/*#__PURE__*/ _reactDefault.default.createElement("li", {
            key: value
        }, /*#__PURE__*/ _reactDefault.default.createElement(ControlComponent, {
            name: finalName,
            value: value,
            label: label,
            disabled: choiceDisabled || disabled,
            checked: choiceIsSelected(choice, selected),
            helpText: helpText,
            onChange: handleChange,
            ariaDescribedBy: error && describedByError ? _inlineErrorJs.errorTextID(finalName) : null
        }), children));
    });
    const errorMarkup = error && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _choiceListScssJsDefault.default.ChoiceError
    }, /*#__PURE__*/ _reactDefault.default.createElement(_inlineErrorJs.InlineError, {
        message: error,
        fieldID: finalName
    }));
    return(/*#__PURE__*/ _reactDefault.default.createElement("fieldset", {
        className: className,
        id: finalName,
        "aria-invalid": error != null
    }, titleMarkup, /*#__PURE__*/ _reactDefault.default.createElement("ul", {
        className: _choiceListScssJsDefault.default.Choices
    }, choicesMarkup), errorMarkup));
}
function noop() {
}
function choiceIsSelected({ value  }, selected) {
    return selected.includes(value);
}
function updateSelectedChoices({ value  }, checked, selected, allowMultiple = false) {
    if (checked) return allowMultiple ? [
        ...selected,
        value
    ] : [
        value
    ];
    return selected.filter((selectedChoice)=>selectedChoice !== value
    );
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./ChoiceList.scss.js":"3guiK","../RadioButton/RadioButton.js":"d1svR","../../utilities/unique-id/hooks.js":"kPfFC","../InlineError/InlineError.js":"5VVez","../Checkbox/Checkbox.js":"irP0n","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3guiK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ChoiceList": "Polaris-ChoiceList",
    "titleHidden": "Polaris-ChoiceList--titleHidden",
    "Title": "Polaris-ChoiceList__Title",
    "Choices": "Polaris-ChoiceList__Choices",
    "ChoiceChildren": "Polaris-ChoiceList__ChoiceChildren",
    "ChoiceError": "Polaris-ChoiceList__ChoiceError"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"d1svR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RadioButton", ()=>RadioButton
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _useToggleJs = require("../../utilities/use-toggle.js");
var _cssJs = require("../../utilities/css.js");
var _radioButtonScssJs = require("./RadioButton.scss.js");
var _radioButtonScssJsDefault = parcelHelpers.interopDefault(_radioButtonScssJs);
var _hooksJs = require("../../utilities/unique-id/hooks.js");
var _choiceJs = require("../Choice/Choice.js");
function RadioButton({ ariaDescribedBy: ariaDescribedByProp , label , labelHidden , helpText , checked , disabled , onChange , onFocus , onBlur , id: idProp , name: nameProp , value  }) {
    const id = _hooksJs.useUniqueId('RadioButton', idProp);
    const name = nameProp || id;
    const inputNode = _react.useRef(null);
    const [keyFocused, setKeyFocused] = _react.useState(false);
    const { value: mouseOver , setTrue: handleMouseOver , setFalse: handleMouseOut  } = _useToggleJs.useToggle(false);
    const handleKeyUp = ()=>{
        !keyFocused && setKeyFocused(true);
    };
    const handleBlur = ()=>{
        onBlur && onBlur();
        setKeyFocused(false);
    };
    function handleChange({ currentTarget  }) {
        onChange && onChange(currentTarget.checked, id);
    }
    const describedBy = [];
    if (helpText) describedBy.push(_choiceJs.helpTextID(id));
    if (ariaDescribedByProp) describedBy.push(ariaDescribedByProp);
    const ariaDescribedBy = describedBy.length ? describedBy.join(' ') : undefined;
    const inputClassName = _cssJs.classNames(_radioButtonScssJsDefault.default.Input, keyFocused && _radioButtonScssJsDefault.default.keyFocused);
    const backdropClassName = _cssJs.classNames(_radioButtonScssJsDefault.default.Backdrop, mouseOver && _radioButtonScssJsDefault.default.hover);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_choiceJs.Choice, {
        label: label,
        labelHidden: labelHidden,
        disabled: disabled,
        id: id,
        helpText: helpText,
        onMouseOver: handleMouseOver,
        onMouseOut: handleMouseOut
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _radioButtonScssJsDefault.default.RadioButton
    }, /*#__PURE__*/ _reactDefault.default.createElement("input", {
        id: id,
        name: name,
        value: value,
        type: "radio",
        checked: checked,
        disabled: disabled,
        className: inputClassName,
        onChange: handleChange,
        onFocus: onFocus,
        onKeyUp: handleKeyUp,
        onBlur: handleBlur,
        "aria-describedby": ariaDescribedBy,
        ref: inputNode
    }), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: backdropClassName
    }))));
}

},{"react":"6fep5","../../utilities/use-toggle.js":"jHDnh","../../utilities/css.js":"kYdwV","./RadioButton.scss.js":"1eeRV","../../utilities/unique-id/hooks.js":"kPfFC","../Choice/Choice.js":"TtJx8","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1eeRV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "RadioButton": "Polaris-RadioButton",
    "Input": "Polaris-RadioButton__Input",
    "keyFocused": "Polaris-RadioButton--keyFocused",
    "Backdrop": "Polaris-RadioButton__Backdrop",
    "hover": "Polaris-RadioButton--hover"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"g8OGv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Collapsible", ()=>Collapsible
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _collapsibleScssJs = require("./Collapsible.scss.js");
var _collapsibleScssJsDefault = parcelHelpers.interopDefault(_collapsibleScssJs);
function Collapsible({ id , expandOnPrint , open , transition , children  }) {
    const [height, setHeight] = _react.useState(0);
    const [isOpen, setIsOpen] = _react.useState(open);
    const [animationState, setAnimationState] = _react.useState('idle');
    const collapsibleContainer = _react.useRef(null);
    const isFullyOpen = animationState === 'idle' && open && isOpen;
    const isFullyClosed = animationState === 'idle' && !open && !isOpen;
    const content = expandOnPrint || !isFullyClosed ? children : null;
    const wrapperClassName = _cssJs.classNames(_collapsibleScssJsDefault.default.Collapsible, isFullyClosed && _collapsibleScssJsDefault.default.isFullyClosed, expandOnPrint && _collapsibleScssJsDefault.default.expandOnPrint);
    const collapsibleStyles = {
        ...transition && {
            transitionDuration: `${transition.duration}`,
            transitionTimingFunction: `${transition.timingFunction}`
        },
        maxHeight: isFullyOpen ? 'none' : `${height}px`,
        overflow: isFullyOpen ? 'visible' : 'hidden'
    };
    const handleCompleteAnimation = _react.useCallback(({ target  })=>{
        if (target === collapsibleContainer.current) {
            setAnimationState('idle');
            setIsOpen(open);
        }
    }, [
        open
    ]);
    _react.useEffect(()=>{
        if (open !== isOpen) setAnimationState('measuring');
    }, [
        open,
        isOpen
    ]);
    _react.useEffect(()=>{
        if (!open || !collapsibleContainer.current) return; // If collapsible defaults to open, set an initial height
        setHeight(collapsibleContainer.current.scrollHeight); // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    _react.useEffect(()=>{
        if (!collapsibleContainer.current) return;
        switch(animationState){
            case 'idle':
                break;
            case 'measuring':
                setHeight(collapsibleContainer.current.scrollHeight);
                setAnimationState('animating');
                break;
            case 'animating':
                setHeight(open ? collapsibleContainer.current.scrollHeight : 0);
        }
    }, [
        animationState,
        open,
        isOpen
    ]);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        id: id,
        style: collapsibleStyles,
        ref: collapsibleContainer,
        className: wrapperClassName,
        onTransitionEnd: handleCompleteAnimation,
        "aria-expanded": open
    }, content));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./Collapsible.scss.js":"iz5GC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iz5GC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Collapsible": "Polaris-Collapsible",
    "isFullyClosed": "Polaris-Collapsible--isFullyClosed",
    "expandOnPrint": "Polaris-Collapsible--expandOnPrint"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jrkrJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ColorPicker", ()=>ColorPicker
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _clampJs = require("../../utilities/clamp.js");
var _cssJs = require("../../utilities/css.js");
var _colorTransformersJs = require("../../utilities/color-transformers.js");
var _colorPickerScssJs = require("./ColorPicker.scss.js");
var _colorPickerScssJsDefault = parcelHelpers.interopDefault(_colorPickerScssJs);
var _alphaPickerJs = require("./components/AlphaPicker/AlphaPicker.js");
var _huePickerJs = require("./components/HuePicker/HuePicker.js");
var _slidableJs = require("./components/Slidable/Slidable.js");
var _eventListenerJs = require("../EventListener/EventListener.js");
const RESIZE_DEBOUNCE_TIME_MS = 200;
class ColorPicker extends _react.PureComponent {
    constructor(...args){
        super(...args);
        this.state = {
            pickerSize: {
                width: 0,
                height: 0
            }
        };
        this.colorNode = null;
        this.handleResize = _debounceDefault.default(()=>{
            const { colorNode  } = this;
            if (colorNode == null) return;
            this.setState({
                pickerSize: {
                    width: colorNode.clientWidth,
                    height: colorNode.clientHeight
                }
            });
        }, RESIZE_DEBOUNCE_TIME_MS, {
            leading: true,
            trailing: true,
            maxWait: RESIZE_DEBOUNCE_TIME_MS
        });
        this.setColorNode = (node)=>{
            this.colorNode = node;
        };
        this.handleHueChange = (hue)=>{
            const { color: { brightness , saturation , alpha =1  } , onChange  } = this.props;
            onChange({
                hue,
                brightness,
                saturation,
                alpha
            });
        };
        this.handleAlphaChange = (alpha)=>{
            const { color: { hue , brightness , saturation  } , onChange  } = this.props;
            onChange({
                hue,
                brightness,
                saturation,
                alpha
            });
        };
        this.handleDraggerMove = ({ x , y  })=>{
            const { pickerSize  } = this.state;
            const { color: { hue , alpha =1  } , onChange  } = this.props;
            const saturation = _clampJs.clamp(x / pickerSize.width, 0, 1);
            const brightness = _clampJs.clamp(1 - y / pickerSize.height, 0, 1);
            onChange({
                hue,
                saturation,
                brightness,
                alpha
            });
        };
        this.handlePickerDrag = (event)=>{
            // prevents external elements from being selected
            event.preventDefault();
        };
    }
    componentDidMount() {
        const { colorNode  } = this;
        if (colorNode == null) return;
        this.setState({
            pickerSize: {
                width: colorNode.clientWidth,
                height: colorNode.clientHeight
            }
        });
        setTimeout(()=>{
            this.setState({
                pickerSize: {
                    width: colorNode.clientWidth,
                    height: colorNode.clientHeight
                }
            });
        }, 0);
    }
    render() {
        const { id , color , allowAlpha , fullWidth  } = this.props;
        const { hue , saturation , brightness , alpha: providedAlpha  } = color;
        const { pickerSize  } = this.state;
        const alpha = providedAlpha != null && allowAlpha ? providedAlpha : 1;
        const { red , green , blue  } = _colorTransformersJs.hsbToRgb({
            hue,
            saturation: 1,
            brightness: 1
        });
        const colorString = `rgba(${red}, ${green}, ${blue}, ${alpha})`;
        const draggerX = _clampJs.clamp(saturation * pickerSize.width, 0, pickerSize.width);
        const draggerY = _clampJs.clamp(pickerSize.height - brightness * pickerSize.height, 0, pickerSize.height);
        const alphaSliderMarkup = allowAlpha ? /*#__PURE__*/ _reactDefault.default.createElement(_alphaPickerJs.AlphaPicker, {
            alpha: alpha,
            color: color,
            onChange: this.handleAlphaChange
        }) : null;
        const className = _cssJs.classNames(_colorPickerScssJsDefault.default.ColorPicker, fullWidth && _colorPickerScssJsDefault.default.fullWidth);
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: className,
            id: id,
            onMouseDown: this.handlePickerDrag
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            ref: this.setColorNode,
            className: _colorPickerScssJsDefault.default.MainColor
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _colorPickerScssJsDefault.default.ColorLayer,
            style: {
                backgroundColor: colorString
            }
        }), /*#__PURE__*/ _reactDefault.default.createElement(_slidableJs.Slidable, {
            onChange: this.handleDraggerMove,
            draggerX: draggerX,
            draggerY: draggerY
        })), /*#__PURE__*/ _reactDefault.default.createElement(_huePickerJs.HuePicker, {
            hue: hue,
            onChange: this.handleHueChange
        }), alphaSliderMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            event: "resize",
            handler: this.handleResize
        })));
    }
}

},{"react":"6fep5","lodash/debounce":"a9ymG","../../utilities/clamp.js":"h5zK3","../../utilities/css.js":"kYdwV","../../utilities/color-transformers.js":"gFZ96","./ColorPicker.scss.js":"5qXXn","./components/AlphaPicker/AlphaPicker.js":"a30mc","./components/HuePicker/HuePicker.js":"8WWIX","./components/Slidable/Slidable.js":"7FKV3","../EventListener/EventListener.js":"gpcxo","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5qXXn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ColorPicker": "Polaris-ColorPicker",
    "MainColor": "Polaris-ColorPicker__MainColor",
    "fullWidth": "Polaris-ColorPicker--fullWidth",
    "Dragger": "Polaris-ColorPicker__Dragger",
    "ColorLayer": "Polaris-ColorPicker__ColorLayer",
    "HuePicker": "Polaris-ColorPicker__HuePicker",
    "AlphaPicker": "Polaris-ColorPicker__AlphaPicker",
    "Slidable": "Polaris-ColorPicker__Slidable"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"a30mc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AlphaPicker", ()=>AlphaPicker
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _colorTransformersJs = require("../../../../utilities/color-transformers.js");
var _colorPickerScssJs = require("../../ColorPicker.scss.js");
var _colorPickerScssJsDefault = parcelHelpers.interopDefault(_colorPickerScssJs);
var _utilitiesJs = require("./utilities.js");
var _slidableJs = require("../Slidable/Slidable.js");
class AlphaPicker extends _react.PureComponent {
    constructor(...args){
        super(...args);
        this.state = {
            sliderHeight: 0,
            draggerHeight: 0
        };
        this.setSliderHeight = (node)=>{
            if (node == null) return;
            this.setState({
                sliderHeight: node.clientHeight
            });
            setTimeout(()=>{
                this.setState({
                    sliderHeight: node.clientHeight
                });
            }, 0);
        };
        this.setDraggerHeight = (height)=>{
            this.setState({
                draggerHeight: height
            });
        };
        this.handleChange = ({ y  })=>{
            const { onChange  } = this.props;
            const { sliderHeight  } = this.state;
            const alpha = _utilitiesJs.alphaForDraggerY(y, sliderHeight);
            onChange(alpha);
        };
    }
    render() {
        const { color , alpha  } = this.props;
        const { sliderHeight , draggerHeight  } = this.state;
        const draggerY = _utilitiesJs.calculateDraggerY(alpha, sliderHeight, draggerHeight);
        const background = alphaGradientForColor(color);
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _colorPickerScssJsDefault.default.AlphaPicker,
            ref: this.setSliderHeight
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _colorPickerScssJsDefault.default.ColorLayer,
            style: {
                background
            }
        }), /*#__PURE__*/ _reactDefault.default.createElement(_slidableJs.Slidable, {
            draggerY: draggerY,
            draggerX: 0,
            onChange: this.handleChange,
            onDraggerHeight: this.setDraggerHeight
        })));
    }
}
function alphaGradientForColor(color) {
    const { red , green , blue  } = _colorTransformersJs.hsbToRgb(color);
    const rgb = `${red}, ${green}, ${blue}`;
    return `linear-gradient(to top, rgba(${rgb}, 0) 18px, rgba(${rgb}, 1) calc(100% - 18px))`;
}

},{"react":"6fep5","../../../../utilities/color-transformers.js":"gFZ96","../../ColorPicker.scss.js":"5qXXn","./utilities.js":"c8ltm","../Slidable/Slidable.js":"7FKV3","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"c8ltm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "alphaForDraggerY", ()=>alphaForDraggerY
);
parcelHelpers.export(exports, "alphaForOffset", ()=>alphaForOffset
);
parcelHelpers.export(exports, "calculateDraggerY", ()=>calculateDraggerY
);
var _clampJs = require("../../../../utilities/clamp.js");
const VERTICAL_PADDING = 13;
function calculateDraggerY(alpha, sliderHeight, draggerHeight) {
    const offset = offsetForAlpha(alpha, sliderHeight, draggerHeight);
    return _clampJs.clamp(offset, 0, sliderHeight);
}
function alphaForDraggerY(y, sliderHeight) {
    const offsetY = _clampJs.clamp(y, 0, sliderHeight);
    return alphaForOffset(offsetY, sliderHeight);
}
function alphaForOffset(offset, sliderHeight) {
    const selectionHeight = offset - VERTICAL_PADDING;
    const slidableArea = sliderHeight - VERTICAL_PADDING * 2;
    return _clampJs.clamp(1 - selectionHeight / slidableArea, 0, 1);
}
function offsetForAlpha(alpha, sliderHeight, draggerHeight) {
    const slidableArea = sliderHeight - (draggerHeight + VERTICAL_PADDING);
    return _clampJs.clamp((1 - alpha) * slidableArea + VERTICAL_PADDING, 0, sliderHeight - draggerHeight);
}

},{"../../../../utilities/clamp.js":"h5zK3","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7FKV3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Slidable", ()=>Slidable
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _targetJs = require("../../../../utilities/target.js");
var _colorPickerScssJs = require("../../ColorPicker.scss.js");
var _colorPickerScssJsDefault = parcelHelpers.interopDefault(_colorPickerScssJs);
var _eventListenerJs = require("../../../EventListener/EventListener.js");
let isDragging = false; // Required to solve a bug causing the underlying page/container to scroll
// while trying to drag the ColorPicker controls.
// This must be called as soon as possible to properly prevent the event.
// `passive: false` must also be set, as it seems webkit has changed the "default" behaviour
// https://bugs.webkit.org/show_bug.cgi?id=182521
if (!_targetJs.isServer) window.addEventListener('touchmove', (event)=>{
    if (!isDragging) return;
    event.preventDefault();
}, {
    passive: false
});
class Slidable extends _react.PureComponent {
    constructor(...args){
        super(...args);
        this.state = {
            dragging: false
        };
        this.node = null;
        this.draggerNode = null;
        this.setDraggerNode = (node)=>{
            this.draggerNode = node;
        };
        this.setNode = (node)=>{
            this.node = node;
        };
        this.startDrag = (event)=>{
            if (isMouseDownEvent(event)) this.handleDraggerMove(event.clientX, event.clientY);
            isDragging = true;
            this.setState({
                dragging: true
            });
        };
        this.handleDragEnd = ()=>{
            isDragging = false;
            this.setState({
                dragging: false
            });
        };
        this.handleMove = (event)=>{
            event.stopImmediatePropagation();
            event.stopPropagation();
            if (event.cancelable) event.preventDefault();
            if (isMouseMoveEvent(event)) {
                this.handleDraggerMove(event.clientX, event.clientY);
                return;
            }
            this.handleDraggerMove(event.touches[0].clientX, event.touches[0].clientY);
        };
        this.handleDraggerMove = (x, y)=>{
            if (this.node == null) return;
            const { onChange  } = this.props;
            const rect = this.node.getBoundingClientRect();
            const offsetX = x - rect.left;
            const offsetY = y - rect.top;
            onChange({
                x: offsetX,
                y: offsetY
            });
        };
    }
    componentDidMount() {
        const { onDraggerHeight  } = this.props;
        if (onDraggerHeight == null) return;
        const { draggerNode  } = this;
        if (draggerNode == null) return;
        onDraggerHeight(draggerNode.clientWidth);
        setTimeout(()=>{
            onDraggerHeight(draggerNode.clientWidth);
        }, 0);
    }
    render() {
        const { dragging  } = this.state;
        const { draggerX =0 , draggerY =0  } = this.props;
        const draggerPositioning = {
            transform: `translate3d(${draggerX}px, ${draggerY}px, 0)`
        };
        const moveListener = dragging ? /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            event: "mousemove",
            handler: this.handleMove,
            passive: false
        }) : null;
        const touchMoveListener = dragging ? /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            event: "touchmove",
            handler: this.handleMove,
            passive: false
        }) : null;
        const endDragListener = dragging ? /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            event: "mouseup",
            handler: this.handleDragEnd
        }) : null;
        const touchEndListener = dragging ? /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            event: "touchend",
            handler: this.handleDragEnd
        }) : null;
        const touchCancelListener = dragging ? /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            event: "touchcancel",
            handler: this.handleDragEnd
        }) : null;
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            ref: this.setNode,
            className: _colorPickerScssJsDefault.default.Slidable,
            onMouseDown: this.startDrag,
            onTouchStart: this.startDrag
        }, endDragListener, moveListener, touchMoveListener, touchEndListener, touchCancelListener, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            style: draggerPositioning,
            className: _colorPickerScssJsDefault.default.Dragger,
            ref: this.setDraggerNode
        })));
    }
}
function isMouseMoveEvent(event) {
    return event.type === 'mousemove';
}
function isMouseDownEvent(event) {
    return event.type === 'mousedown';
}

},{"react":"6fep5","../../../../utilities/target.js":"gqfy9","../../ColorPicker.scss.js":"5qXXn","../../../EventListener/EventListener.js":"gpcxo","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8WWIX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HuePicker", ()=>HuePicker
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _colorPickerScssJs = require("../../ColorPicker.scss.js");
var _colorPickerScssJsDefault = parcelHelpers.interopDefault(_colorPickerScssJs);
var _utilitiesJs = require("./utilities.js");
var _slidableJs = require("../Slidable/Slidable.js");
class HuePicker extends _react.PureComponent {
    constructor(...args){
        super(...args);
        this.state = {
            sliderHeight: 0,
            draggerHeight: 0
        };
        this.setSliderHeight = (node)=>{
            if (node == null) return;
            this.setState({
                sliderHeight: node.clientHeight
            });
            setTimeout(()=>{
                this.setState({
                    sliderHeight: node.clientHeight
                });
            }, 0);
        };
        this.setDraggerHeight = (height)=>{
            this.setState({
                draggerHeight: height
            });
        };
        this.handleChange = ({ y  })=>{
            const { onChange  } = this.props;
            const { sliderHeight  } = this.state;
            const hue = _utilitiesJs.hueForDraggerY(y, sliderHeight);
            onChange(hue);
        };
    }
    render() {
        const { hue  } = this.props;
        const { sliderHeight , draggerHeight  } = this.state;
        const draggerY = _utilitiesJs.calculateDraggerY(hue, sliderHeight, draggerHeight);
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _colorPickerScssJsDefault.default.HuePicker,
            ref: this.setSliderHeight
        }, /*#__PURE__*/ _reactDefault.default.createElement(_slidableJs.Slidable, {
            draggerY: draggerY,
            draggerX: 0,
            onChange: this.handleChange,
            onDraggerHeight: this.setDraggerHeight
        })));
    }
}

},{"react":"6fep5","../../ColorPicker.scss.js":"5qXXn","./utilities.js":"amvKW","../Slidable/Slidable.js":"7FKV3","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"amvKW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "calculateDraggerY", ()=>calculateDraggerY
);
parcelHelpers.export(exports, "hueForDraggerY", ()=>hueForDraggerY
);
var _clampJs = require("../../../../utilities/clamp.js");
const VERTICAL_PADDING = 13;
function calculateDraggerY(hue, sliderHeight, draggerHeight) {
    const offset = offsetForHue(hue, sliderHeight, draggerHeight);
    return _clampJs.clamp(offset, 0, sliderHeight);
}
function hueForDraggerY(y, sliderHeight) {
    const offsetY = _clampJs.clamp(y, 0, sliderHeight);
    return hueForOffset(offsetY, sliderHeight);
}
function hueForOffset(offset, sliderHeight) {
    const selectionHeight = offset - VERTICAL_PADDING;
    const slidableArea = sliderHeight - VERTICAL_PADDING * 2;
    return _clampJs.clamp(selectionHeight / slidableArea * 360, 0, 360);
}
function offsetForHue(hue, sliderHeight, draggerHeight) {
    const slidableArea = sliderHeight - (draggerHeight + VERTICAL_PADDING);
    return _clampJs.clamp(hue / 360 * slidableArea + VERTICAL_PADDING, 0, sliderHeight - draggerHeight);
}

},{"../../../../utilities/clamp.js":"h5zK3","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3p2VZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ContextualSaveBar", ()=>ContextualSaveBar
);
var _react = require("react");
var _hooksJs = require("../../utilities/frame/hooks.js");
// that the interface defining the props is defined in this file, not imported
// from elsewhere. This silly workaround ensures that the Props Explorer table
// is generated correctly.
const ContextualSaveBar = /*#__PURE__*/ _react.memo(function ContextualSaveBar({ message , saveAction , discardAction , alignContentFlush , fullWidth , contextControl  }) {
    const { setContextualSaveBar , removeContextualSaveBar  } = _hooksJs.useFrame();
    _react.useEffect(()=>{
        setContextualSaveBar({
            message,
            saveAction,
            discardAction,
            alignContentFlush,
            fullWidth,
            contextControl
        });
    }, [
        message,
        saveAction,
        discardAction,
        alignContentFlush,
        setContextualSaveBar,
        fullWidth,
        contextControl
    ]);
    _react.useEffect(()=>{
        return removeContextualSaveBar;
    }, [
        removeContextualSaveBar
    ]);
    return null;
});

},{"react":"6fep5","../../utilities/frame/hooks.js":"cCO5z","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cCO5z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useFrame", ()=>useFrame
);
var _react = require("react");
var _contextJs = require("./context.js");
function useFrame() {
    const frame = _react.useContext(_contextJs.FrameContext);
    if (!frame) throw new Error('No Frame context was provided. Your component must be wrapped in a <Frame> component. See https://polaris.shopify.com/components/structure/frame for implementation instructions.');
    return frame;
}

},{"react":"6fep5","./context.js":"8EZEA","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8EZEA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FrameContext", ()=>FrameContext
);
var _react = require("react");
const FrameContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fw6F1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DataTable", ()=>DataTable
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _isEqual = require("lodash/isEqual");
var _isEqualDefault = parcelHelpers.interopDefault(_isEqual);
var _cssJs = require("../../utilities/css.js");
var _sharedJs = require("../shared.js");
var _utilitiesJs = require("./utilities.js");
var _dataTableScssJs = require("./DataTable.scss.js");
var _dataTableScssJsDefault = parcelHelpers.interopDefault(_dataTableScssJs);
var _cellJs = require("./components/Cell/Cell.js");
var _navigationJs = require("./components/Navigation/Navigation.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _eventListenerJs = require("../EventListener/EventListener.js");
class DataTableInner extends _react.PureComponent {
    constructor(...args){
        super(...args);
        this.state = {
            condensed: false,
            columnVisibilityData: [],
            isScrolledFarthestLeft: true,
            isScrolledFarthestRight: false
        };
        this.dataTable = /*#__PURE__*/ _react.createRef();
        this.scrollContainer = /*#__PURE__*/ _react.createRef();
        this.table = /*#__PURE__*/ _react.createRef();
        this.handleResize = _debounceDefault.default(()=>{
            const { table: { current: table  } , scrollContainer: { current: scrollContainer  }  } = this;
            let condensed = false;
            if (table && scrollContainer) condensed = table.scrollWidth > scrollContainer.clientWidth;
            this.setState({
                condensed,
                ...this.calculateColumnVisibilityData(condensed)
            });
        });
        this.calculateColumnVisibilityData = (condensed)=>{
            const { table: { current: table  } , scrollContainer: { current: scrollContainer  } , dataTable: { current: dataTable  }  } = this;
            if (condensed && table && scrollContainer && dataTable) {
                const headerCells = table.querySelectorAll(_sharedJs.headerCell.selector);
                if (headerCells.length > 0) {
                    const firstVisibleColumnIndex = headerCells.length - 1;
                    const tableLeftVisibleEdge = scrollContainer.scrollLeft;
                    const tableRightVisibleEdge = scrollContainer.scrollLeft + dataTable.offsetWidth;
                    const tableData = {
                        firstVisibleColumnIndex,
                        tableLeftVisibleEdge,
                        tableRightVisibleEdge
                    };
                    const columnVisibilityData = [
                        ...headerCells
                    ].map(_utilitiesJs.measureColumn(tableData));
                    const lastColumn = columnVisibilityData[columnVisibilityData.length - 1];
                    return {
                        columnVisibilityData,
                        ..._utilitiesJs.getPrevAndCurrentColumns(tableData, columnVisibilityData),
                        isScrolledFarthestLeft: tableLeftVisibleEdge === 0,
                        isScrolledFarthestRight: lastColumn.rightEdge <= tableRightVisibleEdge
                    };
                }
            }
            return {
                columnVisibilityData: [],
                previousColumn: undefined,
                currentColumn: undefined
            };
        };
        this.scrollListener = ()=>{
            this.setState((prevState)=>({
                    ...this.calculateColumnVisibilityData(prevState.condensed)
                })
            );
        };
        this.navigateTable = (direction)=>{
            const { currentColumn , previousColumn  } = this.state;
            const { current: scrollContainer  } = this.scrollContainer;
            const handleScroll = ()=>{
                if (!currentColumn || !previousColumn) return;
                if (scrollContainer) {
                    scrollContainer.scrollLeft = direction === 'right' ? currentColumn.rightEdge : previousColumn.leftEdge;
                    requestAnimationFrame(()=>{
                        this.setState((prevState)=>({
                                ...this.calculateColumnVisibilityData(prevState.condensed)
                            })
                        );
                    });
                }
            };
            return handleScroll;
        };
        this.renderHeadings = (heading, headingIndex)=>{
            const { sortable , truncate =false , columnContentTypes , defaultSortDirection , initialSortColumnIndex =0 , verticalAlign  } = this.props;
            const { sortDirection =defaultSortDirection , sortedColumnIndex =initialSortColumnIndex  } = this.state;
            let sortableHeadingProps;
            const id = `heading-cell-${headingIndex}`;
            if (sortable) {
                const isSortable = sortable[headingIndex];
                const isSorted = isSortable && sortedColumnIndex === headingIndex;
                const direction = isSorted ? sortDirection : 'none';
                sortableHeadingProps = {
                    defaultSortDirection,
                    sorted: isSorted,
                    sortable: isSortable,
                    sortDirection: direction,
                    onSort: this.defaultOnSort(headingIndex)
                };
            }
            return(/*#__PURE__*/ _reactDefault.default.createElement(_cellJs.Cell, Object.assign({
                header: true,
                key: id,
                content: heading,
                contentType: columnContentTypes[headingIndex],
                firstColumn: headingIndex === 0,
                truncate: truncate
            }, sortableHeadingProps, {
                verticalAlign: verticalAlign
            })));
        };
        this.totalsRowHeading = ()=>{
            const { i18n , totals , totalsName  } = this.props;
            const totalsLabel = totalsName ? totalsName : {
                singular: i18n.translate('Polaris.DataTable.totalRowHeading'),
                plural: i18n.translate('Polaris.DataTable.totalsRowHeading')
            };
            return totals && totals.filter((total)=>total !== ''
            ).length > 1 ? totalsLabel.plural : totalsLabel.singular;
        };
        this.renderTotals = (total, index)=>{
            const id = `totals-cell-${index}`;
            const { truncate =false , verticalAlign  } = this.props;
            let content;
            let contentType;
            if (index === 0) content = this.totalsRowHeading();
            if (total !== '' && index > 0) {
                contentType = 'numeric';
                content = total;
            }
            const totalInFooter = this.props.showTotalsInFooter;
            return(/*#__PURE__*/ _reactDefault.default.createElement(_cellJs.Cell, {
                total: true,
                totalInFooter: totalInFooter,
                firstColumn: index === 0,
                key: id,
                content: content,
                contentType: contentType,
                truncate: truncate,
                verticalAlign: verticalAlign
            }));
        };
        this.getColSpan = (rowLength, headingsLength, contentTypesLength, cellIndex)=>{
            const rowLen = rowLength ? rowLength : 1;
            const colLen = headingsLength ? headingsLength : contentTypesLength;
            const colSpan = Math.floor(colLen / rowLen);
            const remainder = colLen % rowLen;
            return cellIndex === 0 ? colSpan + remainder : colSpan;
        };
        this.defaultRenderRow = (row, index)=>{
            const { columnContentTypes , truncate =false , verticalAlign , hoverable =true , headings  } = this.props;
            const className = _cssJs.classNames(_dataTableScssJsDefault.default.TableRow, hoverable && _dataTableScssJsDefault.default.hoverable);
            return(/*#__PURE__*/ _reactDefault.default.createElement("tr", {
                key: `row-${index}`,
                className: className
            }, row.map((content, cellIndex)=>{
                const id = `cell-${cellIndex}-row-${index}`;
                const colSpan = this.getColSpan(row.length, headings.length, columnContentTypes.length, cellIndex);
                return(/*#__PURE__*/ _reactDefault.default.createElement(_cellJs.Cell, {
                    key: id,
                    content: content,
                    contentType: columnContentTypes[cellIndex],
                    firstColumn: cellIndex === 0,
                    truncate: truncate,
                    verticalAlign: verticalAlign,
                    colSpan: colSpan
                }));
            })));
        };
        this.defaultOnSort = (headingIndex)=>{
            const { onSort , defaultSortDirection ='ascending' , initialSortColumnIndex  } = this.props;
            const { sortDirection =defaultSortDirection , sortedColumnIndex =initialSortColumnIndex  } = this.state;
            let newSortDirection = defaultSortDirection;
            if (sortedColumnIndex === headingIndex) newSortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';
            const handleSort = ()=>{
                this.setState({
                    sortDirection: newSortDirection,
                    sortedColumnIndex: headingIndex
                }, ()=>{
                    if (onSort) onSort(headingIndex, newSortDirection);
                });
            };
            return handleSort;
        };
    }
    componentDidMount() {
        setTimeout(()=>{
            this.handleResize();
        }, 10);
    }
    componentDidUpdate(prevProps) {
        if (_isEqualDefault.default(prevProps, this.props)) return;
        this.handleResize();
    }
    componentWillUnmount() {
        this.handleResize.cancel();
    }
    render() {
        const { headings , totals , showTotalsInFooter , rows , footerContent , hideScrollIndicator =false  } = this.props;
        const { condensed , columnVisibilityData , isScrolledFarthestLeft , isScrolledFarthestRight  } = this.state;
        const className = _cssJs.classNames(_dataTableScssJsDefault.default.DataTable, condensed && _dataTableScssJsDefault.default.condensed);
        const wrapperClassName = _cssJs.classNames(_dataTableScssJsDefault.default.TableWrapper, condensed && _dataTableScssJsDefault.default.condensed);
        const headingMarkup = /*#__PURE__*/ _reactDefault.default.createElement("tr", null, headings.map(this.renderHeadings));
        const totalsMarkup = totals ? /*#__PURE__*/ _reactDefault.default.createElement("tr", null, totals.map(this.renderTotals)) : null;
        const bodyMarkup = rows.map(this.defaultRenderRow);
        const footerMarkup = footerContent ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _dataTableScssJsDefault.default.Footer
        }, footerContent) : null;
        const headerTotalsMarkup = !showTotalsInFooter ? totalsMarkup : null;
        const footerTotalsMarkup = showTotalsInFooter ? /*#__PURE__*/ _reactDefault.default.createElement("tfoot", null, totalsMarkup) : null;
        const navigationMarkup = hideScrollIndicator ? null : /*#__PURE__*/ _reactDefault.default.createElement(_navigationJs.Navigation, {
            columnVisibilityData: columnVisibilityData,
            isScrolledFarthestLeft: isScrolledFarthestLeft,
            isScrolledFarthestRight: isScrolledFarthestRight,
            navigateTableLeft: this.navigateTable('left'),
            navigateTableRight: this.navigateTable('right')
        });
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: wrapperClassName
        }, navigationMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: className,
            ref: this.dataTable
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _dataTableScssJsDefault.default.ScrollContainer,
            ref: this.scrollContainer
        }, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            event: "resize",
            handler: this.handleResize
        }), /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            capture: true,
            event: "scroll",
            handler: this.scrollListener
        }), /*#__PURE__*/ _reactDefault.default.createElement("table", {
            className: _dataTableScssJsDefault.default.Table,
            ref: this.table
        }, /*#__PURE__*/ _reactDefault.default.createElement("thead", null, headingMarkup, headerTotalsMarkup), /*#__PURE__*/ _reactDefault.default.createElement("tbody", null, bodyMarkup), footerTotalsMarkup)), footerMarkup)));
    }
}
function DataTable(props) {
    const i18n = _hooksJs.useI18n();
    return(/*#__PURE__*/ _reactDefault.default.createElement(DataTableInner, Object.assign({
    }, props, {
        i18n: i18n
    })));
}

},{"react":"6fep5","lodash/debounce":"a9ymG","lodash/isEqual":"cFVc2","../../utilities/css.js":"kYdwV","../shared.js":"jYa7v","./utilities.js":"iOQqA","./DataTable.scss.js":"928qt","./components/Cell/Cell.js":"jlwN4","./components/Navigation/Navigation.js":"emruA","../../utilities/i18n/hooks.js":"hHpYD","../EventListener/EventListener.js":"gpcxo","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cFVc2":[function(require,module,exports) {
var baseIsEqual = require('./_baseIsEqual');
/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */ function isEqual(value, other) {
    return baseIsEqual(value, other);
}
module.exports = isEqual;

},{"./_baseIsEqual":"2rTS0"}],"2rTS0":[function(require,module,exports) {
var baseIsEqualDeep = require('./_baseIsEqualDeep'), isObjectLike = require('./isObjectLike');
/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */ function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) return true;
    if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) return value !== value && other !== other;
    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}
module.exports = baseIsEqual;

},{"./_baseIsEqualDeep":"gaixm","./isObjectLike":"9omfG"}],"gaixm":[function(require,module,exports) {
var Stack = require('./_Stack'), equalArrays = require('./_equalArrays'), equalByTag = require('./_equalByTag'), equalObjects = require('./_equalObjects'), getTag = require('./_getTag'), isArray = require('./isArray'), isBuffer = require('./isBuffer'), isTypedArray = require('./isTypedArray');
/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1;
/** `Object#toString` result references. */ var argsTag = '[object Arguments]', arrayTag = '[object Array]', objectTag = '[object Object]';
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */ function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;
    var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
    if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) return false;
        objIsArr = true;
        objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'), othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
        if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack);
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
    }
    if (!isSameTag) return false;
    stack || (stack = new Stack);
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}
module.exports = baseIsEqualDeep;

},{"./_Stack":"la8ZT","./_equalArrays":"d9F23","./_equalByTag":"2ECti","./_equalObjects":"bB8JF","./_getTag":"dIqlF","./isArray":"2B9Zp","./isBuffer":"fcJGg","./isTypedArray":"hMSCQ"}],"la8ZT":[function(require,module,exports) {
var ListCache = require('./_ListCache'), stackClear = require('./_stackClear'), stackDelete = require('./_stackDelete'), stackGet = require('./_stackGet'), stackHas = require('./_stackHas'), stackSet = require('./_stackSet');
/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function Stack(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
}
// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;
module.exports = Stack;

},{"./_ListCache":"46OOa","./_stackClear":"dRqSS","./_stackDelete":"ctbYw","./_stackGet":"kgjym","./_stackHas":"LmytA","./_stackSet":"eHJiL"}],"46OOa":[function(require,module,exports) {
var listCacheClear = require('./_listCacheClear'), listCacheDelete = require('./_listCacheDelete'), listCacheGet = require('./_listCacheGet'), listCacheHas = require('./_listCacheHas'), listCacheSet = require('./_listCacheSet');
/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function ListCache(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while(++index < length){
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}
// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;
module.exports = ListCache;

},{"./_listCacheClear":"f7f2x","./_listCacheDelete":"kxAKW","./_listCacheGet":"cD3x4","./_listCacheHas":"wHmrV","./_listCacheSet":"faVyj"}],"f7f2x":[function(require,module,exports) {
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */ function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
}
module.exports = listCacheClear;

},{}],"kxAKW":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');
/** Used for built-in method references. */ var arrayProto = Array.prototype;
/** Built-in value references. */ var splice = arrayProto.splice;
/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function listCacheDelete(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) return false;
    var lastIndex = data.length - 1;
    if (index == lastIndex) data.pop();
    else splice.call(data, index, 1);
    --this.size;
    return true;
}
module.exports = listCacheDelete;

},{"./_assocIndexOf":"h2ymH"}],"h2ymH":[function(require,module,exports) {
var eq = require('./eq');
/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */ function assocIndexOf(array, key) {
    var length = array.length;
    while(length--){
        if (eq(array[length][0], key)) return length;
    }
    return -1;
}
module.exports = assocIndexOf;

},{"./eq":"2bf25"}],"2bf25":[function(require,module,exports) {
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */ function eq(value, other) {
    return value === other || value !== value && other !== other;
}
module.exports = eq;

},{}],"cD3x4":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');
/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function listCacheGet(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
}
module.exports = listCacheGet;

},{"./_assocIndexOf":"h2ymH"}],"wHmrV":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');
/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
}
module.exports = listCacheHas;

},{"./_assocIndexOf":"h2ymH"}],"faVyj":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');
/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */ function listCacheSet(key, value) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
        ++this.size;
        data.push([
            key,
            value
        ]);
    } else data[index][1] = value;
    return this;
}
module.exports = listCacheSet;

},{"./_assocIndexOf":"h2ymH"}],"dRqSS":[function(require,module,exports) {
var ListCache = require('./_ListCache');
/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */ function stackClear() {
    this.__data__ = new ListCache;
    this.size = 0;
}
module.exports = stackClear;

},{"./_ListCache":"46OOa"}],"ctbYw":[function(require,module,exports) {
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function stackDelete(key) {
    var data = this.__data__, result = data['delete'](key);
    this.size = data.size;
    return result;
}
module.exports = stackDelete;

},{}],"kgjym":[function(require,module,exports) {
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function stackGet(key) {
    return this.__data__.get(key);
}
module.exports = stackGet;

},{}],"LmytA":[function(require,module,exports) {
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function stackHas(key) {
    return this.__data__.has(key);
}
module.exports = stackHas;

},{}],"eHJiL":[function(require,module,exports) {
var ListCache = require('./_ListCache'), Map = require('./_Map'), MapCache = require('./_MapCache');
/** Used as the size to enable large array optimizations. */ var LARGE_ARRAY_SIZE = 200;
/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */ function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
            pairs.push([
                key,
                value
            ]);
            this.size = ++data.size;
            return this;
        }
        data = this.__data__ = new MapCache(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
}
module.exports = stackSet;

},{"./_ListCache":"46OOa","./_Map":"iirCF","./_MapCache":"4nQxi"}],"iirCF":[function(require,module,exports) {
var getNative = require('./_getNative'), root = require('./_root');
/* Built-in method references that are verified to be native. */ var Map = getNative(root, 'Map');
module.exports = Map;

},{"./_getNative":"3j4Js","./_root":"ideFj"}],"3j4Js":[function(require,module,exports) {
var baseIsNative = require('./_baseIsNative'), getValue = require('./_getValue');
/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */ function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
}
module.exports = getNative;

},{"./_baseIsNative":"gLaRz","./_getValue":"6QZo5"}],"gLaRz":[function(require,module,exports) {
var isFunction = require('./isFunction'), isMasked = require('./_isMasked'), isObject = require('./isObject'), toSource = require('./_toSource');
/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */ var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
/** Used to detect host constructors (Safari). */ var reIsHostCtor = /^\[object .+?Constructor\]$/;
/** Used for built-in method references. */ var funcProto = Function.prototype, objectProto = Object.prototype;
/** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/** Used to detect if a method is native. */ var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */ function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) return false;
    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
}
module.exports = baseIsNative;

},{"./isFunction":"bRq33","./_isMasked":"Ceqcd","./isObject":"3uAyC","./_toSource":"i7Rrf"}],"bRq33":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'), isObject = require('./isObject');
/** `Object#toString` result references. */ var asyncTag = '[object AsyncFunction]', funcTag = '[object Function]', genTag = '[object GeneratorFunction]', proxyTag = '[object Proxy]';
/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */ function isFunction(value) {
    if (!isObject(value)) return false;
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 9 which returns 'object' for typed arrays and other constructors.
    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
module.exports = isFunction;

},{"./_baseGetTag":"h1yAb","./isObject":"3uAyC"}],"Ceqcd":[function(require,module,exports) {
var coreJsData = require('./_coreJsData');
/** Used to detect methods masquerading as native. */ var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? 'Symbol(src)_1.' + uid : '';
}();
/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */ function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
}
module.exports = isMasked;

},{"./_coreJsData":"ksOR7"}],"ksOR7":[function(require,module,exports) {
var root = require('./_root');
/** Used to detect overreaching core-js shims. */ var coreJsData = root['__core-js_shared__'];
module.exports = coreJsData;

},{"./_root":"ideFj"}],"i7Rrf":[function(require,module,exports) {
/** Used for built-in method references. */ var funcProto = Function.prototype;
/** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;
/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */ function toSource(func) {
    if (func != null) {
        try {
            return funcToString.call(func);
        } catch (e) {
        }
        try {
            return func + '';
        } catch (e1) {
        }
    }
    return '';
}
module.exports = toSource;

},{}],"6QZo5":[function(require,module,exports) {
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */ function getValue(object, key) {
    return object == null ? undefined : object[key];
}
module.exports = getValue;

},{}],"4nQxi":[function(require,module,exports) {
var mapCacheClear = require('./_mapCacheClear'), mapCacheDelete = require('./_mapCacheDelete'), mapCacheGet = require('./_mapCacheGet'), mapCacheHas = require('./_mapCacheHas'), mapCacheSet = require('./_mapCacheSet');
/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function MapCache(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while(++index < length){
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}
// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;
module.exports = MapCache;

},{"./_mapCacheClear":"nJK1N","./_mapCacheDelete":"l7Mkc","./_mapCacheGet":"kIIdH","./_mapCacheHas":"7EGgP","./_mapCacheSet":"7Buz1"}],"nJK1N":[function(require,module,exports) {
var Hash = require('./_Hash'), ListCache = require('./_ListCache'), Map = require('./_Map');
/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */ function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
    };
}
module.exports = mapCacheClear;

},{"./_Hash":"hobaM","./_ListCache":"46OOa","./_Map":"iirCF"}],"hobaM":[function(require,module,exports) {
var hashClear = require('./_hashClear'), hashDelete = require('./_hashDelete'), hashGet = require('./_hashGet'), hashHas = require('./_hashHas'), hashSet = require('./_hashSet');
/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */ function Hash(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while(++index < length){
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}
// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;
module.exports = Hash;

},{"./_hashClear":"7Vxna","./_hashDelete":"52RHr","./_hashGet":"KXMSB","./_hashHas":"ePiJ6","./_hashSet":"kwi9f"}],"7Vxna":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');
/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */ function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {
    };
    this.size = 0;
}
module.exports = hashClear;

},{"./_nativeCreate":"irkkU"}],"irkkU":[function(require,module,exports) {
var getNative = require('./_getNative');
/* Built-in method references that are verified to be native. */ var nativeCreate = getNative(Object, 'create');
module.exports = nativeCreate;

},{"./_getNative":"3j4Js"}],"52RHr":[function(require,module,exports) {
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
}
module.exports = hashDelete;

},{}],"KXMSB":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');
/** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = '__lodash_hash_undefined__';
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
}
module.exports = hashGet;

},{"./_nativeCreate":"irkkU"}],"ePiJ6":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}
module.exports = hashHas;

},{"./_nativeCreate":"irkkU"}],"kwi9f":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');
/** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = '__lodash_hash_undefined__';
/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */ function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
    return this;
}
module.exports = hashSet;

},{"./_nativeCreate":"irkkU"}],"l7Mkc":[function(require,module,exports) {
var getMapData = require('./_getMapData');
/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */ function mapCacheDelete(key) {
    var result = getMapData(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
}
module.exports = mapCacheDelete;

},{"./_getMapData":"g3ZLN"}],"g3ZLN":[function(require,module,exports) {
var isKeyable = require('./_isKeyable');
/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */ function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
}
module.exports = getMapData;

},{"./_isKeyable":"bCj9G"}],"bCj9G":[function(require,module,exports) {
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */ function isKeyable(value) {
    var type = typeof value;
    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
}
module.exports = isKeyable;

},{}],"kIIdH":[function(require,module,exports) {
var getMapData = require('./_getMapData');
/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */ function mapCacheGet(key) {
    return getMapData(this, key).get(key);
}
module.exports = mapCacheGet;

},{"./_getMapData":"g3ZLN"}],"7EGgP":[function(require,module,exports) {
var getMapData = require('./_getMapData');
/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function mapCacheHas(key) {
    return getMapData(this, key).has(key);
}
module.exports = mapCacheHas;

},{"./_getMapData":"g3ZLN"}],"7Buz1":[function(require,module,exports) {
var getMapData = require('./_getMapData');
/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */ function mapCacheSet(key, value) {
    var data = getMapData(this, key), size = data.size;
    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
}
module.exports = mapCacheSet;

},{"./_getMapData":"g3ZLN"}],"d9F23":[function(require,module,exports) {
var SetCache = require('./_SetCache'), arraySome = require('./_arraySome'), cacheHas = require('./_cacheHas');
/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */ function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
    if (arrLength != othLength && !(isPartial && othLength > arrLength)) return false;
    // Check that cyclic values are equal.
    var arrStacked = stack.get(array);
    var othStacked = stack.get(other);
    if (arrStacked && othStacked) return arrStacked == other && othStacked == array;
    var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache : undefined;
    stack.set(array, other);
    stack.set(other, array);
    // Ignore non-index properties.
    while(++index < arrLength){
        var arrValue = array[index], othValue1 = other[index];
        if (customizer) var compared = isPartial ? customizer(othValue1, arrValue, index, other, array, stack) : customizer(arrValue, othValue1, index, array, other, stack);
        if (compared !== undefined) {
            if (compared) continue;
            result = false;
            break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
            if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) return seen.push(othIndex);
            })) {
                result = false;
                break;
            }
        } else if (!(arrValue === othValue1 || equalFunc(arrValue, othValue1, bitmask, customizer, stack))) {
            result = false;
            break;
        }
    }
    stack['delete'](array);
    stack['delete'](other);
    return result;
}
module.exports = equalArrays;

},{"./_SetCache":"43NYs","./_arraySome":"2Kx9m","./_cacheHas":"gW9uK"}],"43NYs":[function(require,module,exports) {
var MapCache = require('./_MapCache'), setCacheAdd = require('./_setCacheAdd'), setCacheHas = require('./_setCacheHas');
/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */ function SetCache(values) {
    var index = -1, length = values == null ? 0 : values.length;
    this.__data__ = new MapCache;
    while(++index < length)this.add(values[index]);
}
// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;
module.exports = SetCache;

},{"./_MapCache":"4nQxi","./_setCacheAdd":"8DSo2","./_setCacheHas":"3teWW"}],"8DSo2":[function(require,module,exports) {
/** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = '__lodash_hash_undefined__';
/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */ function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
}
module.exports = setCacheAdd;

},{}],"3teWW":[function(require,module,exports) {
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */ function setCacheHas(value) {
    return this.__data__.has(value);
}
module.exports = setCacheHas;

},{}],"2Kx9m":[function(require,module,exports) {
/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */ function arraySome(array, predicate) {
    var index = -1, length = array == null ? 0 : array.length;
    while(++index < length){
        if (predicate(array[index], index, array)) return true;
    }
    return false;
}
module.exports = arraySome;

},{}],"gW9uK":[function(require,module,exports) {
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */ function cacheHas(cache, key) {
    return cache.has(key);
}
module.exports = cacheHas;

},{}],"2ECti":[function(require,module,exports) {
var Symbol = require('./_Symbol'), Uint8Array = require('./_Uint8Array'), eq = require('./eq'), equalArrays = require('./_equalArrays'), mapToArray = require('./_mapToArray'), setToArray = require('./_setToArray');
/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
/** `Object#toString` result references. */ var boolTag = '[object Boolean]', dateTag = '[object Date]', errorTag = '[object Error]', mapTag = '[object Map]', numberTag = '[object Number]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', symbolTag = '[object Symbol]';
var arrayBufferTag = '[object ArrayBuffer]', dataViewTag = '[object DataView]';
/** Used to convert symbols to primitives and strings. */ var symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */ function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch(tag){
        case dataViewTag:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) return false;
            object = object.buffer;
            other = other.buffer;
        case arrayBufferTag:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) return false;
            return true;
        case boolTag:
        case dateTag:
        case numberTag:
            // Coerce booleans to `1` or `0` and dates to milliseconds.
            // Invalid dates are coerced to `NaN`.
            return eq(+object, +other);
        case errorTag:
            return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
            // Coerce regexes to strings and treat strings, primitives and objects,
            // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
            // for more details.
            return object == other + '';
        case mapTag:
            var convert = mapToArray;
        case setTag:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
            convert || (convert = setToArray);
            if (object.size != other.size && !isPartial) return false;
            // Assume cyclic values are equal.
            var stacked = stack.get(object);
            if (stacked) return stacked == other;
            bitmask |= COMPARE_UNORDERED_FLAG;
            // Recursively compare objects (susceptible to call stack limits).
            stack.set(object, other);
            var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack['delete'](object);
            return result;
        case symbolTag:
            if (symbolValueOf) return symbolValueOf.call(object) == symbolValueOf.call(other);
    }
    return false;
}
module.exports = equalByTag;

},{"./_Symbol":"73arO","./_Uint8Array":"a3GVt","./eq":"2bf25","./_equalArrays":"d9F23","./_mapToArray":"7Gvpr","./_setToArray":"09mT8"}],"a3GVt":[function(require,module,exports) {
var root = require('./_root');
/** Built-in value references. */ var Uint8Array = root.Uint8Array;
module.exports = Uint8Array;

},{"./_root":"ideFj"}],"7Gvpr":[function(require,module,exports) {
/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */ function mapToArray(map) {
    var index = -1, result = Array(map.size);
    map.forEach(function(value, key) {
        result[++index] = [
            key,
            value
        ];
    });
    return result;
}
module.exports = mapToArray;

},{}],"09mT8":[function(require,module,exports) {
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */ function setToArray(set) {
    var index = -1, result = Array(set.size);
    set.forEach(function(value) {
        result[++index] = value;
    });
    return result;
}
module.exports = setToArray;

},{}],"bB8JF":[function(require,module,exports) {
var getAllKeys = require('./_getAllKeys');
/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1;
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */ function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
    if (objLength != othLength && !isPartial) return false;
    var index = objLength;
    while(index--){
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) return false;
    }
    // Check that cyclic values are equal.
    var objStacked = stack.get(object);
    var othStacked = stack.get(other);
    if (objStacked && othStacked) return objStacked == other && othStacked == object;
    var result = true;
    stack.set(object, other);
    stack.set(other, object);
    var skipCtor = isPartial;
    while(++index < objLength){
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result = false;
            break;
        }
        skipCtor || (skipCtor = key == 'constructor');
    }
    if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) result = false;
    }
    stack['delete'](object);
    stack['delete'](other);
    return result;
}
module.exports = equalObjects;

},{"./_getAllKeys":"8toiV"}],"8toiV":[function(require,module,exports) {
var baseGetAllKeys = require('./_baseGetAllKeys'), getSymbols = require('./_getSymbols'), keys = require('./keys');
/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */ function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
}
module.exports = getAllKeys;

},{"./_baseGetAllKeys":"8s64D","./_getSymbols":"9aQsQ","./keys":"jS399"}],"8s64D":[function(require,module,exports) {
var arrayPush = require('./_arrayPush'), isArray = require('./isArray');
/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */ function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}
module.exports = baseGetAllKeys;

},{"./_arrayPush":"KbNHd","./isArray":"2B9Zp"}],"KbNHd":[function(require,module,exports) {
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */ function arrayPush(array, values) {
    var index = -1, length = values.length, offset = array.length;
    while(++index < length)array[offset + index] = values[index];
    return array;
}
module.exports = arrayPush;

},{}],"2B9Zp":[function(require,module,exports) {
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */ var isArray = Array.isArray;
module.exports = isArray;

},{}],"9aQsQ":[function(require,module,exports) {
var arrayFilter = require('./_arrayFilter'), stubArray = require('./stubArray');
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Built-in value references. */ var propertyIsEnumerable = objectProto.propertyIsEnumerable;
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeGetSymbols = Object.getOwnPropertySymbols;
/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */ var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
    if (object == null) return [];
    object = Object(object);
    return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
    });
};
module.exports = getSymbols;

},{"./_arrayFilter":"6ssFY","./stubArray":"4qWNQ"}],"6ssFY":[function(require,module,exports) {
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */ function arrayFilter(array, predicate) {
    var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
    while(++index < length){
        var value = array[index];
        if (predicate(value, index, array)) result[resIndex++] = value;
    }
    return result;
}
module.exports = arrayFilter;

},{}],"4qWNQ":[function(require,module,exports) {
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */ function stubArray() {
    return [];
}
module.exports = stubArray;

},{}],"jS399":[function(require,module,exports) {
var arrayLikeKeys = require('./_arrayLikeKeys'), baseKeys = require('./_baseKeys'), isArrayLike = require('./isArrayLike');
/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */ function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}
module.exports = keys;

},{"./_arrayLikeKeys":"hAytJ","./_baseKeys":"b4Qqg","./isArrayLike":"ld8H7"}],"hAytJ":[function(require,module,exports) {
var baseTimes = require('./_baseTimes'), isArguments = require('./isArguments'), isArray = require('./isArray'), isBuffer = require('./isBuffer'), isIndex = require('./_isIndex'), isTypedArray = require('./isTypedArray');
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */ function arrayLikeKeys(value, inherited) {
    var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
    for(var key in value)if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.
    isIndex(key, length)))) result.push(key);
    return result;
}
module.exports = arrayLikeKeys;

},{"./_baseTimes":"51ian","./isArguments":"i6lCF","./isArray":"2B9Zp","./isBuffer":"fcJGg","./_isIndex":"8irBy","./isTypedArray":"hMSCQ"}],"51ian":[function(require,module,exports) {
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */ function baseTimes(n, iteratee) {
    var index = -1, result = Array(n);
    while(++index < n)result[index] = iteratee(index);
    return result;
}
module.exports = baseTimes;

},{}],"i6lCF":[function(require,module,exports) {
var baseIsArguments = require('./_baseIsArguments'), isObjectLike = require('./isObjectLike');
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/** Built-in value references. */ var propertyIsEnumerable = objectProto.propertyIsEnumerable;
/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */ var isArguments = baseIsArguments(function() {
    return arguments;
}()) ? baseIsArguments : function(value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};
module.exports = isArguments;

},{"./_baseIsArguments":"g2oPl","./isObjectLike":"9omfG"}],"g2oPl":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'), isObjectLike = require('./isObjectLike');
/** `Object#toString` result references. */ var argsTag = '[object Arguments]';
/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */ function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
}
module.exports = baseIsArguments;

},{"./_baseGetTag":"h1yAb","./isObjectLike":"9omfG"}],"fcJGg":[function(require,module,exports) {
var root = require('./_root'), stubFalse = require('./stubFalse');
/** Detect free variable `exports`. */ var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
/** Detect free variable `module`. */ var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */ var moduleExports = freeModule && freeModule.exports === freeExports;
/** Built-in value references. */ var Buffer = moduleExports ? root.Buffer : undefined;
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */ var isBuffer = nativeIsBuffer || stubFalse;
module.exports = isBuffer;

},{"./_root":"ideFj","./stubFalse":"rLfPQ"}],"rLfPQ":[function(require,module,exports) {
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */ function stubFalse() {
    return false;
}
module.exports = stubFalse;

},{}],"8irBy":[function(require,module,exports) {
/** Used as references for various `Number` constants. */ var MAX_SAFE_INTEGER = 9007199254740991;
/** Used to detect unsigned integer values. */ var reIsUint = /^(?:0|[1-9]\d*)$/;
/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */ function isIndex(value, length) {
    var type = typeof value;
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}
module.exports = isIndex;

},{}],"hMSCQ":[function(require,module,exports) {
var baseIsTypedArray = require('./_baseIsTypedArray'), baseUnary = require('./_baseUnary'), nodeUtil = require('./_nodeUtil');
/* Node.js helper references. */ var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */ var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
module.exports = isTypedArray;

},{"./_baseIsTypedArray":"dNNaT","./_baseUnary":"gQtbe","./_nodeUtil":"logzE"}],"dNNaT":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'), isLength = require('./isLength'), isObjectLike = require('./isObjectLike');
/** `Object#toString` result references. */ var argsTag = '[object Arguments]', arrayTag = '[object Array]', boolTag = '[object Boolean]', dateTag = '[object Date]', errorTag = '[object Error]', funcTag = '[object Function]', mapTag = '[object Map]', numberTag = '[object Number]', objectTag = '[object Object]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', weakMapTag = '[object WeakMap]';
var arrayBufferTag = '[object ArrayBuffer]', dataViewTag = '[object DataView]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';
/** Used to identify `toStringTag` values of typed arrays. */ var typedArrayTags = {
};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */ function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}
module.exports = baseIsTypedArray;

},{"./_baseGetTag":"h1yAb","./isLength":"lPI8H","./isObjectLike":"9omfG"}],"lPI8H":[function(require,module,exports) {
/** Used as references for various `Number` constants. */ var MAX_SAFE_INTEGER = 9007199254740991;
/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */ function isLength(value) {
    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
module.exports = isLength;

},{}],"gQtbe":[function(require,module,exports) {
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */ function baseUnary(func) {
    return function(value) {
        return func(value);
    };
}
module.exports = baseUnary;

},{}],"logzE":[function(require,module,exports) {
var freeGlobal = require('./_freeGlobal');
/** Detect free variable `exports`. */ var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
/** Detect free variable `module`. */ var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */ var moduleExports = freeModule && freeModule.exports === freeExports;
/** Detect free variable `process` from Node.js. */ var freeProcess = moduleExports && freeGlobal.process;
/** Used to access faster Node.js helpers. */ var nodeUtil = function() {
    try {
        // Use `util.types` for Node.js 10+.
        var types = freeModule && freeModule.require && freeModule.require('util').types;
        if (types) return types;
        // Legacy `process.binding('util')` for Node.js < 10.
        return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {
    }
}();
module.exports = nodeUtil;

},{"./_freeGlobal":"azLCA"}],"b4Qqg":[function(require,module,exports) {
var isPrototype = require('./_isPrototype'), nativeKeys = require('./_nativeKeys');
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */ function baseKeys(object) {
    if (!isPrototype(object)) return nativeKeys(object);
    var result = [];
    for(var key in Object(object))if (hasOwnProperty.call(object, key) && key != 'constructor') result.push(key);
    return result;
}
module.exports = baseKeys;

},{"./_isPrototype":"lqDVC","./_nativeKeys":"gA51C"}],"lqDVC":[function(require,module,exports) {
/** Used for built-in method references. */ var objectProto = Object.prototype;
/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */ function isPrototype(value) {
    var Ctor = value && value.constructor, proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
    return value === proto;
}
module.exports = isPrototype;

},{}],"gA51C":[function(require,module,exports) {
var overArg = require('./_overArg');
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeKeys = overArg(Object.keys, Object);
module.exports = nativeKeys;

},{"./_overArg":"76l2f"}],"76l2f":[function(require,module,exports) {
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */ function overArg(func, transform) {
    return function(arg) {
        return func(transform(arg));
    };
}
module.exports = overArg;

},{}],"ld8H7":[function(require,module,exports) {
var isFunction = require('./isFunction'), isLength = require('./isLength');
/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */ function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
}
module.exports = isArrayLike;

},{"./isFunction":"bRq33","./isLength":"lPI8H"}],"dIqlF":[function(require,module,exports) {
var DataView = require('./_DataView'), Map = require('./_Map'), Promise = require('./_Promise'), Set = require('./_Set'), WeakMap = require('./_WeakMap'), baseGetTag = require('./_baseGetTag'), toSource = require('./_toSource');
/** `Object#toString` result references. */ var mapTag = '[object Map]', objectTag = '[object Object]', promiseTag = '[object Promise]', setTag = '[object Set]', weakMapTag = '[object WeakMap]';
var dataViewTag = '[object DataView]';
/** Used to detect maps, sets, and weakmaps. */ var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);
/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */ var getTag = baseGetTag;
// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set) != setTag || WeakMap && getTag(new WeakMap) != weakMapTag) getTag = function(value) {
    var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : '';
    if (ctorString) switch(ctorString){
        case dataViewCtorString:
            return dataViewTag;
        case mapCtorString:
            return mapTag;
        case promiseCtorString:
            return promiseTag;
        case setCtorString:
            return setTag;
        case weakMapCtorString:
            return weakMapTag;
    }
    return result;
};
module.exports = getTag;

},{"./_DataView":"bLrb7","./_Map":"iirCF","./_Promise":"kZwzJ","./_Set":"lBg3y","./_WeakMap":"9WKNU","./_baseGetTag":"h1yAb","./_toSource":"i7Rrf"}],"bLrb7":[function(require,module,exports) {
var getNative = require('./_getNative'), root = require('./_root');
/* Built-in method references that are verified to be native. */ var DataView = getNative(root, 'DataView');
module.exports = DataView;

},{"./_getNative":"3j4Js","./_root":"ideFj"}],"kZwzJ":[function(require,module,exports) {
var getNative = require('./_getNative'), root = require('./_root');
/* Built-in method references that are verified to be native. */ var Promise = getNative(root, 'Promise');
module.exports = Promise;

},{"./_getNative":"3j4Js","./_root":"ideFj"}],"lBg3y":[function(require,module,exports) {
var getNative = require('./_getNative'), root = require('./_root');
/* Built-in method references that are verified to be native. */ var Set = getNative(root, 'Set');
module.exports = Set;

},{"./_getNative":"3j4Js","./_root":"ideFj"}],"9WKNU":[function(require,module,exports) {
var getNative = require('./_getNative'), root = require('./_root');
/* Built-in method references that are verified to be native. */ var WeakMap = getNative(root, 'WeakMap');
module.exports = WeakMap;

},{"./_getNative":"3j4Js","./_root":"ideFj"}],"iOQqA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getPrevAndCurrentColumns", ()=>getPrevAndCurrentColumns
);
parcelHelpers.export(exports, "isEdgeVisible", ()=>isEdgeVisible
);
parcelHelpers.export(exports, "measureColumn", ()=>measureColumn
);
function measureColumn(tableData) {
    return function(column, index) {
        const { firstVisibleColumnIndex , tableLeftVisibleEdge: tableStart , tableRightVisibleEdge: tableEnd  } = tableData;
        const leftEdge = column.offsetLeft;
        const rightEdge = leftEdge + column.offsetWidth;
        const isVisibleLeft = isEdgeVisible(leftEdge, tableStart, tableEnd);
        const isVisibleRight = isEdgeVisible(rightEdge, tableStart, tableEnd);
        const isVisible = isVisibleLeft || isVisibleRight;
        if (isVisible) tableData.firstVisibleColumnIndex = Math.min(firstVisibleColumnIndex, index);
        return {
            leftEdge,
            rightEdge,
            isVisible
        };
    };
}
function isEdgeVisible(position, start, end) {
    const minVisiblePixels = 30;
    return position >= start + minVisiblePixels && position <= end - minVisiblePixels;
}
function getPrevAndCurrentColumns(tableData, columnData) {
    const { firstVisibleColumnIndex  } = tableData;
    const previousColumnIndex = Math.max(firstVisibleColumnIndex - 1, 0);
    const previousColumn = columnData[previousColumnIndex];
    const currentColumn = columnData[firstVisibleColumnIndex];
    return {
        previousColumn,
        currentColumn
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"928qt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "DataTable": "Polaris-DataTable",
    "condensed": "Polaris-DataTable--condensed",
    "Navigation": "Polaris-DataTable__Navigation",
    "Pip": "Polaris-DataTable__Pip",
    "Pip-visible": "Polaris-DataTable__Pip--visible",
    "ScrollContainer": "Polaris-DataTable__ScrollContainer",
    "Table": "Polaris-DataTable__Table",
    "hoverable": "Polaris-DataTable--hoverable",
    "Cell": "Polaris-DataTable__Cell",
    "TableRow": "Polaris-DataTable__TableRow",
    "Cell-firstColumn": "Polaris-DataTable__Cell--firstColumn",
    "Cell-numeric": "Polaris-DataTable__Cell--numeric",
    "Cell-truncated": "Polaris-DataTable__Cell--truncated",
    "Cell-header": "Polaris-DataTable__Cell--header",
    "Cell-sortable": "Polaris-DataTable__Cell--sortable",
    "Cell-verticalAlignTop": "Polaris-DataTable__Cell--verticalAlignTop",
    "Cell-verticalAlignBottom": "Polaris-DataTable__Cell--verticalAlignBottom",
    "Cell-verticalAlignMiddle": "Polaris-DataTable__Cell--verticalAlignMiddle",
    "Cell-verticalAlignBaseline": "Polaris-DataTable__Cell--verticalAlignBaseline",
    "Icon": "Polaris-DataTable__Icon",
    "Heading": "Polaris-DataTable__Heading",
    "Heading-left": "Polaris-DataTable__Heading--left",
    "Cell-sorted": "Polaris-DataTable__Cell--sorted",
    "Cell-total": "Polaris-DataTable__Cell--total",
    "Cell-total-footer": "Polaris-DataTable--cellTotalFooter",
    "Footer": "Polaris-DataTable__Footer"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jlwN4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Cell", ()=>Cell
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../../../utilities/css.js");
var _sharedJs = require("../../../shared.js");
var _dataTableScssJs = require("../../DataTable.scss.js");
var _dataTableScssJsDefault = parcelHelpers.interopDefault(_dataTableScssJs);
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
var _iconJs = require("../../../Icon/Icon.js");
function Cell({ content , contentType , firstColumn , truncate , header , total , totalInFooter , sorted , sortable , sortDirection , verticalAlign ='top' , defaultSortDirection ='ascending' , onSort , colSpan  }) {
    const i18n = _hooksJs.useI18n();
    const numeric = contentType === 'numeric';
    const className = _cssJs.classNames(_dataTableScssJsDefault.default.Cell, _dataTableScssJsDefault.default[`Cell-${_cssJs.variationName('verticalAlign', verticalAlign)}`], firstColumn && _dataTableScssJsDefault.default['Cell-firstColumn'], firstColumn && truncate && _dataTableScssJsDefault.default['Cell-truncated'], header && _dataTableScssJsDefault.default['Cell-header'], total && _dataTableScssJsDefault.default['Cell-total'], totalInFooter && _dataTableScssJsDefault.default['Cell-total-footer'], numeric && _dataTableScssJsDefault.default['Cell-numeric'], sortable && _dataTableScssJsDefault.default['Cell-sortable'], sorted && _dataTableScssJsDefault.default['Cell-sorted']);
    const headerClassName = _cssJs.classNames(header && _dataTableScssJsDefault.default.Heading, header && contentType === 'text' && _dataTableScssJsDefault.default['Heading-left']);
    const iconClassName = _cssJs.classNames(sortable && _dataTableScssJsDefault.default.Icon);
    const direction = sorted && sortDirection ? sortDirection : defaultSortDirection;
    const source = direction === 'descending' ? _polarisIcons.CaretDownMinor : _polarisIcons.CaretUpMinor;
    const oppositeDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';
    const sortAccessibilityLabel = i18n.translate('Polaris.DataTable.sortAccessibilityLabel', {
        direction: sorted ? oppositeDirection : direction
    });
    const iconMarkup = /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: iconClassName
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: source,
        accessibilityLabel: sortAccessibilityLabel
    }));
    const sortableHeadingContent = /*#__PURE__*/ _reactDefault.default.createElement("button", {
        className: headerClassName,
        onClick: onSort
    }, iconMarkup, content);
    const columnHeadingContent = sortable ? sortableHeadingContent : content;
    const colSpanProp = colSpan && colSpan > 1 ? {
        colSpan
    } : {
    };
    const headingMarkup = header ? /*#__PURE__*/ _reactDefault.default.createElement("th", Object.assign({
    }, _sharedJs.headerCell.props, colSpanProp, {
        className: className,
        scope: "col",
        "aria-sort": sortDirection
    }), columnHeadingContent) : /*#__PURE__*/ _reactDefault.default.createElement("th", Object.assign({
        className: className,
        scope: "row"
    }, colSpanProp), content);
    const cellMarkup = header || firstColumn ? headingMarkup : /*#__PURE__*/ _reactDefault.default.createElement("td", Object.assign({
        className: className
    }, colSpanProp), content);
    return cellMarkup;
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../../../utilities/css.js":"kYdwV","../../../shared.js":"jYa7v","../../DataTable.scss.js":"928qt","../../../../utilities/i18n/hooks.js":"hHpYD","../../../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"emruA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Navigation", ()=>Navigation
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../../../utilities/css.js");
var _dataTableScssJs = require("../../DataTable.scss.js");
var _dataTableScssJsDefault = parcelHelpers.interopDefault(_dataTableScssJs);
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
var _buttonJs = require("../../../Button/Button.js");
function Navigation({ columnVisibilityData , isScrolledFarthestLeft , isScrolledFarthestRight , navigateTableLeft , navigateTableRight  }) {
    const i18n = _hooksJs.useI18n();
    const pipMarkup = columnVisibilityData.map((column, index)=>{
        const className = _cssJs.classNames(_dataTableScssJsDefault.default.Pip, column.isVisible && _dataTableScssJsDefault.default['Pip-visible']);
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: className,
            key: `pip-${index}`
        }));
    });
    const leftA11yLabel = i18n.translate('Polaris.DataTable.navAccessibilityLabel', {
        direction: 'left'
    });
    const rightA11yLabel = i18n.translate('Polaris.DataTable.navAccessibilityLabel', {
        direction: 'right'
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _dataTableScssJsDefault.default.Navigation
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        plain: true,
        icon: _polarisIcons.ChevronLeftMinor,
        disabled: isScrolledFarthestLeft,
        accessibilityLabel: leftA11yLabel,
        onClick: navigateTableLeft
    }), pipMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        plain: true,
        icon: _polarisIcons.ChevronRightMinor,
        disabled: isScrolledFarthestRight,
        accessibilityLabel: rightA11yLabel,
        onClick: navigateTableRight
    })));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../../../utilities/css.js":"kYdwV","../../DataTable.scss.js":"928qt","../../../../utilities/i18n/hooks.js":"hHpYD","../../../Button/Button.js":"g06oC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"46FyV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DatePicker", ()=>DatePicker
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _datesJs = require("../../utilities/dates.js");
var _utilitiesJs = require("./utilities.js");
var _datePickerScssJs = require("./DatePicker.scss.js");
var _datePickerScssJsDefault = parcelHelpers.interopDefault(_datePickerScssJs);
var _monthJs = require("./components/Month/Month.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _buttonJs = require("../Button/Button.js");
function DatePicker({ id , selected , month: month1 , year: year1 , allowRange , multiMonth , disableDatesBefore , disableDatesAfter , weekStartsOn =0 , dayAccessibilityLabelPrefix , onMonthChange , onChange =noop  }) {
    const i18n = _hooksJs.useI18n();
    const [hoverDate, setHoverDate] = _react.useState(undefined);
    const [focusDate, setFocusDate] = _react.useState(undefined);
    _react.useEffect(()=>{
        setFocusDate(undefined);
    }, [
        selected
    ]);
    const handleFocus = _react.useCallback((date)=>{
        setFocusDate(date);
    }, []);
    const setFocusDateAndHandleMonthChange = _react.useCallback((date)=>{
        if (onMonthChange) onMonthChange(date.getMonth(), date.getFullYear());
        setHoverDate(date);
        setFocusDate(date);
    }, [
        onMonthChange
    ]);
    const handleDateSelection = _react.useCallback((range)=>{
        const { end  } = range;
        setHoverDate(end);
        setFocusDate(new Date(end));
        onChange(range);
    }, [
        onChange
    ]);
    const handleMonthChangeClick = _react.useCallback((month, year)=>{
        if (!onMonthChange) return;
        setFocusDate(undefined);
        onMonthChange(month, year);
    }, [
        onMonthChange
    ]);
    const handleHover = _react.useCallback((date)=>{
        setHoverDate(date);
    }, []);
    const handleKeyUp = _react.useCallback((event)=>{
        const { key  } = event;
        const range = deriveRange(selected);
        const focusedDate = focusDate || range && range.start;
        if (focusedDate == null) return;
        if (key === 'ArrowUp') {
            const previousWeek = new Date(focusedDate);
            previousWeek.setDate(focusedDate.getDate() - 7);
            if (!(disableDatesBefore && _datesJs.isDateBefore(previousWeek, disableDatesBefore))) setFocusDateAndHandleMonthChange(previousWeek);
        }
        if (key === 'ArrowDown') {
            const nextWeek = new Date(focusedDate);
            nextWeek.setDate(focusedDate.getDate() + 7);
            if (!(disableDatesAfter && _datesJs.isDateAfter(nextWeek, disableDatesAfter))) setFocusDateAndHandleMonthChange(nextWeek);
        }
        if (key === 'ArrowRight') {
            const tomorrow = new Date(focusedDate);
            tomorrow.setDate(focusedDate.getDate() + 1);
            if (!(disableDatesAfter && _datesJs.isDateAfter(tomorrow, disableDatesAfter))) setFocusDateAndHandleMonthChange(tomorrow);
        }
        if (key === 'ArrowLeft') {
            const yesterday = new Date(focusedDate);
            yesterday.setDate(focusedDate.getDate() - 1);
            if (!(disableDatesBefore && _datesJs.isDateBefore(yesterday, disableDatesBefore))) setFocusDateAndHandleMonthChange(yesterday);
        }
    }, [
        disableDatesAfter,
        disableDatesBefore,
        focusDate,
        selected,
        setFocusDateAndHandleMonthChange
    ]);
    const showNextYear = _datesJs.getNextDisplayYear(month1, year1);
    const showNextMonth = _datesJs.getNextDisplayMonth(month1);
    const showNextToNextYear = _datesJs.getNextDisplayYear(showNextMonth, showNextYear);
    const showNextToNextMonth = _datesJs.getNextDisplayMonth(showNextMonth);
    const showPreviousYear = _datesJs.getPreviousDisplayYear(month1, year1);
    const showPreviousMonth = _datesJs.getPreviousDisplayMonth(month1);
    const previousMonthName = i18n.translate(`Polaris.DatePicker.months.${_utilitiesJs.monthName(showPreviousMonth)}`);
    const nextMonth = multiMonth ? i18n.translate(`Polaris.DatePicker.months.${_utilitiesJs.monthName(showNextToNextMonth)}`) : i18n.translate(`Polaris.DatePicker.months.${_utilitiesJs.monthName(showNextMonth)}`);
    const nextYear = multiMonth ? showNextToNextYear : showNextYear;
    const monthIsSelected = _react.useMemo(()=>deriveRange(selected)
    , [
        selected
    ]);
    const firstDatePickerAccessibilityLabelPrefix = allowRange ? i18n.translate(`Polaris.DatePicker.start`) : dayAccessibilityLabelPrefix;
    const secondDatePickerAccessibilityLabelPrefix = i18n.translate(`Polaris.DatePicker.end`);
    const accessibilityLabelPrefixes = [
        firstDatePickerAccessibilityLabelPrefix,
        secondDatePickerAccessibilityLabelPrefix
    ];
    const secondDatePicker = multiMonth ? /*#__PURE__*/ _reactDefault.default.createElement(_monthJs.Month, {
        onFocus: handleFocus,
        focusedDate: focusDate,
        month: showNextMonth,
        year: showNextYear,
        selected: monthIsSelected,
        hoverDate: hoverDate,
        onChange: handleDateSelection,
        onHover: handleHover,
        disableDatesBefore: disableDatesBefore,
        disableDatesAfter: disableDatesAfter,
        allowRange: allowRange,
        weekStartsOn: weekStartsOn,
        accessibilityLabelPrefixes: accessibilityLabelPrefixes
    }) : null;
    const datePickerClassName = _cssJs.classNames(_datePickerScssJsDefault.default.DatePicker);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        id: id,
        className: datePickerClassName,
        onKeyDown: handleKeyDown,
        onKeyUp: handleKeyUp
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _datePickerScssJsDefault.default.Header
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        plain: true,
        icon: _polarisIcons.ArrowLeftMinor,
        accessibilityLabel: i18n.translate('Polaris.DatePicker.previousMonth', {
            previousMonthName,
            showPreviousYear
        }),
        onClick: ()=>handleMonthChangeClick(showPreviousMonth, showPreviousYear)
    }), /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        plain: true,
        icon: _polarisIcons.ArrowRightMinor,
        accessibilityLabel: i18n.translate('Polaris.DatePicker.nextMonth', {
            nextMonth,
            nextYear
        }),
        onClick: ()=>handleMonthChangeClick(showNextMonth, showNextYear)
    })), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _datePickerScssJsDefault.default.MonthLayout
    }, /*#__PURE__*/ _reactDefault.default.createElement(_monthJs.Month, {
        onFocus: handleFocus,
        focusedDate: focusDate,
        month: month1,
        year: year1,
        selected: deriveRange(selected),
        hoverDate: hoverDate,
        onChange: handleDateSelection,
        onHover: handleHover,
        disableDatesBefore: disableDatesBefore,
        disableDatesAfter: disableDatesAfter,
        allowRange: allowRange,
        weekStartsOn: weekStartsOn,
        accessibilityLabelPrefixes: accessibilityLabelPrefixes
    }), secondDatePicker)));
}
function noop() {
}
function handleKeyDown(event) {
    const { key  } = event;
    if (key === 'ArrowUp' || key === 'ArrowDown' || key === 'ArrowLeft' || key === 'ArrowRight') {
        event.preventDefault();
        event.stopPropagation();
    }
}
function deriveRange(selected) {
    return selected instanceof Date ? {
        start: selected,
        end: selected
    } : selected;
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","../../utilities/dates.js":"iAIwa","./utilities.js":"ausEg","./DatePicker.scss.js":"2vfZw","./components/Month/Month.js":"doS83","../../utilities/i18n/hooks.js":"hHpYD","../Button/Button.js":"g06oC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iAIwa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "dateIsInRange", ()=>dateIsInRange
);
parcelHelpers.export(exports, "dateIsSelected", ()=>dateIsSelected
);
parcelHelpers.export(exports, "getNewRange", ()=>getNewRange
);
parcelHelpers.export(exports, "getNextDisplayMonth", ()=>getNextDisplayMonth
);
parcelHelpers.export(exports, "getNextDisplayYear", ()=>getNextDisplayYear
);
parcelHelpers.export(exports, "getOrderedWeekdays", ()=>getOrderedWeekdays
);
parcelHelpers.export(exports, "getPreviousDisplayMonth", ()=>getPreviousDisplayMonth
);
parcelHelpers.export(exports, "getPreviousDisplayYear", ()=>getPreviousDisplayYear
);
parcelHelpers.export(exports, "getWeeksForMonth", ()=>getWeeksForMonth
);
parcelHelpers.export(exports, "isDateAfter", ()=>isDateAfter
);
parcelHelpers.export(exports, "isDateBefore", ()=>isDateBefore
);
parcelHelpers.export(exports, "isSameDay", ()=>isSameDay
);
const WEEK_LENGTH = 7;
function getWeeksForMonth(month, year, weekStartsOn = 0) {
    const firstOfMonth = new Date(year, month, 1);
    const firstDayOfWeek = firstOfMonth.getDay();
    const weeks = [
        []
    ];
    let currentWeek = weeks[0];
    let currentDate = firstOfMonth;
    const orderedWeekday = getOrderedWeekdays(weekStartsOn);
    for(let i = 0; i < orderedWeekday.indexOf(firstDayOfWeek); i++)currentWeek.push(null);
    while(currentDate.getMonth() === month){
        if (currentWeek.length === WEEK_LENGTH) {
            currentWeek = [];
            weeks.push(currentWeek);
        }
        currentWeek.push(currentDate);
        currentDate = new Date(year, month, currentDate.getDate() + 1);
    }
    while(currentWeek.length < 7)currentWeek.push(null);
    return weeks;
}
function dateIsInRange(day, range) {
    if (day == null) return false;
    const { start , end  } = range;
    return Boolean(start && day > start && end && day < end);
}
function dateIsSelected(day, range) {
    if (day == null) return false;
    const { start , end  } = range;
    return Boolean(start && isSameDay(start, day) || end && isSameDay(end, day));
}
function isSameDay(day1, day2) {
    return day1.getDate() === day2.getDate() && day1.getMonth() === day2.getMonth() && day1.getFullYear() === day2.getFullYear();
}
function getNewRange(range, selected) {
    if (range == null) return {
        start: selected,
        end: selected
    };
    const { start , end  } = range;
    if (end && (isDateAfter(start, end) || isDateBefore(start, end))) return {
        start: selected,
        end: selected
    };
    if (start) {
        if (isDateBefore(selected, start)) return {
            start: selected,
            end: selected
        };
        return {
            start,
            end: selected
        };
    }
    if (end) {
        if (isDateBefore(selected, end)) return {
            start: selected,
            end
        };
        return {
            start: start || end,
            end: selected
        };
    }
    return {
        start: selected,
        end: selected
    };
}
function getNextDisplayMonth(month) {
    if (month === 11) return 0;
    return month + 1;
}
function getNextDisplayYear(month, year) {
    if (month === 11) return year + 1;
    return year;
}
function getPreviousDisplayMonth(month) {
    if (month === 0) return 11;
    return month - 1;
}
function getPreviousDisplayYear(month, year) {
    if (month === 0) return year - 1;
    return year;
}
function isDateAfter(date, dateToCompare) {
    return date.getTime() > dateToCompare.getTime();
}
function isDateBefore(date, dateToCompare) {
    return date.getTime() < dateToCompare.getTime();
}
const WEEKDAYS = [
    0,
    1,
    2,
    3,
    4,
    5,
    6
];
function getOrderedWeekdays(weekStartsOn) {
    const weekDays = [
        ...WEEKDAYS
    ];
    const restOfDays = weekDays.splice(weekStartsOn);
    return [
        ...restOfDays,
        ...weekDays
    ];
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ausEg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "monthName", ()=>monthName
);
parcelHelpers.export(exports, "weekdayName", ()=>weekdayName
);
function monthName(month) {
    switch(month){
        case 0:
            return 'january';
        case 1:
            return 'february';
        case 2:
            return 'march';
        case 3:
            return 'april';
        case 4:
            return 'may';
        case 5:
            return 'june';
        case 6:
            return 'july';
        case 7:
            return 'august';
        case 8:
            return 'september';
        case 9:
            return 'october';
        case 10:
            return 'november';
        case 11:
            return 'december';
    }
}
function weekdayName(weekday) {
    switch(weekday){
        case 0:
            return 'sunday';
        case 1:
            return 'monday';
        case 2:
            return 'tuesday';
        case 3:
            return 'wednesday';
        case 4:
            return 'thursday';
        case 5:
            return 'friday';
        case 6:
            return 'saturday';
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2vfZw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "DatePicker": "Polaris-DatePicker",
    "MonthLayout": "Polaris-DatePicker__MonthLayout",
    "MonthContainer": "Polaris-DatePicker__MonthContainer",
    "Month": "Polaris-DatePicker__Month",
    "Month-current": "Polaris-DatePicker__Month--current",
    "DayCell": "Polaris-DatePicker__DayCell",
    "DayCell-inRange": "Polaris-DatePicker__DayCell--inRange",
    "Day": "Polaris-DatePicker__Day",
    "Day-today": "Polaris-DatePicker__Day--today",
    "Day-inRange": "Polaris-DatePicker__Day--inRange",
    "Day-selected": "Polaris-DatePicker__Day--selected",
    "Day-disabled": "Polaris-DatePicker__Day--disabled",
    "EmptyDayCell": "Polaris-DatePicker__EmptyDayCell",
    "Weekday": "Polaris-DatePicker__Weekday",
    "Weekday-current": "Polaris-DatePicker__Weekday--current",
    "Header": "Polaris-DatePicker__Header",
    "Title": "Polaris-DatePicker__Title",
    "Day-firstInRange": "Polaris-DatePicker__Day--firstInRange",
    "Day-hasRange": "Polaris-DatePicker__Day--hasRange",
    "Day-hoverRight": "Polaris-DatePicker__Day--hoverRight",
    "Day-lastInRange": "Polaris-DatePicker__Day--lastInRange",
    "Week": "Polaris-DatePicker__Week"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"doS83":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Month", ()=>Month
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _datesJs = require("../../../../utilities/dates.js");
var _datePickerScssJs = require("../../DatePicker.scss.js");
var _datePickerScssJsDefault = parcelHelpers.interopDefault(_datePickerScssJs);
var _utilitiesJs = require("../../utilities.js");
var _weekdayJs = require("../Weekday/Weekday.js");
var _dayJs = require("../Day/Day.js");
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
function Month({ focusedDate , selected , hoverDate , disableDatesBefore , disableDatesAfter , allowRange , onChange =noop , onHover =noop , onFocus =noop , month , year , weekStartsOn , accessibilityLabelPrefixes  }) {
    const i18n = _hooksJs.useI18n();
    const isInHoveringRange = allowRange ? hoveringDateIsInRange : ()=>false
    ;
    const now = new Date();
    const current = now.getMonth() === month && now.getFullYear() === year;
    const className = _cssJs.classNames(_datePickerScssJsDefault.default.Title, current && _datePickerScssJsDefault.default['Month-current']);
    const weeks = _react.useMemo(()=>_datesJs.getWeeksForMonth(month, year, weekStartsOn)
    , [
        month,
        weekStartsOn,
        year
    ]);
    const weekdays = _datesJs.getOrderedWeekdays(weekStartsOn).map((weekday)=>/*#__PURE__*/ _reactDefault.default.createElement(_weekdayJs.Weekday, {
            key: weekday,
            title: i18n.translate(`Polaris.DatePicker.daysAbbreviated.${_utilitiesJs.weekdayName(weekday)}`),
            label: weekdayLabel(weekday),
            current: current && new Date().getDay() === weekday
        })
    );
    const handleDateClick = _react.useCallback((selectedDate)=>{
        onChange(_datesJs.getNewRange(allowRange ? selected : undefined, selectedDate));
    }, [
        allowRange,
        onChange,
        selected
    ]);
    const lastDayOfMonth = _react.useMemo(()=>new Date(year, month + 1, 0)
    , [
        month,
        year
    ]);
    function renderWeek(day, dayIndex) {
        if (day == null) return(/*#__PURE__*/ _reactDefault.default.createElement(_dayJs.Day, {
            key: dayIndex,
            onHover: onHover,
            lastDayOfMonth: lastDayOfMonth
        }));
        const disabled = disableDatesBefore && _datesJs.isDateBefore(day, disableDatesBefore) || disableDatesAfter && _datesJs.isDateAfter(day, disableDatesAfter);
        const isFirstSelectedDay = allowRange && selected && isDateStart(day, selected);
        const isLastSelectedDay = allowRange && selected && (!_datesJs.isSameDay(selected.start, selected.end) && isDateEnd(day, selected) || hoverDate && _datesJs.isSameDay(selected.start, selected.end) && _datesJs.isDateAfter(hoverDate, selected.start) && _datesJs.isSameDay(day, hoverDate) && !isFirstSelectedDay);
        const rangeIsDifferent = !(selected && _datesJs.isSameDay(selected.start, selected.end));
        const isHoveringRight = hoverDate && _datesJs.isDateBefore(day, hoverDate);
        const [firstAccessibilityLabelPrefix, lastAccessibilityLabelPrefix] = accessibilityLabelPrefixes;
        let accessibilityLabelPrefix;
        if (allowRange && isFirstSelectedDay || !allowRange && firstAccessibilityLabelPrefix) accessibilityLabelPrefix = firstAccessibilityLabelPrefix;
        else if (allowRange && isLastSelectedDay) accessibilityLabelPrefix = lastAccessibilityLabelPrefix;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_dayJs.Day, {
            selectedAccessibilityLabelPrefix: accessibilityLabelPrefix,
            weekday: weekdayLabel(dayIndex),
            focused: focusedDate != null && _datesJs.isSameDay(day, focusedDate),
            day: day,
            key: dayIndex,
            onFocus: onFocus,
            onClick: handleDateClick,
            onHover: onHover,
            selected: selected != null && _datesJs.dateIsSelected(day, selected),
            inRange: selected != null && _datesJs.dateIsInRange(day, selected),
            disabled: disabled,
            inHoveringRange: selected != null && hoverDate != null && isInHoveringRange(day, selected, hoverDate),
            isLastSelectedDay: isLastSelectedDay,
            isFirstSelectedDay: isFirstSelectedDay,
            isHoveringRight: isHoveringRight,
            rangeIsDifferent: rangeIsDifferent
        }));
    }
    const weeksMarkup = weeks.map((week, index)=>/*#__PURE__*/ _reactDefault.default.createElement("tr", {
            className: _datePickerScssJsDefault.default.Week,
            key: index
        }, week.map(renderWeek))
    );
    function weekdayLabel(weekday) {
        return i18n.translate(`Polaris.DatePicker.days.${_utilitiesJs.weekdayName(weekday)}`);
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _datePickerScssJsDefault.default.MonthContainer
    }, /*#__PURE__*/ _reactDefault.default.createElement("table", {
        role: "grid",
        className: _datePickerScssJsDefault.default.Month
    }, /*#__PURE__*/ _reactDefault.default.createElement("caption", {
        className: className
    }, i18n.translate(`Polaris.DatePicker.months.${_utilitiesJs.monthName(month)}`), ' ', year), /*#__PURE__*/ _reactDefault.default.createElement("thead", null, /*#__PURE__*/ _reactDefault.default.createElement("tr", {
        className: _datePickerScssJsDefault.default.WeekHeadings
    }, weekdays)), /*#__PURE__*/ _reactDefault.default.createElement("tbody", null, weeksMarkup))));
}
function noop() {
}
function hoveringDateIsInRange(day, range, hoverEndDate) {
    if (day == null) return false;
    const { start , end  } = range;
    return Boolean(_datesJs.isSameDay(start, end) && day > start && day <= hoverEndDate);
}
function isDateEnd(day, range) {
    if (day == null) return false;
    const { end  } = range;
    return Boolean(end && _datesJs.isSameDay(end, day));
}
function isDateStart(day, range) {
    if (day == null) return false;
    const { start  } = range;
    return Boolean(start && _datesJs.isSameDay(start, day));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/dates.js":"iAIwa","../../DatePicker.scss.js":"2vfZw","../../utilities.js":"ausEg","../Weekday/Weekday.js":"ak0CM","../Day/Day.js":"kk0It","../../../../utilities/i18n/hooks.js":"hHpYD","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ak0CM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Weekday", ()=>Weekday
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _datePickerScssJs = require("../../DatePicker.scss.js");
var _datePickerScssJsDefault = parcelHelpers.interopDefault(_datePickerScssJs);
const Weekday = /*#__PURE__*/ _react.memo(function Weekday({ label , title , current  }) {
    const className = _cssJs.classNames(_datePickerScssJsDefault.default.Weekday, current && _datePickerScssJsDefault.default['Weekday-current']);
    return(/*#__PURE__*/ _reactDefault.default.createElement("th", {
        "aria-label": label,
        scope: "col",
        className: className
    }, title));
});

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../DatePicker.scss.js":"2vfZw","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kk0It":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Day", ()=>Day
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _datesJs = require("../../../../utilities/dates.js");
var _utilitiesJs = require("../../utilities.js");
var _datePickerScssJs = require("../../DatePicker.scss.js");
var _datePickerScssJsDefault = parcelHelpers.interopDefault(_datePickerScssJs);
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
const Day = /*#__PURE__*/ _react.memo(function Day({ day , focused , onClick , onHover =noop , onFocus =noop , selected , inRange , inHoveringRange , disabled , lastDayOfMonth , isLastSelectedDay , isFirstSelectedDay , isHoveringRight , rangeIsDifferent , weekday , selectedAccessibilityLabelPrefix  }) {
    const i18n = _hooksJs.useI18n();
    const dayNode = _react.useRef(null);
    const hoverValue = lastDayOfMonth || day;
    _react.useEffect(()=>{
        if (focused && dayNode.current) dayNode.current.focus();
    }, [
        focused
    ]);
    if (!day) return(/*#__PURE__*/ _reactDefault.default.createElement("td", {
        className: _datePickerScssJsDefault.default.EmptyDayCell,
        onMouseOver: ()=>onHover(hoverValue)
    }));
    const handleClick = onClick && !disabled ? onClick.bind(null, day) : noop;
    const today = _datesJs.isSameDay(new Date(), day);
    const dayCellClassName = _cssJs.classNames(_datePickerScssJsDefault.default.DayCell, selected && _datePickerScssJsDefault.default['DayCell-selected'], (inRange || inHoveringRange) && !disabled && _datePickerScssJsDefault.default['DayCell-inRange'], isLastSelectedDay && _datePickerScssJsDefault.default['DayCell-lastInRange'], isFirstSelectedDay && _datePickerScssJsDefault.default['DayCell-firstInRange'], isHoveringRight && _datePickerScssJsDefault.default['DayCell-hoverRight'], rangeIsDifferent && _datePickerScssJsDefault.default['DayCell-hasRange']);
    const dayClassName = _cssJs.classNames(_datePickerScssJsDefault.default.Day, selected && _datePickerScssJsDefault.default['Day-selected'], disabled && _datePickerScssJsDefault.default['Day-disabled'], today && _datePickerScssJsDefault.default['Day-today'], (inRange || inHoveringRange) && !disabled && _datePickerScssJsDefault.default['Day-inRange'], isLastSelectedDay && _datePickerScssJsDefault.default['Day-lastInRange'], isFirstSelectedDay && _datePickerScssJsDefault.default['Day-firstInRange'], isHoveringRight && _datePickerScssJsDefault.default['Day-hoverRight'], rangeIsDifferent && _datePickerScssJsDefault.default['Day-hasRange']);
    const date = day.getDate();
    const tabIndex = (focused || selected || today || date === 1) && !disabled ? 0 : -1;
    const ariaLabel = [
        selected && selectedAccessibilityLabelPrefix ? `${selectedAccessibilityLabelPrefix} ` : '',
        `${today ? i18n.translate('Polaris.DatePicker.today') : ''}`,
        `${weekday ? weekday : ''} `,
        `${i18n.translate(`Polaris.DatePicker.months.${_utilitiesJs.monthName(day.getMonth())}`)} `,
        `${date} `,
        `${day.getFullYear()}`
    ].join('');
    return(/*#__PURE__*/ _reactDefault.default.createElement("td", {
        className: dayCellClassName
    }, /*#__PURE__*/ _reactDefault.default.createElement("button", {
        onFocus: ()=>onFocus(day)
        ,
        type: "button",
        ref: dayNode,
        tabIndex: tabIndex,
        className: dayClassName,
        onMouseOver: ()=>onHover(hoverValue)
        ,
        onClick: handleClick,
        "aria-label": ariaLabel,
        "aria-disabled": disabled,
        "aria-pressed": selected
    }, date)));
});
function noop() {
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/dates.js":"iAIwa","../../utilities.js":"ausEg","../../DatePicker.scss.js":"2vfZw","../../../../utilities/i18n/hooks.js":"hHpYD","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"69uXx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DescriptionList", ()=>DescriptionList
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _descriptionListScssJs = require("./DescriptionList.scss.js");
var _descriptionListScssJsDefault = parcelHelpers.interopDefault(_descriptionListScssJs);
function DescriptionList({ items , spacing ='loose'  }) {
    // There's no good key to give React so using the index is a last resport.
    // we can't use the term/description value as it may be a react component
    // which can't be stringified
    const terms = items.reduce((allTerms, { term , description  }, index)=>[
            ...allTerms,
            /*#__PURE__*/ _reactDefault.default.createElement("dt", {
                key: `dt${index}`,
                className: _descriptionListScssJsDefault.default.Term
            }, term),
            /*#__PURE__*/ _reactDefault.default.createElement("dd", {
                key: `dd${index}`,
                className: _descriptionListScssJsDefault.default.Description
            }, description)
        ]
    , []);
    const className = _cssJs.classNames(_descriptionListScssJsDefault.default.DescriptionList, spacing === 'tight' && _descriptionListScssJsDefault.default.spacingTight);
    return(/*#__PURE__*/ _reactDefault.default.createElement("dl", {
        className: className
    }, terms));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./DescriptionList.scss.js":"2Krae","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2Krae":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "DescriptionList": "Polaris-DescriptionList",
    "Term": "Polaris-DescriptionList__Term",
    "spacingTight": "Polaris-DescriptionList--spacingTight",
    "Description": "Polaris-DescriptionList__Description"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hI3pV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DisplayText", ()=>DisplayText
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _displayTextScssJs = require("./DisplayText.scss.js");
var _displayTextScssJsDefault = parcelHelpers.interopDefault(_displayTextScssJs);
function DisplayText({ element: Element = 'p' , children , size ='medium'  }) {
    const className = _cssJs.classNames(_displayTextScssJsDefault.default.DisplayText, size && _displayTextScssJsDefault.default[_cssJs.variationName('size', size)]);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Element, {
        className: className
    }, children));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./DisplayText.scss.js":"PYn18","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"PYn18":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "DisplayText": "Polaris-DisplayText",
    "sizeSmall": "Polaris-DisplayText--sizeSmall",
    "sizeMedium": "Polaris-DisplayText--sizeMedium",
    "sizeLarge": "Polaris-DisplayText--sizeLarge",
    "sizeExtraLarge": "Polaris-DisplayText--sizeExtraLarge"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7RuWV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DropZone", ()=>DropZone
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _capitalizeJs = require("../../utilities/capitalize.js");
var _targetJs = require("../../utilities/target.js");
var _useComponentDidMountJs = require("../../utilities/use-component-did-mount.js");
var _useToggleJs = require("../../utilities/use-toggle.js");
var _contextJs = require("./context.js");
var _indexJs = require("./utils/index.js");
var _dropZoneScssJs = require("./DropZone.scss.js");
var _dropZoneScssJsDefault = parcelHelpers.interopDefault(_dropZoneScssJs);
var _fileUploadJs = require("./components/FileUpload/FileUpload.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _hooksJs1 = require("../../utilities/unique-id/hooks.js");
var _stackJs = require("../Stack/Stack.js");
var _iconJs = require("../Icon/Icon.js");
var _captionJs = require("../Caption/Caption.js");
var _textStyleJs = require("../TextStyle/TextStyle.js");
var _labelledJs = require("../Labelled/Labelled.js");
var _visuallyHiddenJs = require("../VisuallyHidden/VisuallyHidden.js");
// TypeScript can't generate types that correctly infer the typing of
// subcomponents so explicitly state the subcomponents in the type definition.
// Letting this be implicit works in this project but fails in projects that use
// generated *.d.ts files.
const DropZone = function DropZone({ dropOnPage , label , labelAction , labelHidden , children , disabled =false , outline =true , accept , active , overlay =true , allowMultiple =_indexJs.defaultAllowMultiple , overlayText , errorOverlayText , id: idProp , type ='file' , onClick , error , openFileDialog , variableHeight , onFileDialogClose , customValidator , onDrop , onDropAccepted , onDropRejected , onDragEnter , onDragOver , onDragLeave  }) {
    const node = _react.useRef(null);
    const dragTargets = _react.useRef([]); // eslint-disable-next-line react-hooks/exhaustive-deps
    const adjustSize = _react.useCallback(_debounceDefault.default(()=>{
        if (!node.current) return;
        if (variableHeight) {
            setMeasuring(false);
            return;
        }
        let size = 'large';
        const width = node.current.getBoundingClientRect().width;
        if (width < 100) size = 'small';
        else if (width < 160) size = 'medium';
        setSize(size);
        measuring && setMeasuring(false);
    }, 50, {
        trailing: true
    }), []);
    const [dragging, setDragging] = _react.useState(false);
    const [internalError, setInternalError] = _react.useState(false);
    const { value: focused , setTrue: handleFocus , setFalse: handleBlur  } = _useToggleJs.useToggle(false);
    const [size1, setSize] = _react.useState('large');
    const [measuring, setMeasuring] = _react.useState(true);
    const i18n = _hooksJs.useI18n();
    const getValidatedFiles = _react.useCallback((files)=>{
        const acceptedFiles = [];
        const rejectedFiles = [];
        Array.from(files).forEach((file)=>{
            !_indexJs.fileAccepted(file, accept) || customValidator && !customValidator(file) ? rejectedFiles.push(file) : acceptedFiles.push(file);
        });
        if (!allowMultiple) {
            acceptedFiles.splice(1, acceptedFiles.length);
            rejectedFiles.push(...acceptedFiles.slice(1));
        }
        return {
            files,
            acceptedFiles,
            rejectedFiles
        };
    }, [
        accept,
        allowMultiple,
        customValidator
    ]);
    const handleDrop = _react.useCallback((event)=>{
        stopEvent(event);
        if (disabled) return;
        const fileList = _indexJs.getDataTransferFiles(event);
        const { files , acceptedFiles , rejectedFiles  } = getValidatedFiles(fileList);
        dragTargets.current = [];
        setDragging(false);
        setInternalError(rejectedFiles.length > 0);
        onDrop && onDrop(files, acceptedFiles, rejectedFiles);
        onDropAccepted && acceptedFiles.length && onDropAccepted(acceptedFiles);
        onDropRejected && rejectedFiles.length && onDropRejected(rejectedFiles);
        event.target.value = '';
    }, [
        disabled,
        getValidatedFiles,
        onDrop,
        onDropAccepted,
        onDropRejected
    ]);
    const handleDragEnter = _react.useCallback((event)=>{
        stopEvent(event);
        if (disabled) return;
        const fileList = _indexJs.getDataTransferFiles(event);
        if (event.target && !dragTargets.current.includes(event.target)) dragTargets.current.push(event.target);
        if (dragging) return;
        const { rejectedFiles  } = getValidatedFiles(fileList);
        setDragging(true);
        setInternalError(rejectedFiles.length > 0);
        onDragEnter && onDragEnter();
    }, [
        disabled,
        dragging,
        getValidatedFiles,
        onDragEnter
    ]);
    const handleDragOver = _react.useCallback((event)=>{
        stopEvent(event);
        if (disabled) return;
        onDragOver && onDragOver();
    }, [
        disabled,
        onDragOver
    ]);
    const handleDragLeave = _react.useCallback((event)=>{
        event.preventDefault();
        if (disabled) return;
        dragTargets.current = dragTargets.current.filter((el)=>{
            const compareNode = dropOnPage && !_targetJs.isServer ? document : node.current;
            return el !== event.target && compareNode && compareNode.contains(el);
        });
        if (dragTargets.current.length > 0) return;
        setDragging(false);
        setInternalError(false);
        onDragLeave && onDragLeave();
    }, [
        dropOnPage,
        disabled,
        onDragLeave
    ]);
    _react.useEffect(()=>{
        const dropNode = dropOnPage ? document : node.current;
        if (!dropNode) return;
        dropNode.addEventListener('drop', handleDrop);
        dropNode.addEventListener('dragover', handleDragOver);
        dropNode.addEventListener('dragenter', handleDragEnter);
        dropNode.addEventListener('dragleave', handleDragLeave);
        window.addEventListener('resize', adjustSize);
        return ()=>{
            dropNode.removeEventListener('drop', handleDrop);
            dropNode.removeEventListener('dragover', handleDragOver);
            dropNode.removeEventListener('dragenter', handleDragEnter);
            dropNode.removeEventListener('dragleave', handleDragLeave);
            window.removeEventListener('resize', adjustSize);
        };
    }, [
        dropOnPage,
        handleDrop,
        handleDragOver,
        handleDragEnter,
        handleDragLeave,
        adjustSize
    ]);
    _useComponentDidMountJs.useComponentDidMount(()=>{
        adjustSize();
    });
    const id = _hooksJs1.useUniqueId('DropZone', idProp);
    const typeSuffix = _capitalizeJs.capitalize(type);
    const allowMultipleKey = _indexJs.createAllowMultipleKey(allowMultiple);
    const overlayTextWithDefault = overlayText === undefined ? i18n.translate(`Polaris.DropZone.${allowMultipleKey}.overlayText${typeSuffix}`) : overlayText;
    const errorOverlayTextWithDefault = errorOverlayText === undefined ? i18n.translate(`Polaris.DropZone.errorOverlayText${typeSuffix}`) : errorOverlayText;
    const labelValue = label || i18n.translate(`Polaris.DropZone.${allowMultipleKey}.label${typeSuffix}`);
    const labelHiddenValue = label ? labelHidden : true;
    const inputAttributes = {
        id,
        accept,
        disabled,
        type: 'file',
        multiple: allowMultiple,
        onChange: handleDrop,
        onFocus: handleFocus,
        onBlur: handleBlur
    };
    const classes = _cssJs.classNames(_dropZoneScssJsDefault.default.DropZone, outline && _dropZoneScssJsDefault.default.hasOutline, focused && _dropZoneScssJsDefault.default.focused, (active || dragging) && _dropZoneScssJsDefault.default.isDragging, disabled && _dropZoneScssJsDefault.default.isDisabled, (internalError || error) && _dropZoneScssJsDefault.default.hasError, !variableHeight && _dropZoneScssJsDefault.default[_cssJs.variationName('size', size1)], measuring && _dropZoneScssJsDefault.default.measuring);
    const dragOverlay = (active || dragging) && !internalError && !error && overlay && overlayMarkup(_polarisIcons.UploadMajor, 'interactive', overlayTextWithDefault);
    const dragErrorOverlay = dragging && (internalError || error) && overlayMarkup(_polarisIcons.CircleAlertMajor, 'critical', errorOverlayTextWithDefault);
    const context = _react.useMemo(()=>({
            disabled,
            focused,
            size: size1,
            type: type || 'file',
            measuring,
            allowMultiple
        })
    , [
        disabled,
        focused,
        measuring,
        size1,
        type,
        allowMultiple
    ]);
    function overlayMarkup(icon, color, text) {
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _dropZoneScssJsDefault.default.Overlay
        }, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
            vertical: true,
            spacing: "tight"
        }, size1 === 'small' && /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
            source: icon,
            color: color
        }), (size1 === 'medium' || size1 === 'large') && /*#__PURE__*/ _reactDefault.default.createElement(_captionJs.Caption, null, /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, {
            variation: "strong"
        }, text)))));
    }
    function open() {
        const fileInputNode = node.current && node.current.querySelector(`#${id}`);
        fileInputNode && fileInputNode instanceof HTMLElement && fileInputNode.click();
    }
    function handleClick(event) {
        if (disabled) return;
        return onClick ? onClick(event) : open();
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.DropZoneContext.Provider, {
        value: context
    }, /*#__PURE__*/ _reactDefault.default.createElement(_labelledJs.Labelled, {
        id: id,
        label: labelValue,
        action: labelAction,
        labelHidden: labelHiddenValue
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        ref: node,
        className: classes,
        "aria-disabled": disabled,
        onClick: handleClick,
        onDragStart: stopEvent
    }, dragOverlay, dragErrorOverlay, /*#__PURE__*/ _reactDefault.default.createElement(_visuallyHiddenJs.VisuallyHidden, null, /*#__PURE__*/ _reactDefault.default.createElement(DropZoneInput, Object.assign({
    }, inputAttributes, {
        openFileDialog: openFileDialog,
        onFileDialogClose: onFileDialogClose
    }))), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _dropZoneScssJsDefault.default.Container
    }, children)))));
};
function stopEvent(event) {
    event.preventDefault();
    event.stopPropagation();
}
DropZone.FileUpload = _fileUploadJs.FileUpload;
// Due to security reasons, browsers do not allow file inputs to be opened artificially.
// For example `useEffect(() => { ref.click() })`. Oddly enough react class-based components bi-pass this.
class DropZoneInput extends _react.Component {
    constructor(...args){
        super(...args);
        this.fileInputNode = /*#__PURE__*/ _react.createRef();
        this.triggerFileDialog = ()=>{
            this.open();
            this.props.onFileDialogClose && this.props.onFileDialogClose();
        };
        this.open = ()=>{
            if (!this.fileInputNode.current) return;
            this.fileInputNode.current.click();
        };
    }
    componentDidMount() {
        this.props.openFileDialog && this.triggerFileDialog();
    }
    componentDidUpdate() {
        this.props.openFileDialog && this.triggerFileDialog();
    }
    render() {
        const { openFileDialog , onFileDialogClose , ...inputProps } = this.props;
        return(/*#__PURE__*/ _reactDefault.default.createElement("input", Object.assign({
        }, inputProps, {
            ref: this.fileInputNode,
            autoComplete: "off"
        })));
    }
}

},{"react":"6fep5","lodash/debounce":"a9ymG","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","../../utilities/capitalize.js":"ezMs6","../../utilities/target.js":"gqfy9","../../utilities/use-component-did-mount.js":"fbwJ3","../../utilities/use-toggle.js":"jHDnh","./context.js":"7eFEr","./utils/index.js":"gj3O6","./DropZone.scss.js":"fWC0B","./components/FileUpload/FileUpload.js":"fTqT8","../../utilities/i18n/hooks.js":"hHpYD","../../utilities/unique-id/hooks.js":"kPfFC","../Stack/Stack.js":"g05gm","../Icon/Icon.js":"flzpR","../Caption/Caption.js":"eKCG1","../TextStyle/TextStyle.js":"cC66D","../Labelled/Labelled.js":"1YPAe","../VisuallyHidden/VisuallyHidden.js":"fGCM0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ezMs6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "capitalize", ()=>capitalize
);
function capitalize(word = '') {
    const wordLower = word.toLowerCase();
    return wordLower.charAt(0).toUpperCase() + wordLower.slice(1);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7eFEr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DropZoneContext", ()=>DropZoneContext
);
var _react = require("react");
var _indexJs = require("./utils/index.js");
const DropZoneContext = /*#__PURE__*/ _react.createContext({
    disabled: false,
    focused: false,
    size: 'extraLarge',
    type: 'file',
    measuring: false,
    allowMultiple: _indexJs.defaultAllowMultiple
});

},{"react":"6fep5","./utils/index.js":"gj3O6","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gj3O6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAllowMultipleKey", ()=>createAllowMultipleKey
);
parcelHelpers.export(exports, "defaultAllowMultiple", ()=>defaultAllowMultiple
);
parcelHelpers.export(exports, "fileAccepted", ()=>fileAccepted
);
parcelHelpers.export(exports, "getDataTransferFiles", ()=>getDataTransferFiles
);
const dragEvents = [
    'dragover',
    'dragenter',
    'drop'
];
function fileAccepted(file, accept) {
    return file.type === 'application/x-moz-file' || accepts(file, accept);
}
function getDataTransferFiles(event) {
    if (isDragEvent(event) && event.dataTransfer) {
        const dt = event.dataTransfer;
        if (dt.files && dt.files.length) return Array.from(dt.files);
        else if (dt.items && dt.items.length) // Chrome is the only browser that allows to read the file list on drag
        // events and uses `items` instead of `files` in this case.
        return Array.from(dt.items);
    } else if (isChangeEvent(event) && event.target.files) // Return files from even when a file was selected from an upload dialog
    return Array.from(event.target.files);
    return [];
}
function accepts(file, acceptedFiles) {
    if (file && acceptedFiles) {
        const fileName = file.name || '';
        const mimeType = file.type || '';
        const baseMimeType = mimeType.replace(/\/.*$/, '');
        const acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');
        return acceptedFilesArray.some((type)=>{
            const validType = type.trim();
            if (validType.startsWith('.')) return fileName.toLowerCase().endsWith(validType.toLowerCase());
            else if (validType.endsWith('/*')) // This is something like a image/* mime type
            return baseMimeType === validType.replace(/\/.*$/, '');
            return mimeType === validType;
        });
    }
    return true;
}
function isDragEvent(event) {
    return dragEvents.indexOf(event.type) > 0;
}
function isChangeEvent(event) {
    return Object.prototype.hasOwnProperty.call(event, 'target');
}
const defaultAllowMultiple = true;
function createAllowMultipleKey(allowMultiple) {
    return allowMultiple ? 'allowMultiple' : 'single';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fWC0B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "DropZone": "Polaris-DropZone",
    "focused": "Polaris-DropZone--focused",
    "hasOutline": "Polaris-DropZone--hasOutline",
    "isDisabled": "Polaris-DropZone--isDisabled",
    "isDragging": "Polaris-DropZone--isDragging",
    "sizeLarge": "Polaris-DropZone--sizeLarge",
    "sizeMedium": "Polaris-DropZone--sizeMedium",
    "sizeSmall": "Polaris-DropZone--sizeSmall",
    "measuring": "Polaris-DropZone--measuring",
    "Container": "Polaris-DropZone__Container",
    "Overlay": "Polaris-DropZone__Overlay",
    "hasError": "Polaris-DropZone--hasError"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fTqT8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FileUpload", ()=>FileUpload
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _capitalizeJs = require("../../../../utilities/capitalize.js");
var _contextJs = require("../../context.js");
var _indexJs = require("../../utils/index.js");
var _fileUploadScssJs = require("./FileUpload.scss.js");
var _fileUploadScssJsDefault = parcelHelpers.interopDefault(_fileUploadScssJs);
var _uploadArrowSvgJs = require("../../images/upload-arrow.svg.js");
var _uploadArrowSvgJsDefault = parcelHelpers.interopDefault(_uploadArrowSvgJs);
var _captionJs = require("../../../Caption/Caption.js");
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
var _stackJs = require("../../../Stack/Stack.js");
var _textStyleJs = require("../../../TextStyle/TextStyle.js");
function FileUpload(props) {
    const i18n = _hooksJs.useI18n();
    const { size , measuring , type , focused , disabled , allowMultiple  } = _react.useContext(_contextJs.DropZoneContext);
    const typeSuffix = _capitalizeJs.capitalize(type);
    const allowMultipleKey = _indexJs.createAllowMultipleKey(allowMultiple);
    const { actionTitle =i18n.translate(`Polaris.DropZone.${allowMultipleKey}.actionTitle${typeSuffix}`) , actionHint =i18n.translate(`Polaris.DropZone.${allowMultipleKey}.actionHint${typeSuffix}`)  } = props;
    const buttonStyles = _cssJs.classNames(_fileUploadScssJsDefault.default.Button, _fileUploadScssJsDefault.default.slim, focused && _fileUploadScssJsDefault.default.focused, disabled && _fileUploadScssJsDefault.default.disabled);
    const buttonMarkup = size === 'large' && buttonStyles ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: buttonStyles
    }, actionTitle) : null;
    const actionTitleClassName = _cssJs.classNames(_fileUploadScssJsDefault.default.ActionTitle, focused && !disabled && _fileUploadScssJsDefault.default['ActionTitle-focused'], disabled && _fileUploadScssJsDefault.default['ActionTitle-disabled']);
    const actionTitleMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: actionTitleClassName
    }, actionTitle);
    const fileUploadClassName = _cssJs.classNames(_fileUploadScssJsDefault.default.FileUpload, measuring && _fileUploadScssJsDefault.default.measuring, size === 'large' && _fileUploadScssJsDefault.default.large, size === 'small' && _fileUploadScssJsDefault.default.small);
    let viewMarkup;
    switch(size){
        case 'large':
            viewMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
                vertical: true,
                spacing: "tight"
            }, /*#__PURE__*/ _reactDefault.default.createElement("img", {
                width: "40",
                src: _uploadArrowSvgJsDefault.default,
                alt: ""
            }), buttonMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_captionJs.Caption, null, /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, {
                variation: "subdued"
            }, actionHint)));
            break;
        case 'medium':
            viewMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
                vertical: true,
                spacing: "tight"
            }, actionTitleMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_captionJs.Caption, null, /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, {
                variation: "subdued"
            }, actionHint)));
            break;
        case 'small':
            viewMarkup = /*#__PURE__*/ _reactDefault.default.createElement("img", {
                width: "20",
                src: _uploadArrowSvgJsDefault.default,
                alt: ""
            });
            break;
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: fileUploadClassName
    }, viewMarkup));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/capitalize.js":"ezMs6","../../context.js":"7eFEr","../../utils/index.js":"gj3O6","./FileUpload.scss.js":"9WmNc","../../images/upload-arrow.svg.js":"3yqXv","../../../Caption/Caption.js":"eKCG1","../../../../utilities/i18n/hooks.js":"hHpYD","../../../Stack/Stack.js":"g05gm","../../../TextStyle/TextStyle.js":"cC66D","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9WmNc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "FileUpload": "Polaris-DropZone-FileUpload",
    "large": "Polaris-DropZone-FileUpload--large",
    "small": "Polaris-DropZone-FileUpload--small",
    "Button": "Polaris-DropZone-FileUpload__Button",
    "pressed": "Polaris-DropZone-FileUpload--pressed",
    "disabled": "Polaris-DropZone-FileUpload--disabled",
    "focused": "Polaris-DropZone-FileUpload--focused",
    "sizeSlim": "Polaris-DropZone-FileUpload--sizeSlim",
    "ActionTitle": "Polaris-DropZone-FileUpload__ActionTitle",
    "ActionTitle-disabled": "Polaris-DropZone-FileUpload__ActionTitle--disabled",
    "ActionTitle-focused": "Polaris-DropZone-FileUpload__ActionTitle--focused"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3yqXv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>uploadArrow
);
const img = "data:image/svg+xml,%3csvg fill='none' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M20 10a10 10 0 11-20 0 10 10 0 0120 0zM5.3 8.3l4-4a1 1 0 011.4 0l4 4a1 1 0 01-1.4 1.4L11 7.4V15a1 1 0 11-2 0V7.4L6.7 9.7a1 1 0 01-1.4-1.4z' fill='%235C5F62'/%3e%3c/svg%3e";
var uploadArrow = img;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gLMV0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EmptySearchResult", ()=>EmptySearchResult
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _displayTextJs = require("../DisplayText/DisplayText.js");
var _emptySearchSvgJs = require("./illustrations/empty-search.svg.js");
var _emptySearchSvgJsDefault = parcelHelpers.interopDefault(_emptySearchSvgJs);
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _stackJs = require("../Stack/Stack.js");
var _textStyleJs = require("../TextStyle/TextStyle.js");
var _imageJs = require("../Image/Image.js");
function EmptySearchResult({ title , description , withIllustration  }) {
    const i18n = _hooksJs.useI18n();
    const altText = i18n.translate('Polaris.EmptySearchResult.altText');
    const descriptionMarkup = description ? /*#__PURE__*/ _reactDefault.default.createElement("p", null, description) : null;
    const illustrationMarkup = withIllustration ? /*#__PURE__*/ _reactDefault.default.createElement(_imageJs.Image, {
        alt: altText,
        source: _emptySearchSvgJsDefault.default,
        draggable: false
    }) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
        alignment: "center",
        vertical: true
    }, illustrationMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_displayTextJs.DisplayText, {
        size: "small"
    }, title), /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, {
        variation: "subdued"
    }, descriptionMarkup)));
}

},{"react":"6fep5","../DisplayText/DisplayText.js":"hI3pV","./illustrations/empty-search.svg.js":"8Y2Ek","../../utilities/i18n/hooks.js":"hHpYD","../Stack/Stack.js":"g05gm","../TextStyle/TextStyle.js":"cC66D","../Image/Image.js":"jekWJ","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8Y2Ek":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>emptySearch
);
const img = "data:image/svg+xml,%3csvg width='60' height='60' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M41.87 24a17.87 17.87 0 11-35.74 0 17.87 17.87 0 0135.74 0zm-3.15 18.96a24 24 0 114.24-4.24L59.04 54.8a3 3 0 11-4.24 4.24L38.72 42.96z' fill='%238C9196'/%3e%3c/svg%3e";
var emptySearch = img;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iBhGq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EmptyState", ()=>EmptyState
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _withinContentContextJs = require("../../utilities/within-content-context.js");
var _emptyStateScssJs = require("./EmptyState.scss.js");
var _emptyStateScssJsDefault = parcelHelpers.interopDefault(_emptyStateScssJs);
var _imageJs = require("../Image/Image.js");
var _utilsJs = require("../Button/utils.js");
var _textContainerJs = require("../TextContainer/TextContainer.js");
var _stackJs = require("../Stack/Stack.js");
var _displayTextJs = require("../DisplayText/DisplayText.js");
function EmptyState({ children , heading , image , largeImage , imageContained , fullWidth =false , action , secondaryAction , footerContent  }) {
    const withinContentContainer = _react.useContext(_withinContentContextJs.WithinContentContext);
    const className = _cssJs.classNames(_emptyStateScssJsDefault.default.EmptyState, fullWidth && _emptyStateScssJsDefault.default.fullWidth, imageContained && _emptyStateScssJsDefault.default.imageContained, withinContentContainer && _emptyStateScssJsDefault.default.withinContentContainer);
    const imageMarkup = largeImage ? /*#__PURE__*/ _reactDefault.default.createElement(_imageJs.Image, {
        alt: "",
        role: "presentation",
        className: _emptyStateScssJsDefault.default.Image,
        source: largeImage,
        sourceSet: [
            {
                source: image,
                descriptor: '568w'
            },
            {
                source: largeImage,
                descriptor: '1136w'
            }
        ],
        sizes: "(max-width: 568px) 60vw"
    }) : /*#__PURE__*/ _reactDefault.default.createElement(_imageJs.Image, {
        role: "presentation",
        alt: "",
        className: _emptyStateScssJsDefault.default.Image,
        source: image
    });
    const secondaryActionMarkup = secondaryAction ? _utilsJs.buttonFrom(secondaryAction, {
    }) : null;
    const footerContentMarkup = footerContent ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _emptyStateScssJsDefault.default.FooterContent
    }, /*#__PURE__*/ _reactDefault.default.createElement(_textContainerJs.TextContainer, null, footerContent)) : null;
    const headingSize = withinContentContainer ? 'small' : 'medium';
    const primaryActionMarkup = action ? _utilsJs.buttonFrom(action, {
        primary: true,
        size: 'medium'
    }) : null;
    const headingMarkup = heading ? /*#__PURE__*/ _reactDefault.default.createElement(_displayTextJs.DisplayText, {
        size: headingSize
    }, heading) : null;
    const childrenMarkup = children ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _emptyStateScssJsDefault.default.Content
    }, children) : null;
    const textContentMarkup = headingMarkup || children ? /*#__PURE__*/ _reactDefault.default.createElement(_textContainerJs.TextContainer, null, headingMarkup, childrenMarkup) : null;
    const actionsMarkup = primaryActionMarkup || secondaryActionMarkup ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _emptyStateScssJsDefault.default.Actions
    }, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
        alignment: "center",
        distribution: "center",
        spacing: "tight"
    }, primaryActionMarkup, secondaryActionMarkup)) : null;
    const detailsMarkup = textContentMarkup || actionsMarkup || footerContentMarkup ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _emptyStateScssJsDefault.default.DetailsContainer
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _emptyStateScssJsDefault.default.Details
    }, textContentMarkup, actionsMarkup, footerContentMarkup)) : /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _emptyStateScssJsDefault.default.DetailsContainer
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _emptyStateScssJsDefault.default.Section
    }, detailsMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _emptyStateScssJsDefault.default.ImageContainer
    }, imageMarkup))));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","../../utilities/within-content-context.js":"8TZsv","./EmptyState.scss.js":"MAIhq","../Image/Image.js":"jekWJ","../Button/utils.js":"9W95c","../TextContainer/TextContainer.js":"TbRw7","../Stack/Stack.js":"g05gm","../DisplayText/DisplayText.js":"hI3pV","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"MAIhq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "EmptyState": "Polaris-EmptyState",
    "Section": "Polaris-EmptyState__Section",
    "Details": "Polaris-EmptyState__Details",
    "Image": "Polaris-EmptyState__Image",
    "ImageContainer": "Polaris-EmptyState__ImageContainer",
    "DetailsContainer": "Polaris-EmptyState__DetailsContainer",
    "withinContentContainer": "Polaris-EmptyState--withinContentContainer",
    "Content": "Polaris-EmptyState__Content",
    "imageContained": "Polaris-EmptyState--imageContained",
    "fullWidth": "Polaris-EmptyState--fullWidth",
    "Actions": "Polaris-EmptyState__Actions",
    "FooterContent": "Polaris-EmptyState__FooterContent"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gHhJU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ExceptionList", ()=>ExceptionList
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _exceptionListScssJs = require("./ExceptionList.scss.js");
var _exceptionListScssJsDefault = parcelHelpers.interopDefault(_exceptionListScssJs);
var _truncateJs = require("../Truncate/Truncate.js");
var _iconJs = require("../Icon/Icon.js");
function ExceptionList({ items: itemsList  }) {
    const items = itemsList.map((item, index)=>{
        const { status , icon , title , description , truncate =false  } = item;
        const itemClasses = _cssJs.classNames(_exceptionListScssJsDefault.default.Item, status && _exceptionListScssJsDefault.default[_cssJs.variationName('status', status)]);
        const iconMarkup = icon ? /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
            source: icon
        }) : /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: _exceptionListScssJsDefault.default.Bullet
        });
        const titleMarkup = title && /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: _exceptionListScssJsDefault.default.Title
        }, title);
        const descriptionMarkup = description && /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: _exceptionListScssJsDefault.default.Description
        }, description);
        const Element = truncate ? _truncateJs.Truncate : _react.Fragment;
        return(/*#__PURE__*/ _reactDefault.default.createElement("li", {
            className: itemClasses,
            key: index
        }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: _exceptionListScssJsDefault.default.Icon
        }, iconMarkup), /*#__PURE__*/ _reactDefault.default.createElement(Element, null, titleMarkup, descriptionMarkup)));
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement("ul", {
        className: _exceptionListScssJsDefault.default.ExceptionList
    }, items));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./ExceptionList.scss.js":"fKPDK","../Truncate/Truncate.js":"laK40","../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fKPDK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ExceptionList": "Polaris-ExceptionList",
    "Item": "Polaris-ExceptionList__Item",
    "Icon": "Polaris-ExceptionList__Icon",
    "statusWarning": "Polaris-ExceptionList--statusWarning",
    "statusCritical": "Polaris-ExceptionList--statusCritical",
    "Bullet": "Polaris-ExceptionList__Bullet",
    "Title": "Polaris-ExceptionList__Title",
    "Description": "Polaris-ExceptionList__Description"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"laK40":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Truncate", ()=>Truncate
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _truncateScssJs = require("./Truncate.scss.js");
var _truncateScssJsDefault = parcelHelpers.interopDefault(_truncateScssJs);
function Truncate({ children  }) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _truncateScssJsDefault.default.Truncate
    }, children));
}

},{"react":"6fep5","./Truncate.scss.js":"hEyUw","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hEyUw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Truncate": "Polaris-Truncate"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gVnx9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Filters", ()=>Filters
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _focusJs = require("../../utilities/focus.js");
var _withinFilterContextJs = require("../../utilities/within-filter-context.js");
var _typesJs = require("../../types.js");
var _filtersScssJs = require("./Filters.scss.js");
var _filtersScssJsDefault = parcelHelpers.interopDefault(_filtersScssJs);
var _collapsibleJs = require("../Collapsible/Collapsible.js");
var _connectedFilterControlJs = require("./components/ConnectedFilterControl/ConnectedFilterControl.js");
var _tagsWrapperJs = require("./components/TagsWrapper/TagsWrapper.js");
var _tagJs = require("../Tag/Tag.js");
var _sheetJs = require("../Sheet/Sheet.js");
var _contextJs = require("../../utilities/resource-list/context.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _hooksJs1 = require("../../utilities/media-query/hooks.js");
var _scrollLockJs = require("../ScrollLock/ScrollLock.js");
var _badgeJs = require("../Badge/Badge.js");
var _textStyleJs = require("../TextStyle/TextStyle.js");
var _iconJs = require("../Icon/Icon.js");
var _focusJs1 = require("../Focus/Focus.js");
var _buttonJs = require("../Button/Button.js");
var _textFieldJs = require("../TextField/TextField.js");
var _displayTextJs = require("../DisplayText/DisplayText.js");
var _scrollableJs = require("../Scrollable/Scrollable.js");
var _keypressListenerJs = require("../KeypressListener/KeypressListener.js");
var _stackJs = require("../Stack/Stack.js");
var Suffix1;
(function(Suffix) {
    Suffix["Filter"] = "Filter";
    Suffix["Shortcut"] = "Shortcut";
})(Suffix1 || (Suffix1 = {
}));
class FiltersInner extends _react.Component {
    constructor(...args){
        super(...args);
        this.state = {
            open: false,
            readyForFocus: false
        };
        this.moreFiltersButtonContainer = /*#__PURE__*/ _react.createRef();
        this.moreFiltersDoneButtonContainer = /*#__PURE__*/ _react.createRef();
        this.focusNode = /*#__PURE__*/ _react.createRef();
        this.closeFilters = ()=>{
            this.setState({
                open: false
            }, ()=>{
                if (this.moreFiltersButtonContainer.current) _focusJs.focusFirstFocusableNode(this.moreFiltersButtonContainer.current, false);
            });
        };
        this.toggleFilters = ()=>{
            if (this.state.open === true) this.closeFilters();
            else this.openFilters();
        };
        this.setReadyForFocus = (newState)=>()=>{
                this.setState({
                    readyForFocus: newState
                });
            }
        ;
        this.handleClearAll = ()=>{
            this.props.onClearAll();
            this.moreFiltersDoneButtonContainer.current && _focusJs.focusFirstFocusableNode(this.moreFiltersDoneButtonContainer.current, false);
        };
    }
    render() {
        const { filters , queryValue , onQueryBlur , onQueryChange , onQueryFocus , focused , onClearAll , appliedFilters , onQueryClear , queryPlaceholder , children , disabled =false , helpText , hideTags , hideQueryField , i18n , mediaQuery: { isNavigationCollapsed  }  } = this.props;
        const { resourceName  } = this.context;
        const { open , readyForFocus  } = this.state;
        const backdropMarkup = open ? /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_scrollLockJs.ScrollLock, null), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _filtersScssJsDefault.default.Backdrop,
            onClick: this.closeFilters
        })) : null;
        const filtersContentMarkup = filters.map((filter, index)=>{
            const filterIsOpen = this.state[`${filter.key}${Suffix1.Filter}`] === true;
            const icon = filterIsOpen ? _polarisIcons.ChevronUpMinor : _polarisIcons.ChevronDownMinor;
            const className = _cssJs.classNames(_filtersScssJsDefault.default.FilterTriggerContainer, filterIsOpen && _filtersScssJsDefault.default.open, index === 0 && _filtersScssJsDefault.default.first, filters.length !== 1 && index === filters.length - 1 && _filtersScssJsDefault.default.last);
            const appliedFilterContent = this.getAppliedFilterContent(filter.key);
            const appliedFilterBadgeMarkup = appliedFilterContent ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _filtersScssJsDefault.default.AppliedFilterBadgeContainer
            }, /*#__PURE__*/ _reactDefault.default.createElement(_badgeJs.Badge, {
                size: "small",
                status: "new"
            }, appliedFilterContent)) : null;
            const collapsibleID = `${filter.key}Collapsible`;
            const buttonClassName = _cssJs.classNames(_filtersScssJsDefault.default.FilterTrigger);
            return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                key: filter.key,
                className: className
            }, /*#__PURE__*/ _reactDefault.default.createElement("button", {
                onClick: ()=>this.toggleFilter(filter.key)
                ,
                className: buttonClassName,
                id: `${filter.key}ToggleButton`,
                type: "button",
                "aria-controls": collapsibleID,
                "aria-expanded": filterIsOpen
            }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _filtersScssJsDefault.default.FilterTriggerLabelContainer
            }, /*#__PURE__*/ _reactDefault.default.createElement("h3", {
                className: _filtersScssJsDefault.default.FilterTriggerTitle
            }, /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, {
                variation: this.props.disabled || filter.disabled ? 'subdued' : undefined
            }, filter.label)), /*#__PURE__*/ _reactDefault.default.createElement("span", {
                className: _filtersScssJsDefault.default.FilterTriggerIcon
            }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
                source: icon,
                color: "base"
            }))), appliedFilterBadgeMarkup), /*#__PURE__*/ _reactDefault.default.createElement(_collapsibleJs.Collapsible, {
                id: collapsibleID,
                open: filterIsOpen
            }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _filtersScssJsDefault.default.FilterNodeContainer
            }, /*#__PURE__*/ _reactDefault.default.createElement(_focusJs1.Focus, {
                disabled: !filterIsOpen || !readyForFocus || !open,
                root: this.focusNode
            }, this.generateFilterMarkup(filter))))));
        });
        const appliedFiltersCount = appliedFilters ? appliedFilters.length : 0;
        const moreFiltersLabel = hideTags && appliedFiltersCount > 0 ? i18n.translate('Polaris.Filters.moreFiltersWithCount', {
            count: appliedFiltersCount
        }) : i18n.translate('Polaris.Filters.moreFilters');
        const rightActionMarkup = filters.length ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            ref: this.moreFiltersButtonContainer
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
            onClick: this.toggleFilters,
            disabled: disabled
        }, moreFiltersLabel)) : null;
        const filterResourceName = resourceName || {
            singular: i18n.translate('Polaris.ResourceList.defaultItemSingular'),
            plural: i18n.translate('Polaris.ResourceList.defaultItemPlural')
        };
        const transformedFilters = this.transformFilters(filters);
        const filtersControlMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_connectedFilterControlJs.ConnectedFilterControl, {
            rightPopoverableActions: transformedFilters,
            rightAction: rightActionMarkup,
            auxiliary: children,
            disabled: disabled,
            forceShowMorefiltersButton: filters.length > transformedFilters.length,
            queryFieldHidden: hideQueryField
        }, hideQueryField ? null : /*#__PURE__*/ _reactDefault.default.createElement(_textFieldJs.TextField, {
            placeholder: queryPlaceholder || i18n.translate('Polaris.Filters.filter', {
                resourceName: filterResourceName.plural
            }),
            onChange: onQueryChange,
            onBlur: onQueryBlur,
            onFocus: onQueryFocus,
            value: queryValue,
            focused: focused,
            label: queryPlaceholder || i18n.translate('Polaris.Filters.filter', {
                resourceName: filterResourceName.plural
            }),
            labelHidden: true,
            prefix: /*#__PURE__*/ _reactDefault.default.createElement("span", {
                className: _filtersScssJsDefault.default.SearchIcon
            }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
                source: _polarisIcons.SearchMinor
            })),
            clearButton: true,
            onClearButtonClick: onQueryClear,
            disabled: disabled,
            autoComplete: "off"
        }));
        const filtersContainerHeaderClassname = _cssJs.classNames(_filtersScssJsDefault.default.FiltersContainerHeader);
        const filtersDesktopHeaderMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: filtersContainerHeaderClassname
        }, /*#__PURE__*/ _reactDefault.default.createElement(_displayTextJs.DisplayText, {
            size: "small",
            element: "h3"
        }, moreFiltersLabel), /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
            icon: _polarisIcons.CancelSmallMinor,
            plain: true,
            accessibilityLabel: i18n.translate('Polaris.Filters.cancel'),
            onClick: this.closeFilters
        }));
        const filtersMobileHeaderMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: filtersContainerHeaderClassname
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
            icon: _polarisIcons.CancelSmallMinor,
            plain: true,
            accessibilityLabel: i18n.translate('Polaris.Filters.cancel'),
            onClick: this.closeFilters
        }), /*#__PURE__*/ _reactDefault.default.createElement(_displayTextJs.DisplayText, {
            size: "small",
            element: "h3"
        }, moreFiltersLabel), /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
            onClick: this.closeFilters,
            primary: true
        }, i18n.translate('Polaris.Filters.done')));
        const filtersDesktopFooterClassname = _cssJs.classNames(_filtersScssJsDefault.default.FiltersContainerFooter);
        const filtersDesktopFooterMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: filtersDesktopFooterClassname
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
            onClick: this.handleClearAll,
            disabled: !this.hasAppliedFilters()
        }, i18n.translate('Polaris.Filters.clearAllFilters')), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            ref: this.moreFiltersDoneButtonContainer
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
            onClick: this.closeFilters,
            primary: true
        }, i18n.translate('Polaris.Filters.done'))));
        const filtersMobileFooterMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _filtersScssJsDefault.default.FiltersMobileContainerFooter
        }, this.hasAppliedFilters() ? /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
            onClick: onClearAll,
            fullWidth: true
        }, i18n.translate('Polaris.Filters.clearAllFilters')) : /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _filtersScssJsDefault.default.EmptyFooterState
        }, /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, {
            variation: "subdued"
        }, /*#__PURE__*/ _reactDefault.default.createElement("p", null, i18n.translate('Polaris.Filters.noFiltersApplied')))));
        const shouldHideTagsContainer = !appliedFilters || appliedFilters.length < 1;
        const tagsMarkup = !hideTags ? /*#__PURE__*/ _reactDefault.default.createElement(_tagsWrapperJs.TagsWrapper, {
            hidden: shouldHideTagsContainer
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _filtersScssJsDefault.default.TagsContainer,
            "aria-live": "polite"
        }, (appliedFilters || []).map((filter)=>{
            return(/*#__PURE__*/ _reactDefault.default.createElement(_tagJs.Tag, {
                key: filter.key,
                onRemove: ()=>{
                    filter.onRemove(filter.key);
                },
                disabled: disabled
            }, filter.label));
        }))) : null;
        const filtersMobileContainerContentClassName = _cssJs.classNames(_filtersScssJsDefault.default.FiltersMobileContainerContent);
        const filtersDesktopContainerContentClassName = _cssJs.classNames(_filtersScssJsDefault.default.FiltersDesktopContainerContent);
        const filtersContainerMarkup = isNavigationCollapsed ? /*#__PURE__*/ _reactDefault.default.createElement(_sheetJs.Sheet, {
            accessibilityLabel: moreFiltersLabel,
            open: open,
            onClose: this.closeFilters,
            onEntered: this.setReadyForFocus(true),
            onExit: this.setReadyForFocus(false)
        }, filtersMobileHeaderMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_scrollableJs.Scrollable, {
            className: filtersMobileContainerContentClassName,
            shadow: true
        }, filtersContentMarkup, filtersMobileFooterMarkup)) : /*#__PURE__*/ _reactDefault.default.createElement(_sheetJs.Sheet, {
            accessibilityLabel: moreFiltersLabel,
            open: open,
            onClose: this.closeFilters,
            onEntered: this.setReadyForFocus(true),
            onExit: this.setReadyForFocus(false)
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _filtersScssJsDefault.default.FiltersContainer
        }, filtersDesktopHeaderMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_scrollableJs.Scrollable, {
            className: filtersDesktopContainerContentClassName,
            shadow: true
        }, filtersContentMarkup), filtersDesktopFooterMarkup));
        const helpTextMarkup = helpText ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            id: "FiltersHelpText",
            className: _filtersScssJsDefault.default.HelpText
        }, /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, {
            variation: "subdued"
        }, helpText)) : null;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_withinFilterContextJs.WithinFilterContext.Provider, {
            value: true
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _filtersScssJsDefault.default.Filters
        }, filtersControlMarkup, filtersContainerMarkup, tagsMarkup, helpTextMarkup, backdropMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_keypressListenerJs.KeypressListener, {
            keyCode: _typesJs.Key.Escape,
            handler: this.closeFilters
        }))));
    }
    hasAppliedFilters() {
        const { appliedFilters , queryValue  } = this.props;
        const filtersApplied = Boolean(appliedFilters && appliedFilters.length > 0);
        const queryApplied = Boolean(queryValue && queryValue !== '');
        return filtersApplied || queryApplied;
    }
    getAppliedFilterContent(key8) {
        const { appliedFilters  } = this.props;
        if (!appliedFilters) return undefined;
        const filter1 = appliedFilters.find((filter)=>filter.key === key8
        );
        return filter1 == null ? undefined : filter1.label;
    }
    getAppliedFilterRemoveHandler(key1) {
        const { appliedFilters  } = this.props;
        if (!appliedFilters) return undefined;
        const filter2 = appliedFilters.find((filter)=>filter.key === key1
        );
        return filter2 == null ? undefined : filter2.onRemove;
    }
    openFilters() {
        this.setState({
            open: true
        });
    }
    openFilter(key2) {
        this.setState({
            [`${key2}${Suffix1.Filter}`]: true
        });
    }
    closeFilter(key3) {
        this.setState({
            [`${key3}${Suffix1.Filter}`]: false
        });
    }
    toggleFilter(key4) {
        if (this.state[`${key4}${Suffix1.Filter}`] === true) this.closeFilter(key4);
        else this.openFilter(key4);
    }
    openFilterShortcut(key5) {
        this.setState({
            [`${key5}${Suffix1.Shortcut}`]: true
        });
    }
    closeFilterShortcut(key6) {
        this.setState({
            [`${key6}${Suffix1.Shortcut}`]: false
        });
    }
    toggleFilterShortcut(key7) {
        if (this.state[`${key7}${Suffix1.Shortcut}`] === true) this.closeFilterShortcut(key7);
        else this.openFilterShortcut(key7);
    }
    transformFilters(filters1) {
        const transformedActions = [];
        getShortcutFilters(filters1).forEach((filter)=>{
            const { key , label , disabled  } = filter;
            transformedActions.push({
                popoverContent: this.generateFilterMarkup(filter),
                popoverOpen: Boolean(this.state[`${key}${Suffix1.Shortcut}`]),
                key,
                content: label,
                disabled,
                onAction: ()=>this.toggleFilterShortcut(key)
            });
        });
        return transformedActions;
    }
    generateFilterMarkup(filter3) {
        const i18n = this.props.i18n;
        const removeCallback = this.getAppliedFilterRemoveHandler(filter3.key);
        const removeHandler = removeCallback == null ? undefined : ()=>{
            removeCallback(filter3.key);
        };
        const clearButtonMarkup = !filter3.hideClearButton && /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
            plain: true,
            disabled: removeHandler == null,
            onClick: removeHandler,
            accessibilityLabel: i18n.translate('Polaris.Filters.clearLabel', {
                filterName: filter3.label
            })
        }, i18n.translate('Polaris.Filters.clear'));
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            ref: this.focusNode
        }, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
            vertical: true,
            spacing: "tight"
        }, filter3.filter, clearButtonMarkup)));
    }
}
FiltersInner.contextType = _contextJs.ResourceListContext;
function getShortcutFilters(filters) {
    return filters.filter((filter)=>filter.shortcut === true
    );
}
function Filters(props) {
    const i18n = _hooksJs.useI18n();
    const mediaQuery = _hooksJs1.useMediaQuery();
    return(/*#__PURE__*/ _reactDefault.default.createElement(FiltersInner, Object.assign({
    }, props, {
        i18n: i18n,
        mediaQuery: mediaQuery
    })));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","../../utilities/focus.js":"gLDAi","../../utilities/within-filter-context.js":"k0GUB","../../types.js":"atQnH","./Filters.scss.js":"gSGl6","../Collapsible/Collapsible.js":"g8OGv","./components/ConnectedFilterControl/ConnectedFilterControl.js":"ijyat","./components/TagsWrapper/TagsWrapper.js":"4kKCH","../Tag/Tag.js":"b7k7E","../Sheet/Sheet.js":"zIJMX","../../utilities/resource-list/context.js":"65WNK","../../utilities/i18n/hooks.js":"hHpYD","../../utilities/media-query/hooks.js":"h6QAO","../ScrollLock/ScrollLock.js":"6Ygxi","../Badge/Badge.js":"hM2Xf","../TextStyle/TextStyle.js":"cC66D","../Icon/Icon.js":"flzpR","../Focus/Focus.js":"2fzI2","../Button/Button.js":"g06oC","../TextField/TextField.js":"bVuNq","../DisplayText/DisplayText.js":"hI3pV","../Scrollable/Scrollable.js":"6lHzT","../KeypressListener/KeypressListener.js":"2doU0","../Stack/Stack.js":"g05gm","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gSGl6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Filters": "Polaris-Filters",
    "FiltersContainer": "Polaris-Filters__FiltersContainer",
    "FiltersContainerHeader": "Polaris-Filters__FiltersContainerHeader",
    "FiltersDesktopContainerContent": "Polaris-Filters__FiltersDesktopContainerContent",
    "FiltersMobileContainerContent": "Polaris-Filters__FiltersMobileContainerContent",
    "FiltersContainerFooter": "Polaris-Filters__FiltersContainerFooter",
    "FiltersMobileContainerFooter": "Polaris-Filters__FiltersMobileContainerFooter",
    "EmptyFooterState": "Polaris-Filters__EmptyFooterState",
    "FilterTriggerContainer": "Polaris-Filters__FilterTriggerContainer",
    "FilterTrigger": "Polaris-Filters__FilterTrigger",
    "FilterTriggerTitle": "Polaris-Filters__FilterTriggerTitle",
    "AppliedFilterBadgeContainer": "Polaris-Filters__AppliedFilterBadgeContainer",
    "open": "Polaris-Filters--open",
    "FilterTriggerLabelContainer": "Polaris-Filters__FilterTriggerLabelContainer",
    "first": "Polaris-Filters--first",
    "last": "Polaris-Filters--last",
    "FilterNodeContainer": "Polaris-Filters__FilterNodeContainer",
    "SearchIcon": "Polaris-Filters__SearchIcon",
    "Backdrop": "Polaris-Filters__Backdrop",
    "HelpText": "Polaris-Filters__HelpText",
    "TagsContainer": "Polaris-Filters__TagsContainer"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ijyat":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ConnectedFilterControl", ()=>ConnectedFilterControl
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _cssJs = require("../../../../utilities/css.js");
var _connectedFilterControlScssJs = require("./ConnectedFilterControl.scss.js");
var _connectedFilterControlScssJsDefault = parcelHelpers.interopDefault(_connectedFilterControlScssJs);
var _itemJs = require("./components/Item/Item.js");
var _eventListenerJs = require("../../../EventListener/EventListener.js");
var _buttonJs = require("../../../Button/Button.js");
var _popoverJs = require("../../../Popover/Popover.js");
const FILTER_FIELD_MIN_WIDTH = 150;
class ConnectedFilterControl extends _react.Component {
    constructor(...args){
        super(...args);
        this.state = {
            availableWidth: 0,
            proxyButtonsWidth: {
            }
        };
        this.container = /*#__PURE__*/ _react.createRef();
        this.proxyButtonContainer = /*#__PURE__*/ _react.createRef();
        this.moreFiltersButtonContainer = /*#__PURE__*/ _react.createRef();
        this.handleResize = _debounceDefault.default(()=>{
            this.measureProxyButtons();
            this.measureAvailableWidth();
        }, 40, {
            leading: true,
            trailing: true,
            maxWait: 40
        });
    }
    componentDidMount() {
        this.handleResize();
    }
    render() {
        const { children , rightPopoverableActions , rightAction , auxiliary , forceShowMorefiltersButton =true , queryFieldHidden  } = this.props;
        const actionsToRender = rightPopoverableActions != null ? this.getActionsToRender(rightPopoverableActions) : [];
        const className = _cssJs.classNames(_connectedFilterControlScssJsDefault.default.ConnectedFilterControl, rightPopoverableActions && _connectedFilterControlScssJsDefault.default.right);
        const shouldRenderMoreFiltersButton = forceShowMorefiltersButton || rightPopoverableActions && rightPopoverableActions.length !== actionsToRender.length;
        const RightContainerClassName = _cssJs.classNames(_connectedFilterControlScssJsDefault.default.RightContainer, !shouldRenderMoreFiltersButton && _connectedFilterControlScssJsDefault.default.RightContainerWithoutMoreFilters, queryFieldHidden && _connectedFilterControlScssJsDefault.default.queryFieldHidden);
        const rightMarkup = actionsToRender.length > 0 ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: RightContainerClassName
        }, this.popoverFrom(actionsToRender)) : null;
        const moreFiltersButtonContainerClassname = _cssJs.classNames(_connectedFilterControlScssJsDefault.default.MoreFiltersButtonContainer, actionsToRender.length === 0 && _connectedFilterControlScssJsDefault.default.onlyButtonVisible);
        const rightActionMarkup = rightAction ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            ref: this.moreFiltersButtonContainer,
            className: moreFiltersButtonContainerClassname
        }, shouldRenderMoreFiltersButton && /*#__PURE__*/ _reactDefault.default.createElement(_itemJs.Item, null, rightAction)) : null;
        const proxyButtonMarkup = rightPopoverableActions ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _connectedFilterControlScssJsDefault.default.ProxyButtonContainer,
            ref: this.proxyButtonContainer,
            "aria-hidden": true
        }, rightPopoverableActions.map((action)=>/*#__PURE__*/ _reactDefault.default.createElement("div", {
                key: action.key,
                "data-key": action.key
            }, this.activatorButtonFrom(action, {
                proxy: true
            }))
        )) : null;
        const auxMarkup = auxiliary ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _connectedFilterControlScssJsDefault.default.AuxiliaryContainer
        }, auxiliary) : null;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, proxyButtonMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _connectedFilterControlScssJsDefault.default.Wrapper
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: className,
            ref: this.container
        }, children ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _connectedFilterControlScssJsDefault.default.CenterContainer
        }, /*#__PURE__*/ _reactDefault.default.createElement(_itemJs.Item, null, children)) : null, rightMarkup, rightActionMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            event: "resize",
            handler: this.handleResize
        })), auxMarkup)));
    }
    measureProxyButtons() {
        if (this.proxyButtonContainer.current) {
            const proxyButtonsWidth = {
            }; // this number is magical, but tweaking it solved the problem of items overlapping
            const tolerance = 78;
            if (this.proxyButtonContainer.current) Array.from(this.proxyButtonContainer.current.children).forEach((element)=>{
                const buttonWidth = element.getBoundingClientRect().width + tolerance;
                const buttonKey = element instanceof HTMLElement && element.dataset.key;
                if (buttonKey) proxyButtonsWidth[buttonKey] = buttonWidth;
            });
            this.setState({
                proxyButtonsWidth
            });
        }
    }
    measureAvailableWidth() {
        if (this.container.current && this.moreFiltersButtonContainer.current) {
            const containerWidth = this.container.current.getBoundingClientRect().width;
            const moreFiltersButtonWidth = this.moreFiltersButtonContainer.current.getBoundingClientRect().width;
            const filtersActionWidth = 0;
            const filterFieldMinWidth = this.props.queryFieldHidden ? 0 : FILTER_FIELD_MIN_WIDTH;
            const availableWidth = containerWidth - filterFieldMinWidth - moreFiltersButtonWidth - filtersActionWidth;
            this.setState({
                availableWidth
            });
        }
    }
    getActionsToRender(actions) {
        let remainingWidth = this.state.availableWidth;
        const actionsToReturn = [];
        for(let i = 0; remainingWidth > 0 && i < actions.length; i++){
            const action = actions[i];
            const actionWidth = this.state.proxyButtonsWidth[action.key];
            if (actionWidth <= remainingWidth) {
                actionsToReturn.push(action);
                remainingWidth -= actionWidth;
            } else break;
        }
        return actionsToReturn;
    }
    activatorButtonFrom(action1, options) {
        const id = options !== null && options !== void 0 && options.proxy ? undefined : `Activator-${action1.key}`;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
            onClick: action1.onAction,
            disclosure: true,
            disabled: this.props.disabled || action1.disabled,
            id: id
        }, action1.content));
    }
    popoverFrom(actions1) {
        return actions1.map((action)=>{
            return(/*#__PURE__*/ _reactDefault.default.createElement(_itemJs.Item, {
                key: action.key
            }, /*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
                active: action.popoverOpen,
                activator: this.activatorButtonFrom(action),
                onClose: action.onAction,
                preferredAlignment: "left",
                sectioned: true
            }, action.popoverContent)));
        });
    }
}

},{"react":"6fep5","lodash/debounce":"a9ymG","../../../../utilities/css.js":"kYdwV","./ConnectedFilterControl.scss.js":"enkNc","./components/Item/Item.js":"5CKrA","../../../EventListener/EventListener.js":"gpcxo","../../../Button/Button.js":"g06oC","../../../Popover/Popover.js":"9ztCP","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"enkNc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Item": "Polaris-Filters-ConnectedFilterControl__Item",
    "Item-focused": "Polaris-Filters-ConnectedFilterControl__Item--focused",
    "ProxyButtonContainer": "Polaris-Filters-ConnectedFilterControl__ProxyButtonContainer",
    "ConnectedFilterControl": "Polaris-Filters-ConnectedFilterControl",
    "CenterContainer": "Polaris-Filters-ConnectedFilterControl__CenterContainer",
    "right": "Polaris-Filters-ConnectedFilterControl--right",
    "RightContainer": "Polaris-Filters-ConnectedFilterControl__RightContainer",
    "MoreFiltersButtonContainer": "Polaris-Filters-ConnectedFilterControl__MoreFiltersButtonContainer",
    "queryFieldHidden": "Polaris-Filters-ConnectedFilterControl--queryFieldHidden",
    "RightContainerWithoutMoreFilters": "Polaris-Filters-ConnectedFilterControl__RightContainerWithoutMoreFilters",
    "onlyButtonVisible": "Polaris-Filters-ConnectedFilterControl--onlyButtonVisible",
    "Wrapper": "Polaris-Filters-ConnectedFilterControl__Wrapper",
    "AuxiliaryContainer": "Polaris-Filters-ConnectedFilterControl__AuxiliaryContainer"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5CKrA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Item", ()=>Item
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../../../utilities/css.js");
var _useToggleJs = require("../../../../../../utilities/use-toggle.js");
var _connectedFilterControlScssJs = require("../../ConnectedFilterControl.scss.js");
var _connectedFilterControlScssJsDefault = parcelHelpers.interopDefault(_connectedFilterControlScssJs);
function Item({ children  }) {
    const { value: focused , setTrue: forceTrueFocused , setFalse: forceFalseFocused  } = _useToggleJs.useToggle(false);
    const className = _cssJs.classNames(_connectedFilterControlScssJsDefault.default.Item, focused && _connectedFilterControlScssJsDefault.default['Item-focused']);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        onBlur: forceFalseFocused,
        onFocus: forceTrueFocused,
        className: className
    }, children));
}

},{"react":"6fep5","../../../../../../utilities/css.js":"kYdwV","../../../../../../utilities/use-toggle.js":"jHDnh","../../ConnectedFilterControl.scss.js":"enkNc","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4kKCH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TagsWrapper", ()=>TagsWrapper
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _visuallyHiddenJs = require("../../../VisuallyHidden/VisuallyHidden.js");
function TagsWrapper({ children , hidden  }) {
    if (hidden) return(/*#__PURE__*/ _reactDefault.default.createElement(_visuallyHiddenJs.VisuallyHidden, null, children));
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, children));
}

},{"react":"6fep5","../../../VisuallyHidden/VisuallyHidden.js":"fGCM0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"b7k7E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tag", ()=>Tag
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _focusJs = require("../../utilities/focus.js");
var _tagScssJs = require("./Tag.scss.js");
var _tagScssJsDefault = parcelHelpers.interopDefault(_tagScssJs);
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _iconJs = require("../Icon/Icon.js");
function Tag({ children , disabled =false , onClick , onRemove  }) {
    const i18n = _hooksJs.useI18n();
    const className = _cssJs.classNames(_tagScssJsDefault.default.Tag, disabled && _tagScssJsDefault.default.disabled, onClick && _tagScssJsDefault.default.clickable, onRemove && _tagScssJsDefault.default.removable);
    const ariaLabel = i18n.translate('Polaris.Tag.ariaLabel', {
        children: children || ''
    });
    const removeButton = onRemove ? /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        "aria-label": ariaLabel,
        className: _tagScssJsDefault.default.Button,
        onClick: onRemove,
        onMouseUp: _focusJs.handleMouseUpByBlurring,
        disabled: disabled
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.CancelSmallMinor
    })) : null;
    const tagMarkup = onClick ? /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        disabled: disabled,
        className: className,
        onClick: onClick
    }, children) : /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: className
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        title: children,
        className: _tagScssJsDefault.default.TagText
    }, children), removeButton);
    return tagMarkup;
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","../../utilities/focus.js":"gLDAi","./Tag.scss.js":"dAIjr","../../utilities/i18n/hooks.js":"hHpYD","../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dAIjr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Tag": "Polaris-Tag",
    "disabled": "Polaris-Tag--disabled",
    "removable": "Polaris-Tag--removable",
    "clickable": "Polaris-Tag--clickable",
    "TagText": "Polaris-Tag__TagText",
    "Button": "Polaris-Tag__Button"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"zIJMX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Sheet", ()=>Sheet
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisTokens = require("@shopify/polaris-tokens");
var _reactTransitionGroup = require("react-transition-group");
var _focusJs = require("../../utilities/focus.js");
var _cssJs = require("../../utilities/css.js");
var _typesJs = require("../../types.js");
var _sharedJs = require("../shared.js");
var _sheetScssJs = require("./Sheet.scss.js");
var _sheetScssJsDefault = parcelHelpers.interopDefault(_sheetScssJs);
var _hooksJs = require("../../utilities/media-query/hooks.js");
var _trapFocusJs = require("../TrapFocus/TrapFocus.js");
var _backdropJs = require("../Backdrop/Backdrop.js");
var _portalJs = require("../Portal/Portal.js");
var _keypressListenerJs = require("../KeypressListener/KeypressListener.js");
const BOTTOM_CLASS_NAMES = {
    enter: _cssJs.classNames(_sheetScssJsDefault.default.Bottom, _sheetScssJsDefault.default.enterBottom),
    enterActive: _cssJs.classNames(_sheetScssJsDefault.default.Bottom, _sheetScssJsDefault.default.enterBottomActive),
    exit: _cssJs.classNames(_sheetScssJsDefault.default.Bottom, _sheetScssJsDefault.default.exitBottom),
    exitActive: _cssJs.classNames(_sheetScssJsDefault.default.Bottom, _sheetScssJsDefault.default.exitBottomActive)
};
const RIGHT_CLASS_NAMES = {
    enter: _cssJs.classNames(_sheetScssJsDefault.default.Right, _sheetScssJsDefault.default.enterRight),
    enterActive: _cssJs.classNames(_sheetScssJsDefault.default.Right, _sheetScssJsDefault.default.enterRightActive),
    exit: _cssJs.classNames(_sheetScssJsDefault.default.Right, _sheetScssJsDefault.default.exitRight),
    exitActive: _cssJs.classNames(_sheetScssJsDefault.default.Right, _sheetScssJsDefault.default.exitRightActive)
};
/** @deprecated Use <Modal /> instead or avoid modal patterns all together. */ function Sheet({ children , open , onClose , onEntered , onExit , accessibilityLabel , activator  }) {
    const { isNavigationCollapsed  } = _hooksJs.useMediaQuery();
    const container = _react.useRef(null);
    const activatorRef = _react.useRef(null);
    const handleClose = _react.useCallback(()=>{
        onClose();
        const activatorElement = activator && isRef(activator) ? activator && activator.current : activatorRef.current;
        if (activatorElement) requestAnimationFrame(()=>_focusJs.focusFirstFocusableNode(activatorElement)
        );
    }, [
        activator,
        onClose
    ]);
    _react.useEffect(()=>{
        // eslint-disable-next-line no-console
        console.warn('Deprecation: <Sheet /> is deprecated. This component might be removed in a future major version of Polaris. Use <Modal /> instead or avoid modal patterns all together.');
    }, []);
    const activatorMarkup = activator && !isRef(activator) ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        ref: activatorRef
    }, activator) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, activatorMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_portalJs.Portal, {
        idPrefix: "sheet"
    }, /*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.CSSTransition, {
        nodeRef: container,
        classNames: isNavigationCollapsed ? BOTTOM_CLASS_NAMES : RIGHT_CLASS_NAMES,
        timeout: _polarisTokens.durationSlow,
        in: open,
        mountOnEnter: true,
        unmountOnExit: true,
        onEntered: onEntered,
        onExit: onExit
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", Object.assign({
        className: _sheetScssJsDefault.default.Container
    }, _sharedJs.layer.props, _sharedJs.overlay.props, {
        ref: container
    }), /*#__PURE__*/ _reactDefault.default.createElement(_trapFocusJs.TrapFocus, {
        trapping: open
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        role: "dialog",
        "aria-modal": true,
        tabIndex: -1,
        className: _sheetScssJsDefault.default.Sheet,
        "aria-label": accessibilityLabel
    }, children)))), /*#__PURE__*/ _reactDefault.default.createElement(_keypressListenerJs.KeypressListener, {
        keyCode: _typesJs.Key.Escape,
        handler: handleClose
    }), open && /*#__PURE__*/ _reactDefault.default.createElement(_backdropJs.Backdrop, {
        transparent: true,
        onClick: handleClose
    }))));
}
function isRef(ref) {
    return Object.prototype.hasOwnProperty.call(ref, 'current');
}

},{"react":"6fep5","@shopify/polaris-tokens":"lyXEP","react-transition-group":"eACYM","../../utilities/focus.js":"gLDAi","../../utilities/css.js":"kYdwV","../../types.js":"atQnH","../shared.js":"jYa7v","./Sheet.scss.js":"33qEN","../../utilities/media-query/hooks.js":"h6QAO","../TrapFocus/TrapFocus.js":"kzCup","../Backdrop/Backdrop.js":"8AIrG","../Portal/Portal.js":"6irv6","../KeypressListener/KeypressListener.js":"2doU0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"33qEN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Sheet": "Polaris-Sheet",
    "Container": "Polaris-Sheet__Container",
    "Bottom": "Polaris-Sheet__Bottom",
    "enterBottom": "Polaris-Sheet--enterBottom",
    "enterBottomActive": "Polaris-Sheet--enterBottomActive",
    "exitBottom": "Polaris-Sheet--exitBottom",
    "exitBottomActive": "Polaris-Sheet--exitBottomActive",
    "Right": "Polaris-Sheet__Right",
    "enterRight": "Polaris-Sheet--enterRight",
    "enterRightActive": "Polaris-Sheet--enterRightActive",
    "exitRight": "Polaris-Sheet--exitRight",
    "exitRightActive": "Polaris-Sheet--exitRightActive"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"h6QAO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useMediaQuery", ()=>useMediaQuery
);
var _react = require("react");
var _contextJs = require("./context.js");
function useMediaQuery() {
    const mediaQuery = _react.useContext(_contextJs.MediaQueryContext);
    if (!mediaQuery) throw new Error('No mediaQuery was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/structure/app-provider for implementation instructions.');
    return mediaQuery;
}

},{"react":"6fep5","./context.js":"epjLA","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kzCup":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TrapFocus", ()=>TrapFocus
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _typesJs = require("../../types.js");
var _focusJs = require("../../utilities/focus.js");
var _sharedJs = require("../shared.js");
var _hooksJs = require("../../utilities/focus-manager/hooks.js");
var _focusJs1 = require("../Focus/Focus.js");
var _eventListenerJs = require("../EventListener/EventListener.js");
var _keypressListenerJs = require("../KeypressListener/KeypressListener.js");
function TrapFocus({ trapping =true , children  }) {
    const { canSafelyFocus  } = _hooksJs.useFocusManager({
        trapping
    });
    const focusTrapWrapper = _react.useRef(null);
    const [disableFocus, setDisableFocus] = _react.useState(true);
    _react.useEffect(()=>{
        const disable = canSafelyFocus && !(focusTrapWrapper.current && focusTrapWrapper.current.contains(document.activeElement)) ? !trapping : true;
        setDisableFocus(disable);
    }, [
        canSafelyFocus,
        trapping
    ]);
    const handleFocusIn = (event)=>{
        const containerContentsHaveFocus = focusTrapWrapper.current && focusTrapWrapper.current.contains(document.activeElement);
        if (trapping === false || !focusTrapWrapper.current || containerContentsHaveFocus || event.target instanceof Element && event.target.matches(`${_sharedJs.portal.selector} *`)) return;
        if (canSafelyFocus && event.target instanceof HTMLElement && focusTrapWrapper.current !== event.target && !focusTrapWrapper.current.contains(event.target)) _focusJs.focusFirstFocusableNode(focusTrapWrapper.current);
    };
    const handleTab = (event)=>{
        if (trapping === false || !focusTrapWrapper.current) return;
        const firstFocusableNode = _focusJs.findFirstKeyboardFocusableNode(focusTrapWrapper.current);
        const lastFocusableNode = _focusJs.findLastKeyboardFocusableNode(focusTrapWrapper.current);
        if (event.target === lastFocusableNode && !event.shiftKey) {
            event.preventDefault();
            _focusJs.focusFirstKeyboardFocusableNode(focusTrapWrapper.current);
        }
        if (event.target === firstFocusableNode && event.shiftKey) {
            event.preventDefault();
            _focusJs.focusLastKeyboardFocusableNode(focusTrapWrapper.current);
        }
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement(_focusJs1.Focus, {
        disabled: disableFocus,
        root: focusTrapWrapper.current
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        ref: focusTrapWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
        event: "focusin",
        handler: handleFocusIn
    }), /*#__PURE__*/ _reactDefault.default.createElement(_keypressListenerJs.KeypressListener, {
        keyCode: _typesJs.Key.Tab,
        keyEvent: "keydown",
        handler: handleTab
    }), children)));
}

},{"react":"6fep5","../../types.js":"atQnH","../../utilities/focus.js":"gLDAi","../shared.js":"jYa7v","../../utilities/focus-manager/hooks.js":"6kfVg","../Focus/Focus.js":"2fzI2","../EventListener/EventListener.js":"gpcxo","../KeypressListener/KeypressListener.js":"2doU0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6kfVg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useFocusManager", ()=>useFocusManager
);
var _react = require("react");
var _errorsJs = require("../errors.js");
var _contextJs = require("./context.js");
var _hooksJs = require("../unique-id/hooks.js");
function useFocusManager({ trapping  }) {
    const focusManager = _react.useContext(_contextJs.FocusManagerContext);
    const id = _hooksJs.useUniqueId();
    if (!focusManager) throw new _errorsJs.MissingAppProviderError('No FocusManager was provided.');
    const { trapFocusList , add: addFocusItem , remove: removeFocusItem  } = focusManager;
    const canSafelyFocus = trapFocusList[0] === id;
    const value = _react.useMemo(()=>({
            canSafelyFocus
        })
    , [
        canSafelyFocus
    ]);
    _react.useEffect(()=>{
        if (!trapping) return;
        addFocusItem(id);
        return ()=>{
            removeFocusItem(id);
        };
    }, [
        addFocusItem,
        id,
        removeFocusItem,
        trapping
    ]);
    return value;
}

},{"react":"6fep5","../errors.js":"cGYyH","./context.js":"bTOSB","../unique-id/hooks.js":"kPfFC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2fzI2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Focus", ()=>Focus
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _focusJs = require("../../utilities/focus.js");
const Focus = /*#__PURE__*/ _react.memo(function Focus({ children , disabled , root  }) {
    _react.useEffect(()=>{
        if (disabled || !root) return;
        const node = isRef(root) ? root.current : root;
        if (!node || node.querySelector('[autofocus]')) return;
        _focusJs.focusFirstFocusableNode(node, false);
    }, [
        disabled,
        root
    ]);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, children));
});
function isRef(ref) {
    return ref.current !== undefined;
}

},{"react":"6fep5","../../utilities/focus.js":"gLDAi","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"MVYoJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FooterHelp", ()=>FooterHelp
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _footerHelpScssJs = require("./FooterHelp.scss.js");
var _footerHelpScssJsDefault = parcelHelpers.interopDefault(_footerHelpScssJs);
var _iconJs = require("../Icon/Icon.js");
function FooterHelp({ children  }) {
    const className = _cssJs.classNames(_footerHelpScssJsDefault.default.FooterHelp);
    const iconProps = {
        source: _polarisIcons.InfoMinor,
        color: 'highlight'
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _footerHelpScssJsDefault.default.Content
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _footerHelpScssJsDefault.default.Icon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, iconProps)), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _footerHelpScssJsDefault.default.Text
    }, children))));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","./FooterHelp.scss.js":"8cyrZ","../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8cyrZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "FooterHelp": "Polaris-FooterHelp",
    "Content": "Polaris-FooterHelp__Content",
    "Icon": "Polaris-FooterHelp__Icon",
    "Text": "Polaris-FooterHelp__Text"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"40EEc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Form", ()=>Form
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _visuallyHiddenJs = require("../VisuallyHidden/VisuallyHidden.js");
function Form({ acceptCharset , action , autoComplete , children , encType , implicitSubmit =true , method ='post' , name , noValidate , preventDefault =true , target , onSubmit  }) {
    const i18n = _hooksJs.useI18n();
    const handleSubmit = _react.useCallback((event)=>{
        if (!preventDefault) return;
        event.preventDefault();
        onSubmit(event);
    }, [
        onSubmit,
        preventDefault
    ]);
    const autoCompleteInputs = normalizeAutoComplete(autoComplete);
    const submitMarkup = implicitSubmit ? /*#__PURE__*/ _reactDefault.default.createElement(_visuallyHiddenJs.VisuallyHidden, null, /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "submit",
        "aria-hidden": "true",
        tabIndex: -1
    }, i18n.translate('Polaris.Common.submit'))) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("form", {
        acceptCharset: acceptCharset,
        action: action,
        autoComplete: autoCompleteInputs,
        encType: encType,
        method: method,
        name: name,
        noValidate: noValidate,
        target: target,
        onSubmit: handleSubmit
    }, children, submitMarkup));
}
function normalizeAutoComplete(autoComplete) {
    if (autoComplete == null) return autoComplete;
    return autoComplete ? 'on' : 'off';
}

},{"react":"6fep5","../../utilities/i18n/hooks.js":"hHpYD","../VisuallyHidden/VisuallyHidden.js":"fGCM0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9EoHh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FormLayout", ()=>FormLayout
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _componentsJs = require("../../utilities/components.js");
var _formLayoutScssJs = require("./FormLayout.scss.js");
var _formLayoutScssJsDefault = parcelHelpers.interopDefault(_formLayoutScssJs);
var _groupJs = require("./components/Group/Group.js");
var _itemJs = require("./components/Item/Item.js");
const FormLayout = /*#__PURE__*/ _react.memo(function FormLayout({ children  }) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _formLayoutScssJsDefault.default.FormLayout
    }, _react.Children.map(children, wrapChildren)));
});
FormLayout.Group = _groupJs.Group;
function wrapChildren(child, index) {
    if (_componentsJs.isElementOfType(child, _groupJs.Group)) return child;
    const props = {
        key: index
    };
    return _componentsJs.wrapWithComponent(child, _itemJs.Item, props);
}

},{"react":"6fep5","../../utilities/components.js":"6E8xC","./FormLayout.scss.js":"4cHPK","./components/Group/Group.js":"dCaM0","./components/Item/Item.js":"anOZ1","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4cHPK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "FormLayout": "Polaris-FormLayout",
    "Title": "Polaris-FormLayout__Title",
    "Items": "Polaris-FormLayout__Items",
    "HelpText": "Polaris-FormLayout__HelpText",
    "Item": "Polaris-FormLayout__Item",
    "grouped": "Polaris-FormLayout--grouped",
    "condensed": "Polaris-FormLayout--condensed"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dCaM0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Group", ()=>Group
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _componentsJs = require("../../../../utilities/components.js");
var _formLayoutScssJs = require("../../FormLayout.scss.js");
var _formLayoutScssJsDefault = parcelHelpers.interopDefault(_formLayoutScssJs);
var _itemJs = require("../Item/Item.js");
var _hooksJs = require("../../../../utilities/unique-id/hooks.js");
function Group({ children , condensed , title , helpText  }) {
    const className = _cssJs.classNames(condensed ? _formLayoutScssJsDefault.default.condensed : _formLayoutScssJsDefault.default.grouped);
    const id = _hooksJs.useUniqueId('FormLayoutGroup');
    let helpTextElement = null;
    let helpTextID;
    let titleElement = null;
    let titleID;
    if (helpText) {
        helpTextID = `${id}HelpText`;
        helpTextElement = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            id: helpTextID,
            className: _formLayoutScssJsDefault.default.HelpText
        }, helpText);
    }
    if (title) {
        titleID = `${id}Title`;
        titleElement = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            id: titleID,
            className: _formLayoutScssJsDefault.default.Title
        }, title);
    }
    const itemsMarkup = _react.Children.map(children, (child)=>_componentsJs.wrapWithComponent(child, _itemJs.Item, {
        })
    );
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        role: "group",
        className: className,
        "aria-labelledby": titleID,
        "aria-describedby": helpTextID
    }, titleElement, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _formLayoutScssJsDefault.default.Items
    }, itemsMarkup), helpTextElement));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/components.js":"6E8xC","../../FormLayout.scss.js":"4cHPK","../Item/Item.js":"anOZ1","../../../../utilities/unique-id/hooks.js":"kPfFC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"anOZ1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Item", ()=>Item
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _formLayoutScssJs = require("../../FormLayout.scss.js");
var _formLayoutScssJsDefault = parcelHelpers.interopDefault(_formLayoutScssJs);
function Item(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _formLayoutScssJsDefault.default.Item
    }, props.children));
}

},{"react":"6fep5","../../FormLayout.scss.js":"4cHPK","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iWzJD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Frame", ()=>Frame
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _polarisTokens = require("@shopify/polaris-tokens");
var _reactTransitionGroup = require("react-transition-group");
var _cssJs = require("../../utilities/css.js");
var _sharedJs = require("../shared.js");
var _setRootPropertyJs = require("../../utilities/set-root-property.js");
var _frameScssJs = require("./Frame.scss.js");
var _frameScssJsDefault = parcelHelpers.interopDefault(_frameScssJs);
var _loadingJs = require("./components/Loading/Loading.js");
var _cssanimationJs = require("./components/CSSAnimation/CSSAnimation.js");
var _contextualSaveBarJs = require("./components/ContextualSaveBar/ContextualSaveBar.js");
var _contextJs = require("../../utilities/frame/context.js");
var _toastManagerJs = require("./components/ToastManager/ToastManager.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _hooksJs1 = require("../../utilities/media-query/hooks.js");
var _trapFocusJs = require("../TrapFocus/TrapFocus.js");
var _iconJs = require("../Icon/Icon.js");
var _backdropJs = require("../Backdrop/Backdrop.js");
var _eventListenerJs = require("../EventListener/EventListener.js");
const GLOBAL_RIBBON_CUSTOM_PROPERTY = '--global-ribbon-height';
const APP_FRAME_MAIN = 'AppFrameMain';
const APP_FRAME_NAV = 'AppFrameNav';
const APP_FRAME_TOP_BAR = 'AppFrameTopBar';
const APP_FRAME_LOADING_BAR = 'AppFrameLoadingBar';
class FrameInner extends _react.PureComponent {
    constructor(...args){
        super(...args);
        this.state = {
            skipFocused: false,
            globalRibbonHeight: 0,
            loadingStack: 0,
            toastMessages: [],
            showContextualSaveBar: false
        };
        this.contextualSaveBar = null;
        this.globalRibbonContainer = null;
        this.navigationNode = /*#__PURE__*/ _react.createRef();
        this.setGlobalRibbonHeight = ()=>{
            const { globalRibbonContainer  } = this;
            if (globalRibbonContainer) this.setState({
                globalRibbonHeight: globalRibbonContainer.offsetHeight
            }, this.setGlobalRibbonRootProperty);
        };
        this.setGlobalRibbonRootProperty = ()=>{
            const { globalRibbonHeight  } = this.state;
            _setRootPropertyJs.setRootProperty(GLOBAL_RIBBON_CUSTOM_PROPERTY, `${globalRibbonHeight}px`, null);
        };
        this.showToast = (toast)=>{
            this.setState(({ toastMessages  })=>{
                const hasToastById = toastMessages.find(({ id  })=>id === toast.id
                ) != null;
                return {
                    toastMessages: hasToastById ? toastMessages : [
                        ...toastMessages,
                        toast
                    ]
                };
            });
        };
        this.hideToast = ({ id  })=>{
            this.setState(({ toastMessages  })=>{
                return {
                    toastMessages: toastMessages.filter(({ id: toastId  })=>id !== toastId
                    )
                };
            });
        };
        this.setContextualSaveBar = (props)=>{
            const { showContextualSaveBar  } = this.state;
            this.contextualSaveBar = {
                ...props
            };
            if (showContextualSaveBar === true) this.forceUpdate();
            else this.setState({
                showContextualSaveBar: true
            });
        };
        this.removeContextualSaveBar = ()=>{
            this.contextualSaveBar = null;
            this.setState({
                showContextualSaveBar: false
            });
        };
        this.startLoading = ()=>{
            this.setState(({ loadingStack  })=>({
                    loadingStack: loadingStack + 1
                })
            );
        };
        this.stopLoading = ()=>{
            this.setState(({ loadingStack  })=>({
                    loadingStack: Math.max(0, loadingStack - 1)
                })
            );
        };
        this.handleResize = ()=>{
            if (this.props.globalRibbon) this.setGlobalRibbonHeight();
        };
        this.handleFocus = ()=>{
            this.setState({
                skipFocused: true
            });
        };
        this.handleBlur = ()=>{
            this.setState({
                skipFocused: false
            });
        };
        this.handleClick = (event)=>{
            const { skipToContentTarget  } = this.props;
            if (skipToContentTarget && skipToContentTarget.current) {
                skipToContentTarget.current.focus();
                event === null || event === void 0 || event.preventDefault();
            }
        };
        this.handleNavigationDismiss = ()=>{
            const { onNavigationDismiss  } = this.props;
            if (onNavigationDismiss != null) onNavigationDismiss();
        };
        this.setGlobalRibbonContainer = (node)=>{
            this.globalRibbonContainer = node;
        };
        this.handleNavKeydown = (event)=>{
            const { key  } = event;
            const { mediaQuery: { isNavigationCollapsed  } , showMobileNavigation  } = this.props;
            const mobileNavShowing = isNavigationCollapsed && showMobileNavigation;
            if (mobileNavShowing && key === 'Escape') this.handleNavigationDismiss();
        };
    }
    componentDidMount() {
        this.handleResize();
        if (this.props.globalRibbon) return;
        this.setGlobalRibbonRootProperty();
    }
    componentDidUpdate(prevProps) {
        if (this.props.globalRibbon !== prevProps.globalRibbon) this.setGlobalRibbonHeight();
    }
    render() {
        const { skipFocused , loadingStack , toastMessages , showContextualSaveBar  } = this.state;
        const { children , navigation , topBar , globalRibbon , showMobileNavigation =false , skipToContentTarget , i18n , mediaQuery: { isNavigationCollapsed  }  } = this.props;
        const navClassName = _cssJs.classNames(_frameScssJsDefault.default.Navigation, showMobileNavigation && _frameScssJsDefault.default['Navigation-visible']);
        const mobileNavHidden = isNavigationCollapsed && !showMobileNavigation;
        const mobileNavShowing = isNavigationCollapsed && showMobileNavigation;
        const tabIndex = mobileNavShowing ? 0 : -1;
        const mobileNavAttributes = {
            ...mobileNavShowing && {
                'aria-modal': true,
                role: 'dialog'
            }
        };
        const navigationMarkup = navigation ? /*#__PURE__*/ _reactDefault.default.createElement(_trapFocusJs.TrapFocus, {
            trapping: mobileNavShowing
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.CSSTransition, {
            nodeRef: this.navigationNode,
            appear: isNavigationCollapsed,
            exit: isNavigationCollapsed,
            in: showMobileNavigation,
            timeout: _polarisTokens.durationSlow,
            classNames: navTransitionClasses
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", Object.assign({
        }, mobileNavAttributes, {
            "aria-label": i18n.translate('Polaris.Frame.navigationLabel'),
            ref: this.navigationNode,
            className: navClassName,
            onKeyDown: this.handleNavKeydown,
            id: APP_FRAME_NAV,
            key: "NavContent",
            hidden: mobileNavHidden
        }), navigation, /*#__PURE__*/ _reactDefault.default.createElement("button", {
            type: "button",
            className: _frameScssJsDefault.default.NavigationDismiss,
            onClick: this.handleNavigationDismiss,
            "aria-hidden": mobileNavHidden || !isNavigationCollapsed && !showMobileNavigation,
            "aria-label": i18n.translate('Polaris.Frame.Navigation.closeMobileNavigationLabel'),
            tabIndex: tabIndex
        }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
            source: _polarisIcons.MobileCancelMajor
        }))))) : null;
        const loadingMarkup = loadingStack > 0 ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _frameScssJsDefault.default.LoadingBar,
            id: APP_FRAME_LOADING_BAR
        }, /*#__PURE__*/ _reactDefault.default.createElement(_loadingJs.Loading, null)) : null;
        const contextualSaveBarMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_cssanimationJs.CSSAnimation, {
            in: showContextualSaveBar,
            className: _frameScssJsDefault.default.ContextualSaveBar,
            type: "fade"
        }, /*#__PURE__*/ _reactDefault.default.createElement(_contextualSaveBarJs.ContextualSaveBar, this.contextualSaveBar));
        const topBarMarkup = topBar ? /*#__PURE__*/ _reactDefault.default.createElement("div", Object.assign({
            className: _frameScssJsDefault.default.TopBar
        }, _sharedJs.layer.props, _sharedJs.dataPolarisTopBar.props, {
            id: APP_FRAME_TOP_BAR
        }), topBar) : null;
        const globalRibbonMarkup = globalRibbon ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _frameScssJsDefault.default.GlobalRibbonContainer,
            ref: this.setGlobalRibbonContainer
        }, globalRibbon) : null;
        const skipClassName = _cssJs.classNames(_frameScssJsDefault.default.Skip, skipFocused && _frameScssJsDefault.default.focused);
        const skipTarget = skipToContentTarget !== null && skipToContentTarget !== void 0 && skipToContentTarget.current ? skipToContentTarget.current.id : APP_FRAME_MAIN;
        const skipMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: skipClassName
        }, /*#__PURE__*/ _reactDefault.default.createElement("a", {
            href: `#${skipTarget}`,
            onFocus: this.handleFocus,
            onBlur: this.handleBlur,
            onClick: this.handleClick
        }, i18n.translate('Polaris.Frame.skipToContent')));
        const navigationAttributes = navigation ? {
            'data-has-navigation': true
        } : {
        };
        const frameClassName = _cssJs.classNames(_frameScssJsDefault.default.Frame, navigation && _frameScssJsDefault.default.hasNav, topBar && _frameScssJsDefault.default.hasTopBar);
        const navigationOverlayMarkup = showMobileNavigation && isNavigationCollapsed ? /*#__PURE__*/ _reactDefault.default.createElement(_backdropJs.Backdrop, {
            belowNavigation: true,
            onClick: this.handleNavigationDismiss,
            onTouchStart: this.handleNavigationDismiss
        }) : null;
        const context = {
            showToast: this.showToast,
            hideToast: this.hideToast,
            startLoading: this.startLoading,
            stopLoading: this.stopLoading,
            setContextualSaveBar: this.setContextualSaveBar,
            removeContextualSaveBar: this.removeContextualSaveBar
        };
        return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.FrameContext.Provider, {
            value: context
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", Object.assign({
            className: frameClassName
        }, _sharedJs.layer.props, navigationAttributes), skipMarkup, topBarMarkup, navigationMarkup, contextualSaveBarMarkup, loadingMarkup, navigationOverlayMarkup, /*#__PURE__*/ _reactDefault.default.createElement("main", {
            className: _frameScssJsDefault.default.Main,
            id: APP_FRAME_MAIN,
            "data-has-global-ribbon": Boolean(globalRibbon)
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _frameScssJsDefault.default.Content
        }, children)), /*#__PURE__*/ _reactDefault.default.createElement(_toastManagerJs.ToastManager, {
            toastMessages: toastMessages
        }), globalRibbonMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            event: "resize",
            handler: this.handleResize
        }))));
    }
}
const navTransitionClasses = {
    enter: _cssJs.classNames(_frameScssJsDefault.default['Navigation-enter']),
    enterActive: _cssJs.classNames(_frameScssJsDefault.default['Navigation-enterActive']),
    enterDone: _cssJs.classNames(_frameScssJsDefault.default['Navigation-enterActive']),
    exit: _cssJs.classNames(_frameScssJsDefault.default['Navigation-exit']),
    exitActive: _cssJs.classNames(_frameScssJsDefault.default['Navigation-exitActive'])
};
function Frame(props) {
    const i18n = _hooksJs.useI18n();
    const mediaQuery = _hooksJs1.useMediaQuery();
    return(/*#__PURE__*/ _reactDefault.default.createElement(FrameInner, Object.assign({
    }, props, {
        i18n: i18n,
        mediaQuery: mediaQuery
    })));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","@shopify/polaris-tokens":"lyXEP","react-transition-group":"eACYM","../../utilities/css.js":"kYdwV","../shared.js":"jYa7v","../../utilities/set-root-property.js":"hs4uw","./Frame.scss.js":"2VHXA","./components/Loading/Loading.js":"768np","./components/CSSAnimation/CSSAnimation.js":"5YD5T","./components/ContextualSaveBar/ContextualSaveBar.js":"ejRCX","../../utilities/frame/context.js":"8EZEA","./components/ToastManager/ToastManager.js":"coMJo","../../utilities/i18n/hooks.js":"hHpYD","../../utilities/media-query/hooks.js":"h6QAO","../TrapFocus/TrapFocus.js":"kzCup","../Icon/Icon.js":"flzpR","../Backdrop/Backdrop.js":"8AIrG","../EventListener/EventListener.js":"gpcxo","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hs4uw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setRootProperty", ()=>setRootProperty
);
function setRootProperty(name, value, node) {
    if (document == null) return;
    const styleNode = node && node instanceof HTMLElement ? node : document.documentElement;
    styleNode && styleNode.style.setProperty(name, value);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2VHXA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Frame": "Polaris-Frame",
    "Navigation": "Polaris-Frame__Navigation",
    "hasTopBar": "Polaris-Frame--hasTopBar",
    "Navigation-enter": "Polaris-Frame__Navigation--enter",
    "Navigation-enterActive": "Polaris-Frame__Navigation--enterActive",
    "Navigation-exit": "Polaris-Frame__Navigation--exit",
    "Navigation-exitActive": "Polaris-Frame__Navigation--exitActive",
    "NavigationDismiss": "Polaris-Frame__NavigationDismiss",
    "Navigation-visible": "Polaris-Frame__Navigation--visible",
    "TopBar": "Polaris-Frame__TopBar",
    "ContextualSaveBar": "Polaris-Frame__ContextualSaveBar",
    "Main": "Polaris-Frame__Main",
    "hasNav": "Polaris-Frame--hasNav",
    "Content": "Polaris-Frame__Content",
    "GlobalRibbonContainer": "Polaris-Frame__GlobalRibbonContainer",
    "LoadingBar": "Polaris-Frame__LoadingBar",
    "Skip": "Polaris-Frame__Skip",
    "focused": "Polaris-Frame--focused",
    "pressed": "Polaris-Frame--pressed"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"768np":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Loading", ()=>Loading
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _useIsMountedRefJs = require("../../../../utilities/use-is-mounted-ref.js");
var _loadingScssJs = require("./Loading.scss.js");
var _loadingScssJsDefault = parcelHelpers.interopDefault(_loadingScssJs);
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
const STUCK_THRESHOLD = 99;
function Loading() {
    const i18n = _hooksJs.useI18n();
    const isMountedRef = _useIsMountedRefJs.useIsMountedRef();
    const [progress, setProgress] = _react.useState(0);
    const [animating, setAnimating] = _react.useState(false);
    _react.useEffect(()=>{
        if (progress >= STUCK_THRESHOLD || animating) return;
        requestAnimationFrame(()=>{
            if (!isMountedRef.current) return;
            const step = Math.max((STUCK_THRESHOLD - progress) / 10, 1);
            setAnimating(true);
            setProgress(progress + step);
        });
    }, [
        progress,
        animating,
        isMountedRef
    ]);
    const customStyles = {
        transform: `scaleX(${Math.floor(progress) / 100})`
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _loadingScssJsDefault.default.Loading,
        "aria-valuenow": progress,
        "aria-valuemin": 0,
        "aria-valuemax": 100,
        role: "progressbar",
        "aria-label": i18n.translate('Polaris.Loading.label')
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _loadingScssJsDefault.default.Level,
        style: customStyles,
        onTransitionEnd: ()=>setAnimating(false)
    })));
}

},{"react":"6fep5","../../../../utilities/use-is-mounted-ref.js":"2wE7S","./Loading.scss.js":"9oowh","../../../../utilities/i18n/hooks.js":"hHpYD","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2wE7S":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useIsMountedRef", ()=>useIsMountedRef
);
var _react = require("react");
/**
 * Returns a MutatableRefObject containing a boolean value that
 * represents a components mounted status.
 * @returns MutableRefObject<boolean> The mounted status
 */ function useIsMountedRef() {
    const isMounted = _react.useRef(false);
    _react.useEffect(()=>{
        isMounted.current = true;
        return ()=>{
            isMounted.current = false;
        };
    }, []);
    return isMounted;
}

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9oowh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Loading": "Polaris-Frame-Loading",
    "Level": "Polaris-Frame-Loading__Level"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5YD5T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CSSAnimation", ()=>CSSAnimation
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _cssanimationScssJs = require("./CSSAnimation.scss.js");
var _cssanimationScssJsDefault = parcelHelpers.interopDefault(_cssanimationScssJs);
var TransitionStatus1;
(function(TransitionStatus) {
    TransitionStatus["Entering"] = "entering";
    TransitionStatus["Entered"] = "entered";
    TransitionStatus["Exiting"] = "exiting";
    TransitionStatus["Exited"] = "exited";
})(TransitionStatus1 || (TransitionStatus1 = {
}));
function CSSAnimation({ in: inProp , className , type , children  }) {
    const [transitionStatus1, setTransitionStatus] = _react.useState(inProp ? TransitionStatus1.Entering : TransitionStatus1.Exited);
    const isMounted = _react.useRef(false);
    const node = _react.useRef(null);
    _react.useEffect(()=>{
        if (!isMounted.current) return;
        transitionStatus1 === TransitionStatus1.Entering && changeTransitionStatus(TransitionStatus1.Entered);
    }, [
        transitionStatus1
    ]);
    _react.useEffect(()=>{
        if (!isMounted.current) return;
        inProp && changeTransitionStatus(TransitionStatus1.Entering);
        !inProp && changeTransitionStatus(TransitionStatus1.Exiting);
    }, [
        inProp
    ]);
    _react.useEffect(()=>{
        isMounted.current = true;
    }, []);
    const wrapperClassName = _cssJs.classNames(className, _cssanimationScssJsDefault.default[_cssJs.variationName('start', type)], inProp && _cssanimationScssJsDefault.default[_cssJs.variationName('end', type)]);
    const content = transitionStatus1 === TransitionStatus1.Exited && !inProp ? null : children;
    function handleTransitionEnd() {
        transitionStatus1 === TransitionStatus1.Exiting && changeTransitionStatus(TransitionStatus1.Exited);
    }
    function changeTransitionStatus(transitionStatus) {
        setTransitionStatus(transitionStatus); // Forcing a reflow to enable the animation
        if (transitionStatus === TransitionStatus1.Entering) node.current && node.current.getBoundingClientRect();
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: wrapperClassName,
        ref: node,
        onTransitionEnd: handleTransitionEnd
    }, content));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","./CSSAnimation.scss.js":"1YEDh","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1YEDh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "startFade": "Polaris-Frame-CSSAnimation--startFade",
    "endFade": "Polaris-Frame-CSSAnimation--endFade"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ejRCX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ContextualSaveBar", ()=>ContextualSaveBar
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _getWidthJs = require("../../../../utilities/get-width.js");
var _useToggleJs = require("../../../../utilities/use-toggle.js");
var _contextualSaveBarScssJs = require("./ContextualSaveBar.scss.js");
var _contextualSaveBarScssJsDefault = parcelHelpers.interopDefault(_contextualSaveBarScssJs);
var _hooksJs = require("../../../../utilities/theme/hooks.js");
var _discardConfirmationModalJs = require("./components/DiscardConfirmationModal/DiscardConfirmationModal.js");
var _hooksJs1 = require("../../../../utilities/i18n/hooks.js");
var _buttonJs = require("../../../Button/Button.js");
var _imageJs = require("../../../Image/Image.js");
var _themeProviderJs = require("../../../ThemeProvider/ThemeProvider.js");
var _stackJs = require("../../../Stack/Stack.js");
function ContextualSaveBar({ alignContentFlush , message , saveAction , discardAction , fullWidth , contextControl  }) {
    const i18n = _hooksJs1.useI18n();
    const { logo  } = _hooksJs.useTheme();
    const { value: discardConfirmationModalVisible , toggle: toggleDiscardConfirmationModal , setFalse: closeDiscardConfirmationModal  } = _useToggleJs.useToggle(false);
    const handleDiscardAction = _react.useCallback(()=>{
        if (discardAction && discardAction.onAction) discardAction.onAction();
        closeDiscardConfirmationModal();
    }, [
        closeDiscardConfirmationModal,
        discardAction
    ]);
    const discardActionContent = discardAction && discardAction.content ? discardAction.content : i18n.translate('Polaris.ContextualSaveBar.discard');
    let discardActionHandler;
    if (discardAction && discardAction.discardConfirmationModal) discardActionHandler = toggleDiscardConfirmationModal;
    else if (discardAction) discardActionHandler = discardAction.onAction;
    const discardConfirmationModalMarkup = discardAction && discardAction.onAction && discardAction.discardConfirmationModal && /*#__PURE__*/ _reactDefault.default.createElement(_discardConfirmationModalJs.DiscardConfirmationModal, {
        open: discardConfirmationModalVisible,
        onCancel: toggleDiscardConfirmationModal,
        onDiscard: handleDiscardAction
    });
    const discardActionMarkup = discardAction && /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        url: discardAction.url,
        onClick: discardActionHandler,
        loading: discardAction.loading,
        disabled: discardAction.disabled,
        accessibilityLabel: discardAction.content
    }, discardActionContent);
    const saveActionContent = saveAction && saveAction.content ? saveAction.content : i18n.translate('Polaris.ContextualSaveBar.save');
    const saveActionMarkup = saveAction && /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        primary: true,
        url: saveAction.url,
        onClick: saveAction.onAction,
        loading: saveAction.loading,
        disabled: saveAction.disabled,
        accessibilityLabel: saveAction.content
    }, saveActionContent);
    const width = _getWidthJs.getWidth(logo, 104);
    const imageMarkup = logo && /*#__PURE__*/ _reactDefault.default.createElement(_imageJs.Image, {
        style: {
            width
        },
        source: logo.contextualSaveBarSource || '',
        alt: ""
    });
    const logoMarkup = alignContentFlush || contextControl ? null : /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _contextualSaveBarScssJsDefault.default.LogoContainer,
        style: {
            width
        }
    }, imageMarkup);
    const contextControlMarkup = contextControl ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _contextualSaveBarScssJsDefault.default.ContextControl
    }, contextControl) : null;
    const contentsClassName = _cssJs.classNames(_contextualSaveBarScssJsDefault.default.Contents, fullWidth && _contextualSaveBarScssJsDefault.default.fullWidth);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_themeProviderJs.ThemeProvider, {
        theme: {
            colorScheme: 'inverse'
        }
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _contextualSaveBarScssJsDefault.default.ContextualSaveBar
    }, contextControlMarkup, logoMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: contentsClassName
    }, /*#__PURE__*/ _reactDefault.default.createElement("h2", {
        className: _contextualSaveBarScssJsDefault.default.Message
    }, message), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _contextualSaveBarScssJsDefault.default.ActionContainer
    }, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
        spacing: "tight",
        wrap: false
    }, discardActionMarkup, saveActionMarkup))))), discardConfirmationModalMarkup));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/get-width.js":"Q4f7T","../../../../utilities/use-toggle.js":"jHDnh","./ContextualSaveBar.scss.js":"cmAZb","../../../../utilities/theme/hooks.js":"242tp","./components/DiscardConfirmationModal/DiscardConfirmationModal.js":"3m0bu","../../../../utilities/i18n/hooks.js":"hHpYD","../../../Button/Button.js":"g06oC","../../../Image/Image.js":"jekWJ","../../../ThemeProvider/ThemeProvider.js":"10qny","../../../Stack/Stack.js":"g05gm","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"Q4f7T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getWidth", ()=>getWidth
);
var _pluckDeepJs = require("./pluck-deep.js");
function getWidth(value = {
}, defaultWidth = 0, key = 'width') {
    const width = typeof value === 'number' ? value : _pluckDeepJs.pluckDeep(value, key);
    return width ? `${width}px` : `${defaultWidth}px`;
}

},{"./pluck-deep.js":"4Ctiy","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4Ctiy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "pluckDeep", ()=>pluckDeep
);
var _isObjectJs = require("./is-object.js");
function pluckDeep(obj, key) {
    if (!obj) return null;
    const keys = Object.keys(obj);
    for (const currKey of keys){
        if (currKey === key) return obj[key];
        if (_isObjectJs.isObject(obj[currKey])) {
            const plucked = pluckDeep(obj[currKey], key);
            if (plucked) return plucked;
        }
    }
    return null;
}

},{"./is-object.js":"8sCZW","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8sCZW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isObject", ()=>isObject
);
function isObject(value) {
    const type = typeof value;
    return value != null && (type === 'object' || type === 'function');
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"cmAZb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ContextualSaveBar": "Polaris-Frame-ContextualSaveBar",
    "LogoContainer": "Polaris-Frame-ContextualSaveBar__LogoContainer",
    "ContextControl": "Polaris-Frame-ContextualSaveBar__ContextControl",
    "Message": "Polaris-Frame-ContextualSaveBar__Message",
    "Contents": "Polaris-Frame-ContextualSaveBar__Contents",
    "fullWidth": "Polaris-Frame-ContextualSaveBar--fullWidth",
    "ActionContainer": "Polaris-Frame-ContextualSaveBar__ActionContainer",
    "Action": "Polaris-Frame-ContextualSaveBar__Action"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"242tp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useTheme", ()=>useTheme
);
var _react = require("react");
var _errorsJs = require("../errors.js");
var _contextJs = require("./context.js");
function useTheme() {
    const theme = _react.useContext(_contextJs.ThemeContext);
    if (!theme) throw new _errorsJs.MissingAppProviderError('No Theme was provided.');
    return theme;
}

},{"react":"6fep5","../errors.js":"cGYyH","./context.js":"5MoSS","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3m0bu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DiscardConfirmationModal", ()=>DiscardConfirmationModal
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _modalJs = require("../../../../../Modal/Modal.js");
var _hooksJs = require("../../../../../../utilities/i18n/hooks.js");
function DiscardConfirmationModal({ open , onDiscard , onCancel  }) {
    const i18n = _hooksJs.useI18n();
    return(/*#__PURE__*/ _reactDefault.default.createElement(_modalJs.Modal, {
        title: i18n.translate('Polaris.DiscardConfirmationModal.title'),
        open: open,
        onClose: onCancel,
        primaryAction: {
            content: i18n.translate('Polaris.DiscardConfirmationModal.primaryAction'),
            destructive: true,
            onAction: onDiscard
        },
        secondaryActions: [
            {
                content: i18n.translate('Polaris.DiscardConfirmationModal.secondaryAction'),
                onAction: onCancel
            }
        ],
        sectioned: true
    }, i18n.translate('Polaris.DiscardConfirmationModal.message')));
}

},{"react":"6fep5","../../../../../Modal/Modal.js":"71bC3","../../../../../../utilities/i18n/hooks.js":"hHpYD","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"71bC3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Modal", ()=>Modal
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactTransitionGroup = require("react-transition-group");
var _focusJs = require("../../utilities/focus.js");
var _hooksJs = require("../../utilities/unique-id/hooks.js");
var _withinContentContextJs = require("../../utilities/within-content-context.js");
var _componentsJs = require("../../utilities/components.js");
var _modalScssJs = require("./Modal.scss.js");
var _modalScssJsDefault = parcelHelpers.interopDefault(_modalScssJs);
var _dialogJs = require("./components/Dialog/Dialog.js");
var _headerJs = require("./components/Header/Header.js");
var _sectionJs = require("./components/Section/Section.js");
var _footerJs = require("./components/Footer/Footer.js");
var _hooksJs1 = require("../../utilities/i18n/hooks.js");
var _spinnerJs = require("../Spinner/Spinner.js");
var _scrollableJs = require("../Scrollable/Scrollable.js");
var _portalJs = require("../Portal/Portal.js");
var _backdropJs = require("../Backdrop/Backdrop.js");
const IFRAME_LOADING_HEIGHT = 200;
const DEFAULT_IFRAME_CONTENT_HEIGHT = 400;
const Modal = function Modal({ children , title , titleHidden =false , src , iFrameName , open , instant , sectioned , loading , large , small , limitHeight , footer , primaryAction , secondaryActions , onScrolledToBottom , activator , onClose , onIFrameLoad , onTransitionEnd , noScroll  }) {
    const [iframeHeight, setIframeHeight] = _react.useState(IFRAME_LOADING_HEIGHT);
    const headerId = _hooksJs.useUniqueId('modal-header');
    const activatorRef = _react.useRef(null);
    const i18n = _hooksJs1.useI18n();
    const iframeTitle = i18n.translate('Polaris.Modal.iFrameTitle');
    let dialog;
    let backdrop;
    const handleEntered = _react.useCallback(()=>{
        if (onTransitionEnd) onTransitionEnd();
    }, [
        onTransitionEnd
    ]);
    const handleExited = _react.useCallback(()=>{
        setIframeHeight(IFRAME_LOADING_HEIGHT);
        const activatorElement = activator && isRef(activator) ? activator && activator.current : activatorRef.current;
        if (activatorElement) requestAnimationFrame(()=>_focusJs.focusFirstFocusableNode(activatorElement)
        );
    }, [
        activator
    ]);
    const handleIFrameLoad = _react.useCallback((evt)=>{
        const iframe = evt.target;
        if (iframe && iframe.contentWindow) try {
            setIframeHeight(iframe.contentWindow.document.body.scrollHeight);
        } catch (_error) {
            setIframeHeight(DEFAULT_IFRAME_CONTENT_HEIGHT);
        }
        if (onIFrameLoad != null) onIFrameLoad(evt);
    }, [
        onIFrameLoad
    ]);
    if (open) {
        const footerMarkup = !footer && !primaryAction && !secondaryActions ? null : /*#__PURE__*/ _reactDefault.default.createElement(_footerJs.Footer, {
            primaryAction: primaryAction,
            secondaryActions: secondaryActions
        }, footer);
        const content = sectioned ? _componentsJs.wrapWithComponent(children, _sectionJs.Section, {
        }) : children;
        const body = loading ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _modalScssJsDefault.default.Spinner
        }, /*#__PURE__*/ _reactDefault.default.createElement(_spinnerJs.Spinner, null)) : content;
        const scrollContainerMarkup = noScroll ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _modalScssJsDefault.default.Body
        }, body) : /*#__PURE__*/ _reactDefault.default.createElement(_scrollableJs.Scrollable, {
            shadow: true,
            className: _modalScssJsDefault.default.Body,
            onScrolledToBottom: onScrolledToBottom
        }, body);
        const bodyMarkup = src ? /*#__PURE__*/ _reactDefault.default.createElement("iframe", {
            name: iFrameName,
            title: iframeTitle,
            src: src,
            className: _modalScssJsDefault.default.IFrame,
            onLoad: handleIFrameLoad,
            style: {
                height: `${iframeHeight}px`
            }
        }) : scrollContainerMarkup;
        dialog = /*#__PURE__*/ _reactDefault.default.createElement(_dialogJs.Dialog, {
            instant: instant,
            labelledBy: headerId,
            onClose: onClose,
            onEntered: handleEntered,
            onExited: handleExited,
            large: large,
            small: small,
            limitHeight: limitHeight
        }, /*#__PURE__*/ _reactDefault.default.createElement(_headerJs.Header, {
            titleHidden: titleHidden,
            id: headerId,
            onClose: onClose
        }, title), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _modalScssJsDefault.default.BodyWrapper
        }, bodyMarkup), footerMarkup);
        backdrop = /*#__PURE__*/ _reactDefault.default.createElement(_backdropJs.Backdrop, null);
    }
    const animated = !instant;
    const activatorMarkup = activator && !isRef(activator) ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        ref: activatorRef
    }, activator) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement(_withinContentContextJs.WithinContentContext.Provider, {
        value: true
    }, activatorMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_portalJs.Portal, {
        idPrefix: "modal"
    }, /*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.TransitionGroup, {
        appear: animated,
        enter: animated,
        exit: animated
    }, dialog), backdrop)));
};
function isRef(ref) {
    return Object.prototype.hasOwnProperty.call(ref, 'current');
}
Modal.Section = _sectionJs.Section;

},{"react":"6fep5","react-transition-group":"eACYM","../../utilities/focus.js":"gLDAi","../../utilities/unique-id/hooks.js":"kPfFC","../../utilities/within-content-context.js":"8TZsv","../../utilities/components.js":"6E8xC","./Modal.scss.js":"ln7WH","./components/Dialog/Dialog.js":"1cUIe","./components/Header/Header.js":"1HkQ3","./components/Section/Section.js":"ivfGa","./components/Footer/Footer.js":"R2pP7","../../utilities/i18n/hooks.js":"hHpYD","../Spinner/Spinner.js":"itKPn","../Scrollable/Scrollable.js":"6lHzT","../Portal/Portal.js":"6irv6","../Backdrop/Backdrop.js":"8AIrG","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ln7WH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "BodyWrapper": "Polaris-Modal__BodyWrapper",
    "Body": "Polaris-Modal__Body",
    "IFrame": "Polaris-Modal__IFrame",
    "Spinner": "Polaris-Modal__Spinner"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1cUIe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Dialog", ()=>Dialog
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisTokens = require("@shopify/polaris-tokens");
var _reactTransitionGroup = require("react-transition-group");
var _cssJs = require("../../../../utilities/css.js");
var _focusJs = require("../../../../utilities/focus.js");
var _typesJs = require("../../../../types.js");
var _dialogScssJs = require("./Dialog.scss.js");
var _dialogScssJsDefault = parcelHelpers.interopDefault(_dialogScssJs);
var _trapFocusJs = require("../../../TrapFocus/TrapFocus.js");
var _keypressListenerJs = require("../../../KeypressListener/KeypressListener.js");
function Dialog({ instant , labelledBy , children , onClose , onExited , onEntered , large , small , limitHeight , ...props }) {
    const containerNode = _react.useRef(null);
    const classes = _cssJs.classNames(_dialogScssJsDefault.default.Modal, small && _dialogScssJsDefault.default.sizeSmall, large && _dialogScssJsDefault.default.sizeLarge, limitHeight && _dialogScssJsDefault.default.limitHeight);
    const TransitionChild = instant ? _reactTransitionGroup.Transition : FadeUp;
    _react.useEffect(()=>{
        containerNode.current && !containerNode.current.contains(document.activeElement) && _focusJs.focusFirstFocusableNode(containerNode.current);
    }, []);
    return(/*#__PURE__*/ _reactDefault.default.createElement(TransitionChild, Object.assign({
    }, props, {
        nodeRef: containerNode,
        mountOnEnter: true,
        unmountOnExit: true,
        timeout: _polarisTokens.durationBase,
        onEntered: onEntered,
        onExited: onExited
    }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _dialogScssJsDefault.default.Container,
        "data-polaris-layer": true,
        "data-polaris-overlay": true,
        ref: containerNode
    }, /*#__PURE__*/ _reactDefault.default.createElement(_trapFocusJs.TrapFocus, null, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        role: "dialog",
        "aria-modal": true,
        "aria-labelledby": labelledBy,
        tabIndex: -1,
        className: _dialogScssJsDefault.default.Dialog
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: classes
    }, /*#__PURE__*/ _reactDefault.default.createElement(_keypressListenerJs.KeypressListener, {
        keyCode: _typesJs.Key.Escape,
        handler: onClose
    }), children))))));
}
const fadeUpClasses = {
    appear: _cssJs.classNames(_dialogScssJsDefault.default.animateFadeUp, _dialogScssJsDefault.default.entering),
    appearActive: _cssJs.classNames(_dialogScssJsDefault.default.animateFadeUp, _dialogScssJsDefault.default.entered),
    enter: _cssJs.classNames(_dialogScssJsDefault.default.animateFadeUp, _dialogScssJsDefault.default.entering),
    enterActive: _cssJs.classNames(_dialogScssJsDefault.default.animateFadeUp, _dialogScssJsDefault.default.entered),
    exit: _cssJs.classNames(_dialogScssJsDefault.default.animateFadeUp, _dialogScssJsDefault.default.exiting),
    exitActive: _cssJs.classNames(_dialogScssJsDefault.default.animateFadeUp, _dialogScssJsDefault.default.exited)
};
function FadeUp({ children , ...props }) {
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.CSSTransition, Object.assign({
    }, props, {
        classNames: fadeUpClasses
    }), children));
}

},{"react":"6fep5","@shopify/polaris-tokens":"lyXEP","react-transition-group":"eACYM","../../../../utilities/css.js":"kYdwV","../../../../utilities/focus.js":"gLDAi","../../../../types.js":"atQnH","./Dialog.scss.js":"kiHYy","../../../TrapFocus/TrapFocus.js":"kzCup","../../../KeypressListener/KeypressListener.js":"2doU0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kiHYy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Container": "Polaris-Modal-Dialog__Container",
    "Dialog": "Polaris-Modal-Dialog",
    "Modal": "Polaris-Modal-Dialog__Modal",
    "limitHeight": "Polaris-Modal-Dialog--limitHeight",
    "sizeSmall": "Polaris-Modal-Dialog--sizeSmall",
    "sizeLarge": "Polaris-Modal-Dialog--sizeLarge",
    "animateFadeUp": "Polaris-Modal-Dialog--animateFadeUp",
    "entering": "Polaris-Modal-Dialog--entering",
    "exiting": "Polaris-Modal-Dialog--exiting",
    "exited": "Polaris-Modal-Dialog--exited",
    "entered": "Polaris-Modal-Dialog--entered"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1HkQ3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Header", ()=>Header
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _headerScssJs = require("./Header.scss.js");
var _headerScssJsDefault = parcelHelpers.interopDefault(_headerScssJs);
var _closeButtonJs = require("../CloseButton/CloseButton.js");
var _displayTextJs = require("../../../DisplayText/DisplayText.js");
function Header({ id , titleHidden , children , onClose  }) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: titleHidden || !children ? _headerScssJsDefault.default.titleHidden : _headerScssJsDefault.default.Header
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        id: id,
        className: _headerScssJsDefault.default.Title
    }, /*#__PURE__*/ _reactDefault.default.createElement(_displayTextJs.DisplayText, {
        element: "h2",
        size: "small"
    }, children)), /*#__PURE__*/ _reactDefault.default.createElement(_closeButtonJs.CloseButton, {
        onClick: onClose
    })));
}

},{"react":"6fep5","./Header.scss.js":"3Gvfb","../CloseButton/CloseButton.js":"joJ32","../../../DisplayText/DisplayText.js":"hI3pV","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3Gvfb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Header": "Polaris-Modal-Header",
    "titleHidden": "Polaris-Modal-Header--titleHidden",
    "Title": "Polaris-Modal-Header__Title"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"joJ32":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CloseButton", ()=>CloseButton
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _closeButtonScssJs = require("./CloseButton.scss.js");
var _closeButtonScssJsDefault = parcelHelpers.interopDefault(_closeButtonScssJs);
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
var _iconJs = require("../../../Icon/Icon.js");
function CloseButton({ onClick  }) {
    const i18n = _hooksJs.useI18n();
    return(/*#__PURE__*/ _reactDefault.default.createElement("button", {
        onClick: onClick,
        className: _closeButtonScssJsDefault.default.CloseButton,
        "aria-label": i18n.translate('Polaris.Common.close')
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.MobileCancelMajor,
        color: "base"
    })));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","./CloseButton.scss.js":"fSAiU","../../../../utilities/i18n/hooks.js":"hHpYD","../../../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fSAiU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "CloseButton": "Polaris-Modal-CloseButton"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ivfGa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Section", ()=>Section
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _sectionScssJs = require("./Section.scss.js");
var _sectionScssJsDefault = parcelHelpers.interopDefault(_sectionScssJs);
function Section({ children , flush =false , subdued =false  }) {
    const className = _cssJs.classNames(_sectionScssJsDefault.default.Section, flush && _sectionScssJsDefault.default.flush, subdued && _sectionScssJsDefault.default.subdued);
    return(/*#__PURE__*/ _reactDefault.default.createElement("section", {
        className: className
    }, children));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","./Section.scss.js":"6BxF1","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6BxF1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Section": "Polaris-Modal-Section",
    "subdued": "Polaris-Modal-Section--subdued",
    "flush": "Polaris-Modal-Section--flush"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"R2pP7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Footer", ()=>Footer
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _footerScssJs = require("./Footer.scss.js");
var _footerScssJsDefault = parcelHelpers.interopDefault(_footerScssJs);
var _utilsJs = require("../../../Button/utils.js");
var _stackJs = require("../../../Stack/Stack.js");
var _buttonGroupJs = require("../../../ButtonGroup/ButtonGroup.js");
function Footer({ primaryAction , secondaryActions , children  }) {
    const primaryActionButton = primaryAction && _utilsJs.buttonsFrom(primaryAction, {
        primary: true
    }) || null;
    const secondaryActionButtons = secondaryActions && _utilsJs.buttonsFrom(secondaryActions) || null;
    const actions = primaryActionButton || secondaryActionButtons ? /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, null, secondaryActionButtons, primaryActionButton) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _footerScssJsDefault.default.Footer
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _footerScssJsDefault.default.FooterContent
    }, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
        alignment: "center"
    }, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack.Item, {
        fill: true
    }, children), actions))));
}

},{"react":"6fep5","./Footer.scss.js":"7X652","../../../Button/utils.js":"9W95c","../../../Stack/Stack.js":"g05gm","../../../ButtonGroup/ButtonGroup.js":"kXBsg","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7X652":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Footer": "Polaris-Modal-Footer",
    "FooterContent": "Polaris-Modal-Footer__FooterContent"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"coMJo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ToastManager", ()=>ToastManager
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactTransitionGroup = require("react-transition-group");
var _cssJs = require("../../../../utilities/css.js");
var _useDeepEffectJs = require("../../../../utilities/use-deep-effect.js");
var _useDeepCallbackJs = require("../../../../utilities/use-deep-callback.js");
var _toastManagerScssJs = require("./ToastManager.scss.js");
var _toastManagerScssJsDefault = parcelHelpers.interopDefault(_toastManagerScssJs);
var _toastJs = require("../Toast/Toast.js");
var _portalJs = require("../../../Portal/Portal.js");
var _eventListenerJs = require("../../../EventListener/EventListener.js");
const ToastManager = /*#__PURE__*/ _react.memo(function ToastManager({ toastMessages  }) {
    const toastNodes = [];
    const updateToasts = _useDeepCallbackJs.useDeepCallback(()=>{
        let targetInPos = 0;
        toastMessages.forEach((_, index)=>{
            const currentToast = toastNodes[index];
            if (!currentToast.current) return;
            targetInPos += currentToast.current.clientHeight;
            currentToast.current.style.setProperty('--toast-translate-y-in', `-${targetInPos}px`);
            currentToast.current.style.setProperty('--toast-translate-y-out', `${-targetInPos + 150}px`);
        });
    }, [
        toastMessages,
        toastNodes
    ]);
    _useDeepEffectJs.useDeepEffect(()=>{
        updateToasts();
    }, [
        toastMessages
    ]);
    const toastsMarkup = toastMessages.map((toast, index)=>{
        const toastNode = /*#__PURE__*/ _react.createRef();
        toastNodes[index] = toastNode;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.CSSTransition, {
            nodeRef: toastNodes[index],
            key: toast.id,
            timeout: {
                enter: 0,
                exit: 400
            },
            classNames: toastClasses
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            ref: toastNode
        }, /*#__PURE__*/ _reactDefault.default.createElement(_toastJs.Toast, toast))));
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement(_portalJs.Portal, null, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
        event: "resize",
        handler: updateToasts
    }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _toastManagerScssJsDefault.default.ToastManager,
        "aria-live": "assertive"
    }, /*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.TransitionGroup, {
        component: null
    }, toastsMarkup))));
});
const toastClasses = {
    enter: _cssJs.classNames(_toastManagerScssJsDefault.default.ToastWrapper, _toastManagerScssJsDefault.default['ToastWrapper-enter']),
    enterDone: _cssJs.classNames(_toastManagerScssJsDefault.default.ToastWrapper, _toastManagerScssJsDefault.default['ToastWrapper-enter-done']),
    exit: _cssJs.classNames(_toastManagerScssJsDefault.default.ToastWrapper, _toastManagerScssJsDefault.default['ToastWrapper-exit'])
};

},{"react":"6fep5","react-transition-group":"eACYM","../../../../utilities/css.js":"kYdwV","../../../../utilities/use-deep-effect.js":"k1lca","../../../../utilities/use-deep-callback.js":"3a84I","./ToastManager.scss.js":"aUKgq","../Toast/Toast.js":"8ymea","../../../Portal/Portal.js":"6irv6","../../../EventListener/EventListener.js":"gpcxo","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"k1lca":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useDeepEffect", ()=>useDeepEffect
);
var _react = require("react");
var _useDeepCompareRefJs = require("./use-deep-compare-ref.js");
/**
 * A replacement for React's useEffect that'll allow for custom and deep
 * compares of the dependency list.
 * @see {@link https://reactjs.org/docs/hooks-reference.html#useeffect}
 * @param callback Accepts a callback that's forwarded to React's useEffect
 * @param dependencies A dependency array similar to React's useEffect however it utilizes a deep compare
 * @param customCompare Opportunity to provide a custom compare function
 * @example
 * function ComponentExample() {
 *  const [, forceUpdate] = useState();
 *  const obj = {a: 1};
 *
 *  useDeepEffect(() => {
 *    console.log('useDeepEffect invocation');
 *    forceUpdate(obj);
 *  }, [obj]);
 *
 *  return null;
 * }
 */ function useDeepEffect(callback, dependencies, customCompare) {
    // eslint-disable-next-line react-hooks/exhaustive-deps
    _react.useEffect(callback, _useDeepCompareRefJs.useDeepCompareRef(dependencies, customCompare));
}

},{"react":"6fep5","./use-deep-compare-ref.js":"9YuyK","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9YuyK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useDeepCompareRef", ()=>useDeepCompareRef
);
var _react = require("react");
var _isEqual = require("lodash/isEqual");
var _isEqualDefault = parcelHelpers.interopDefault(_isEqual);
/**
 * Allows for custom or deep comparison of a dependency list. Useful to keep a consistent dependency
 * list across reference changes.
 * @param dependencies A dependency array similar to React's useEffect / useCallback / useMemo
 * @param comparator An optional function to compare dependencies that'll default to a deep comparison
 * @returns A dependency list
 * @see {@link https://github.com/Shopify/polaris-react/blob/main/src/utilities/use-deep-effect.tsx}
 * @see {@link https://github.com/Shopify/polaris-react/blob/main/src/utilities/use-deep-callback.tsx}
 * @example
 * function useDeepEffectExample(callback, dependencies, customCompare) {
 *  useEffect(callback, useDeepCompareRef(dependencies, customCompare));
 * }
 */ function useDeepCompareRef(dependencies, comparator = _isEqualDefault.default) {
    const dependencyList = _react.useRef(dependencies);
    if (!comparator(dependencyList.current, dependencies)) dependencyList.current = dependencies;
    return dependencyList.current;
}

},{"react":"6fep5","lodash/isEqual":"cFVc2","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3a84I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useDeepCallback", ()=>useDeepCallback
);
var _react = require("react");
var _useDeepCompareRefJs = require("./use-deep-compare-ref.js");
/**
 * A replacement for React's useCallback that'll allow for custom and deep compares.
 * @see {@link https://reactjs.org/docs/hooks-reference.html#usecallback}
 * @param callback Accepts a callback that's forwarded to React's useCallback
 * @param dependencies A dependency array similar to React's useCallback however it utilizes a deep compare
 * @param customCompare Opportunity to provide a custom compare function
 * @returns A memoized callback
 * @example
 * const Child = memo(function Child({onClick}) {
 *   console.log('Child has rendered.');
 *   return <button onClick={onClick}>Click me</button>;
 * });
 *
 * function ComponentExample() {
 *   const [timesClicked, setTimesClicked] = useState(0);
 *
 *   const handleClick = useDeepCallback(() => {
 *     setTimesClicked((timesClicked) => timesClicked + 1);
 *     // New reference every render
 *   }, [{}]);
 *
 *   return (
 *     <>
 *       <div>Times clicked: {timesClicked}</div>
 *       <Child onClick={handleClick} />
 *     </>
 *   );
 * }
 */ function useDeepCallback(callback, dependencies, customCompare) {
    // eslint-disable-next-line react-hooks/exhaustive-deps
    return _react.useCallback(callback, _useDeepCompareRefJs.useDeepCompareRef(dependencies, customCompare));
}

},{"react":"6fep5","./use-deep-compare-ref.js":"9YuyK","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aUKgq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ToastManager": "Polaris-Frame-ToastManager",
    "ToastWrapper": "Polaris-Frame-ToastManager__ToastWrapper",
    "ToastWrapper-enter": "Polaris-Frame-ToastManager__ToastWrapper--enter",
    "ToastWrapper-exit": "Polaris-Frame-ToastManager__ToastWrapper--exit",
    "ToastWrapper-enter-done": "Polaris-Frame-ToastManager--toastWrapperEnterDone"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8ymea":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DEFAULT_TOAST_DURATION", ()=>DEFAULT_TOAST_DURATION
);
parcelHelpers.export(exports, "DEFAULT_TOAST_DURATION_WITH_ACTION", ()=>DEFAULT_TOAST_DURATION_WITH_ACTION
);
parcelHelpers.export(exports, "Toast", ()=>Toast
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../../../utilities/css.js");
var _typesJs = require("../../../../types.js");
var _toastScssJs = require("./Toast.scss.js");
var _toastScssJsDefault = parcelHelpers.interopDefault(_toastScssJs);
var _iconJs = require("../../../Icon/Icon.js");
var _buttonJs = require("../../../Button/Button.js");
var _themeProviderJs = require("../../../ThemeProvider/ThemeProvider.js");
var _keypressListenerJs = require("../../../KeypressListener/KeypressListener.js");
const DEFAULT_TOAST_DURATION = 5000;
const DEFAULT_TOAST_DURATION_WITH_ACTION = 10000;
function Toast({ content , onDismiss , duration , error , action  }) {
    _react.useEffect(()=>{
        let timeoutDuration = duration || DEFAULT_TOAST_DURATION;
        if (action && !duration) timeoutDuration = DEFAULT_TOAST_DURATION_WITH_ACTION;
        else if (action && duration && duration < DEFAULT_TOAST_DURATION_WITH_ACTION) // eslint-disable-next-line no-console
        console.log('Toast with action should persist for at least 10,000 milliseconds to give the merchant enough time to act on it.');
        const timer = setTimeout(onDismiss, timeoutDuration);
        return ()=>{
            clearTimeout(timer);
        };
    }, [
        action,
        duration,
        onDismiss
    ]);
    const dismissMarkup = /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        className: _toastScssJsDefault.default.CloseButton,
        onClick: onDismiss
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.MobileCancelMajor
    }));
    const actionMarkup = action ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _toastScssJsDefault.default.Action
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        plain: true,
        monochrome: true,
        onClick: action.onAction
    }, action.content)) : null;
    const className = _cssJs.classNames(_toastScssJsDefault.default.Toast, error && _toastScssJsDefault.default.error);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_themeProviderJs.ThemeProvider, {
        theme: {
            colorScheme: 'inverse'
        }
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, /*#__PURE__*/ _reactDefault.default.createElement(_keypressListenerJs.KeypressListener, {
        keyCode: _typesJs.Key.Escape,
        handler: onDismiss
    }), content, actionMarkup, dismissMarkup)));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../../../utilities/css.js":"kYdwV","../../../../types.js":"atQnH","./Toast.scss.js":"gsyoq","../../../Icon/Icon.js":"flzpR","../../../Button/Button.js":"g06oC","../../../ThemeProvider/ThemeProvider.js":"10qny","../../../KeypressListener/KeypressListener.js":"2doU0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gsyoq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Toast": "Polaris-Frame-Toast",
    "Action": "Polaris-Frame-Toast__Action",
    "error": "Polaris-Frame-Toast--error",
    "CloseButton": "Polaris-Frame-Toast__CloseButton"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5KR5I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IndexTable", ()=>IndexTable
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _reactTransitionGroup = require("react-transition-group");
var _polarisTokens = require("@shopify/polaris-tokens");
var _useToggleJs = require("../../utilities/use-toggle.js");
var _cssJs = require("../../utilities/css.js");
var _indexTableScssJs = require("./IndexTable.scss.js");
var _indexTableScssJsDefault = parcelHelpers.interopDefault(_indexTableScssJs);
var _indexProviderJs = require("../IndexProvider/IndexProvider.js");
var _cellJs = require("./components/Cell/Cell.js");
var _rowJs = require("./components/Row/Row.js");
var _typesJs = require("../../utilities/index-provider/types.js");
var _utilitiesJs = require("./utilities/utilities.js");
var _afterInitialMountJs = require("../AfterInitialMount/AfterInitialMount.js");
var _emptySearchResultJs = require("../EmptySearchResult/EmptySearchResult.js");
var _scrollContainerJs = require("./components/ScrollContainer/ScrollContainer.js");
var _stickyJs = require("../Sticky/Sticky.js");
var _bulkActionsJs = require("../BulkActions/BulkActions.js");
var _hooksJs = require("../../utilities/index-provider/hooks.js");
var _hooksJs1 = require("../../utilities/i18n/hooks.js");
var _stackJs = require("../Stack/Stack.js");
var _checkboxJs = require("../Checkbox/Checkbox.js");
var _spinnerJs = require("../Spinner/Spinner.js");
var _eventListenerJs = require("../EventListener/EventListener.js");
var _badgeJs = require("../Badge/Badge.js");
var _visuallyHiddenJs = require("../VisuallyHidden/VisuallyHidden.js");
var _buttonJs = require("../Button/Button.js");
const SCROLL_BAR_PADDING = 4;
const SIXTY_FPS = 1000 / 60;
const SCROLL_BAR_DEBOUNCE_PERIOD = 300;
const SMALL_SCREEN_WIDTH = 458;
function IndexTableBase({ headings , bulkActions =[] , promotedBulkActions =[] , children , emptyState , sort , lastColumnSticky =false  }) {
    const { loading , bulkSelectState , resourceName , bulkActionsAccessibilityLabel , selectable , selectMode , paginatedSelectAllText , itemCount , hasMoreItems , selectedItemsCount , condensed  } = _hooksJs.useIndexValue();
    const handleSelectionChange = _hooksJs.useIndexSelectionChange();
    const i18n = _hooksJs1.useI18n();
    const { value: hasMoreLeftColumns , toggle: toggleHasMoreLeftColumns  } = _useToggleJs.useToggle(false);
    const tablePosition = _react.useRef({
        top: 0,
        left: 0
    });
    const tableHeadingRects = _react.useRef([]);
    const scrollableContainerElement = _react.useRef(null);
    const tableElement = _react.useRef(null);
    const condensedListElement = _react.useRef(null);
    const [tableInitialized, setTableInitialized] = _react.useState(false);
    const [isSmallScreenSelectable, setIsSmallScreenSelectable] = _react.useState(false);
    const [stickyWrapper, setStickyWrapper] = _react.useState(null);
    const tableHeadings = _react.useRef([]);
    const stickyTableHeadings = _react.useRef([]);
    const stickyHeaderWrapperElement = _react.useRef(null);
    const firstStickyHeaderElement = _react.useRef(null);
    const stickyHeaderElement = _react.useRef(null);
    const scrollBarElement = _react.useRef(null);
    const scrollingWithBar = _react.useRef(false);
    const scrollingContainer = _react.useRef(false);
    const tableBodyRef = _react.useCallback((node)=>{
        if (node !== null && !tableInitialized) setTableInitialized(true);
    }, [
        tableInitialized
    ]);
    const toggleIsSmallScreenSelectable = _react.useCallback(()=>{
        setIsSmallScreenSelectable((value)=>!value
        );
    }, []);
    const handleSelectAllItemsInStore = _react.useCallback(()=>{
        handleSelectionChange(selectedItemsCount === _typesJs.SELECT_ALL_ITEMS ? _typesJs.SelectionType.Page : _typesJs.SelectionType.All, true);
    }, [
        handleSelectionChange,
        selectedItemsCount
    ]);
    const calculateFirstHeaderOffset = _react.useCallback(()=>{
        if (!selectable) return tableHeadingRects.current[0].offsetWidth;
        return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;
    }, [
        condensed,
        selectable
    ]);
    const resizeTableHeadings = _react.useMemo(()=>_debounceDefault.default(()=>{
            if (!tableElement.current || !scrollableContainerElement.current) return;
            const boundingRect = scrollableContainerElement.current.getBoundingClientRect();
            tablePosition.current = {
                top: boundingRect.top,
                left: boundingRect.left
            };
            tableHeadingRects.current = tableHeadings.current.map((heading)=>({
                    offsetWidth: heading.offsetWidth || 0,
                    offsetLeft: heading.offsetLeft || 0
                })
            );
            if (tableHeadings.current.length === 0) return;
             // update left offset for first column
            if (selectable && tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`; // update the min width of the checkbox to be the be the un-padded width of the first heading
            if (selectable && firstStickyHeaderElement !== null && firstStickyHeaderElement !== void 0 && firstStickyHeaderElement.current) {
                const elementStyle = getComputedStyle(tableHeadings.current[0]);
                const boxWidth = tableHeadings.current[0].offsetWidth;
                firstStickyHeaderElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;
            } // update sticky header min-widths
            stickyTableHeadings.current.forEach((heading, index)=>{
                let minWidth = 0;
                if (index === 0 && (!isSmallScreen() || !selectable)) minWidth = calculateFirstHeaderOffset();
                else if (selectable && tableHeadingRects.current.length > index) {
                    var _tableHeadingRects$cu;
                    minWidth = ((_tableHeadingRects$cu = tableHeadingRects.current[index]) === null || _tableHeadingRects$cu === void 0 ? void 0 : _tableHeadingRects$cu.offsetWidth) || 0;
                } else if (!selectable && tableHeadingRects.current.length >= index) {
                    var _tableHeadingRects$cu2;
                    minWidth = ((_tableHeadingRects$cu2 = tableHeadingRects.current[index - 1]) === null || _tableHeadingRects$cu2 === void 0 ? void 0 : _tableHeadingRects$cu2.offsetWidth) || 0;
                }
                heading.style.minWidth = `${minWidth}px`;
            });
        }, SIXTY_FPS, {
            leading: true,
            trailing: true,
            maxWait: SIXTY_FPS
        })
    , [
        calculateFirstHeaderOffset,
        selectable
    ]);
    const resizeTableScrollBar = _react.useCallback(()=>{
        if (scrollBarElement.current && tableElement.current && tableInitialized) scrollBarElement.current.style.setProperty('--p-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);
    }, [
        tableInitialized
    ]); // eslint-disable-next-line react-hooks/exhaustive-deps
    const debounceResizeTableScrollbar = _react.useCallback(_debounceDefault.default(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {
        trailing: true
    }), [
        resizeTableScrollBar
    ]);
    const [canScrollRight1, setCanScrollRight] = _react.useState(true);
    const handleCanScrollRight = _react.useCallback(()=>{
        if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) return;
        const tableRect = tableElement.current.getBoundingClientRect();
        const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();
        setCanScrollRight(tableRect.width > scrollableRect.width);
    }, [
        lastColumnSticky
    ]);
    _react.useEffect(()=>{
        handleCanScrollRight();
    }, [
        handleCanScrollRight
    ]);
    const handleResize = _react.useCallback(()=>{
        var _scrollBarElement$cur;
        // hide the scrollbar when resizing
        (_scrollBarElement$cur = scrollBarElement.current) === null || _scrollBarElement$cur === void 0 || _scrollBarElement$cur.style.setProperty('--p-scroll-bar-content-width', `0px`);
        resizeTableHeadings();
        debounceResizeTableScrollbar();
        handleCanScrollRight();
    }, [
        debounceResizeTableScrollbar,
        resizeTableHeadings,
        handleCanScrollRight
    ]);
    const handleScrollContainerScroll = _react.useCallback((canScrollLeft, canScrollRight)=>{
        if (!scrollableContainerElement.current || !scrollBarElement.current) return;
        if (!scrollingWithBar.current) {
            scrollingContainer.current = true;
            scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;
        }
        scrollingWithBar.current = false;
        if (stickyHeaderElement.current) stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;
        if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) toggleHasMoreLeftColumns();
        setCanScrollRight(canScrollRight);
    }, [
        hasMoreLeftColumns,
        toggleHasMoreLeftColumns
    ]);
    const handleScrollBarScroll = _react.useCallback(()=>{
        if (!scrollableContainerElement.current || !scrollBarElement.current) return;
        if (!scrollingContainer.current) {
            scrollingWithBar.current = true;
            scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;
        }
        scrollingContainer.current = false;
    }, []);
    _react.useEffect(()=>{
        tableHeadings.current = _utilitiesJs.getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');
        stickyTableHeadings.current = _utilitiesJs.getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');
        resizeTableHeadings();
    }, [
        headings,
        resizeTableHeadings,
        firstStickyHeaderElement,
        tableInitialized
    ]);
    _react.useEffect(()=>{
        resizeTableScrollBar();
        setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);
    }, [
        tableInitialized,
        resizeTableScrollBar,
        condensed
    ]);
    _react.useEffect(()=>{
        if (!condensed && isSmallScreenSelectable) setIsSmallScreenSelectable(false);
    }, [
        condensed,
        isSmallScreenSelectable
    ]);
    const hasBulkActions = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);
    const headingsMarkup = headings.map(renderHeading).reduce((acc, heading)=>acc.concat(heading)
    , []);
    const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);
    const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {
        minWidth: calculateFirstHeaderOffset()
    } : undefined;
    const stickyColumnHeader = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _indexTableScssJsDefault.default.TableHeading,
        key: headings[0].title,
        style: stickyColumnHeaderStyle,
        "data-index-table-sticky-heading": true
    }, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
        spacing: "none",
        wrap: false,
        alignment: "center"
    }, selectable && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _indexTableScssJsDefault.default.FirstStickyHeaderElement,
        ref: firstStickyHeaderElement
    }, renderCheckboxContent()), selectable && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _indexTableScssJsDefault.default['StickyTableHeading-second-scrolling']
    }, renderHeadingContent(headings[0])), !selectable && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _indexTableScssJsDefault.default.FirstStickyHeaderElement,
        ref: firstStickyHeaderElement
    }, renderHeadingContent(headings[0]))));
    const stickyHeadingsMarkup = headings.map(renderStickyHeading);
    const selectedItemsCountLabel = selectedItemsCount === _typesJs.SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;
    const handleTogglePage = _react.useCallback(()=>{
        handleSelectionChange(_typesJs.SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));
    }, [
        bulkSelectState,
        handleSelectionChange
    ]);
    const paginatedSelectAllAction = getPaginatedSelectAllAction();
    const loadingTransitionClassNames = {
        enter: _indexTableScssJsDefault.default['LoadingContainer-enter'],
        enterActive: _indexTableScssJsDefault.default['LoadingContainer-enter-active'],
        exit: _indexTableScssJsDefault.default['LoadingContainer-exit'],
        exitActive: _indexTableScssJsDefault.default['LoadingContainer-exit-active']
    };
    const loadingMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_reactTransitionGroup.CSSTransition, {
        in: loading,
        classNames: loadingTransitionClassNames,
        timeout: _polarisTokens.durationFast,
        appear: true,
        unmountOnExit: true
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _indexTableScssJsDefault.default.LoadingPanel
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _indexTableScssJsDefault.default.LoadingPanelRow
    }, /*#__PURE__*/ _reactDefault.default.createElement(_spinnerJs.Spinner, {
        size: "small"
    }), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _indexTableScssJsDefault.default.LoadingPanelText
    }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {
        resourceNamePlural: resourceName.plural.toLocaleLowerCase()
    })))));
    const stickyTableClassNames = _cssJs.classNames(_indexTableScssJsDefault.default.StickyTable, condensed && _indexTableScssJsDefault.default['StickyTable-condensed']);
    const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount || isSmallScreenSelectable;
    const stickyHeaderMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: stickyTableClassNames,
        role: "presentation"
    }, /*#__PURE__*/ _reactDefault.default.createElement(_stickyJs.Sticky, {
        boundingElement: stickyWrapper
    }, (isSticky)=>{
        const stickyHeaderClassNames = _cssJs.classNames(_indexTableScssJsDefault.default.StickyTableHeader, isSticky && _indexTableScssJsDefault.default['StickyTableHeader-isSticky']);
        const bulkActionClassNames = _cssJs.classNames(_indexTableScssJsDefault.default.BulkActionsWrapper, condensed && _indexTableScssJsDefault.default['StickyTableHeader-condensed'], isSticky && _indexTableScssJsDefault.default['StickyTableHeader-isSticky']);
        const shouldShowActions = !condensed || selectedItemsCount;
        const promotedActions = shouldShowActions ? promotedBulkActions : [];
        const actions = shouldShowActions ? bulkActions : [];
        const bulkActionsMarkup = shouldShowBulkActions ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: bulkActionClassNames,
            "data-condensed": condensed
        }, loadingMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_bulkActionsJs.BulkActions, {
            smallScreen: condensed,
            label: i18n.translate('Polaris.IndexTable.selected', {
                selectedItemsCount: selectedItemsCountLabel
            }),
            accessibilityLabel: bulkActionsAccessibilityLabel,
            selected: bulkSelectState,
            selectMode: selectMode || isSmallScreenSelectable,
            onToggleAll: handleTogglePage,
            promotedActions: promotedActions,
            actions: actions,
            paginatedSelectAllText: paginatedSelectAllText,
            paginatedSelectAllAction: paginatedSelectAllAction,
            onSelectModeToggle: condensed ? handleSelectModeToggle : undefined
        })) : null;
        const stickyColumnHeaderClassNames = _cssJs.classNames(_indexTableScssJsDefault.default.StickyTableColumnHeader, hasMoreLeftColumns && _indexTableScssJsDefault.default['StickyTableColumnHeader-isScrolling']);
        const selectButtonMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
            icon: _polarisIcons.EnableSelectionMinor,
            onClick: toggleIsSmallScreenSelectable
        }, i18n.translate('Polaris.IndexTable.selectButtonText'));
        const headerMarkup = condensed ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _cssJs.classNames(_indexTableScssJsDefault.default.HeaderWrapper, !selectable && _indexTableScssJsDefault.default.unselectable)
        }, loadingMarkup, sort, selectable && selectButtonMarkup) : /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: stickyHeaderClassNames,
            ref: stickyHeaderWrapperElement
        }, loadingMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: stickyColumnHeaderClassNames
        }, stickyColumnHeader), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _indexTableScssJsDefault.default.StickyTableHeadings,
            ref: stickyHeaderElement
        }, stickyHeadingsMarkup));
        const stickyContent = bulkActionsMarkup ? bulkActionsMarkup : headerMarkup;
        return stickyContent;
    }));
    const scrollBarWrapperClassNames = _cssJs.classNames(_indexTableScssJsDefault.default.ScrollBarContainer, condensed && _indexTableScssJsDefault.default.scrollBarContainerCondensed);
    const scrollBarClassNames = _cssJs.classNames(tableElement.current && tableInitialized && _indexTableScssJsDefault.default.ScrollBarContent);
    const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/ _reactDefault.default.createElement(_afterInitialMountJs.AfterInitialMount, null, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: scrollBarWrapperClassNames
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        onScroll: handleScrollBarScroll,
        className: _indexTableScssJsDefault.default.ScrollBar,
        ref: scrollBarElement
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: scrollBarClassNames
    })))) : null;
    const tableClassNames = _cssJs.classNames(_indexTableScssJsDefault.default.Table, hasMoreLeftColumns && _indexTableScssJsDefault.default['Table-scrolling'], selectMode && _indexTableScssJsDefault.default.disableTextSelection, selectMode && shouldShowBulkActions && _indexTableScssJsDefault.default.selectMode, !selectable && _indexTableScssJsDefault.default['Table-unselectable'], lastColumnSticky && _indexTableScssJsDefault.default['Table-sticky-last'], lastColumnSticky && canScrollRight1 && _indexTableScssJsDefault.default['Table-sticky-scrolling']);
    const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/ _reactDefault.default.createElement(_emptySearchResultJs.EmptySearchResult, {
        title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {
            resourceNamePlural: resourceName.plural
        }),
        description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),
        withIllustration: true
    });
    const sharedMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
        event: "resize",
        handler: handleResize
    }), /*#__PURE__*/ _reactDefault.default.createElement(_afterInitialMountJs.AfterInitialMount, null, stickyHeaderMarkup));
    const bodyMarkup = condensed ? /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, sharedMarkup, /*#__PURE__*/ _reactDefault.default.createElement("ul", {
        "data-selectmode": Boolean(selectMode || isSmallScreenSelectable),
        className: _indexTableScssJsDefault.default.CondensedList,
        ref: condensedListElement
    }, children)) : /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, sharedMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_scrollContainerJs.ScrollContainer, {
        scrollableContainerRef: scrollableContainerElement,
        onScroll: handleScrollContainerScroll
    }, /*#__PURE__*/ _reactDefault.default.createElement("table", {
        ref: tableElement,
        className: tableClassNames
    }, /*#__PURE__*/ _reactDefault.default.createElement("thead", null, /*#__PURE__*/ _reactDefault.default.createElement("tr", {
        className: _indexTableScssJsDefault.default.HeadingRow
    }, headingsMarkup)), /*#__PURE__*/ _reactDefault.default.createElement("tbody", {
        ref: tableBodyRef
    }, children))));
    const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _indexTableScssJsDefault.default.EmptySearchResultWrapper
    }, emptyStateMarkup);
    function renderHeading(heading, index) {
        const isSecond = index === 0;
        const isLast = index === headings.length - 1;
        const headingContentClassName = _cssJs.classNames(_indexTableScssJsDefault.default.TableHeading, isSecond && _indexTableScssJsDefault.default['TableHeading-second'], isLast && !heading.hidden && _indexTableScssJsDefault.default['TableHeading-last'], !selectable && _indexTableScssJsDefault.default['TableHeading-unselectable']);
        const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {
            left: tableHeadingRects.current[0].offsetWidth
        } : undefined;
        const headingContent = /*#__PURE__*/ _reactDefault.default.createElement("th", {
            className: headingContentClassName,
            key: heading.title,
            "data-index-table-heading": true,
            style: stickyPositioningStyle
        }, renderHeadingContent(heading));
        if (index !== 0 || !selectable) {
            return headingContent;
        }
        const checkboxClassName = _cssJs.classNames(_indexTableScssJsDefault.default.TableHeading, index === 0 && _indexTableScssJsDefault.default['TableHeading-first']);
        const checkboxContent = /*#__PURE__*/ _reactDefault.default.createElement("th", {
            className: checkboxClassName,
            key: `${heading}-${index}`,
            "data-index-table-heading": true
        }, renderCheckboxContent());
        return [
            checkboxContent,
            headingContent
        ];
    }
    function renderCheckboxContent() {
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _indexTableScssJsDefault.default.ColumnHeaderCheckboxWrapper
        }, /*#__PURE__*/ _reactDefault.default.createElement(_checkboxJs.Checkbox, {
            label: i18n.translate('Polaris.IndexTable.selectAllLabel', {
                resourceNamePlural: resourceName.plural
            }),
            labelHidden: true,
            onChange: handleSelectPage,
            checked: bulkSelectState
        })));
    }
    function renderHeadingContent(heading) {
        let headingContent;
        if (heading.new) {
            headingContent = /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
                wrap: false,
                alignment: "center"
            }, /*#__PURE__*/ _reactDefault.default.createElement("span", null, heading.title), /*#__PURE__*/ _reactDefault.default.createElement(_badgeJs.Badge, {
                status: "new"
            }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));
        } else if (heading.hidden) {
            headingContent = /*#__PURE__*/ _reactDefault.default.createElement(_visuallyHiddenJs.VisuallyHidden, null, heading.title);
        } else {
            headingContent = heading.title;
        }
        return headingContent;
    }
    function handleSelectPage(checked) {
        handleSelectionChange(_typesJs.SelectionType.Page, checked);
    }
    function renderStickyHeading(heading, index) {
        const position = index + 1;
        const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {
            minWidth: tableHeadingRects.current[position].offsetWidth
        } : undefined;
        const headingContent = renderHeadingContent(heading);
        const stickyHeadingClassName = _cssJs.classNames(_indexTableScssJsDefault.default.TableHeading, index === 0 && _indexTableScssJsDefault.default['StickyTableHeading-second'], index === 0 && !selectable && _indexTableScssJsDefault.default.unselectable);
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: stickyHeadingClassName,
            key: heading.title,
            style: headingStyle,
            "data-index-table-sticky-heading": true
        }, headingContent));
    }
    function getPaginatedSelectAllAction() {
        if (!selectable || !hasBulkActions || !hasMoreItems) {
            return;
        }
        const actionText = selectedItemsCount === _typesJs.SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : i18n.translate('Polaris.IndexTable.selectAllItems', {
            itemsLength: itemCount,
            resourceNamePlural: resourceName.plural.toLocaleLowerCase()
        });
        return {
            content: actionText,
            onAction: handleSelectAllItemsInStore
        };
    }
    function handleSelectModeToggle(val) {
        handleSelectionChange(_typesJs.SelectionType.All, false);
        setIsSmallScreenSelectable(val);
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _indexTableScssJsDefault.default.IndexTable
    }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), scrollBarMarkup));
}
const isSmallScreen = ()=>{
    return typeof window === 'undefined' ? false : window.innerWidth < SMALL_SCREEN_WIDTH;
};
function IndexTable({ children , selectable =true , itemCount , selectedItemsCount =0 , resourceName: passedResourceName , loading , hasMoreItems , condensed , onSelectionChange , ...indexTableBaseProps }) {
    return(/*#__PURE__*/ _reactDefault.default.createElement(_indexProviderJs.IndexProvider, {
        selectable: selectable,
        itemCount: itemCount,
        selectedItemsCount: selectedItemsCount,
        resourceName: passedResourceName,
        loading: loading,
        hasMoreItems: hasMoreItems,
        condensed: condensed,
        onSelectionChange: onSelectionChange
    }, /*#__PURE__*/ _reactDefault.default.createElement(IndexTableBase, indexTableBaseProps, children)));
}
IndexTable.Cell = _cellJs.Cell;
IndexTable.Row = _rowJs.Row;

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","lodash/debounce":"a9ymG","react-transition-group":"eACYM","@shopify/polaris-tokens":"lyXEP","../../utilities/use-toggle.js":"jHDnh","../../utilities/css.js":"kYdwV","./IndexTable.scss.js":"lQjUb","../IndexProvider/IndexProvider.js":"6oKog","./components/Cell/Cell.js":"7p6sT","./components/Row/Row.js":"fJ3W7","../../utilities/index-provider/types.js":"9G1lU","./utilities/utilities.js":"3ctIm","../AfterInitialMount/AfterInitialMount.js":"7ZjkO","../EmptySearchResult/EmptySearchResult.js":"gLMV0","./components/ScrollContainer/ScrollContainer.js":"1rYsY","../Sticky/Sticky.js":"2AUGc","../BulkActions/BulkActions.js":"1JynG","../../utilities/index-provider/hooks.js":"f9mUT","../../utilities/i18n/hooks.js":"hHpYD","../Stack/Stack.js":"g05gm","../Checkbox/Checkbox.js":"irP0n","../Spinner/Spinner.js":"itKPn","../EventListener/EventListener.js":"gpcxo","../Badge/Badge.js":"hM2Xf","../VisuallyHidden/VisuallyHidden.js":"fGCM0","../Button/Button.js":"g06oC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lQjUb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "IndexTable": "Polaris-IndexTable",
    "LoadingContainer-enter": "Polaris-IndexTable__LoadingContainer--enter",
    "LoadingContainer-enter-active": "Polaris-IndexTable--loadingContainerEnterActive",
    "LoadingContainer-exit": "Polaris-IndexTable__LoadingContainer--exit",
    "LoadingContainer-exit-active": "Polaris-IndexTable--loadingContainerExitActive",
    "LoadingPanel": "Polaris-IndexTable__LoadingPanel",
    "LoadingPanelRow": "Polaris-IndexTable__LoadingPanelRow",
    "LoadingPanelText": "Polaris-IndexTable__LoadingPanelText",
    "Table": "Polaris-IndexTable__Table",
    "Table-scrolling": "Polaris-IndexTable__Table--scrolling",
    "TableCell-first": "Polaris-IndexTable__TableCell--first",
    "TableCell": "Polaris-IndexTable__TableCell",
    "TableHeading-first": "Polaris-IndexTable__TableHeading--first",
    "TableHeading-second": "Polaris-IndexTable__TableHeading--second",
    "Table-unselectable": "Polaris-IndexTable__Table--unselectable",
    "TableRow": "Polaris-IndexTable__TableRow",
    "TableRow-unclickable": "Polaris-IndexTable__TableRow--unclickable",
    "statusSuccess": "Polaris-IndexTable--statusSuccess",
    "statusSubdued": "Polaris-IndexTable--statusSubdued",
    "TableRow-hovered": "Polaris-IndexTable__TableRow--hovered",
    "TableRow-selected": "Polaris-IndexTable__TableRow--selected",
    "TableRow-subdued": "Polaris-IndexTable__TableRow--subdued",
    "TableHeading": "Polaris-IndexTable__TableHeading",
    "ColumnHeaderCheckboxWrapper": "Polaris-IndexTable__ColumnHeaderCheckboxWrapper",
    "FirstStickyHeaderElement": "Polaris-IndexTable__FirstStickyHeaderElement",
    "TableHeading-unselectable": "Polaris-IndexTable__TableHeading--unselectable",
    "TableCell-flush": "Polaris-IndexTable__TableCell--flush",
    "Table-sticky-scrolling": "Polaris-IndexTable--tableStickyScrolling",
    "TableHeading-last": "Polaris-IndexTable__TableHeading--last",
    "Table-sticky-last": "Polaris-IndexTable--tableStickyLast",
    "StickyTable": "Polaris-IndexTable__StickyTable",
    "StickyTableHeader": "Polaris-IndexTable__StickyTableHeader",
    "StickyTableHeader-isSticky": "Polaris-IndexTable__StickyTableHeader--isSticky",
    "StickyTableColumnHeader": "Polaris-IndexTable__StickyTableColumnHeader",
    "StickyTableColumnHeader-isScrolling": "Polaris-IndexTable__StickyTableColumnHeader--isScrolling",
    "StickyTableHeadings": "Polaris-IndexTable__StickyTableHeadings",
    "StickyTableHeading-second": "Polaris-IndexTable__StickyTableHeading--second",
    "unselectable": "Polaris-IndexTable--unselectable",
    "StickyTableHeading-second-scrolling": "Polaris-IndexTable--stickyTableHeadingSecondScrolling",
    "ScrollLeft": "Polaris-IndexTable__ScrollLeft",
    "ScrollRight": "Polaris-IndexTable__ScrollRight",
    "ScrollRight-onboarding": "Polaris-IndexTable__ScrollRight--onboarding",
    "BulkActionsWrapper": "Polaris-IndexTable__BulkActionsWrapper",
    "ScrollBarContainer": "Polaris-IndexTable__ScrollBarContainer",
    "scrollBarContainerCondensed": "Polaris-IndexTable--scrollBarContainerCondensed",
    "ScrollBar": "Polaris-IndexTable__ScrollBar",
    "disableTextSelection": "Polaris-IndexTable--disableTextSelection",
    "selectMode": "Polaris-IndexTable--selectMode",
    "EmptySearchResultWrapper": "Polaris-IndexTable__EmptySearchResultWrapper",
    "condensedRow": "Polaris-IndexTable--condensedRow",
    "CondensedList": "Polaris-IndexTable__CondensedList",
    "HeaderWrapper": "Polaris-IndexTable__HeaderWrapper",
    "StickyTable-condensed": "Polaris-IndexTable__StickyTable--condensed",
    "StickyTableHeader-condensed": "Polaris-IndexTable__StickyTableHeader--condensed",
    "ScrollBarContent": "Polaris-IndexTable__ScrollBarContent"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6oKog":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IndexProvider", ()=>IndexProvider
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _hooksJs = require("../../utilities/index-provider/hooks.js");
var _contextJs = require("../../utilities/index-provider/context.js");
function IndexProvider({ children , resourceName: passedResourceName , loading , onSelectionChange , selectedItemsCount =0 , itemCount , hasMoreItems , condensed , selectable: isSelectableIndex = true  }) {
    const { paginatedSelectAllText , bulkActionsLabel , bulkActionsAccessibilityLabel , resourceName , selectMode , bulkSelectState  } = _hooksJs.useBulkSelectionData({
        selectedItemsCount,
        itemCount,
        hasMoreItems,
        resourceName: passedResourceName
    });
    const handleSelectionChange = _hooksJs.useHandleBulkSelection({
        onSelectionChange
    });
    const contextValue = _react.useMemo(()=>({
            itemCount,
            selectMode: selectMode && isSelectableIndex,
            selectable: isSelectableIndex,
            resourceName,
            loading,
            paginatedSelectAllText,
            hasMoreItems,
            bulkActionsLabel,
            bulkActionsAccessibilityLabel,
            bulkSelectState,
            selectedItemsCount,
            condensed
        })
    , [
        itemCount,
        selectMode,
        isSelectableIndex,
        resourceName,
        loading,
        paginatedSelectAllText,
        hasMoreItems,
        bulkActionsLabel,
        bulkActionsAccessibilityLabel,
        bulkSelectState,
        selectedItemsCount,
        condensed
    ]);
    const rowContextValue = _react.useMemo(()=>({
            selectable: isSelectableIndex,
            selectMode: selectMode && isSelectableIndex,
            condensed
        })
    , [
        condensed,
        selectMode,
        isSelectableIndex
    ]);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.IndexContext.Provider, {
        value: contextValue
    }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs.IndexRowContext.Provider, {
        value: rowContextValue
    }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs.IndexSelectionChangeContext.Provider, {
        value: handleSelectionChange
    }, children))));
}

},{"react":"6fep5","../../utilities/index-provider/hooks.js":"f9mUT","../../utilities/index-provider/context.js":"bm5AW","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"f9mUT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useBulkSelectionData", ()=>useBulkSelectionData
);
parcelHelpers.export(exports, "useHandleBulkSelection", ()=>useHandleBulkSelection
);
parcelHelpers.export(exports, "useIndexRow", ()=>useIndexRow
);
parcelHelpers.export(exports, "useIndexSelectionChange", ()=>useIndexSelectionChange
);
parcelHelpers.export(exports, "useIndexValue", ()=>useIndexValue
);
var _react = require("react");
var _typesJs = require("./types.js");
var _contextJs = require("./context.js");
var _hooksJs = require("../i18n/hooks.js");
function useIndexSelectionChange() {
    const onSelectionChange = _react.useContext(_contextJs.IndexSelectionChangeContext);
    if (!onSelectionChange) throw new Error(`Missing IndexProvider context`);
    return onSelectionChange;
}
function useIndexRow() {
    const indexRow = _react.useContext(_contextJs.IndexRowContext);
    if (!indexRow) throw new Error(`Missing IndexProvider context`);
    return indexRow;
}
function useIndexValue() {
    const index = _react.useContext(_contextJs.IndexContext);
    if (!index) throw new Error(`Missing IndexProvider context`);
    return index;
}
function useBulkSelectionData({ selectedItemsCount , itemCount , hasMoreItems , resourceName: passedResourceName  }) {
    const i18n = _hooksJs.useI18n();
    const selectable = Boolean(selectedItemsCount);
    const selectMode = selectedItemsCount === 'All' || selectedItemsCount > 0;
    const defaultResourceName = {
        singular: i18n.translate('Polaris.IndexProvider.defaultItemSingular'),
        plural: i18n.translate('Polaris.IndexProvider.defaultItemPlural')
    };
    const resourceName = passedResourceName ? passedResourceName : defaultResourceName;
    const paginatedSelectAllText = getPaginatedSelectAllText();
    const bulkActionsLabel = getBulkActionsLabel();
    const bulkActionsAccessibilityLabel = getBulkActionsAccessibilityLabel();
    let bulkSelectState = 'indeterminate';
    if (!selectedItemsCount || selectedItemsCount === 0) bulkSelectState = undefined;
    else if (selectedItemsCount === _typesJs.SELECT_ALL_ITEMS || selectedItemsCount === itemCount) bulkSelectState = true;
    function getPaginatedSelectAllText() {
        if (!selectable || !hasMoreItems) {
            return;
        }
        if (selectedItemsCount === _typesJs.SELECT_ALL_ITEMS) {
            return i18n.translate('Polaris.IndexProvider.allItemsSelected', {
                itemsLength: itemCount,
                resourceNamePlural: resourceName.plural.toLocaleLowerCase()
            });
        }
    }
    function getBulkActionsLabel() {
        const selectedItemsCountLabel = selectedItemsCount === _typesJs.SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;
        return i18n.translate('Polaris.IndexProvider.selected', {
            selectedItemsCount: selectedItemsCountLabel
        });
    }
    function getBulkActionsAccessibilityLabel() {
        const totalItemsCount = itemCount;
        const allSelected = selectedItemsCount === totalItemsCount;
        if (totalItemsCount === 1 && allSelected) {
            return i18n.translate('Polaris.IndexProvider.a11yCheckboxDeselectAllSingle', {
                resourceNameSingular: resourceName.singular
            });
        } else if (totalItemsCount === 1) {
            return i18n.translate('Polaris.IndexProvider.a11yCheckboxSelectAllSingle', {
                resourceNameSingular: resourceName.singular
            });
        } else if (allSelected) {
            return i18n.translate('Polaris.IndexProvider.a11yCheckboxDeselectAllMultiple', {
                itemsLength: itemCount,
                resourceNamePlural: resourceName.plural
            });
        } else {
            return i18n.translate('Polaris.IndexProvider.a11yCheckboxSelectAllMultiple', {
                itemsLength: itemCount,
                resourceNamePlural: resourceName.plural
            });
        }
    }
    return {
        paginatedSelectAllText,
        bulkActionsLabel,
        bulkActionsAccessibilityLabel,
        resourceName,
        selectMode,
        bulkSelectState,
        selectable
    };
}
function useHandleBulkSelection({ onSelectionChange =()=>{
}  }) {
    const lastSelected = _react.useRef(null);
    const handleSelectionChange = _react.useCallback((selectionType, toggleType, selection, sortOrder)=>{
        const prevSelected = lastSelected.current;
        if (_typesJs.SelectionType.Multi && typeof sortOrder === 'number') lastSelected.current = sortOrder;
        if (selectionType === _typesJs.SelectionType.Single || selectionType === _typesJs.SelectionType.Multi && (typeof prevSelected !== 'number' || typeof sortOrder !== 'number')) onSelectionChange(_typesJs.SelectionType.Single, toggleType, selection);
        else if (selectionType === _typesJs.SelectionType.Multi) {
            const min = Math.min(prevSelected, sortOrder);
            const max = Math.max(prevSelected, sortOrder);
            onSelectionChange(selectionType, toggleType, [
                min,
                max
            ]);
        } else if (selectionType === _typesJs.SelectionType.Page || selectionType === _typesJs.SelectionType.All) onSelectionChange(selectionType, toggleType);
    }, [
        onSelectionChange
    ]);
    return handleSelectionChange;
}

},{"react":"6fep5","./types.js":"9G1lU","./context.js":"bm5AW","../i18n/hooks.js":"hHpYD","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9G1lU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SELECT_ALL_ITEMS", ()=>SELECT_ALL_ITEMS
);
parcelHelpers.export(exports, "SelectionType", ()=>SelectionType1
);
const SELECT_ALL_ITEMS = 'All';
let SelectionType1;
(function(SelectionType) {
    SelectionType["All"] = "all";
    SelectionType["Page"] = "page";
    SelectionType["Multi"] = "multi";
    SelectionType["Single"] = "single";
})(SelectionType1 || (SelectionType1 = {
}));

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bm5AW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IndexContext", ()=>IndexContext
);
parcelHelpers.export(exports, "IndexRowContext", ()=>IndexRowContext
);
parcelHelpers.export(exports, "IndexSelectionChangeContext", ()=>IndexSelectionChangeContext
);
var _react = require("react");
const IndexContext = /*#__PURE__*/ _react.createContext(undefined);
const IndexSelectionChangeContext = /*#__PURE__*/ _react.createContext(undefined);
const IndexRowContext = /*#__PURE__*/ _react.createContext(undefined);

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7p6sT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Cell", ()=>Cell
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _indexTableScssJs = require("../../IndexTable.scss.js");
var _indexTableScssJsDefault = parcelHelpers.interopDefault(_indexTableScssJs);
const Cell = /*#__PURE__*/ _react.memo(function Cell({ children , flush  }) {
    const cellClassName = _cssJs.classNames(_indexTableScssJsDefault.default.TableCell, flush && _indexTableScssJsDefault.default['TableCell-flush']);
    return(/*#__PURE__*/ _reactDefault.default.createElement("td", {
        className: cellClassName
    }, children));
});

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../IndexTable.scss.js":"lQjUb","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fJ3W7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Row", ()=>Row
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _useToggleJs = require("../../../../utilities/use-toggle.js");
var _cssJs = require("../../../../utilities/css.js");
var _indexTableScssJs = require("../../IndexTable.scss.js");
var _indexTableScssJsDefault = parcelHelpers.interopDefault(_indexTableScssJs);
var _hooksJs = require("../../../../utilities/index-provider/hooks.js");
var _typesJs = require("../../../../utilities/index-provider/types.js");
var _checkboxJs = require("../Checkbox/Checkbox.js");
var _contextJs = require("../../../../utilities/index-table/context.js");
const Row = /*#__PURE__*/ _react.memo(function Row({ children , selected , id , position , subdued , status , onNavigation  }) {
    const { selectable , selectMode , condensed  } = _hooksJs.useIndexRow();
    const onSelectionChange = _hooksJs.useIndexSelectionChange();
    const { value: hovered , setTrue: setHoverIn , setFalse: setHoverOut  } = _useToggleJs.useToggle(false);
    const handleInteraction = _react.useCallback((event)=>{
        event.stopPropagation();
        if ('key' in event && event.key !== ' ' || !onSelectionChange) return;
        const selectionType = event.nativeEvent.shiftKey ? _typesJs.SelectionType.Multi : _typesJs.SelectionType.Single;
        onSelectionChange(selectionType, !selected, id, position);
    }, [
        id,
        onSelectionChange,
        position,
        selected
    ]);
    const contextValue = _react.useMemo(()=>({
            itemId: id,
            selected,
            onInteraction: handleInteraction
        })
    , [
        id,
        selected,
        handleInteraction
    ]);
    const primaryLinkElement = _react.useRef(null);
    const isNavigating = _react.useRef(false);
    const tableRowRef = _react.useRef(null);
    const tableRowCallbackRef = _react.useCallback((node)=>{
        tableRowRef.current = node;
        const el = node === null || node === void 0 ? void 0 : node.querySelector('[data-primary-link]');
        if (el) primaryLinkElement.current = el;
    }, []);
    const rowClassName = _cssJs.classNames(_indexTableScssJsDefault.default.TableRow, selectable && condensed && _indexTableScssJsDefault.default.condensedRow, selected && _indexTableScssJsDefault.default['TableRow-selected'], subdued && _indexTableScssJsDefault.default['TableRow-subdued'], hovered && _indexTableScssJsDefault.default['TableRow-hovered'], status && _indexTableScssJsDefault.default[_cssJs.variationName('status', status)], !selectable && !primaryLinkElement.current && _indexTableScssJsDefault.default['TableRow-unclickable']);
    let handleRowClick;
    if (selectable || primaryLinkElement.current) handleRowClick = (event)=>{
        if (!tableRowRef.current || isNavigating.current) return;
        event.stopPropagation();
        event.preventDefault();
        if (primaryLinkElement.current && !selectMode) {
            isNavigating.current = true;
            const { ctrlKey , metaKey  } = event.nativeEvent;
            if (onNavigation) onNavigation(id);
            if ((ctrlKey || metaKey) && primaryLinkElement.current instanceof HTMLAnchorElement) {
                isNavigating.current = false;
                window.open(primaryLinkElement.current.href, '_blank');
                return;
            }
            primaryLinkElement.current.dispatchEvent(new MouseEvent(event.type, event.nativeEvent));
        } else {
            isNavigating.current = false;
            handleInteraction(event);
        }
    };
    const RowWrapper = condensed ? 'li' : 'tr';
    const checkboxMarkup = selectable ? /*#__PURE__*/ _reactDefault.default.createElement(_checkboxJs.Checkbox, null) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.RowContext.Provider, {
        value: contextValue
    }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs.RowHoveredContext.Provider, {
        value: hovered
    }, /*#__PURE__*/ _reactDefault.default.createElement(RowWrapper, {
        key: id,
        className: rowClassName,
        onMouseEnter: setHoverIn,
        onMouseLeave: setHoverOut,
        onClick: handleRowClick,
        ref: tableRowCallbackRef
    }, checkboxMarkup, children))));
});

},{"react":"6fep5","../../../../utilities/use-toggle.js":"jHDnh","../../../../utilities/css.js":"kYdwV","../../IndexTable.scss.js":"lQjUb","../../../../utilities/index-provider/hooks.js":"f9mUT","../../../../utilities/index-provider/types.js":"9G1lU","../Checkbox/Checkbox.js":"jpXOm","../../../../utilities/index-table/context.js":"jBnId","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jpXOm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Checkbox", ()=>Checkbox
);
parcelHelpers.export(exports, "CheckboxWrapper", ()=>CheckboxWrapper
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _setRootPropertyJs = require("../../../../utilities/set-root-property.js");
var _indexTableScssJs = require("../../IndexTable.scss.js");
var _indexTableScssJsDefault = parcelHelpers.interopDefault(_indexTableScssJs);
var _checkboxScssJs = require("./Checkbox.scss.js");
var _checkboxScssJsDefault = parcelHelpers.interopDefault(_checkboxScssJs);
var _hooksJs = require("../../../../utilities/index-provider/hooks.js");
var _contextJs = require("../../../../utilities/index-table/context.js");
var _hooksJs1 = require("../../../../utilities/i18n/hooks.js");
var _checkboxJs = require("../../../Checkbox/Checkbox.js");
const Checkbox = /*#__PURE__*/ _react.memo(function Checkbox() {
    const i18n = _hooksJs1.useI18n();
    const { resourceName , condensed  } = _hooksJs.useIndexValue();
    const { itemId , selected , onInteraction  } = _react.useContext(_contextJs.RowContext);
    const wrapperClassName = _cssJs.classNames(_checkboxScssJsDefault.default.Wrapper, condensed ? _checkboxScssJsDefault.default.condensed : _checkboxScssJsDefault.default.expanded);
    const Wrapper = condensed ? _react.Fragment : CheckboxWrapper;
    return(/*#__PURE__*/ _reactDefault.default.createElement(Wrapper, null, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _checkboxScssJsDefault.default.TableCellContentContainer
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: wrapperClassName,
        onClick: onInteraction,
        onKeyUp: onInteraction,
        onChange: stopPropagation
    }, /*#__PURE__*/ _reactDefault.default.createElement(_checkboxJs.Checkbox, {
        id: itemId,
        label: i18n.translate('Polaris.IndexTable.selectItem', {
            resourceName: resourceName.singular
        }),
        labelHidden: true,
        checked: selected
    })))));
});
function CheckboxWrapper({ children  }) {
    const checkboxNode = _react.useRef(null);
    const handleResize = _react.useCallback(()=>{
        if (!checkboxNode.current) return;
        const { width  } = checkboxNode.current.getBoundingClientRect();
        _setRootPropertyJs.setRootProperty('--p-checkbox-offset', `${width}px`, null);
    }, []);
    _react.useEffect(()=>{
        handleResize();
    }, [
        handleResize
    ]);
    _react.useEffect(()=>{
        if (!checkboxNode.current) return;
        window.addEventListener('resize', handleResize);
        return ()=>{
            window.removeEventListener('resize', handleResize);
        };
    }, [
        handleResize
    ]);
    const checkboxClassName = _cssJs.classNames(_indexTableScssJsDefault.default.TableCell, _indexTableScssJsDefault.default['TableCell-first']);
    return(/*#__PURE__*/ _reactDefault.default.createElement("td", {
        className: checkboxClassName,
        ref: checkboxNode
    }, children));
}
function stopPropagation(event) {
    event.stopPropagation();
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/set-root-property.js":"hs4uw","../../IndexTable.scss.js":"lQjUb","./Checkbox.scss.js":"gL548","../../../../utilities/index-provider/hooks.js":"f9mUT","../../../../utilities/index-table/context.js":"jBnId","../../../../utilities/i18n/hooks.js":"hHpYD","../../../Checkbox/Checkbox.js":"irP0n","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gL548":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "TableCellContentContainer": "Polaris-IndexTable-Checkbox__TableCellContentContainer",
    "Wrapper": "Polaris-IndexTable-Checkbox__Wrapper",
    "expanded": "Polaris-IndexTable-Checkbox--expanded",
    "condensed": "Polaris-IndexTable-Checkbox--condensed"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3ctIm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getTableHeadingsBySelector", ()=>getTableHeadingsBySelector
);
function getTableHeadingsBySelector(wrapperElement, selector) {
    return wrapperElement ? Array.from(wrapperElement.querySelectorAll(selector)) : [];
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7ZjkO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AfterInitialMount", ()=>AfterInitialMount
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _useIsAfterInitialMountJs = require("../../utilities/use-is-after-initial-mount.js");
function AfterInitialMount({ children , fallback =null  }) {
    const isMounted = _useIsAfterInitialMountJs.useIsAfterInitialMount();
    const content = isMounted ? children : fallback;
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, content));
}

},{"react":"6fep5","../../utilities/use-is-after-initial-mount.js":"3sveN","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1rYsY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ScrollContainer", ()=>ScrollContainer
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _scrollContainerScssJs = require("./ScrollContainer.scss.js");
var _scrollContainerScssJsDefault = parcelHelpers.interopDefault(_scrollContainerScssJs);
var _contextJs = require("../../../../utilities/index-table/context.js");
function ScrollContainer({ children , scrollableContainerRef , onScroll  }) {
    _react.useEffect(()=>{
        if (!scrollableContainerRef.current) return;
        scrollableContainerRef.current.dispatchEvent(new Event('scroll'));
    }, [
        scrollableContainerRef
    ]);
    const [containerScroll, setContainerScroll] = _react.useState(_contextJs.scrollDefaultContext); // eslint-disable-next-line react-hooks/exhaustive-deps
    const handleScroll = _react.useCallback(_debounceDefault.default(()=>{
        if (!scrollableContainerRef.current) return;
        const availableScrollAmount = scrollableContainerRef.current.scrollWidth - scrollableContainerRef.current.offsetWidth;
        const canScrollLeft = scrollableContainerRef.current.scrollLeft > 0;
        const canScrollRight = scrollableContainerRef.current.scrollLeft < availableScrollAmount;
        onScroll(canScrollLeft, canScrollRight);
        setContainerScroll({
            scrollableContainer: scrollableContainerRef.current,
            canScrollLeft,
            canScrollRight
        });
    }, 40, {
        trailing: true,
        leading: true,
        maxWait: 40
    }), [
        onScroll,
        scrollableContainerRef
    ]);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.ScrollContext.Provider, {
        value: containerScroll
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _scrollContainerScssJsDefault.default.ScrollContainer,
        ref: scrollableContainerRef,
        onScroll: handleScroll
    }, children)));
}

},{"react":"6fep5","lodash/debounce":"a9ymG","./ScrollContainer.scss.js":"jw00a","../../../../utilities/index-table/context.js":"jBnId","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jw00a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ScrollContainer": "Polaris-IndexTable-ScrollContainer"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2AUGc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Sticky", ()=>Sticky
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _geometryJs = require("../../utilities/geometry.js");
var _hooksJs = require("../../utilities/sticky-manager/hooks.js");
class StickyInner extends _react.Component {
    constructor(...args){
        super(...args);
        this.state = {
            isSticky: false,
            style: {
            }
        };
        this.placeHolderNode = null;
        this.stickyNode = null;
        this.setPlaceHolderNode = (node)=>{
            this.placeHolderNode = node;
        };
        this.setStickyNode = (node)=>{
            this.stickyNode = node;
        };
        this.handlePositioning = (stick, top = 0, left = 0, width = 0)=>{
            const { isSticky  } = this.state;
            if (stick && !isSticky || !stick && isSticky) {
                this.adjustPlaceHolderNode(stick);
                this.setState({
                    isSticky: !isSticky
                });
            }
            const style = stick ? {
                position: 'fixed',
                top,
                left,
                width
            } : {
            };
            this.setState({
                style
            });
        };
        this.adjustPlaceHolderNode = (add)=>{
            if (this.placeHolderNode && this.stickyNode) this.placeHolderNode.style.paddingBottom = add ? `${_geometryJs.getRectForNode(this.stickyNode).height}px` : '0px';
        };
    }
    componentDidMount() {
        const { boundingElement , offset =false , disableWhenStacked =false , stickyManager  } = this.props;
        if (!this.stickyNode || !this.placeHolderNode) return;
        stickyManager.registerStickyItem({
            stickyNode: this.stickyNode,
            placeHolderNode: this.placeHolderNode,
            handlePositioning: this.handlePositioning,
            offset,
            boundingElement,
            disableWhenStacked
        });
    }
    componentWillUnmount() {
        const { stickyManager  } = this.props;
        if (!this.stickyNode) return;
        stickyManager.unregisterStickyItem(this.stickyNode);
    }
    render() {
        const { style , isSticky  } = this.state;
        const { children  } = this.props;
        const childrenContent = isFunction(children) ? children(isSticky) : children;
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", null, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            ref: this.setPlaceHolderNode
        }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            ref: this.setStickyNode,
            style: style
        }, childrenContent)));
    }
} // This should have a typeguard instead of using Function
// eslint-disable-next-line @typescript-eslint/ban-types
function isFunction(arg) {
    return typeof arg === 'function';
}
function Sticky(props) {
    const stickyManager = _hooksJs.useStickyManager();
    return(/*#__PURE__*/ _reactDefault.default.createElement(StickyInner, Object.assign({
    }, props, {
        stickyManager: stickyManager
    })));
}

},{"react":"6fep5","../../utilities/geometry.js":"jJS9C","../../utilities/sticky-manager/hooks.js":"1L33j","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"1L33j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useStickyManager", ()=>useStickyManager
);
var _react = require("react");
var _errorsJs = require("../errors.js");
var _contextJs = require("./context.js");
function useStickyManager() {
    const stickyManager = _react.useContext(_contextJs.StickyManagerContext);
    if (!stickyManager) throw new _errorsJs.MissingAppProviderError('No StickyManager was provided.');
    return stickyManager;
}

},{"react":"6fep5","../errors.js":"cGYyH","./context.js":"2p59M","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iWaGx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "KeyboardKey", ()=>KeyboardKey
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _keyboardKeyScssJs = require("./KeyboardKey.scss.js");
var _keyboardKeyScssJsDefault = parcelHelpers.interopDefault(_keyboardKeyScssJs);
function KeyboardKey({ children  }) {
    let key = children || '';
    key = key.length > 1 ? key.toLowerCase() : key.toUpperCase();
    return(/*#__PURE__*/ _reactDefault.default.createElement("kbd", {
        className: _keyboardKeyScssJsDefault.default.KeyboardKey
    }, key));
}

},{"react":"6fep5","./KeyboardKey.scss.js":"3jg8k","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3jg8k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "KeyboardKey": "Polaris-KeyboardKey"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"idT4A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "KONAMI_CODE", ()=>KONAMI_CODE
);
parcelHelpers.export(exports, "KonamiCode", ()=>KonamiCode
);
var _react = require("react");
var _typesJs = require("../../types.js");
const KONAMI_CODE = [
    _typesJs.Key.UpArrow,
    _typesJs.Key.UpArrow,
    _typesJs.Key.DownArrow,
    _typesJs.Key.DownArrow,
    _typesJs.Key.LeftArrow,
    _typesJs.Key.RightArrow,
    _typesJs.Key.LeftArrow,
    _typesJs.Key.RightArrow,
    _typesJs.Key.KeyB,
    _typesJs.Key.KeyA
];
function KonamiCode({ handler  }) {
    const keyEvent = 'keydown';
    const [position, setPosition] = _react.useState(0);
    const handleKeyEvent = (event)=>{
        const key = event.keyCode;
        const requiredKey = KONAMI_CODE[position];
        if (key === requiredKey) {
            if (position === KONAMI_CODE.length - 1) {
                handler(event);
                setPosition(0);
            } else setPosition(position + 1);
        } else setPosition(0);
    };
    _react.useEffect(()=>{
        document.addEventListener(keyEvent, handleKeyEvent);
        return ()=>{
            document.removeEventListener(keyEvent, handleKeyEvent);
        };
    });
    return null;
}

},{"react":"6fep5","../../types.js":"atQnH","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eLnqB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Layout", ()=>Layout
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _layoutScssJs = require("./Layout.scss.js");
var _layoutScssJsDefault = parcelHelpers.interopDefault(_layoutScssJs);
var _annotatedSectionJs = require("./components/AnnotatedSection/AnnotatedSection.js");
var _sectionJs = require("./components/Section/Section.js");
const Layout = function Layout({ sectioned , children  }) {
    const content = sectioned ? /*#__PURE__*/ _reactDefault.default.createElement(_sectionJs.Section, null, children) : children;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _layoutScssJsDefault.default.Layout
    }, content));
};
Layout.AnnotatedSection = _annotatedSectionJs.AnnotatedSection;
Layout.Section = _sectionJs.Section;

},{"react":"6fep5","./Layout.scss.js":"6WPr5","./components/AnnotatedSection/AnnotatedSection.js":"zDtTQ","./components/Section/Section.js":"bmHa4","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6WPr5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Layout": "Polaris-Layout",
    "Section": "Polaris-Layout__Section",
    "Section-secondary": "Polaris-Layout__Section--secondary",
    "Section-fullWidth": "Polaris-Layout__Section--fullWidth",
    "Section-oneHalf": "Polaris-Layout__Section--oneHalf",
    "Section-oneThird": "Polaris-Layout__Section--oneThird",
    "AnnotatedSection": "Polaris-Layout__AnnotatedSection",
    "AnnotationWrapper": "Polaris-Layout__AnnotationWrapper",
    "AnnotationContent": "Polaris-Layout__AnnotationContent",
    "Annotation": "Polaris-Layout__Annotation",
    "AnnotationDescription": "Polaris-Layout__AnnotationDescription"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"zDtTQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AnnotatedSection", ()=>AnnotatedSection
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _layoutScssJs = require("../../Layout.scss.js");
var _layoutScssJsDefault = parcelHelpers.interopDefault(_layoutScssJs);
var _textContainerJs = require("../../../TextContainer/TextContainer.js");
var _headingJs = require("../../../Heading/Heading.js");
function AnnotatedSection(props) {
    const { children , title , description , id  } = props;
    const descriptionMarkup = typeof description === 'string' ? /*#__PURE__*/ _reactDefault.default.createElement("p", null, description) : description;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _layoutScssJsDefault.default.AnnotatedSection
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _layoutScssJsDefault.default.AnnotationWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _layoutScssJsDefault.default.Annotation
    }, /*#__PURE__*/ _reactDefault.default.createElement(_textContainerJs.TextContainer, null, /*#__PURE__*/ _reactDefault.default.createElement(_headingJs.Heading, {
        id: id
    }, title), descriptionMarkup && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _layoutScssJsDefault.default.AnnotationDescription
    }, descriptionMarkup))), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _layoutScssJsDefault.default.AnnotationContent
    }, children))));
}

},{"react":"6fep5","../../Layout.scss.js":"6WPr5","../../../TextContainer/TextContainer.js":"TbRw7","../../../Heading/Heading.js":"7PinN","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bmHa4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Section", ()=>Section
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _layoutScssJs = require("../../Layout.scss.js");
var _layoutScssJsDefault = parcelHelpers.interopDefault(_layoutScssJs);
function Section({ children , secondary , fullWidth , oneHalf , oneThird  }) {
    const className = _cssJs.classNames(_layoutScssJsDefault.default.Section, secondary && _layoutScssJsDefault.default['Section-secondary'], fullWidth && _layoutScssJsDefault.default['Section-fullWidth'], oneHalf && _layoutScssJsDefault.default['Section-oneHalf'], oneThird && _layoutScssJsDefault.default['Section-oneThird']);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, children));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../Layout.scss.js":"6WPr5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lzVa9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Link", ()=>Link
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _bannerContextJs = require("../../utilities/banner-context.js");
var _cssJs = require("../../utilities/css.js");
var _linkScssJs = require("./Link.scss.js");
var _linkScssJsDefault = parcelHelpers.interopDefault(_linkScssJs);
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _iconJs = require("../Icon/Icon.js");
var _unstyledLinkJs = require("../UnstyledLink/UnstyledLink.js");
function Link({ url , children , onClick , external , id , monochrome , removeUnderline , accessibilityLabel  }) {
    const i18n = _hooksJs.useI18n();
    let childrenMarkup = children;
    if (external && typeof children === 'string') {
        const iconLabel = i18n.translate('Polaris.Common.newWindowAccessibilityHint');
        childrenMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, children, /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: _linkScssJsDefault.default.IconLockup
        }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: _linkScssJsDefault.default.IconLayout
        }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
            accessibilityLabel: iconLabel,
            source: _polarisIcons.ExternalSmallMinor
        }))));
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement(_bannerContextJs.BannerContext.Consumer, null, (BannerContext)=>{
        const shouldBeMonochrome = monochrome || BannerContext;
        const className = _cssJs.classNames(_linkScssJsDefault.default.Link, shouldBeMonochrome && _linkScssJsDefault.default.monochrome, removeUnderline && _linkScssJsDefault.default.removeUnderline);
        return url ? /*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, {
            onClick: onClick,
            className: className,
            url: url,
            external: external,
            id: id,
            "aria-label": accessibilityLabel
        }, childrenMarkup) : /*#__PURE__*/ _reactDefault.default.createElement("button", {
            type: "button",
            onClick: onClick,
            className: className,
            id: id,
            "aria-label": accessibilityLabel
        }, childrenMarkup);
    }));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/banner-context.js":"lB0Fb","../../utilities/css.js":"kYdwV","./Link.scss.js":"ktrda","../../utilities/i18n/hooks.js":"hHpYD","../Icon/Icon.js":"flzpR","../UnstyledLink/UnstyledLink.js":"8AMgX","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ktrda":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Link": "Polaris-Link",
    "IconLockup": "Polaris-Link__IconLockup",
    "IconLayout": "Polaris-Link__IconLayout",
    "monochrome": "Polaris-Link--monochrome",
    "removeUnderline": "Polaris-Link--removeUnderline"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"clFDb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "List", ()=>List
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _listScssJs = require("./List.scss.js");
var _listScssJsDefault = parcelHelpers.interopDefault(_listScssJs);
var _itemJs = require("./components/Item/Item.js");
const List = function List({ children , type ='bullet'  }) {
    const className = _cssJs.classNames(_listScssJsDefault.default.List, type && _listScssJsDefault.default[_cssJs.variationName('type', type)]);
    const ListElement = type === 'bullet' ? 'ul' : 'ol';
    return(/*#__PURE__*/ _reactDefault.default.createElement(ListElement, {
        className: className
    }, children));
};
List.Item = _itemJs.Item;

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./List.scss.js":"dwZe6","./components/Item/Item.js":"47gvv","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dwZe6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "List": "Polaris-List",
    "typeNumber": "Polaris-List--typeNumber",
    "Item": "Polaris-List__Item"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"47gvv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Item", ()=>Item
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _listScssJs = require("../../List.scss.js");
var _listScssJsDefault = parcelHelpers.interopDefault(_listScssJs);
function Item({ children  }) {
    return(/*#__PURE__*/ _reactDefault.default.createElement("li", {
        className: _listScssJsDefault.default.Item
    }, children));
}

},{"react":"6fep5","../../List.scss.js":"dwZe6","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"h1GHg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Loading", ()=>Loading
);
var _react = require("react");
var _hooksJs = require("../../utilities/frame/hooks.js");
const Loading = /*#__PURE__*/ _react.memo(function Loading() {
    const { startLoading , stopLoading  } = _hooksJs.useFrame();
    _react.useEffect(()=>{
        startLoading();
        return ()=>{
            stopLoading();
        };
    }, [
        startLoading,
        stopLoading
    ]);
    return null;
});

},{"react":"6fep5","../../utilities/frame/hooks.js":"cCO5z","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hQQYb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MediaCard", ()=>MediaCard
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _useToggleJs = require("../../utilities/use-toggle.js");
var _cssJs = require("../../utilities/css.js");
var _mediaCardScssJs = require("./MediaCard.scss.js");
var _mediaCardScssJsDefault = parcelHelpers.interopDefault(_mediaCardScssJs);
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _buttonJs = require("../Button/Button.js");
var _popoverJs = require("../Popover/Popover.js");
var _actionListJs = require("../ActionList/ActionList.js");
var _utilsJs = require("../Button/utils.js");
var _cardJs = require("../Card/Card.js");
var _stackJs = require("../Stack/Stack.js");
var _headingJs = require("../Heading/Heading.js");
var _buttonGroupJs = require("../ButtonGroup/ButtonGroup.js");
function MediaCard({ title , children , primaryAction , secondaryAction , description , popoverActions =[] , portrait =false , size ='medium'  }) {
    const i18n = _hooksJs.useI18n();
    const { value: popoverActive , toggle: togglePopoverActive  } = _useToggleJs.useToggle(false);
    let headerMarkup = null;
    if (title) {
        const headerContent = typeof title === 'string' ? /*#__PURE__*/ _reactDefault.default.createElement(_headingJs.Heading, null, title) : title;
        headerMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _mediaCardScssJsDefault.default.Heading
        }, headerContent);
    }
    const popoverActivator = /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        icon: _polarisIcons.HorizontalDotsMinor,
        onClick: togglePopoverActive,
        size: "slim",
        plain: true,
        accessibilityLabel: i18n.translate('Polaris.MediaCard.popoverButton')
    });
    const popoverActionsMarkup = popoverActions.length > 0 ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _mediaCardScssJsDefault.default.Popover
    }, /*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
        active: popoverActive,
        activator: popoverActivator,
        onClose: togglePopoverActive,
        preferredAlignment: "left",
        preferredPosition: "below"
    }, /*#__PURE__*/ _reactDefault.default.createElement(_actionListJs.ActionList, {
        items: popoverActions,
        onActionAnyItem: togglePopoverActive
    }))) : null;
    const primaryActionMarkup = primaryAction ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _mediaCardScssJsDefault.default.PrimaryAction
    }, _utilsJs.buttonFrom(primaryAction)) : null;
    const secondaryActionMarkup = secondaryAction ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _mediaCardScssJsDefault.default.SecondaryAction
    }, _utilsJs.buttonFrom(secondaryAction, {
        plain: true
    })) : null;
    const actionClassName = _cssJs.classNames(_mediaCardScssJsDefault.default.ActionContainer, portrait && _mediaCardScssJsDefault.default.portrait);
    const actionMarkup = primaryActionMarkup || secondaryActionMarkup ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: actionClassName
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, null, primaryActionMarkup, secondaryActionMarkup)) : null;
    const mediaCardClassName = _cssJs.classNames(_mediaCardScssJsDefault.default.MediaCard, portrait && _mediaCardScssJsDefault.default.portrait);
    const mediaContainerClassName = _cssJs.classNames(_mediaCardScssJsDefault.default.MediaContainer, portrait && _mediaCardScssJsDefault.default.portrait, size === 'small' && _mediaCardScssJsDefault.default.sizeSmall);
    const infoContainerClassName = _cssJs.classNames(_mediaCardScssJsDefault.default.InfoContainer, portrait && _mediaCardScssJsDefault.default.portrait, size === 'small' && _mediaCardScssJsDefault.default.sizeSmall);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_cardJs.Card, null, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: mediaCardClassName
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: mediaContainerClassName
    }, children), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: infoContainerClassName
    }, /*#__PURE__*/ _reactDefault.default.createElement(_cardJs.Card.Section, null, popoverActionsMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
        vertical: true,
        spacing: "tight"
    }, headerMarkup, /*#__PURE__*/ _reactDefault.default.createElement("p", {
        className: _mediaCardScssJsDefault.default.Description
    }, description), actionMarkup))))));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/use-toggle.js":"jHDnh","../../utilities/css.js":"kYdwV","./MediaCard.scss.js":"aO3IV","../../utilities/i18n/hooks.js":"hHpYD","../Button/Button.js":"g06oC","../Popover/Popover.js":"9ztCP","../ActionList/ActionList.js":"eTtta","../Button/utils.js":"9W95c","../Card/Card.js":"kiG4Y","../Stack/Stack.js":"g05gm","../Heading/Heading.js":"7PinN","../ButtonGroup/ButtonGroup.js":"kXBsg","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aO3IV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "MediaCard": "Polaris-MediaCard",
    "portrait": "Polaris-MediaCard--portrait",
    "MediaContainer": "Polaris-MediaCard__MediaContainer",
    "sizeSmall": "Polaris-MediaCard--sizeSmall",
    "InfoContainer": "Polaris-MediaCard__InfoContainer",
    "Popover": "Polaris-MediaCard__Popover",
    "Heading": "Polaris-MediaCard__Heading",
    "PrimaryAction": "Polaris-MediaCard__PrimaryAction",
    "SecondaryAction": "Polaris-MediaCard__SecondaryAction",
    "ActionContainer": "Polaris-MediaCard__ActionContainer"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"36FaP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Navigation", ()=>Navigation
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _withinContentContextJs = require("../../utilities/within-content-context.js");
var _getWidthJs = require("../../utilities/get-width.js");
var _contextJs = require("./context.js");
var _navigationScssJs = require("./Navigation.scss.js");
var _navigationScssJsDefault = parcelHelpers.interopDefault(_navigationScssJs);
var _sectionJs = require("./components/Section/Section.js");
var _hooksJs = require("../../utilities/theme/hooks.js");
var _unstyledLinkJs = require("../UnstyledLink/UnstyledLink.js");
var _imageJs = require("../Image/Image.js");
var _scrollableJs = require("../Scrollable/Scrollable.js");
var _itemJs = require("./components/Item/Item.js");
const Navigation = function Navigation({ children , contextControl , location , onDismiss , ariaLabelledBy  }) {
    const { logo  } = _hooksJs.useTheme();
    const width = _getWidthJs.getWidth(logo, 104);
    const logoMarkup = logo ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _navigationScssJsDefault.default.LogoContainer
    }, /*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, {
        url: logo.url || '',
        className: _navigationScssJsDefault.default.LogoLink,
        style: {
            width
        }
    }, /*#__PURE__*/ _reactDefault.default.createElement(_imageJs.Image, {
        source: logo.topBarSource || '',
        alt: logo.accessibilityLabel || '',
        className: _navigationScssJsDefault.default.Logo,
        style: {
            width
        }
    }))) : null;
    const mediaMarkup = contextControl ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _navigationScssJsDefault.default.ContextControl
    }, contextControl) : logoMarkup;
    const context = {
        location,
        onNavigationDismiss: onDismiss
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.NavigationContext.Provider, {
        value: context
    }, /*#__PURE__*/ _reactDefault.default.createElement(_withinContentContextJs.WithinContentContext.Provider, {
        value: true
    }, /*#__PURE__*/ _reactDefault.default.createElement("nav", {
        className: _navigationScssJsDefault.default.Navigation,
        "aria-labelledby": ariaLabelledBy
    }, mediaMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_scrollableJs.Scrollable, {
        className: _navigationScssJsDefault.default.PrimaryNavigation
    }, children)))));
};
Navigation.Item = _itemJs.Item;
Navigation.Section = _sectionJs.Section;

},{"react":"6fep5","../../utilities/within-content-context.js":"8TZsv","../../utilities/get-width.js":"Q4f7T","./context.js":"k1WIf","./Navigation.scss.js":"6j7RA","./components/Section/Section.js":"6MjEy","../../utilities/theme/hooks.js":"242tp","../UnstyledLink/UnstyledLink.js":"8AMgX","../Image/Image.js":"jekWJ","../Scrollable/Scrollable.js":"6lHzT","./components/Item/Item.js":"fLCly","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"k1WIf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NavigationContext", ()=>NavigationContext
);
var _react = require("react");
const NavigationContext = /*#__PURE__*/ _react.createContext({
    location: ''
});

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6j7RA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Navigation": "Polaris-Navigation",
    "UserMenu": "Polaris-Navigation__UserMenu",
    "ContextControl": "Polaris-Navigation__ContextControl",
    "PrimaryNavigation": "Polaris-Navigation__PrimaryNavigation",
    "LogoContainer": "Polaris-Navigation__LogoContainer",
    "Logo": "Polaris-Navigation__Logo",
    "LogoLink": "Polaris-Navigation__LogoLink",
    "Item": "Polaris-Navigation__Item",
    "keyFocused": "Polaris-Navigation--keyFocused",
    "Item-selected": "Polaris-Navigation__Item--selected",
    "Item-disabled": "Polaris-Navigation__Item--disabled",
    "Icon": "Polaris-Navigation__Icon",
    "Badge": "Polaris-Navigation__Badge",
    "subNavigationActive": "Polaris-Navigation--subNavigationActive",
    "ExternalIcon": "Polaris-Navigation__ExternalIcon",
    "ListItem": "Polaris-Navigation__ListItem",
    "RollupSection": "Polaris-Navigation__RollupSection",
    "SecondaryNavigation": "Polaris-Navigation__SecondaryNavigation",
    "ListItem-hasAction": "Polaris-Navigation__ListItem--hasAction",
    "ItemWrapper": "Polaris-Navigation__ItemWrapper",
    "Text": "Polaris-Navigation__Text",
    "SecondaryAction": "Polaris-Navigation__SecondaryAction",
    "isExpanded": "Polaris-Navigation--isExpanded",
    "List": "Polaris-Navigation__List",
    "SecondaryNavigation-noIcon": "Polaris-Navigation__SecondaryNavigation--noIcon",
    "Section": "Polaris-Navigation__Section",
    "Section-fill": "Polaris-Navigation__Section--fill",
    "Section-withSeparator": "Polaris-Navigation__Section--withSeparator",
    "SectionHeading": "Polaris-Navigation__SectionHeading",
    "Action": "Polaris-Navigation__Action",
    "RollupToggle": "Polaris-Navigation__RollupToggle",
    "Indicator": "Polaris-Navigation__Indicator",
    "fade-in": "Polaris-Navigation__fade--in"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6MjEy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Section", ()=>Section
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../../../utilities/css.js");
var _breakpointsJs = require("../../../../utilities/breakpoints.js");
var _useToggleJs = require("../../../../utilities/use-toggle.js");
var _navigationScssJs = require("../../Navigation.scss.js");
var _navigationScssJsDefault = parcelHelpers.interopDefault(_navigationScssJs);
var _itemJs = require("../Item/Item.js");
var _iconJs = require("../../../Icon/Icon.js");
var _hooksJs = require("../../../../utilities/unique-id/hooks.js");
var _collapsibleJs = require("../../../Collapsible/Collapsible.js");
function Section({ title , fill , action , items , rollup , separator  }) {
    const { value: expanded , toggle: toggleExpanded , setFalse: setExpandedFalse  } = _useToggleJs.useToggle(false);
    const animationFrame = _react.useRef(null);
    const handleClick = (onClick, hasSubNavItems)=>{
        return ()=>{
            if (onClick) onClick();
            if (animationFrame.current) cancelAnimationFrame(animationFrame.current);
            if (!hasSubNavItems || !_breakpointsJs.navigationBarCollapsed().matches) animationFrame.current = requestAnimationFrame(setExpandedFalse);
        };
    };
    _react.useEffect(()=>{
        return ()=>{
            animationFrame.current && cancelAnimationFrame(animationFrame.current);
        };
    });
    const className = _cssJs.classNames(_navigationScssJsDefault.default.Section, separator && _navigationScssJsDefault.default['Section-withSeparator'], fill && _navigationScssJsDefault.default['Section-fill']);
    const actionMarkup = action && /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        className: _navigationScssJsDefault.default.Action,
        "aria-label": action.accessibilityLabel,
        onClick: action.onClick
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: action.icon
    }));
    const sectionHeadingMarkup = title && /*#__PURE__*/ _reactDefault.default.createElement("li", {
        className: _navigationScssJsDefault.default.SectionHeading
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _navigationScssJsDefault.default.Text
    }, title), actionMarkup);
    const itemsMarkup = items.map((item)=>{
        const { onClick , label , subNavigationItems , ...rest } = item;
        const hasSubNavItems = subNavigationItems != null && subNavigationItems.length > 0;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_itemJs.Item, Object.assign({
        }, rest, {
            key: label,
            label: label,
            subNavigationItems: subNavigationItems,
            onClick: handleClick(onClick, hasSubNavItems)
        })));
    });
    const toggleClassName = _cssJs.classNames(_navigationScssJsDefault.default.Item, _navigationScssJsDefault.default.RollupToggle);
    const ariaLabel = rollup && (expanded ? rollup.hide : rollup.view);
    const toggleRollup = rollup && items.length > rollup.after && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _navigationScssJsDefault.default.ListItem,
        key: "List Item"
    }, /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        className: toggleClassName,
        onClick: toggleExpanded,
        "aria-label": ariaLabel
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _navigationScssJsDefault.default.Icon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.HorizontalDotsMinor
    }))));
    const activeItemIndex = items.findIndex((item)=>{
        if (!rollup) return false;
        return rollup.activePath === item.url || item.url && rollup.activePath.startsWith(item.url) || (item.subNavigationItems ? item.subNavigationItems.some(({ url: itemUrl  })=>rollup.activePath.startsWith(itemUrl)
        ) : false);
    });
    const sectionItems = rollup ? itemsMarkup.slice(0, rollup.after) : itemsMarkup;
    const additionalItems = rollup ? itemsMarkup.slice(rollup.after) : [];
    if (rollup && activeItemIndex !== -1 && activeItemIndex > rollup.after - 1) sectionItems.push(...additionalItems.splice(activeItemIndex - rollup.after, 1));
    const additionalItemsId = _hooksJs.useUniqueId('AdditionalItems');
    const activeItemsMarkup = rollup && additionalItems.length > 0 && /*#__PURE__*/ _reactDefault.default.createElement("li", {
        className: _navigationScssJsDefault.default.RollupSection
    }, /*#__PURE__*/ _reactDefault.default.createElement(_collapsibleJs.Collapsible, {
        id: additionalItemsId,
        open: expanded
    }, /*#__PURE__*/ _reactDefault.default.createElement("ul", {
        className: _navigationScssJsDefault.default.List
    }, additionalItems)), toggleRollup);
    return(/*#__PURE__*/ _reactDefault.default.createElement("ul", {
        className: className
    }, sectionHeadingMarkup, sectionItems, activeItemsMarkup));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../../../utilities/css.js":"kYdwV","../../../../utilities/breakpoints.js":"5acRx","../../../../utilities/use-toggle.js":"jHDnh","../../Navigation.scss.js":"6j7RA","../Item/Item.js":"fLCly","../../../Icon/Icon.js":"flzpR","../../../../utilities/unique-id/hooks.js":"kPfFC","../../../Collapsible/Collapsible.js":"g8OGv","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fLCly":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Item", ()=>Item
);
parcelHelpers.export(exports, "isNavigationItemActive", ()=>isNavigationItemActive
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../../../utilities/css.js");
var _contextJs = require("../../context.js");
var _typesJs = require("../../../../types.js");
var _navigationScssJs = require("../../Navigation.scss.js");
var _navigationScssJsDefault = parcelHelpers.interopDefault(_navigationScssJs);
var _secondaryJs = require("./components/Secondary/Secondary.js");
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
var _hooksJs1 = require("../../../../utilities/media-query/hooks.js");
var _hooksJs2 = require("../../../../utilities/unique-id/hooks.js");
var _indicatorJs = require("../../../Indicator/Indicator.js");
var _iconJs = require("../../../Icon/Icon.js");
var _badgeJs = require("../../../Badge/Badge.js");
var _unstyledLinkJs = require("../../../UnstyledLink/UnstyledLink.js");
var MatchState1;
(function(MatchState) {
    MatchState[MatchState["MatchForced"] = 0] = "MatchForced";
    MatchState[MatchState["MatchUrl"] = 1] = "MatchUrl";
    MatchState[MatchState["MatchPaths"] = 2] = "MatchPaths";
    MatchState[MatchState["Excluded"] = 3] = "Excluded";
    MatchState[MatchState["NoMatch"] = 4] = "NoMatch";
})(MatchState1 || (MatchState1 = {
}));
function Item({ url , icon , label: label1 , subNavigationItems =[] , secondaryAction , disabled , onClick: onClick1 , accessibilityLabel , selected: selectedOverride , badge , new: isNew , matches , exactMatch , matchPaths , excludePaths , external  }) {
    const i18n = _hooksJs.useI18n();
    const { isNavigationCollapsed  } = _hooksJs1.useMediaQuery();
    const secondaryNavigationId = _hooksJs2.useUniqueId('SecondaryNavigation');
    const { location , onNavigationDismiss  } = _react.useContext(_contextJs.NavigationContext);
    const [expanded, setExpanded] = _react.useState(false);
    const [keyFocused, setKeyFocused] = _react.useState(false);
    _react.useEffect(()=>{
        if (!isNavigationCollapsed && expanded) setExpanded(false);
    }, [
        expanded,
        isNavigationCollapsed
    ]);
    const handleKeyUp = _react.useCallback((event)=>{
        if (event.keyCode === _typesJs.Key.Tab) !keyFocused && setKeyFocused(true);
    }, [
        keyFocused
    ]);
    const handleBlur = _react.useCallback(()=>{
        keyFocused && setKeyFocused(false);
    }, [
        keyFocused
    ]);
    const tabIndex = disabled ? -1 : 0;
    const hasNewChild = subNavigationItems.filter((subNavigationItem)=>subNavigationItem.new
    ).length > 0;
    const indicatorMarkup = hasNewChild ? /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _navigationScssJsDefault.default.Indicator
    }, /*#__PURE__*/ _reactDefault.default.createElement(_indicatorJs.Indicator, {
        pulse: true
    })) : null;
    const iconMarkup = icon ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _navigationScssJsDefault.default.Icon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: icon
    })) : null;
    const externalIconLabel = i18n.translate('Polaris.Common.newWindowAccessibilityHint');
    const externalLinkIconMarkup = external ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _navigationScssJsDefault.default.ExternalIcon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        accessibilityLabel: externalIconLabel,
        source: _polarisIcons.ExternalMinor,
        color: "base"
    })) : null;
    let badgeMarkup = null;
    if (isNew) badgeMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_badgeJs.Badge, {
        status: "new",
        size: "small"
    }, i18n.translate('Polaris.Badge.STATUS_LABELS.new'));
    else if (typeof badge === 'string') badgeMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_badgeJs.Badge, {
        status: "new",
        size: "small"
    }, badge);
    else badgeMarkup = badge;
    const wrappedBadgeMarkup = badgeMarkup == null ? null : /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _navigationScssJsDefault.default.Badge
    }, badgeMarkup);
    const itemContentMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, iconMarkup, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _navigationScssJsDefault.default.Text
    }, label1, indicatorMarkup), wrappedBadgeMarkup);
    if (url == null) {
        const className = _cssJs.classNames(_navigationScssJsDefault.default.Item, disabled && _navigationScssJsDefault.default['Item-disabled'], keyFocused && _navigationScssJsDefault.default.keyFocused, selectedOverride && _navigationScssJsDefault.default['Item-selected']);
        return(/*#__PURE__*/ _reactDefault.default.createElement("li", {
            className: _navigationScssJsDefault.default.ListItem
        }, /*#__PURE__*/ _reactDefault.default.createElement("button", {
            type: "button",
            className: className,
            disabled: disabled,
            "aria-disabled": disabled,
            "aria-label": accessibilityLabel,
            onClick: getClickHandler(onClick1),
            onKeyUp: handleKeyUp,
            onBlur: handleBlur
        }, itemContentMarkup)));
    }
    const secondaryActionMarkup = secondaryAction && /*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, {
        external: true,
        url: secondaryAction.url,
        className: _navigationScssJsDefault.default.SecondaryAction,
        tabIndex: tabIndex,
        "aria-disabled": disabled,
        "aria-label": secondaryAction.accessibilityLabel,
        onClick: secondaryAction.onClick
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: secondaryAction.icon
    }));
    const matchState = matchStateForItem({
        url,
        matches,
        exactMatch,
        matchPaths,
        excludePaths
    }, location);
    const matchingSubNavigationItems = subNavigationItems.filter((item)=>{
        const subMatchState = matchStateForItem(item, location);
        return subMatchState === MatchState1.MatchForced || subMatchState === MatchState1.MatchUrl || subMatchState === MatchState1.MatchPaths;
    });
    const childIsActive = matchingSubNavigationItems.length > 0;
    const selected = selectedOverride == null ? matchState === MatchState1.MatchForced || matchState === MatchState1.MatchUrl || matchState === MatchState1.MatchPaths : selectedOverride;
    const showExpanded = selected || expanded || childIsActive;
    const itemClassName = _cssJs.classNames(_navigationScssJsDefault.default.Item, disabled && _navigationScssJsDefault.default['Item-disabled'], selected && subNavigationItems.length === 0 && _navigationScssJsDefault.default['Item-selected'], showExpanded && _navigationScssJsDefault.default.subNavigationActive, keyFocused && _navigationScssJsDefault.default.keyFocused);
    let secondaryNavigationMarkup = null;
    if (subNavigationItems.length > 0) {
        const longestMatch = matchingSubNavigationItems.sort(({ url: firstUrl  }, { url: secondUrl  })=>secondUrl.length - firstUrl.length
        )[0];
        const SecondaryNavigationClassName = _cssJs.classNames(_navigationScssJsDefault.default.SecondaryNavigation, showExpanded && _navigationScssJsDefault.default.isExpanded, !icon && _navigationScssJsDefault.default['SecondaryNavigation-noIcon']);
        secondaryNavigationMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: SecondaryNavigationClassName
        }, /*#__PURE__*/ _reactDefault.default.createElement(_secondaryJs.Secondary, {
            expanded: showExpanded,
            id: secondaryNavigationId
        }, subNavigationItems.map((item)=>{
            const { label , ...rest } = item;
            const onClick = ()=>{
                if (onNavigationDismiss) onNavigationDismiss();
                if (item.onClick && item.onClick !== onNavigationDismiss) item.onClick();
            };
            return(/*#__PURE__*/ _reactDefault.default.createElement(Item, Object.assign({
            }, rest, {
                key: label,
                label: label,
                matches: item === longestMatch,
                onClick: onClick
            })));
        })));
    }
    const className = _cssJs.classNames(_navigationScssJsDefault.default.ListItem, secondaryAction && _navigationScssJsDefault.default['ListItem-hasAction']);
    function getClickHandler(onClick) {
        return (event)=>{
            const { currentTarget  } = event;
            if (currentTarget.getAttribute('href') === location) {
                event.preventDefault();
            }
            if (subNavigationItems && subNavigationItems.length > 0 && isNavigationCollapsed) {
                event.preventDefault();
                setExpanded(!expanded);
            } else if (onNavigationDismiss) {
                onNavigationDismiss();
                if (onClick && onClick !== onNavigationDismiss) {
                    onClick();
                }
                return;
            }
            if (onClick) {
                onClick();
            }
        };
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement("li", {
        className: className
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _navigationScssJsDefault.default.ItemWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, Object.assign({
        url: url,
        className: itemClassName,
        external: external,
        tabIndex: tabIndex,
        "aria-disabled": disabled,
        "aria-label": accessibilityLabel,
        onClick: getClickHandler(onClick1),
        onKeyUp: handleKeyUp,
        onBlur: handleBlur
    }, normalizeAriaAttributes(secondaryNavigationId, subNavigationItems.length > 0, showExpanded)), itemContentMarkup, externalLinkIconMarkup), secondaryActionMarkup), secondaryNavigationMarkup));
}
function isNavigationItemActive(navigationItem, currentPath) {
    const matchState = matchStateForItem(navigationItem, currentPath);
    const matchingSubNavigationItems = navigationItem.subNavigationItems && navigationItem.subNavigationItems.filter((item)=>{
        const subMatchState = matchStateForItem(item, currentPath);
        return subMatchState === MatchState1.MatchForced || subMatchState === MatchState1.MatchUrl || subMatchState === MatchState1.MatchPaths;
    });
    const childIsActive = matchingSubNavigationItems && matchingSubNavigationItems.length > 0;
    const selected = matchState === MatchState1.MatchForced || matchState === MatchState1.MatchUrl || matchState === MatchState1.MatchPaths;
    return selected || childIsActive;
}
function normalizePathname(pathname) {
    const barePathname = pathname.split('?')[0].split('#')[0];
    return barePathname.endsWith('/') ? barePathname : `${barePathname}/`;
}
function safeEqual(location, path) {
    return normalizePathname(location) === normalizePathname(path);
}
function safeStartsWith(location, path) {
    return normalizePathname(location).startsWith(normalizePathname(path));
}
function matchStateForItem({ url , matches , exactMatch , matchPaths , excludePaths  }, location) {
    if (url == null) return MatchState1.NoMatch;
    if (matches) return MatchState1.MatchForced;
    if (matches === false || excludePaths && excludePaths.some((path)=>safeStartsWith(location, path)
    )) return MatchState1.Excluded;
    if (matchPaths && matchPaths.some((path)=>safeStartsWith(location, path)
    )) return MatchState1.MatchPaths;
    const matchesUrl = exactMatch ? safeEqual(location, url) : safeStartsWith(location, url);
    return matchesUrl ? MatchState1.MatchUrl : MatchState1.NoMatch;
}
function normalizeAriaAttributes(controlId, hasSubMenu, expanded) {
    return hasSubMenu ? {
        'aria-expanded': expanded,
        'aria-controls': controlId
    } : undefined;
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../../../utilities/css.js":"kYdwV","../../context.js":"k1WIf","../../../../types.js":"atQnH","../../Navigation.scss.js":"6j7RA","./components/Secondary/Secondary.js":"bD5Ku","../../../../utilities/i18n/hooks.js":"hHpYD","../../../../utilities/media-query/hooks.js":"h6QAO","../../../../utilities/unique-id/hooks.js":"kPfFC","../../../Indicator/Indicator.js":"7sG3E","../../../Icon/Icon.js":"flzpR","../../../Badge/Badge.js":"hM2Xf","../../../UnstyledLink/UnstyledLink.js":"8AMgX","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bD5Ku":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Secondary", ()=>Secondary
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _navigationScssJs = require("../../../../Navigation.scss.js");
var _navigationScssJsDefault = parcelHelpers.interopDefault(_navigationScssJs);
var _hooksJs = require("../../../../../../utilities/unique-id/hooks.js");
var _collapsibleJs = require("../../../../../Collapsible/Collapsible.js");
function Secondary({ id , children , expanded  }) {
    const uid = _hooksJs.useUniqueId('SecondaryNavigation');
    return(/*#__PURE__*/ _reactDefault.default.createElement(_collapsibleJs.Collapsible, {
        id: id || uid,
        open: expanded,
        transition: {
            duration: '0ms',
            timingFunction: 'linear'
        }
    }, /*#__PURE__*/ _reactDefault.default.createElement("ul", {
        className: _navigationScssJsDefault.default.List
    }, children)));
}

},{"react":"6fep5","../../../../Navigation.scss.js":"6j7RA","../../../../../../utilities/unique-id/hooks.js":"kPfFC","../../../../../Collapsible/Collapsible.js":"g8OGv","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kpGWJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "OptionList", ()=>OptionList
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _optionsJs = require("../../utilities/options.js");
var _arraysJs = require("../../utilities/arrays.js");
var _useDeepEffectJs = require("../../utilities/use-deep-effect.js");
var _optionListScssJs = require("./OptionList.scss.js");
var _optionListScssJsDefault = parcelHelpers.interopDefault(_optionListScssJs);
var _optionJs = require("./components/Option/Option.js");
var _hooksJs = require("../../utilities/unique-id/hooks.js");
function OptionList({ options: options1 , sections , title: title1 , selected , allowMultiple , role , optionRole , onChange , id: idProp  }) {
    const [normalizedOptions, setNormalizedOptions] = _react.useState(createNormalizedOptions(options1, sections, title1));
    const id = _hooksJs.useUniqueId('OptionList', idProp);
    _useDeepEffectJs.useDeepEffect(()=>{
        setNormalizedOptions(createNormalizedOptions(options1 || [], sections || [], title1));
    }, [
        options1,
        sections,
        title1
    ], optionArraysAreEqual);
    const handleClick = _react.useCallback((sectionIndex, optionIndex)=>{
        const selectedValue = normalizedOptions[sectionIndex].options[optionIndex].value;
        const foundIndex = selected.indexOf(selectedValue);
        if (allowMultiple) {
            const newSelection = foundIndex === -1 ? [
                selectedValue,
                ...selected
            ] : [
                ...selected.slice(0, foundIndex),
                ...selected.slice(foundIndex + 1, selected.length)
            ];
            onChange(newSelection);
            return;
        }
        onChange([
            selectedValue
        ]);
    }, [
        normalizedOptions,
        selected,
        allowMultiple,
        onChange
    ]);
    const optionsExist = normalizedOptions.length > 0;
    const optionsMarkup1 = optionsExist ? normalizedOptions.map(({ title , options  }, sectionIndex)=>{
        const titleMarkup = title ? /*#__PURE__*/ _reactDefault.default.createElement("p", {
            className: _optionListScssJsDefault.default.Title
        }, title) : null;
        const optionsMarkup = options && options.map((option, optionIndex)=>{
            const isSelected = selected.includes(option.value);
            const optionId = option.id || `${id}-${sectionIndex}-${optionIndex}`;
            return(/*#__PURE__*/ _reactDefault.default.createElement(_optionJs.Option, Object.assign({
            }, option, {
                key: optionId,
                id: optionId,
                section: sectionIndex,
                index: optionIndex,
                onClick: handleClick,
                select: isSelected,
                allowMultiple: allowMultiple,
                role: optionRole
            })));
        });
        return(/*#__PURE__*/ _reactDefault.default.createElement("li", {
            key: title || `noTitle-${sectionIndex}`
        }, titleMarkup, /*#__PURE__*/ _reactDefault.default.createElement("ul", {
            className: _optionListScssJsDefault.default.Options,
            id: `${id}-${sectionIndex}`,
            role: role
        }, optionsMarkup)));
    }) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("ul", {
        className: _optionListScssJsDefault.default.OptionList,
        role: role
    }, optionsMarkup1));
}
function createNormalizedOptions(options, sections, title) {
    if (options == null) {
        const section = {
            options: [],
            title
        };
        return sections == null ? [] : [
            section,
            ...sections
        ];
    }
    if (sections == null) return [
        {
            title,
            options
        }
    ];
    return [
        {
            title,
            options
        },
        ...sections
    ];
}
function optionArraysAreEqual(firstArray, secondArray) {
    if (_optionsJs.isSection(firstArray) && _optionsJs.isSection(secondArray)) return _arraysJs.arraysAreEqual(firstArray, secondArray, testSectionsPropEquality);
    return _arraysJs.arraysAreEqual(firstArray, secondArray);
}
function testSectionsPropEquality(previousSection, currentSection) {
    const { options: previousOptions  } = previousSection;
    const { options: currentOptions  } = currentSection;
    const optionsAreEqual = _arraysJs.arraysAreEqual(previousOptions, currentOptions);
    const titlesAreEqual = previousSection.title === currentSection.title;
    return optionsAreEqual && titlesAreEqual;
}

},{"react":"6fep5","../../utilities/options.js":"1xZHM","../../utilities/arrays.js":"2YX5s","../../utilities/use-deep-effect.js":"k1lca","./OptionList.scss.js":"9VcX6","./components/Option/Option.js":"3Degs","../../utilities/unique-id/hooks.js":"kPfFC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2YX5s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "arraysAreEqual", ()=>arraysAreEqual
);
function arraysAreEqual(firstArray, secondArray, comparator) {
    if (firstArray.length !== secondArray.length) return false;
    return firstArray.every((firstItem, index)=>{
        const secondItem = secondArray[index];
        if (comparator != null) return comparator(firstItem, secondItem);
        return firstItem === secondItem;
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"9VcX6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "OptionList": "Polaris-OptionList",
    "Options": "Polaris-OptionList__Options",
    "Title": "Polaris-OptionList__Title"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3Degs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Option", ()=>Option
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _useToggleJs = require("../../../../utilities/use-toggle.js");
var _cssJs = require("../../../../utilities/css.js");
var _optionScssJs = require("./Option.scss.js");
var _optionScssJsDefault = parcelHelpers.interopDefault(_optionScssJs);
var _checkboxJs = require("../Checkbox/Checkbox.js");
var _scrollableJs = require("../../../Scrollable/Scrollable.js");
function Option({ label , value , id , select , active , allowMultiple , disabled , role , media , onClick , section , index  }) {
    const { value: focused , toggle: toggleFocused  } = _useToggleJs.useToggle(false);
    const handleClick = _react.useCallback(()=>{
        if (disabled) return;
        onClick(section, index);
    }, [
        disabled,
        index,
        onClick,
        section
    ]);
    const mediaMarkup = media ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _optionScssJsDefault.default.Media
    }, media) : null;
    const singleSelectClassName = _cssJs.classNames(_optionScssJsDefault.default.SingleSelectOption, focused && _optionScssJsDefault.default.focused, disabled && _optionScssJsDefault.default.disabled, select && _optionScssJsDefault.default.select, active && _optionScssJsDefault.default.active);
    const multiSelectClassName = _cssJs.classNames(_optionScssJsDefault.default.Label, disabled && _optionScssJsDefault.default.disabled, active && _optionScssJsDefault.default.active, select && _optionScssJsDefault.default.select);
    const checkBoxRole = role === 'option' ? 'presentation' : undefined;
    const optionMarkup = allowMultiple ? /*#__PURE__*/ _reactDefault.default.createElement("label", {
        htmlFor: id,
        className: multiSelectClassName
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _optionScssJsDefault.default.Checkbox
    }, /*#__PURE__*/ _reactDefault.default.createElement(_checkboxJs.Checkbox, {
        id: id,
        value: value,
        checked: select,
        active: active,
        disabled: disabled,
        onChange: handleClick,
        role: checkBoxRole
    })), mediaMarkup, label) : /*#__PURE__*/ _reactDefault.default.createElement("button", {
        id: id,
        type: "button",
        className: singleSelectClassName,
        onClick: handleClick,
        disabled: disabled,
        onFocus: toggleFocused,
        onBlur: toggleFocused,
        "aria-pressed": active
    }, mediaMarkup, label);
    const scrollMarkup = active ? /*#__PURE__*/ _reactDefault.default.createElement(_scrollableJs.Scrollable.ScrollTo, null) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("li", {
        key: id,
        className: _optionScssJsDefault.default.Option,
        tabIndex: -1
    }, scrollMarkup, optionMarkup));
}

},{"react":"6fep5","../../../../utilities/use-toggle.js":"jHDnh","../../../../utilities/css.js":"kYdwV","./Option.scss.js":"iixpM","../Checkbox/Checkbox.js":"eyTK3","../../../Scrollable/Scrollable.js":"6lHzT","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iixpM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Option": "Polaris-OptionList-Option",
    "SingleSelectOption": "Polaris-OptionList-Option__SingleSelectOption",
    "focused": "Polaris-OptionList-Option--focused",
    "active": "Polaris-OptionList-Option--active",
    "select": "Polaris-OptionList-Option--select",
    "disabled": "Polaris-OptionList-Option--disabled",
    "Media": "Polaris-OptionList-Option__Media",
    "Label": "Polaris-OptionList-Option__Label",
    "Checkbox": "Polaris-OptionList-Option__Checkbox"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eyTK3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Checkbox", ()=>Checkbox
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../../../utilities/css.js");
var _checkboxScssJs = require("./Checkbox.scss.js");
var _checkboxScssJsDefault = parcelHelpers.interopDefault(_checkboxScssJs);
var _hooksJs = require("../../../../utilities/unique-id/hooks.js");
var _iconJs = require("../../../Icon/Icon.js");
function Checkbox({ id: idProp , checked =false , disabled , active , onChange , name , value , role  }) {
    const id = _hooksJs.useUniqueId('Checkbox', idProp);
    const [keyFocused, setKeyFocused] = _react.useState(false);
    const className = _cssJs.classNames(_checkboxScssJsDefault.default.Checkbox, active && _checkboxScssJsDefault.default.active);
    const handleBlur = ()=>{
        setKeyFocused(false);
    };
    const handleKeyUp = ()=>{
        !keyFocused && setKeyFocused(true);
    };
    const inputClassName = _cssJs.classNames(_checkboxScssJsDefault.default.Input, keyFocused && _checkboxScssJsDefault.default.keyFocused);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, /*#__PURE__*/ _reactDefault.default.createElement("input", {
        id: id,
        name: name,
        value: value,
        type: "checkbox",
        checked: checked,
        disabled: disabled,
        className: inputClassName,
        "aria-checked": checked,
        onChange: onChange,
        onBlur: handleBlur,
        onKeyUp: handleKeyUp,
        role: role
    }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _checkboxScssJsDefault.default.Backdrop
    }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _checkboxScssJsDefault.default.Icon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.TickSmallMinor
    }))));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../../../utilities/css.js":"kYdwV","./Checkbox.scss.js":"gI7zJ","../../../../utilities/unique-id/hooks.js":"kPfFC","../../../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"gI7zJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Checkbox": "Polaris-OptionList-Checkbox",
    "active": "Polaris-OptionList-Checkbox--active",
    "Backdrop": "Polaris-OptionList-Checkbox__Backdrop",
    "Input": "Polaris-OptionList-Checkbox__Input",
    "keyFocused": "Polaris-OptionList-Checkbox--keyFocused",
    "Input-indeterminate": "Polaris-OptionList-Checkbox__Input--indeterminate",
    "Icon": "Polaris-OptionList-Checkbox__Icon",
    "hover": "Polaris-OptionList-Checkbox--hover"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hAAeL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Page", ()=>Page
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _pageScssJs = require("./Page.scss.js");
var _pageScssJsDefault = parcelHelpers.interopDefault(_pageScssJs);
var _headerJs = require("./components/Header/Header.js");
function Page({ children , fullWidth , narrowWidth , divider , ...rest }) {
    const pageClassName = _cssJs.classNames(_pageScssJsDefault.default.Page, fullWidth && _pageScssJsDefault.default.fullWidth, narrowWidth && _pageScssJsDefault.default.narrowWidth);
    const hasHeaderContent = rest.title != null && rest.title !== '' || rest.primaryAction != null || rest.secondaryActions != null && rest.secondaryActions.length > 0 || rest.actionGroups != null && rest.actionGroups.length > 0 || rest.breadcrumbs != null && rest.breadcrumbs.length > 0;
    const contentClassName = _cssJs.classNames(_pageScssJsDefault.default.Content, divider && hasHeaderContent && _pageScssJsDefault.default.divider);
    const headerMarkup = hasHeaderContent ? /*#__PURE__*/ _reactDefault.default.createElement(_headerJs.Header, rest) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: pageClassName
    }, headerMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: contentClassName
    }, children)));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./Page.scss.js":"h6kaN","./components/Header/Header.js":"jvWTy","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"h6kaN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Page": "Polaris-Page",
    "fullWidth": "Polaris-Page--fullWidth",
    "narrowWidth": "Polaris-Page--narrowWidth",
    "Content": "Polaris-Page__Content",
    "divider": "Polaris-Page--divider"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jvWTy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Header", ()=>Header
);
parcelHelpers.export(exports, "isPrimaryAction", ()=>isPrimaryAction
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _componentsJs = require("../../../../utilities/components.js");
var _headerScssJs = require("./Header.scss.js");
var _headerScssJsDefault = parcelHelpers.interopDefault(_headerScssJs);
var _breadcrumbsJs = require("../../../Breadcrumbs/Breadcrumbs.js");
var _paginationJs = require("../../../Pagination/Pagination.js");
var _titleJs = require("./components/Title/Title.js");
var _actionMenuJs = require("../../../ActionMenu/ActionMenu.js");
var _hooksJs = require("../../../../utilities/media-query/hooks.js");
var _textStyleJs = require("../../../TextStyle/TextStyle.js");
var _utilsJs = require("../../../Button/utils.js");
function isPrimaryAction(x) {
    return !/*#__PURE__*/ _react.isValidElement(x) && x !== undefined;
}
const SHORT_TITLE = 20;
const REALLY_SHORT_TITLE = 8;
const LONG_TITLE = 34;
function Header({ title , subtitle , titleMetadata , additionalMetadata , thumbnail , titleHidden =false , primaryAction , pagination , additionalNavigation , breadcrumbs =[] , secondaryActions =[] , actionGroups =[] , compactTitle =false  }) {
    const { isNavigationCollapsed  } = _hooksJs.useMediaQuery();
    const isSingleRow = !primaryAction && !pagination && !secondaryActions.length && !actionGroups.length;
    const breadcrumbMarkup = breadcrumbs.length > 0 ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.BreadcrumbWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement(_breadcrumbsJs.Breadcrumbs, {
        breadcrumbs: breadcrumbs
    })) : null;
    const paginationMarkup = pagination && !isNavigationCollapsed ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.PaginationWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement(_paginationJs.Pagination, pagination)) : null;
    const additionalNavigationMarkup = additionalNavigation ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.AdditionalNavigationWrapper
    }, additionalNavigation) : null;
    const navigationMarkup = breadcrumbMarkup || paginationMarkup || additionalNavigationMarkup ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.Navigation
    }, breadcrumbMarkup, additionalNavigationMarkup, paginationMarkup) : null;
    const pageTitleMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.TitleWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement(_titleJs.Title, {
        title: title,
        subtitle: subtitle,
        titleMetadata: titleMetadata,
        thumbnail: thumbnail,
        compactTitle: compactTitle
    }));
    const primaryActionMarkup = primaryAction ? /*#__PURE__*/ _reactDefault.default.createElement(PrimaryActionMarkup, {
        primaryAction: primaryAction
    }) : null;
    const actionMenuMarkup = secondaryActions.length > 0 || _actionMenuJs.hasGroupsWithActions(actionGroups) ? /*#__PURE__*/ _reactDefault.default.createElement(_actionMenuJs.ActionMenu, {
        actions: secondaryActions,
        groups: actionGroups,
        rollup: isNavigationCollapsed
    }) : null;
    const additionalMetadataMarkup = additionalMetadata ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.AdditionalMetaData
    }, /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, {
        variation: "subdued"
    }, additionalMetadata)) : null;
    const headerClassNames = _cssJs.classNames(_headerScssJsDefault.default.Header, isSingleRow && _headerScssJsDefault.default.isSingleRow, titleHidden && _headerScssJsDefault.default.titleHidden, navigationMarkup && _headerScssJsDefault.default.hasNavigation, actionMenuMarkup && _headerScssJsDefault.default.hasActionMenu, isNavigationCollapsed && _headerScssJsDefault.default.mobileView, !breadcrumbs.length && _headerScssJsDefault.default.noBreadcrumbs, title && title.length < LONG_TITLE && _headerScssJsDefault.default.mediumTitle, title && title.length > LONG_TITLE && _headerScssJsDefault.default.longTitle);
    const { slot1 , slot2 , slot3 , slot4 , slot5 , slot6  } = determineLayout({
        actionMenuMarkup,
        additionalMetadataMarkup,
        additionalNavigationMarkup,
        breadcrumbMarkup,
        isNavigationCollapsed,
        pageTitleMarkup,
        paginationMarkup,
        primaryActionMarkup,
        title
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: headerClassNames
    }, /*#__PURE__*/ _reactDefault.default.createElement(_componentsJs.ConditionalRender, {
        condition: [
            slot1,
            slot2,
            slot3,
            slot4
        ].some(notNull)
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.Row
    }, slot1, slot2, /*#__PURE__*/ _reactDefault.default.createElement(_componentsJs.ConditionalRender, {
        condition: [
            slot3,
            slot4
        ].some(notNull)
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.RightAlign
    }, /*#__PURE__*/ _reactDefault.default.createElement(_componentsJs.ConditionalWrapper, {
        condition: [
            slot3,
            slot4
        ].every(notNull),
        wrapper: (children)=>/*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _headerScssJsDefault.default.Actions
            }, children)
    }, slot3, slot4))))), /*#__PURE__*/ _reactDefault.default.createElement(_componentsJs.ConditionalRender, {
        condition: [
            slot5,
            slot6
        ].some(notNull)
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.Row
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.LeftAlign
    }, slot5), /*#__PURE__*/ _reactDefault.default.createElement(_componentsJs.ConditionalRender, {
        condition: slot6 != null
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.RightAlign
    }, slot6))))));
}
function PrimaryActionMarkup({ primaryAction  }) {
    const { isNavigationCollapsed  } = _hooksJs.useMediaQuery();
    let content = primaryAction;
    if (isPrimaryAction(primaryAction)) {
        const primary = primaryAction.primary === undefined ? true : primaryAction.primary;
        content = _utilsJs.buttonsFrom(shouldShowIconOnly(isNavigationCollapsed, primaryAction), {
            primary
        });
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _headerScssJsDefault.default.PrimaryActionWrapper
    }, content));
}
function shouldShowIconOnly(isMobile, action) {
    let { content , accessibilityLabel , icon  } = action;
    if (icon == null) return {
        ...action,
        icon: undefined
    };
    if (isMobile) {
        accessibilityLabel = accessibilityLabel || content;
        content = undefined;
    } else icon = undefined;
    return {
        ...action,
        content,
        accessibilityLabel,
        icon
    };
}
function notNull(value) {
    return value != null;
}
function determineLayout({ actionMenuMarkup , additionalMetadataMarkup , additionalNavigationMarkup , breadcrumbMarkup , isNavigationCollapsed , pageTitleMarkup , paginationMarkup , primaryActionMarkup , title  }) {
    //    Header Layout
    // |----------------------------------------------------|
    // | slot1 | slot2 |                    | slot3 | slot4 |
    // |----------------------------------------------------|
    // | slot5 |                                    | slot6 |
    // |----------------------------------------------------|
    //
    const layouts = {
        mobileCompact: {
            slots: {
                slot1: null,
                slot2: pageTitleMarkup,
                slot3: actionMenuMarkup,
                slot4: primaryActionMarkup,
                slot5: additionalMetadataMarkup,
                slot6: additionalNavigationMarkup
            },
            condition: isNavigationCollapsed && breadcrumbMarkup == null && title != null && title.length <= REALLY_SHORT_TITLE
        },
        mobileDefault: {
            slots: {
                slot1: breadcrumbMarkup,
                slot2: pageTitleMarkup,
                slot3: actionMenuMarkup,
                slot4: primaryActionMarkup,
                slot5: additionalMetadataMarkup,
                slot6: additionalNavigationMarkup
            },
            condition: isNavigationCollapsed
        },
        desktopCompact: {
            slots: {
                slot1: breadcrumbMarkup,
                slot2: pageTitleMarkup,
                slot3: actionMenuMarkup,
                slot4: primaryActionMarkup,
                slot5: additionalMetadataMarkup,
                slot6: additionalNavigationMarkup
            },
            condition: !isNavigationCollapsed && paginationMarkup == null && actionMenuMarkup == null && title != null && title.length <= SHORT_TITLE
        },
        desktopDefault: {
            slots: {
                slot1: breadcrumbMarkup,
                slot2: pageTitleMarkup,
                slot3: /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, actionMenuMarkup, primaryActionMarkup),
                slot4: paginationMarkup,
                slot5: additionalMetadataMarkup,
                slot6: additionalNavigationMarkup
            },
            condition: !isNavigationCollapsed
        }
    };
    const layout1 = Object.values(layouts).find((layout)=>layout.condition
    ) || layouts.desktopDefault;
    return layout1.slots;
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/components.js":"6E8xC","./Header.scss.js":"tN1Lu","../../../Breadcrumbs/Breadcrumbs.js":"adsbe","../../../Pagination/Pagination.js":"lJxp1","./components/Title/Title.js":"jQdVC","../../../ActionMenu/ActionMenu.js":"20fgb","../../../../utilities/media-query/hooks.js":"h6QAO","../../../TextStyle/TextStyle.js":"cC66D","../../../Button/utils.js":"9W95c","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"tN1Lu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Header": "Polaris-Page-Header",
    "titleHidden": "Polaris-Page-Header--titleHidden",
    "TitleWrapper": "Polaris-Page-Header__TitleWrapper",
    "Navigation": "Polaris-Page-Header__Navigation",
    "hasActionMenu": "Polaris-Page-Header--hasActionMenu",
    "mobileView": "Polaris-Page-Header--mobileView",
    "BreadcrumbWrapper": "Polaris-Page-Header__BreadcrumbWrapper",
    "PaginationWrapper": "Polaris-Page-Header__PaginationWrapper",
    "AdditionalNavigationWrapper": "Polaris-Page-Header__AdditionalNavigationWrapper",
    "MainContent": "Polaris-Page-Header__MainContent",
    "TitleActionMenuWrapper": "Polaris-Page-Header__TitleActionMenuWrapper",
    "hasNavigation": "Polaris-Page-Header--hasNavigation",
    "PrimaryActionWrapper": "Polaris-Page-Header__PrimaryActionWrapper",
    "ActionMenuWrapper": "Polaris-Page-Header__ActionMenuWrapper",
    "Row": "Polaris-Page-Header__Row",
    "RightAlign": "Polaris-Page-Header__RightAlign",
    "LeftAlign": "Polaris-Page-Header__LeftAlign",
    "noBreadcrumbs": "Polaris-Page-Header--noBreadcrumbs",
    "AdditionalMetaData": "Polaris-Page-Header__AdditionalMetaData",
    "Actions": "Polaris-Page-Header__Actions",
    "longTitle": "Polaris-Page-Header--longTitle",
    "mediumTitle": "Polaris-Page-Header--mediumTitle",
    "isSingleRow": "Polaris-Page-Header--isSingleRow"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lJxp1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Pagination", ()=>Pagination
);
var _polarisIcons = require("@shopify/polaris-icons");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _isInputFocusedJs = require("../../utilities/is-input-focused.js");
var _tooltipJs = require("../Tooltip/Tooltip.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _keypressListenerJs = require("../KeypressListener/KeypressListener.js");
var _buttonGroupJs = require("../ButtonGroup/ButtonGroup.js");
var _buttonJs = require("../Button/Button.js");
var _textStyleJs = require("../TextStyle/TextStyle.js");
function Pagination({ hasNext , hasPrevious , nextURL , previousURL , onNext , onPrevious , nextTooltip , previousTooltip , nextKeys , previousKeys , accessibilityLabel , accessibilityLabels , label  }) {
    const i18n = _hooksJs.useI18n();
    const node = /*#__PURE__*/ _react.createRef();
    const navLabel = accessibilityLabel || i18n.translate('Polaris.Pagination.pagination');
    const previousLabel = (accessibilityLabels === null || accessibilityLabels === void 0 ? void 0 : accessibilityLabels.previous) || i18n.translate('Polaris.Pagination.previous');
    const nextLabel = (accessibilityLabels === null || accessibilityLabels === void 0 ? void 0 : accessibilityLabels.next) || i18n.translate('Polaris.Pagination.next');
    const prev = /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        outline: true,
        icon: _polarisIcons.ChevronLeftMinor,
        accessibilityLabel: previousLabel,
        url: previousURL,
        onClick: onPrevious,
        disabled: !hasPrevious,
        id: "previousURL"
    });
    const constructedPrevious = previousTooltip && hasPrevious ? /*#__PURE__*/ _reactDefault.default.createElement(_tooltipJs.Tooltip, {
        activatorWrapper: "span",
        content: previousTooltip
    }, prev) : prev;
    const next = /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        outline: true,
        icon: _polarisIcons.ChevronRightMinor,
        accessibilityLabel: nextLabel,
        url: nextURL,
        onClick: onNext,
        disabled: !hasNext,
        id: "nextURL"
    });
    const constructedNext = nextTooltip && hasNext ? /*#__PURE__*/ _reactDefault.default.createElement(_tooltipJs.Tooltip, {
        activatorWrapper: "span",
        content: nextTooltip
    }, next) : next;
    const previousHandler = onPrevious || noop;
    const previousButtonEvents = previousKeys && (previousURL || onPrevious) && hasPrevious && previousKeys.map((key)=>/*#__PURE__*/ _reactDefault.default.createElement(_keypressListenerJs.KeypressListener, {
            key: key,
            keyCode: key,
            handler: previousURL ? handleCallback(clickPaginationLink('previousURL', node)) : handleCallback(previousHandler)
        })
    );
    const nextHandler = onNext || noop;
    const nextButtonEvents = nextKeys && (nextURL || onNext) && hasNext && nextKeys.map((key)=>/*#__PURE__*/ _reactDefault.default.createElement(_keypressListenerJs.KeypressListener, {
            key: key,
            keyCode: key,
            handler: nextURL ? handleCallback(clickPaginationLink('nextURL', node)) : handleCallback(nextHandler)
        })
    );
    const labelTextMarkup = hasNext && hasPrevious ? /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, null, label) : /*#__PURE__*/ _reactDefault.default.createElement(_textStyleJs.TextStyle, {
        variation: "subdued"
    }, label);
    const labelMarkup = label ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        "aria-live": "polite"
    }, labelTextMarkup) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("nav", {
        "aria-label": navLabel,
        ref: node
    }, previousButtonEvents, nextButtonEvents, /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, {
        segmented: !label
    }, constructedPrevious, labelMarkup, constructedNext)));
}
function clickPaginationLink(id, node) {
    return ()=>{
        if (node.current == null) return;
        const link = node.current.querySelector(`#${id}`);
        if (link) link.click();
    };
}
function handleCallback(fn) {
    return ()=>{
        if (_isInputFocusedJs.isInputFocused()) return;
        fn();
    };
}
function noop() {
}

},{"@shopify/polaris-icons":"4Apua","react":"6fep5","../../utilities/is-input-focused.js":"b51H8","../Tooltip/Tooltip.js":"891PK","../../utilities/i18n/hooks.js":"hHpYD","../KeypressListener/KeypressListener.js":"2doU0","../ButtonGroup/ButtonGroup.js":"kXBsg","../Button/Button.js":"g06oC","../TextStyle/TextStyle.js":"cC66D","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"b51H8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isInputFocused", ()=>isInputFocused
);
var EditableTarget1;
(function(EditableTarget) {
    EditableTarget["Input"] = "INPUT";
    EditableTarget["Textarea"] = "TEXTAREA";
    EditableTarget["Select"] = "SELECT";
    EditableTarget["ContentEditable"] = "contenteditable";
})(EditableTarget1 || (EditableTarget1 = {
}));
function isInputFocused() {
    if (document == null || document.activeElement == null) return false;
    const { tagName  } = document.activeElement;
    return tagName === EditableTarget1.Input || tagName === EditableTarget1.Textarea || tagName === EditableTarget1.Select || document.activeElement.hasAttribute(EditableTarget1.ContentEditable);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"891PK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tooltip", ()=>Tooltip
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _focusJs = require("../../utilities/focus.js");
var _useToggleJs = require("../../utilities/use-toggle.js");
var _typesJs = require("../../types.js");
var _tooltipOverlayJs = require("./components/TooltipOverlay/TooltipOverlay.js");
var _hooksJs = require("../../utilities/unique-id/hooks.js");
var _portalJs = require("../Portal/Portal.js");
function Tooltip({ children , content , dismissOnMouseOut , active: originalActive , preferredPosition ='below' , activatorWrapper ='span' , accessibilityLabel  }) {
    const WrapperComponent = activatorWrapper;
    const { value: active , setTrue: handleFocus , setFalse: handleBlur  } = _useToggleJs.useToggle(Boolean(originalActive));
    const [activatorNode, setActivatorNode] = _react.useState(null);
    const id = _hooksJs.useUniqueId('TooltipContent');
    const activatorContainer = _react.useRef(null);
    const mouseEntered = _react.useRef(false);
    _react.useEffect(()=>{
        const firstFocusable = activatorContainer.current ? _focusJs.findFirstFocusableNode(activatorContainer.current) : null;
        const accessibilityNode = firstFocusable || activatorContainer.current;
        if (!accessibilityNode) return;
        accessibilityNode.tabIndex = 0;
        accessibilityNode.setAttribute('aria-describedby', id);
        accessibilityNode.setAttribute('data-polaris-tooltip-activator', 'true');
    }, [
        id,
        children
    ]);
    const handleKeyUp = _react.useCallback((event)=>{
        if (event.keyCode !== _typesJs.Key.Escape) return;
        handleBlur();
    }, [
        handleBlur
    ]);
    const portal = activatorNode ? /*#__PURE__*/ _reactDefault.default.createElement(_portalJs.Portal, {
        idPrefix: "tooltip"
    }, /*#__PURE__*/ _reactDefault.default.createElement(_tooltipOverlayJs.TooltipOverlay, {
        id: id,
        preferredPosition: preferredPosition,
        activator: activatorNode,
        active: active,
        accessibilityLabel: accessibilityLabel,
        onClose: noop,
        preventInteraction: dismissOnMouseOut
    }, content)) : null;
    function setActivator(node) {
        const activatorContainerRef = activatorContainer;
        if (node == null) {
            activatorContainerRef.current = null;
            setActivatorNode(null);
            return;
        }
        node.firstElementChild instanceof HTMLElement && setActivatorNode(node.firstElementChild);
        activatorContainerRef.current = node;
    }
    function handleMouseEnter() {
        mouseEntered.current = true;
        handleFocus();
    }
    function handleMouseLeave() {
        mouseEntered.current = false;
        handleBlur();
    } // https://github.com/facebook/react/issues/10109
    // Mouseenter event not triggered when cursor moves from disabled button
    function handleMouseEnterFix() {
        !mouseEntered.current && handleMouseEnter();
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement(WrapperComponent, {
        onFocus: handleFocus,
        onBlur: handleBlur,
        onMouseLeave: handleMouseLeave,
        onMouseOver: handleMouseEnterFix,
        onClick: stopPropagation,
        ref: setActivator,
        onKeyUp: handleKeyUp
    }, children, portal));
}
function noop() {
}
function stopPropagation(event) {
    event.stopPropagation();
}

},{"react":"6fep5","../../utilities/focus.js":"gLDAi","../../utilities/use-toggle.js":"jHDnh","../../types.js":"atQnH","./components/TooltipOverlay/TooltipOverlay.js":"in7jz","../../utilities/unique-id/hooks.js":"kPfFC","../Portal/Portal.js":"6irv6","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"in7jz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TooltipOverlay", ()=>TooltipOverlay
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _sharedJs = require("../../../shared.js");
var _tooltipOverlayScssJs = require("./TooltipOverlay.scss.js");
var _tooltipOverlayScssJsDefault = parcelHelpers.interopDefault(_tooltipOverlayScssJs);
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
var _positionedOverlayJs = require("../../../PositionedOverlay/PositionedOverlay.js");
function TooltipOverlay({ active , activator , preferredPosition ='below' , preventInteraction , id , children , accessibilityLabel  }) {
    const i18n = _hooksJs.useI18n();
    const markup = active ? /*#__PURE__*/ _reactDefault.default.createElement(_positionedOverlayJs.PositionedOverlay, {
        active: active,
        activator: activator,
        preferredPosition: preferredPosition,
        preventInteraction: preventInteraction,
        render: renderTooltip
    }) : null;
    function renderTooltip(overlayDetails) {
        const { measuring , desiredHeight , positioning  } = overlayDetails;
        const containerClassName = _cssJs.classNames(_tooltipOverlayScssJsDefault.default.TooltipOverlay, measuring && _tooltipOverlayScssJsDefault.default.measuring, positioning === 'above' && _tooltipOverlayScssJsDefault.default.positionedAbove);
        const contentStyles = measuring ? undefined : {
            minHeight: desiredHeight
        };
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", Object.assign({
            className: containerClassName
        }, _sharedJs.layer.props), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            id: id,
            role: "tooltip",
            className: _tooltipOverlayScssJsDefault.default.Content,
            style: contentStyles,
            "aria-label": accessibilityLabel ? i18n.translate('Polaris.TooltipOverlay.accessibilityLabel', {
                label: accessibilityLabel
            }) : undefined
        }, children)));
    }
    return markup;
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../shared.js":"jYa7v","./TooltipOverlay.scss.js":"kMyLL","../../../../utilities/i18n/hooks.js":"hHpYD","../../../PositionedOverlay/PositionedOverlay.js":"6aBMP","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kMyLL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "TooltipOverlay": "Polaris-Tooltip-TooltipOverlay",
    "measuring": "Polaris-Tooltip-TooltipOverlay--measuring",
    "positionedAbove": "Polaris-Tooltip-TooltipOverlay--positionedAbove",
    "Content": "Polaris-Tooltip-TooltipOverlay__Content"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jQdVC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Title", ()=>Title
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../../../utilities/css.js");
var _titleScssJs = require("./Title.scss.js");
var _titleScssJsDefault = parcelHelpers.interopDefault(_titleScssJs);
function Title({ title , subtitle , titleMetadata , thumbnail , compactTitle  }) {
    const titleMarkup = title ? /*#__PURE__*/ _reactDefault.default.createElement("h1", {
        className: _titleScssJsDefault.default.Title
    }, title) : null;
    const titleMetadataMarkup = titleMetadata ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _titleScssJsDefault.default.TitleMetadata
    }, titleMetadata) : null;
    const wrappedTitleMarkup = titleMetadata ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _titleScssJsDefault.default.TitleWithMetadataWrapper
    }, titleMarkup, titleMetadataMarkup) : titleMarkup;
    const subtitleMarkup = subtitle ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _cssJs.classNames(_titleScssJsDefault.default.SubTitle, compactTitle && _titleScssJsDefault.default.SubtitleCompact)
    }, /*#__PURE__*/ _reactDefault.default.createElement("p", null, subtitle)) : null;
    const thumbnailMarkup = thumbnail ? /*#__PURE__*/ _reactDefault.default.createElement("div", null, thumbnail) : null;
    const pageTitleClassName = thumbnail ? _titleScssJsDefault.default.hasThumbnail : undefined;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: pageTitleClassName
    }, thumbnailMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _titleScssJsDefault.default.TitleAndSubtitleWrapper
    }, wrappedTitleMarkup, subtitleMarkup)));
}

},{"react":"6fep5","../../../../../../utilities/css.js":"kYdwV","./Title.scss.js":"3m7uX","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3m7uX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Title": "Polaris-Header-Title",
    "SubTitle": "Polaris-Header-Title__SubTitle",
    "SubtitleCompact": "Polaris-Header-Title__SubtitleCompact",
    "hasThumbnail": "Polaris-Header-Title--hasThumbnail",
    "TitleAndSubtitleWrapper": "Polaris-Header-Title__TitleAndSubtitleWrapper",
    "TitleWithMetadataWrapper": "Polaris-Header-Title__TitleWithMetadataWrapper",
    "TitleMetadata": "Polaris-Header-Title__TitleMetadata"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jeBTf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PageActions", ()=>PageActions
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _pageActionsScssJs = require("./PageActions.scss.js");
var _pageActionsScssJsDefault = parcelHelpers.interopDefault(_pageActionsScssJs);
var _utilsJs = require("../Button/utils.js");
var _buttonGroupJs = require("../ButtonGroup/ButtonGroup.js");
var _stackJs = require("../Stack/Stack.js");
function PageActions({ primaryAction , secondaryActions  }) {
    const primaryActionMarkup = primaryAction ? _utilsJs.buttonsFrom(primaryAction, {
        primary: true
    }) : null;
    const secondaryActionsMarkup = secondaryActions ? /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, null, _utilsJs.buttonsFrom(secondaryActions)) : null;
    const distribution = secondaryActionsMarkup ? 'equalSpacing' : 'trailing';
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _pageActionsScssJsDefault.default.PageActions
    }, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
        distribution: distribution,
        spacing: "tight"
    }, secondaryActionsMarkup, primaryActionMarkup)));
}

},{"react":"6fep5","./PageActions.scss.js":"iKgyi","../Button/utils.js":"9W95c","../ButtonGroup/ButtonGroup.js":"kXBsg","../Stack/Stack.js":"g05gm","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iKgyi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "PageActions": "Polaris-PageActions"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bC3Vl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PolarisTestProvider", ()=>PolarisTestProvider
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _mergeJs = require("../../utilities/merge.js");
var _utilsJs = require("../../utilities/theme/utils.js");
var _i18NJs = require("../../utilities/i18n/I18n.js");
var _scrollLockManagerJs = require("../../utilities/scroll-lock-manager/scroll-lock-manager.js");
var _stickyManagerJs = require("../../utilities/sticky-manager/sticky-manager.js");
var _uniqueIdFactoryJs = require("../../utilities/unique-id/unique-id-factory.js");
var _contextJs = require("../../utilities/features/context.js");
var _contextJs1 = require("../../utilities/i18n/context.js");
var _contextJs2 = require("../../utilities/scroll-lock-manager/context.js");
var _contextJs3 = require("../../utilities/sticky-manager/context.js");
var _contextJs4 = require("../../utilities/unique-id/context.js");
var _contextJs5 = require("../../utilities/link/context.js");
var _contextJs6 = require("../../utilities/theme/context.js");
var _contextJs7 = require("../../utilities/media-query/context.js");
var _portalsManagerJs = require("../PortalsManager/PortalsManager.js");
var _focusManagerJs = require("../FocusManager/FocusManager.js");
var _contextJs8 = require("../../utilities/frame/context.js");
const defaultMediaQuery = {
    isNavigationCollapsed: false
};
function PolarisTestProvider({ strict , children , i18n , link , theme ={
} , mediaQuery , features ={
} , frame  }) {
    const Wrapper = strict ? _react.StrictMode : _react.Fragment;
    const intl = new _i18NJs.I18n(i18n || {
    });
    const scrollLockManager = new _scrollLockManagerJs.ScrollLockManager();
    const stickyManager = new _stickyManagerJs.StickyManager();
    const uniqueIdFactory = new _uniqueIdFactoryJs.UniqueIdFactory(_uniqueIdFactoryJs.globalIdGeneratorFactory);
    const processedThemeConfig = {
        ...theme,
        colorScheme: 'light'
    };
    const customProperties = _utilsJs.buildCustomProperties(processedThemeConfig);
    const mergedTheme = _utilsJs.buildThemeContext(processedThemeConfig, customProperties);
    const mergedFrame = createFrameContext(frame);
    const mergedMediaQuery = _mergeJs.merge(defaultMediaQuery, mediaQuery);
    return(/*#__PURE__*/ _reactDefault.default.createElement(Wrapper, null, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs.FeaturesContext.Provider, {
        value: features
    }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs1.I18nContext.Provider, {
        value: intl
    }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs2.ScrollLockManagerContext.Provider, {
        value: scrollLockManager
    }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs3.StickyManagerContext.Provider, {
        value: stickyManager
    }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs4.UniqueIdFactoryContext.Provider, {
        value: uniqueIdFactory
    }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs5.LinkContext.Provider, {
        value: link
    }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs6.ThemeContext.Provider, {
        value: mergedTheme
    }, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs7.MediaQueryContext.Provider, {
        value: mergedMediaQuery
    }, /*#__PURE__*/ _reactDefault.default.createElement(_portalsManagerJs.PortalsManager, null, /*#__PURE__*/ _reactDefault.default.createElement(_focusManagerJs.FocusManager, null, /*#__PURE__*/ _reactDefault.default.createElement(_contextJs8.FrameContext.Provider, {
        value: mergedFrame
    }, children)))))))))))));
}
function noop() {
}
function createFrameContext({ showToast =noop , hideToast =noop , setContextualSaveBar =noop , removeContextualSaveBar =noop , startLoading =noop , stopLoading =noop  } = {
}) {
    return {
        showToast,
        hideToast,
        setContextualSaveBar,
        removeContextualSaveBar,
        startLoading,
        stopLoading
    };
}

},{"react":"6fep5","../../utilities/merge.js":"84ELp","../../utilities/theme/utils.js":"bnJU8","../../utilities/i18n/I18n.js":"eGlQG","../../utilities/scroll-lock-manager/scroll-lock-manager.js":"lW8Vw","../../utilities/sticky-manager/sticky-manager.js":"97nir","../../utilities/unique-id/unique-id-factory.js":"cEi6z","../../utilities/features/context.js":"2vGa7","../../utilities/i18n/context.js":"jLNtz","../../utilities/scroll-lock-manager/context.js":"2vyo0","../../utilities/sticky-manager/context.js":"2p59M","../../utilities/unique-id/context.js":"5eXfO","../../utilities/link/context.js":"9F4RK","../../utilities/theme/context.js":"5MoSS","../../utilities/media-query/context.js":"epjLA","../PortalsManager/PortalsManager.js":"kxT8r","../FocusManager/FocusManager.js":"dn7ah","../../utilities/frame/context.js":"8EZEA","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"bryLy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ProgressBar", ()=>ProgressBar
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _progressBarScssJs = require("./ProgressBar.scss.js");
var _progressBarScssJsDefault = parcelHelpers.interopDefault(_progressBarScssJs);
var _hooksJs = require("../../utilities/i18n/hooks.js");
function ProgressBar({ progress =0 , size ='medium' , color ='highlight' , animated =true  }) {
    const i18n = _hooksJs.useI18n();
    const className = _cssJs.classNames(_progressBarScssJsDefault.default.ProgressBar, size && _progressBarScssJsDefault.default[_cssJs.variationName('size', size)], color && _progressBarScssJsDefault.default[_cssJs.variationName('color', color)]);
    const warningMessage = i18n.translate(progress < 0 ? 'Polaris.ProgressBar.negativeWarningMessage' : 'Polaris.ProgressBar.exceedWarningMessage', {
        progress
    });
    const parsedProgress = parseProgress(progress, warningMessage);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, /*#__PURE__*/ _reactDefault.default.createElement("progress", {
        className: _progressBarScssJsDefault.default.Progress,
        value: parsedProgress,
        max: "100"
    }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _cssJs.classNames(_progressBarScssJsDefault.default.Indicator, animated && _progressBarScssJsDefault.default.Animated),
        style: {
            width: `${parsedProgress}%`
        }
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _progressBarScssJsDefault.default.Label
    }, parsedProgress, "%"))));
}
function parseProgress(progress, warningMessage) {
    let progressWidth;
    if (progress < 0) {
        // eslint-disable-next-line no-console
        console.warn(warningMessage);
        progressWidth = 0;
    } else if (progress > 100) {
        // eslint-disable-next-line no-console
        console.warn(warningMessage);
        progressWidth = 100;
    } else progressWidth = progress;
    return progressWidth;
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./ProgressBar.scss.js":"6cG2G","../../utilities/i18n/hooks.js":"hHpYD","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6cG2G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ProgressBar": "Polaris-ProgressBar",
    "sizeSmall": "Polaris-ProgressBar--sizeSmall",
    "sizeMedium": "Polaris-ProgressBar--sizeMedium",
    "sizeLarge": "Polaris-ProgressBar--sizeLarge",
    "colorHighlight": "Polaris-ProgressBar--colorHighlight",
    "colorPrimary": "Polaris-ProgressBar--colorPrimary",
    "colorSuccess": "Polaris-ProgressBar--colorSuccess",
    "colorCritical": "Polaris-ProgressBar--colorCritical",
    "Indicator": "Polaris-ProgressBar__Indicator",
    "Animated": "Polaris-ProgressBar__Animated",
    "fillup": "Polaris-ProgressBar--fillup",
    "Progress": "Polaris-ProgressBar__Progress",
    "Label": "Polaris-ProgressBar__Label"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4GKCS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RangeSlider", ()=>RangeSlider
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _dualThumbJs = require("./components/DualThumb/DualThumb.js");
var _singleThumbJs = require("./components/SingleThumb/SingleThumb.js");
var _hooksJs = require("../../utilities/unique-id/hooks.js");
function RangeSlider({ min =0 , max =100 , step =1 , value , ...rest }) {
    const id = _hooksJs.useUniqueId('RangeSlider');
    const sharedProps = {
        id,
        min,
        max,
        step,
        ...rest
    };
    return isDualThumb(value) ? /*#__PURE__*/ _reactDefault.default.createElement(_dualThumbJs.DualThumb, Object.assign({
        value: value
    }, sharedProps)) : /*#__PURE__*/ _reactDefault.default.createElement(_singleThumbJs.SingleThumb, Object.assign({
        value: value
    }, sharedProps));
}
function isDualThumb(value) {
    return Array.isArray(value);
}

},{"react":"6fep5","./components/DualThumb/DualThumb.js":"8N7Ws","./components/SingleThumb/SingleThumb.js":"jH3R7","../../utilities/unique-id/hooks.js":"kPfFC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"8N7Ws":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DualThumb", ()=>DualThumb
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _isEqual = require("lodash/isEqual");
var _isEqualDefault = parcelHelpers.interopDefault(_isEqual);
var _cssJs = require("../../../../utilities/css.js");
var _indexJs = require("../../utilities/index.js");
var _typesJs = require("../../../../types.js");
var _dualThumbScssJs = require("./DualThumb.scss.js");
var _dualThumbScssJsDefault = parcelHelpers.interopDefault(_dualThumbScssJs);
var _labelledJs = require("../../../Labelled/Labelled.js");
var _labelJs = require("../../../Label/Label.js");
var _eventListenerJs = require("../../../EventListener/EventListener.js");
var _contextJs = require("../../../../utilities/features/context.js");
var Control1;
(function(Control) {
    Control[Control["Lower"] = 0] = "Lower";
    Control[Control["Upper"] = 1] = "Upper";
})(Control1 || (Control1 = {
}));
class DualThumb extends _react.Component {
    constructor(...args){
        super(...args);
        this.context = void 0;
        this.state = {
            value: sanitizeValue(this.props.value, this.props.min, this.props.max, this.props.step),
            trackWidth: 0,
            trackLeft: 0
        };
        this.track = /*#__PURE__*/ _react.createRef();
        this.trackWrapper = /*#__PURE__*/ _react.createRef();
        this.thumbLower = /*#__PURE__*/ _react.createRef();
        this.thumbUpper = /*#__PURE__*/ _react.createRef();
        this.setTrackPosition = _debounceDefault.default(()=>{
            if (this.track.current) {
                const thumbSize = 16;
                const { width , left  } = this.track.current.getBoundingClientRect();
                const adjustedTrackWidth = width - thumbSize;
                const adjustedTrackLeft = left + thumbSize / 2;
                const range = this.props.max - this.props.min;
                const minValuePosition = this.props.min / range * adjustedTrackWidth;
                this.setState({
                    trackWidth: adjustedTrackWidth,
                    trackLeft: adjustedTrackLeft - minValuePosition
                });
            }
        }, 40, {
            leading: true,
            trailing: true,
            maxWait: 40
        });
        this.handleMouseDownThumbLower = (event)=>{
            if (event.button !== 0 || this.props.disabled) return;
            registerMouseMoveHandler(this.handleMouseMoveThumbLower);
            event.stopPropagation();
        };
        this.handleMouseMoveThumbLower = (event)=>{
            const valueUpper = this.state.value[1];
            this.setValue([
                this.actualXPosition(event.clientX),
                valueUpper
            ], Control1.Upper);
        };
        this.handleTouchStartThumbLower = (event)=>{
            if (this.props.disabled) return;
            registerTouchMoveHandler(this.handleTouchMoveThumbLower);
            event.stopPropagation();
        };
        this.handleTouchMoveThumbLower = (event)=>{
            event.preventDefault();
            const valueUpper = this.state.value[1];
            this.setValue([
                this.actualXPosition(event.touches[0].clientX),
                valueUpper
            ], Control1.Upper);
        };
        this.handleMouseDownThumbUpper = (event)=>{
            if (event.button !== 0 || this.props.disabled) return;
            registerMouseMoveHandler(this.handleMouseMoveThumbUpper);
            event.stopPropagation();
        };
        this.handleMouseMoveThumbUpper = (event)=>{
            const valueLower = this.state.value[0];
            this.setValue([
                valueLower,
                this.actualXPosition(event.clientX)
            ], Control1.Lower);
        };
        this.handleTouchStartThumbUpper = (event)=>{
            if (this.props.disabled) return;
            registerTouchMoveHandler(this.handleTouchMoveThumbUpper);
            event.stopPropagation();
        };
        this.handleTouchMoveThumbUpper = (event)=>{
            event.preventDefault();
            const valueLower = this.state.value[0];
            this.setValue([
                valueLower,
                this.actualXPosition(event.touches[0].clientX)
            ], Control1.Lower);
        };
        this.handleKeypressLower = (event)=>{
            if (this.props.disabled) return;
            const { incrementValueLower , decrementValueLower  } = this;
            const handlerMap = {
                [_typesJs.Key.UpArrow]: incrementValueLower,
                [_typesJs.Key.RightArrow]: incrementValueLower,
                [_typesJs.Key.DownArrow]: decrementValueLower,
                [_typesJs.Key.LeftArrow]: decrementValueLower
            };
            const handler = handlerMap[event.keyCode];
            if (handler != null) {
                event.preventDefault();
                event.stopPropagation();
                handler();
            }
        };
        this.handleKeypressUpper = (event)=>{
            if (this.props.disabled) return;
            const { incrementValueUpper , decrementValueUpper  } = this;
            const handlerMap = {
                [_typesJs.Key.UpArrow]: incrementValueUpper,
                [_typesJs.Key.RightArrow]: incrementValueUpper,
                [_typesJs.Key.DownArrow]: decrementValueUpper,
                [_typesJs.Key.LeftArrow]: decrementValueUpper
            };
            const handler = handlerMap[event.keyCode];
            if (handler != null) {
                event.preventDefault();
                event.stopPropagation();
                handler();
            }
        };
        this.incrementValueLower = ()=>{
            this.setValue([
                this.state.value[0] + this.props.step,
                this.state.value[1]
            ], Control1.Upper);
        };
        this.decrementValueLower = ()=>{
            this.setValue([
                this.state.value[0] - this.props.step,
                this.state.value[1]
            ], Control1.Upper);
        };
        this.incrementValueUpper = ()=>{
            this.setValue([
                this.state.value[0],
                this.state.value[1] + this.props.step
            ], Control1.Lower);
        };
        this.decrementValueUpper = ()=>{
            this.setValue([
                this.state.value[0],
                this.state.value[1] - this.props.step
            ], Control1.Lower);
        };
        this.dispatchValue = ()=>{
            const { onChange , id  } = this.props;
            const { value  } = this.state;
            onChange(value, id);
        };
        this.setValue = (dirtyValue, control)=>{
            const { props: { min , max , step  } , state: { value  }  } = this;
            const sanitizedValue = sanitizeValue(dirtyValue, min, max, step, control);
            if (_isEqualDefault.default(sanitizedValue, value) === false) this.setState({
                value: sanitizedValue
            }, this.dispatchValue);
        };
        this.handleMouseDownTrack = (event)=>{
            if (event.button !== 0 || this.props.disabled) return;
            event.preventDefault();
            const clickXPosition = this.actualXPosition(event.clientX);
            const { value  } = this.state;
            const distanceFromLowerThumb = Math.abs(value[0] - clickXPosition);
            const distanceFromUpperThumb = Math.abs(value[1] - clickXPosition);
            if (distanceFromLowerThumb <= distanceFromUpperThumb) {
                this.setValue([
                    clickXPosition,
                    value[1]
                ], Control1.Upper);
                registerMouseMoveHandler(this.handleMouseMoveThumbLower);
                if (this.thumbLower.current != null) this.thumbLower.current.focus();
            } else {
                this.setValue([
                    value[0],
                    clickXPosition
                ], Control1.Lower);
                registerMouseMoveHandler(this.handleMouseMoveThumbUpper);
                if (this.thumbUpper.current != null) this.thumbUpper.current.focus();
            }
        };
        this.handleTouchStartTrack = (event)=>{
            if (this.props.disabled) return;
            event.preventDefault();
            const clickXPosition = this.actualXPosition(event.touches[0].clientX);
            const { value  } = this.state;
            const distanceFromLowerThumb = Math.abs(value[0] - clickXPosition);
            const distanceFromUpperThumb = Math.abs(value[1] - clickXPosition);
            if (distanceFromLowerThumb <= distanceFromUpperThumb) {
                this.setValue([
                    clickXPosition,
                    value[1]
                ], Control1.Upper);
                registerTouchMoveHandler(this.handleTouchMoveThumbLower);
                if (this.thumbLower.current != null) this.thumbLower.current.focus();
            } else {
                this.setValue([
                    value[0],
                    clickXPosition
                ], Control1.Lower);
                registerTouchMoveHandler(this.handleTouchMoveThumbUpper);
                if (this.thumbUpper.current != null) this.thumbUpper.current.focus();
            }
        };
        this.actualXPosition = (dirtyXPosition)=>{
            if (this.track.current) {
                const { min , max  } = this.props;
                const { trackLeft , trackWidth  } = this.state;
                const relativeX = dirtyXPosition - trackLeft;
                const percentageOfTrack = relativeX / trackWidth;
                return percentageOfTrack * (max - min);
            } else return 0;
        };
    }
    static getDerivedStateFromProps(props, state) {
        const { min , step , max , value , onChange , id  } = props;
        const { prevValue  } = state;
        if (_isEqualDefault.default(prevValue, value)) return null;
        const sanitizedValue = sanitizeValue(value, min, max, step);
        if (!_isEqualDefault.default(value, sanitizedValue)) onChange(sanitizedValue, id);
        return {
            prevValue: value,
            value: sanitizedValue
        };
    }
    componentDidMount() {
        this.setTrackPosition();
        if (this.trackWrapper.current != null) this.trackWrapper.current.addEventListener('touchstart', this.handleTouchStartTrack, {
            passive: false
        });
    }
    componentWillUnmount() {
        if (this.trackWrapper.current != null) this.trackWrapper.current.removeEventListener('touchstart', this.handleTouchStartTrack);
    }
    render() {
        const { id , min , max , prefix , suffix , disabled , output , error , onFocus , onBlur , label , labelAction , labelHidden , helpText  } = this.props;
        const { value  } = this.state;
        const idLower = id;
        const idUpper = `${id}Upper`;
        const describedBy = [];
        if (error) describedBy.push(`${id}Error`);
        const ariaDescribedBy = describedBy.length ? describedBy.join(' ') : undefined;
        const trackWrapperClassName = _cssJs.classNames(_dualThumbScssJsDefault.default.TrackWrapper, error && _dualThumbScssJsDefault.default.error, disabled && _dualThumbScssJsDefault.default.disabled);
        const thumbLowerClassName = _cssJs.classNames(_dualThumbScssJsDefault.default.Thumbs, _dualThumbScssJsDefault.default.ThumbLower, disabled && _dualThumbScssJsDefault.default.disabled);
        const thumbUpperClassName = _cssJs.classNames(_dualThumbScssJsDefault.default.Thumbs, _dualThumbScssJsDefault.default.ThumbUpper, disabled && _dualThumbScssJsDefault.default.disabled);
        const trackWidth = this.state.trackWidth;
        const range = max - min;
        const minValuePosition = min / range * trackWidth;
        const leftPositionThumbLower = value[0] / range * trackWidth - minValuePosition;
        const leftPositionThumbUpper = value[1] / range * trackWidth - minValuePosition;
        const outputLowerClassName = _cssJs.classNames(_dualThumbScssJsDefault.default.Output, _dualThumbScssJsDefault.default.OutputLower);
        const outputMarkupLower = !disabled && output ? /*#__PURE__*/ _reactDefault.default.createElement("output", {
            htmlFor: idLower,
            className: outputLowerClassName,
            style: {
                left: `${leftPositionThumbLower}px`
            }
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _dualThumbScssJsDefault.default.OutputBubble
        }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: _dualThumbScssJsDefault.default.OutputText
        }, value[0]))) : null;
        const outputUpperClassName = _cssJs.classNames(_dualThumbScssJsDefault.default.Output, _dualThumbScssJsDefault.default.OutputUpper);
        const outputMarkupUpper = !disabled && output ? /*#__PURE__*/ _reactDefault.default.createElement("output", {
            htmlFor: idUpper,
            className: outputUpperClassName,
            style: {
                left: `${leftPositionThumbUpper}px`
            }
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _dualThumbScssJsDefault.default.OutputBubble
        }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: _dualThumbScssJsDefault.default.OutputText
        }, value[1]))) : null;
        const cssVars = {
            [`${_indexJs.CSS_VAR_PREFIX}progress-lower`]: `${leftPositionThumbLower}px`,
            [`${_indexJs.CSS_VAR_PREFIX}progress-upper`]: `${leftPositionThumbUpper}px`
        };
        const prefixMarkup = prefix && /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _dualThumbScssJsDefault.default.Prefix
        }, prefix);
        const suffixMarkup = suffix && /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _dualThumbScssJsDefault.default.Suffix
        }, suffix);
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_labelledJs.Labelled, {
            id: id,
            label: label,
            error: error,
            action: labelAction,
            labelHidden: labelHidden,
            helpText: helpText
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _dualThumbScssJsDefault.default.Wrapper
        }, prefixMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: trackWrapperClassName,
            onMouseDown: this.handleMouseDownTrack,
            ref: this.trackWrapper
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _dualThumbScssJsDefault.default.Track,
            style: cssVars,
            ref: this.track
        }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _dualThumbScssJsDefault.default['Track--dashed']
        }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            id: idLower,
            className: thumbLowerClassName,
            style: {
                left: `${leftPositionThumbLower}px`
            },
            role: "slider",
            "aria-disabled": disabled,
            "aria-valuemin": min,
            "aria-valuemax": max,
            "aria-valuenow": value[0],
            "aria-invalid": Boolean(error),
            "aria-describedby": ariaDescribedBy,
            "aria-labelledby": _labelJs.labelID(id),
            onFocus: onFocus,
            onBlur: onBlur,
            tabIndex: 0,
            onKeyDown: this.handleKeypressLower,
            onMouseDown: this.handleMouseDownThumbLower,
            onTouchStart: this.handleTouchStartThumbLower,
            ref: this.thumbLower
        }), outputMarkupLower, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            id: idUpper,
            className: thumbUpperClassName,
            style: {
                left: `${leftPositionThumbUpper}px`
            },
            role: "slider",
            "aria-disabled": disabled,
            "aria-valuemin": min,
            "aria-valuemax": max,
            "aria-valuenow": value[1],
            "aria-invalid": Boolean(error),
            "aria-describedby": ariaDescribedBy,
            "aria-labelledby": _labelJs.labelID(id),
            onFocus: onFocus,
            onBlur: onBlur,
            tabIndex: 0,
            onKeyDown: this.handleKeypressUpper,
            onMouseDown: this.handleMouseDownThumbUpper,
            onTouchStart: this.handleTouchStartThumbUpper,
            ref: this.thumbUpper
        }), outputMarkupUpper), suffixMarkup)), /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            event: "resize",
            handler: this.setTrackPosition
        })));
    }
}
DualThumb.contextType = _contextJs.FeaturesContext;
function registerMouseMoveHandler(handler) {
    document.addEventListener('mousemove', handler);
    document.addEventListener('mouseup', ()=>{
        document.removeEventListener('mousemove', handler);
    }, {
        once: true
    });
}
function registerTouchMoveHandler(handler) {
    const removeHandler = ()=>{
        document.removeEventListener('touchmove', handler);
        document.removeEventListener('touchend', removeHandler);
        document.removeEventListener('touchcancel', removeHandler);
    };
    document.addEventListener('touchmove', handler, {
        passive: false
    });
    document.addEventListener('touchend', removeHandler, {
        once: true
    });
    document.addEventListener('touchcancel', removeHandler, {
        once: true
    });
}
function sanitizeValue(value1, min, max, step, control = Control1.Upper) {
    let upperValue = inBoundsUpper(roundedToStep(value1[1]));
    let lowerValue = inBoundsLower(roundedToStep(value1[0]));
    const maxLowerValue = upperValue - step;
    const minUpperValue = lowerValue + step;
    if (control === Control1.Upper && lowerValue > maxLowerValue) lowerValue = maxLowerValue;
    else if (control === Control1.Lower && upperValue < minUpperValue) upperValue = minUpperValue;
    function inBoundsUpper(value) {
        const lowerMin = min + step;
        if (value < lowerMin) {
            return lowerMin;
        } else if (value > max) {
            return max;
        } else {
            return value;
        }
    }
    function inBoundsLower(value) {
        const upperMax = max - step;
        if (value < min) {
            return min;
        } else if (value > upperMax) {
            return upperMax;
        } else {
            return value;
        }
    }
    function roundedToStep(value) {
        return Math.round(value / step) * step;
    }
    return [
        lowerValue,
        upperValue
    ];
}

},{"react":"6fep5","lodash/debounce":"a9ymG","lodash/isEqual":"cFVc2","../../../../utilities/css.js":"kYdwV","../../utilities/index.js":"83QR7","../../../../types.js":"atQnH","./DualThumb.scss.js":"6ShLn","../../../Labelled/Labelled.js":"1YPAe","../../../Label/Label.js":"c5NsR","../../../EventListener/EventListener.js":"gpcxo","../../../../utilities/features/context.js":"2vGa7","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"83QR7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CSS_VAR_PREFIX", ()=>CSS_VAR_PREFIX
);
const CSS_VAR_PREFIX = '--Polaris-RangeSlider-';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6ShLn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Wrapper": "Polaris-RangeSlider-DualThumb__Wrapper",
    "TrackWrapper": "Polaris-RangeSlider-DualThumb__TrackWrapper",
    "disabled": "Polaris-RangeSlider-DualThumb--disabled",
    "Track": "Polaris-RangeSlider-DualThumb__Track",
    "error": "Polaris-RangeSlider-DualThumb--error",
    "Track--dashed": "Polaris-RangeSlider-DualThumb--trackDashed",
    "Thumbs": "Polaris-RangeSlider-DualThumb__Thumbs",
    "Prefix": "Polaris-RangeSlider-DualThumb__Prefix",
    "Suffix": "Polaris-RangeSlider-DualThumb__Suffix",
    "Output": "Polaris-RangeSlider-DualThumb__Output",
    "OutputBubble": "Polaris-RangeSlider-DualThumb__OutputBubble",
    "OutputText": "Polaris-RangeSlider-DualThumb__OutputText"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jH3R7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SingleThumb", ()=>SingleThumb
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _clampJs = require("../../../../utilities/clamp.js");
var _indexJs = require("../../utilities/index.js");
var _singleThumbScssJs = require("./SingleThumb.scss.js");
var _singleThumbScssJsDefault = parcelHelpers.interopDefault(_singleThumbScssJs);
var _invertNumberJs = require("../../utilities/invertNumber.js");
var _labelledJs = require("../../../Labelled/Labelled.js");
function SingleThumb(props) {
    const { id , error , helpText , value , min , max , disabled , output , prefix , suffix , label , labelAction , labelHidden , step , onBlur , onFocus  } = props;
    const clampedValue = _clampJs.clamp(value, min, max);
    const describedBy = [];
    if (error) describedBy.push(`${id}Error`);
    if (helpText) describedBy.push(_labelledJs.helpTextID(id));
    const ariaDescribedBy = describedBy.length ? describedBy.join(' ') : undefined;
    const sliderProgress = (clampedValue - min) * 100 / (max - min);
    const outputFactor = _invertNumberJs.invertNumber((sliderProgress - 50) / 100);
    const cssVars = {
        [`${_indexJs.CSS_VAR_PREFIX}min`]: min,
        [`${_indexJs.CSS_VAR_PREFIX}max`]: max,
        [`${_indexJs.CSS_VAR_PREFIX}current`]: clampedValue,
        [`${_indexJs.CSS_VAR_PREFIX}progress`]: `${sliderProgress}%`,
        [`${_indexJs.CSS_VAR_PREFIX}output-factor`]: `${outputFactor}`
    };
    const outputMarkup = !disabled && output && /*#__PURE__*/ _reactDefault.default.createElement("output", {
        htmlFor: id,
        className: _singleThumbScssJsDefault.default.Output
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _singleThumbScssJsDefault.default.OutputBubble
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _singleThumbScssJsDefault.default.OutputText
    }, clampedValue)));
    const prefixMarkup = prefix && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _singleThumbScssJsDefault.default.Prefix
    }, prefix);
    const suffixMarkup = suffix && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _singleThumbScssJsDefault.default.Suffix
    }, suffix);
    const className = _cssJs.classNames(_singleThumbScssJsDefault.default.SingleThumb, error && _singleThumbScssJsDefault.default.error, disabled && _singleThumbScssJsDefault.default.disabled);
    function handleChange(event) {
        const { onChange  } = props;
        onChange && onChange(parseFloat(event.currentTarget.value), id);
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement(_labelledJs.Labelled, {
        id: id,
        label: label,
        error: error,
        action: labelAction,
        labelHidden: labelHidden,
        helpText: helpText
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className,
        style: cssVars
    }, prefixMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _singleThumbScssJsDefault.default.InputWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement("input", {
        type: "range",
        className: _singleThumbScssJsDefault.default.Input,
        id: id,
        name: id,
        min: min,
        max: max,
        step: step,
        value: clampedValue,
        disabled: disabled,
        onChange: handleChange,
        onFocus: onFocus,
        onBlur: onBlur,
        "aria-valuemin": min,
        "aria-valuemax": max,
        "aria-valuenow": clampedValue,
        "aria-invalid": Boolean(error),
        "aria-describedby": ariaDescribedBy
    }), outputMarkup), suffixMarkup)));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/clamp.js":"h5zK3","../../utilities/index.js":"83QR7","./SingleThumb.scss.js":"jjLZ0","../../utilities/invertNumber.js":"98BIt","../../../Labelled/Labelled.js":"1YPAe","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jjLZ0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "SingleThumb": "Polaris-RangeSlider-SingleThumb",
    "disabled": "Polaris-RangeSlider-SingleThumb--disabled",
    "InputWrapper": "Polaris-RangeSlider-SingleThumb__InputWrapper",
    "Prefix": "Polaris-RangeSlider-SingleThumb__Prefix",
    "Suffix": "Polaris-RangeSlider-SingleThumb__Suffix",
    "Input": "Polaris-RangeSlider-SingleThumb__Input",
    "error": "Polaris-RangeSlider-SingleThumb--error",
    "Output": "Polaris-RangeSlider-SingleThumb__Output",
    "OutputBubble": "Polaris-RangeSlider-SingleThumb__OutputBubble",
    "OutputText": "Polaris-RangeSlider-SingleThumb__OutputText"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"98BIt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "invertNumber", ()=>invertNumber
);
function invertNumber(number) {
    if (Math.sign(number) === 1) return -Math.abs(number);
    else if (Math.sign(number) === -1) return Math.abs(number);
    else return 0;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"id4lv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResourceItem", ()=>ResourceItem
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _isEqual = require("lodash/isEqual");
var _isEqualDefault = parcelHelpers.interopDefault(_isEqual);
var _cssJs = require("../../utilities/css.js");
var _resourceItemScssJs = require("./ResourceItem.scss.js");
var _resourceItemScssJsDefault = parcelHelpers.interopDefault(_resourceItemScssJs);
var _typesJs = require("../../utilities/resource-list/types.js");
var _contextJs = require("../../utilities/resource-list/context.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _checkboxJs = require("../Checkbox/Checkbox.js");
var _buttonGroupJs = require("../ButtonGroup/ButtonGroup.js");
var _utilsJs = require("../Button/utils.js");
var _popoverJs = require("../Popover/Popover.js");
var _buttonJs = require("../Button/Button.js");
var _actionListJs = require("../ActionList/ActionList.js");
var _unstyledLinkJs = require("../UnstyledLink/UnstyledLink.js");
var _uniqueIdFactoryJs = require("../../utilities/unique-id/unique-id-factory.js");
const getUniqueCheckboxID = _uniqueIdFactoryJs.globalIdGeneratorFactory('ResourceListItemCheckbox');
const getUniqueOverlayID = _uniqueIdFactoryJs.globalIdGeneratorFactory('ResourceListItemOverlay');
class BaseResourceItem extends _react.Component {
    constructor(...args){
        super(...args);
        this.state = {
            actionsMenuVisible: false,
            focused: false,
            focusedInner: false,
            selected: isSelected(this.props.id, this.props.context.selectedItems)
        };
        this.node = null;
        this.checkboxId = getUniqueCheckboxID();
        this.overlayId = getUniqueOverlayID();
        this.buttonOverlay = /*#__PURE__*/ _react.createRef();
        this.setNode = (node)=>{
            this.node = node;
        };
        this.handleFocus = (event)=>{
            if (event.target === this.buttonOverlay.current || this.node && event.target === this.node.querySelector(`#${this.overlayId}`)) this.setState({
                focused: true,
                focusedInner: false
            });
            else if (this.node && this.node.contains(event.target)) this.setState({
                focused: true,
                focusedInner: true
            });
        };
        this.handleBlur = ({ relatedTarget  })=>{
            if (this.node && relatedTarget instanceof Element && this.node.contains(relatedTarget)) return;
            this.setState({
                focused: false,
                focusedInner: false
            });
        };
        this.handleMouseOut = ()=>{
            this.state.focused && this.setState({
                focused: false,
                focusedInner: false
            });
        };
        this.handleLargerSelectionArea = (event)=>{
            stopPropagation(event);
            this.handleSelection(!this.state.selected, event.nativeEvent.shiftKey);
        };
        this.handleSelection = (value, shiftKey)=>{
            const { id , sortOrder , context: { onSelectionChange  }  } = this.props;
            if (id == null || onSelectionChange == null) return;
            this.setState({
                focused: value,
                focusedInner: value
            });
            onSelectionChange(value, id, sortOrder, shiftKey);
        };
        this.handleClick = (event)=>{
            stopPropagation(event);
            const { id , onClick , url , context: { selectMode  }  } = this.props;
            const { ctrlKey , metaKey  } = event.nativeEvent;
            const anchor = this.node && this.node.querySelector('a');
            if (selectMode) {
                this.handleLargerSelectionArea(event);
                return;
            }
            if (anchor === event.target) return;
            if (onClick) onClick(id);
            if (url && (ctrlKey || metaKey)) {
                window.open(url, '_blank');
                return;
            }
            if (url && anchor) anchor.click();
        };
        this.handleKeyUp = (event)=>{
            const { onClick =noop , context: { selectMode  }  } = this.props;
            const { key  } = event;
            if (key === 'Enter' && this.props.url && !selectMode) onClick();
        };
        this.handleActionsClick = ()=>{
            this.setState(({ actionsMenuVisible  })=>({
                    actionsMenuVisible: !actionsMenuVisible
                })
            );
        };
        this.handleCloseRequest = ()=>{
            this.setState({
                actionsMenuVisible: false
            });
        };
    }
    static getDerivedStateFromProps(nextProps, prevState) {
        const selected = isSelected(nextProps.id, nextProps.context.selectedItems);
        if (prevState.selected === selected) return null;
        return {
            selected
        };
    }
    shouldComponentUpdate(nextProps1, nextState) {
        const { children: nextChildren , context: { selectedItems: nextSelectedItems , ...restNextContext } , ...restNextProps } = nextProps1;
        const { children , context: { selectedItems , ...restContext } , ...restProps } = this.props;
        const nextSelectMode = nextProps1.context.selectMode;
        return !_isEqualDefault.default(this.state, nextState) || this.props.context.selectMode !== nextSelectMode || !nextProps1.context.selectMode && (!_isEqualDefault.default(restProps, restNextProps) || !_isEqualDefault.default(restContext, restNextContext));
    }
    render() {
        const { children , url , external , media , shortcutActions , ariaControls , ariaExpanded , persistActions =false , accessibilityLabel , name , context: { selectable , selectMode , loading , resourceName  } , i18n , verticalAlignment , dataHref  } = this.props;
        const { actionsMenuVisible , focused , focusedInner , selected  } = this.state;
        let ownedMarkup = null;
        let handleMarkup = null;
        const mediaMarkup = media ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _resourceItemScssJsDefault.default.Media
        }, media) : null;
        if (selectable) {
            const checkboxAccessibilityLabel = name || accessibilityLabel || i18n.translate('Polaris.Common.checkbox');
            handleMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _resourceItemScssJsDefault.default.Handle,
                onClick: this.handleLargerSelectionArea
            }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
                onClick: stopPropagation,
                className: _resourceItemScssJsDefault.default.CheckboxWrapper
            }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
                onChange: this.handleLargerSelectionArea
            }, /*#__PURE__*/ _reactDefault.default.createElement(_checkboxJs.Checkbox, {
                id: this.checkboxId,
                label: checkboxAccessibilityLabel,
                labelHidden: true,
                checked: selected,
                disabled: loading
            }))));
        }
        if (media || selectable) ownedMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _cssJs.classNames(_resourceItemScssJsDefault.default.Owned, !mediaMarkup && _resourceItemScssJsDefault.default.OwnedNoMedia)
        }, handleMarkup, mediaMarkup);
        const className = _cssJs.classNames(_resourceItemScssJsDefault.default.ResourceItem, focused && _resourceItemScssJsDefault.default.focused, selectable && _resourceItemScssJsDefault.default.selectable, selected && _resourceItemScssJsDefault.default.selected, selectMode && _resourceItemScssJsDefault.default.selectMode, persistActions && _resourceItemScssJsDefault.default.persistActions, focusedInner && _resourceItemScssJsDefault.default.focusedInner);
        const listItemClassName = _cssJs.classNames(_resourceItemScssJsDefault.default.ListItem, focused && !focusedInner && _resourceItemScssJsDefault.default.focused);
        let actionsMarkup = null;
        let disclosureMarkup = null;
        if (shortcutActions && !loading) {
            if (persistActions) {
                actionsMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: _resourceItemScssJsDefault.default.Actions,
                    onClick: stopPropagation
                }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, null, _utilsJs.buttonsFrom(shortcutActions, {
                    plain: true
                })));
                const disclosureAccessibilityLabel = name ? i18n.translate('Polaris.ResourceList.Item.actionsDropdownLabel', {
                    accessibilityLabel: name
                }) : i18n.translate('Polaris.ResourceList.Item.actionsDropdown');
                disclosureMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: _resourceItemScssJsDefault.default.Disclosure,
                    onClick: stopPropagation
                }, /*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
                    activator: /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
                        accessibilityLabel: disclosureAccessibilityLabel,
                        onClick: this.handleActionsClick,
                        plain: true,
                        icon: _polarisIcons.HorizontalDotsMinor
                    }),
                    onClose: this.handleCloseRequest,
                    active: actionsMenuVisible
                }, /*#__PURE__*/ _reactDefault.default.createElement(_actionListJs.ActionList, {
                    items: shortcutActions
                })));
            } else actionsMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
                className: _resourceItemScssJsDefault.default.Actions,
                onClick: stopPropagation
            }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonGroupJs.ButtonGroup, {
                segmented: true
            }, _utilsJs.buttonsFrom(shortcutActions, {
                size: 'slim'
            })));
        }
        const content = children ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _resourceItemScssJsDefault.default.Content
        }, children) : null;
        const containerClassName = _cssJs.classNames(_resourceItemScssJsDefault.default.Container, verticalAlignment && _resourceItemScssJsDefault.default[_cssJs.variationName('alignment', verticalAlignment)]);
        const containerMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: containerClassName,
            id: this.props.id
        }, ownedMarkup, content, actionsMarkup, disclosureMarkup);
        const tabIndex = loading ? -1 : 0;
        const ariaLabel = accessibilityLabel || i18n.translate('Polaris.ResourceList.Item.viewItem', {
            itemName: name || resourceName && resourceName.singular || ''
        });
        const accessibleMarkup = url ? /*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, {
            "aria-describedby": this.props.id,
            "aria-label": ariaLabel,
            className: _resourceItemScssJsDefault.default.Link,
            url: url,
            external: external,
            tabIndex: tabIndex,
            id: this.overlayId
        }) : /*#__PURE__*/ _reactDefault.default.createElement("button", {
            className: _resourceItemScssJsDefault.default.Button,
            "aria-label": ariaLabel,
            "aria-controls": ariaControls,
            "aria-expanded": ariaExpanded,
            onClick: this.handleClick,
            tabIndex: tabIndex,
            ref: this.buttonOverlay
        });
        return(/*#__PURE__*/ _reactDefault.default.createElement("li", {
            className: listItemClassName,
            "data-href": dataHref
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _resourceItemScssJsDefault.default.ItemWrapper
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            ref: this.setNode,
            className: className,
            onClick: this.handleClick,
            onFocus: this.handleFocus,
            onBlur: this.handleBlur,
            onKeyUp: this.handleKeyUp,
            onMouseOut: this.handleMouseOut,
            "data-href": url
        }, accessibleMarkup, containerMarkup))));
    }
}
function noop() {
}
function stopPropagation(event) {
    event.stopPropagation();
}
function isSelected(id, selectedItems) {
    return Boolean(selectedItems && (Array.isArray(selectedItems) && selectedItems.includes(id) || selectedItems === _typesJs.SELECT_ALL_ITEMS));
}
function ResourceItem(props) {
    return(/*#__PURE__*/ _reactDefault.default.createElement(BaseResourceItem, Object.assign({
    }, props, {
        context: _react.useContext(_contextJs.ResourceListContext),
        i18n: _hooksJs.useI18n()
    })));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","lodash/isEqual":"cFVc2","../../utilities/css.js":"kYdwV","./ResourceItem.scss.js":"4Dk7u","../../utilities/resource-list/types.js":"etInM","../../utilities/resource-list/context.js":"65WNK","../../utilities/i18n/hooks.js":"hHpYD","../Checkbox/Checkbox.js":"irP0n","../ButtonGroup/ButtonGroup.js":"kXBsg","../Button/utils.js":"9W95c","../Popover/Popover.js":"9ztCP","../Button/Button.js":"g06oC","../ActionList/ActionList.js":"eTtta","../UnstyledLink/UnstyledLink.js":"8AMgX","../../utilities/unique-id/unique-id-factory.js":"cEi6z","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4Dk7u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "CheckboxWrapper": "Polaris-ResourceItem__CheckboxWrapper",
    "ResourceItem": "Polaris-ResourceItem",
    "persistActions": "Polaris-ResourceItem--persistActions",
    "Actions": "Polaris-ResourceItem__Actions",
    "ItemWrapper": "Polaris-ResourceItem__ItemWrapper",
    "focusedInner": "Polaris-ResourceItem--focusedInner",
    "focused": "Polaris-ResourceItem--focused",
    "selected": "Polaris-ResourceItem--selected",
    "Link": "Polaris-ResourceItem__Link",
    "Button": "Polaris-ResourceItem__Button",
    "Container": "Polaris-ResourceItem__Container",
    "alignmentLeading": "Polaris-ResourceItem--alignmentLeading",
    "alignmentTrailing": "Polaris-ResourceItem--alignmentTrailing",
    "alignmentCenter": "Polaris-ResourceItem--alignmentCenter",
    "alignmentFill": "Polaris-ResourceItem--alignmentFill",
    "alignmentBaseline": "Polaris-ResourceItem--alignmentBaseline",
    "Owned": "Polaris-ResourceItem__Owned",
    "OwnedNoMedia": "Polaris-ResourceItem__OwnedNoMedia",
    "Handle": "Polaris-ResourceItem__Handle",
    "selectMode": "Polaris-ResourceItem--selectMode",
    "selectable": "Polaris-ResourceItem--selectable",
    "Media": "Polaris-ResourceItem__Media",
    "Content": "Polaris-ResourceItem__Content",
    "Disclosure": "Polaris-ResourceItem__Disclosure",
    "ListItem": "Polaris-ResourceItem__ListItem"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"etInM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SELECT_ALL_ITEMS", ()=>SELECT_ALL_ITEMS
);
const SELECT_ALL_ITEMS = 'All';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"4a21z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResourceList", ()=>ResourceList
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _debounce = require("lodash/debounce");
var _debounceDefault = parcelHelpers.interopDefault(_debounce);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _componentsJs = require("../../utilities/components.js");
var _useLazyRefJs = require("../../utilities/use-lazy-ref.js");
var _resourceListScssJs = require("./ResourceList.scss.js");
var _resourceListScssJsDefault = parcelHelpers.interopDefault(_resourceListScssJs);
var _resourceItemJs = require("../ResourceItem/ResourceItem.js");
var _typesJs = require("../../utilities/resource-list/types.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _bulkActionsJs = require("../BulkActions/BulkActions.js");
var _selectJs = require("../Select/Select.js");
var _buttonJs = require("../Button/Button.js");
var _checkableButtonJs = require("../CheckableButton/CheckableButton.js");
var _stickyJs = require("../Sticky/Sticky.js");
var _eventListenerJs = require("../EventListener/EventListener.js");
var _emptySearchResultJs = require("../EmptySearchResult/EmptySearchResult.js");
var _spinnerJs = require("../Spinner/Spinner.js");
var _contextJs = require("../../utilities/resource-list/context.js");
const SMALL_SCREEN_WIDTH = 458;
const SMALL_SPINNER_HEIGHT = 28;
const LARGE_SPINNER_HEIGHT = 45;
function getAllItemsOnPage(items, idForItem) {
    return items.map((item, index)=>{
        return idForItem(item, index);
    });
}
const isSmallScreen = ()=>{
    return typeof window === 'undefined' ? false : window.innerWidth < SMALL_SCREEN_WIDTH;
};
function defaultIdForItem(item, index) {
    return Object.prototype.hasOwnProperty.call(item, 'id') ? item.id : index.toString();
}
const ResourceList = function ResourceList({ items , filterControl , emptyState , emptySearchState , resourceName: resourceNameProp , promotedBulkActions , bulkActions , selectedItems =[] , isFiltered , selectable , hasMoreItems , loading , showHeader , totalItemsCount: totalItemsCount1 , sortValue , sortOptions , alternateTool , onSortChange , onSelectionChange , renderItem , idForItem =defaultIdForItem , resolveItemId: resolveItemId1  }) {
    const i18n = _hooksJs.useI18n();
    const [selectMode1, setSelectMode] = _react.useState(Boolean(selectedItems && selectedItems.length > 0));
    const [loadingPosition, setLoadingPositionState] = _react.useState(0);
    const [lastSelected1, setLastSelected] = _react.useState();
    const [smallScreen, setSmallScreen] = _react.useState(isSmallScreen());
    const forceUpdate = _react.useReducer((x = 0)=>x + 1
    , 0)[1];
    const [checkableButtons, setCheckableButtons] = _react.useState(new Map());
    const defaultResourceName = _useLazyRefJs.useLazyRef(()=>({
            singular: i18n.translate('Polaris.ResourceList.defaultItemSingular'),
            plural: i18n.translate('Polaris.ResourceList.defaultItemPlural')
        })
    );
    const listRef = _react.useRef(null);
    const handleSelectMode = (selectMode)=>{
        setSelectMode(selectMode);
        if (!selectMode && onSelectionChange) onSelectionChange([]);
    };
    const handleResize = _debounceDefault.default(()=>{
        const newSmallScreen = isSmallScreen();
        if (selectedItems && selectedItems.length === 0 && selectMode1 && !newSmallScreen) handleSelectMode(false);
        if (smallScreen !== newSmallScreen) setSmallScreen(newSmallScreen);
    }, 50, {
        leading: true,
        trailing: true,
        maxWait: 50
    });
    const isSelectable = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0 || selectable);
    const bulkSelectState = ()=>{
        let selectState = 'indeterminate';
        if (!selectedItems || Array.isArray(selectedItems) && selectedItems.length === 0) selectState = false;
        else if (selectedItems === _typesJs.SELECT_ALL_ITEMS || Array.isArray(selectedItems) && selectedItems.length === items.length) selectState = true;
        return selectState;
    };
    const resourceName = resourceNameProp ? resourceNameProp : defaultResourceName.current;
    const headerTitle = ()=>{
        const itemsCount = items.length;
        const resource = !loading && (!totalItemsCount1 && itemsCount === 1 || totalItemsCount1 === 1) ? resourceName.singular : resourceName.plural;
        if (loading) return i18n.translate('Polaris.ResourceList.loading', {
            resource
        });
        else if (totalItemsCount1) return i18n.translate('Polaris.ResourceList.showingTotalCount', {
            itemsCount,
            totalItemsCount: totalItemsCount1,
            resource
        });
        else return i18n.translate('Polaris.ResourceList.showing', {
            itemsCount,
            resource
        });
    };
    const bulkActionsLabel = ()=>{
        const selectedItemsCount = selectedItems === _typesJs.SELECT_ALL_ITEMS ? `${items.length}+` : selectedItems.length;
        return i18n.translate('Polaris.ResourceList.selected', {
            selectedItemsCount
        });
    };
    const bulkActionsAccessibilityLabel = ()=>{
        const selectedItemsCount = selectedItems.length;
        const totalItemsCount = items.length;
        const allSelected = selectedItemsCount === totalItemsCount;
        if (totalItemsCount === 1 && allSelected) return i18n.translate('Polaris.ResourceList.a11yCheckboxDeselectAllSingle', {
            resourceNameSingular: resourceName.singular
        });
        else if (totalItemsCount === 1) return i18n.translate('Polaris.ResourceList.a11yCheckboxSelectAllSingle', {
            resourceNameSingular: resourceName.singular
        });
        else if (allSelected) return i18n.translate('Polaris.ResourceList.a11yCheckboxDeselectAllMultiple', {
            itemsLength: items.length,
            resourceNamePlural: resourceName.plural
        });
        else return i18n.translate('Polaris.ResourceList.a11yCheckboxSelectAllMultiple', {
            itemsLength: items.length,
            resourceNamePlural: resourceName.plural
        });
    };
    const paginatedSelectAllText = ()=>{
        if (!isSelectable || !hasMoreItems) return;
        if (selectedItems === _typesJs.SELECT_ALL_ITEMS) return i18n.translate(isFiltered ? 'Polaris.ResourceList.allFilteredItemsSelected' : 'Polaris.ResourceList.allItemsSelected', {
            itemsLength: items.length,
            resourceNamePlural: resourceName.plural
        });
    };
    const paginatedSelectAllAction = ()=>{
        if (!isSelectable || !hasMoreItems) return;
        const actionText = selectedItems === _typesJs.SELECT_ALL_ITEMS ? i18n.translate('Polaris.Common.undo') : i18n.translate(isFiltered ? 'Polaris.ResourceList.selectAllFilteredItems' : 'Polaris.ResourceList.selectAllItems', {
            itemsLength: items.length,
            resourceNamePlural: resourceName.plural
        });
        return {
            content: actionText,
            onAction: handleSelectAllItemsInStore
        };
    };
    const emptySearchResultText = {
        title: i18n.translate('Polaris.ResourceList.emptySearchResultTitle', {
            resourceNamePlural: resourceName.plural
        }),
        description: i18n.translate('Polaris.ResourceList.emptySearchResultDescription')
    };
    const handleSelectAllItemsInStore = ()=>{
        const newlySelectedItems = selectedItems === _typesJs.SELECT_ALL_ITEMS ? getAllItemsOnPage(items, idForItem) : _typesJs.SELECT_ALL_ITEMS;
        if (onSelectionChange) onSelectionChange(newlySelectedItems);
    };
    const setLoadingPosition = _react.useCallback(()=>{
        if (listRef.current != null) {
            if (typeof window === 'undefined') return;
            const overlay = listRef.current.getBoundingClientRect();
            const viewportHeight = Math.max(document.documentElement ? document.documentElement.clientHeight : 0, window.innerHeight || 0);
            const overflow = viewportHeight - overlay.height;
            const spinnerHeight = items.length === 1 ? SMALL_SPINNER_HEIGHT : LARGE_SPINNER_HEIGHT;
            const spinnerPosition = overflow > 0 ? (overlay.height - spinnerHeight) / 2 : (viewportHeight - overlay.top - spinnerHeight) / 2;
            setLoadingPositionState(spinnerPosition);
        }
    }, [
        listRef,
        items.length
    ]);
    const itemsExist = items.length > 0;
    _react.useEffect(()=>{
        if (loading) setLoadingPosition();
    }, [
        loading,
        setLoadingPosition
    ]);
    _react.useEffect(()=>{
        if (selectedItems && selectedItems.length > 0 && !selectMode1) setSelectMode(true);
        if ((!selectedItems || selectedItems.length === 0) && !isSmallScreen()) setSelectMode(false);
    }, [
        selectedItems,
        selectMode1
    ]);
    _react.useEffect(()=>{
        forceUpdate();
    }, [
        forceUpdate,
        items
    ]);
    const renderItemWithId = (item, index)=>{
        const id = idForItem(item, index);
        const itemContent = renderItem(item, id, index);
        if (!_componentsJs.isElementOfType(itemContent, _resourceItemJs.ResourceItem)) // eslint-disable-next-line no-console
        console.warn('<ResourceList /> renderItem function should return a <ResourceItem />.');
        return itemContent;
    };
    const handleMultiSelectionChange = (lastSelected, currentSelected, resolveItemId)=>{
        const min = Math.min(lastSelected, currentSelected);
        const max = Math.max(lastSelected, currentSelected);
        return items.slice(min, max + 1).map(resolveItemId);
    };
    const handleCheckableButtonRegistration = (key, button)=>{
        if (!checkableButtons.get(key)) setCheckableButtons(new Map(checkableButtons).set(key, button));
    };
    const handleSelectionChange = (selected, id, sortOrder, shiftKey)=>{
        if (selectedItems == null || onSelectionChange == null) return;
        let newlySelectedItems = selectedItems === _typesJs.SELECT_ALL_ITEMS ? getAllItemsOnPage(items, idForItem) : [
            ...selectedItems
        ];
        if (sortOrder !== undefined) setLastSelected(sortOrder);
        const lastSelectedFromState = lastSelected1;
        let selectedIds = [
            id
        ];
        if (shiftKey && lastSelectedFromState != null && sortOrder !== undefined && resolveItemId1) selectedIds = handleMultiSelectionChange(lastSelectedFromState, sortOrder, resolveItemId1);
        newlySelectedItems = [
            ...new Set([
                ...newlySelectedItems,
                ...selectedIds
            ])
        ];
        if (!selected) for (const selectedId of selectedIds)newlySelectedItems.splice(newlySelectedItems.indexOf(selectedId), 1);
        if (newlySelectedItems.length === 0 && !isSmallScreen()) handleSelectMode(false);
        else if (newlySelectedItems.length > 0) handleSelectMode(true);
        if (onSelectionChange) onSelectionChange(newlySelectedItems);
    };
    const handleToggleAll = ()=>{
        let newlySelectedItems;
        if (Array.isArray(selectedItems) && selectedItems.length === items.length || selectedItems === _typesJs.SELECT_ALL_ITEMS) newlySelectedItems = [];
        else newlySelectedItems = items.map((item, index)=>{
            return idForItem(item, index);
        });
        if (newlySelectedItems.length === 0 && !isSmallScreen()) handleSelectMode(false);
        else if (newlySelectedItems.length > 0) handleSelectMode(true);
        let checkbox;
        if (isSmallScreen()) checkbox = checkableButtons.get('bulkSm');
        else if (newlySelectedItems.length === 0) checkbox = checkableButtons.get('plain');
        else checkbox = checkableButtons.get('bulkLg');
        if (onSelectionChange) onSelectionChange(newlySelectedItems);
         // setTimeout ensures execution after the Transition on BulkActions
        setTimeout(()=>{
            checkbox && checkbox.focus();
        }, 0);
    };
    const bulkActionsMarkup = isSelectable ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _resourceListScssJsDefault.default.BulkActionsWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement(_bulkActionsJs.BulkActions, {
        label: bulkActionsLabel(),
        accessibilityLabel: bulkActionsAccessibilityLabel(),
        selected: bulkSelectState(),
        onToggleAll: handleToggleAll,
        selectMode: selectMode1,
        onSelectModeToggle: handleSelectMode,
        promotedActions: promotedBulkActions,
        paginatedSelectAllAction: paginatedSelectAllAction(),
        paginatedSelectAllText: paginatedSelectAllText(),
        actions: bulkActions,
        disabled: loading,
        smallScreen: smallScreen
    })) : null;
    const filterControlMarkup = filterControl ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _resourceListScssJsDefault.default.FiltersWrapper
    }, filterControl) : null;
    const sortingSelectMarkup = sortOptions && sortOptions.length > 0 && !alternateTool ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _resourceListScssJsDefault.default.SortWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement(_selectJs.Select, {
        label: i18n.translate('Polaris.ResourceList.sortingLabel'),
        labelInline: !smallScreen,
        labelHidden: smallScreen,
        options: sortOptions,
        onChange: onSortChange,
        value: sortValue,
        disabled: selectMode1
    })) : null;
    const alternateToolMarkup = alternateTool && !sortingSelectMarkup ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _resourceListScssJsDefault.default.AlternateToolWrapper
    }, alternateTool) : null;
    const headerTitleMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _resourceListScssJsDefault.default.HeaderTitleWrapper
    }, headerTitle());
    const selectButtonMarkup = isSelectable ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _resourceListScssJsDefault.default.SelectButtonWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        disabled: selectMode1,
        icon: _polarisIcons.EnableSelectionMinor,
        onClick: ()=>handleSelectMode(true)
    }, i18n.translate('Polaris.ResourceList.selectButtonText'))) : null;
    const checkableButtonMarkup = isSelectable ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _resourceListScssJsDefault.default.CheckableButtonWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement(_checkableButtonJs.CheckableButton, {
        accessibilityLabel: bulkActionsAccessibilityLabel(),
        label: headerTitle(),
        onToggleAll: handleToggleAll,
        plain: true,
        disabled: loading
    })) : null;
    const needsHeader = isSelectable || sortOptions && sortOptions.length > 0 || alternateTool;
    const headerWrapperOverlay = loading ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _resourceListScssJsDefault.default['HeaderWrapper-overlay']
    }) : null;
    const showEmptyState = emptyState && !itemsExist && !loading;
    const showEmptySearchState = !showEmptyState && filterControl && !itemsExist && !loading;
    const headerMarkup = !showEmptyState && showHeader !== false && !showEmptySearchState && (showHeader || needsHeader) && listRef.current && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _resourceListScssJsDefault.default.HeaderOuterWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement(_stickyJs.Sticky, {
        boundingElement: listRef.current
    }, (isSticky)=>{
        const headerClassName = _cssJs.classNames(_resourceListScssJsDefault.default.HeaderWrapper, sortOptions && sortOptions.length > 0 && !alternateTool && _resourceListScssJsDefault.default['HeaderWrapper-hasSort'], alternateTool && _resourceListScssJsDefault.default['HeaderWrapper-hasAlternateTool'], isSelectable && _resourceListScssJsDefault.default['HeaderWrapper-hasSelect'], loading && _resourceListScssJsDefault.default['HeaderWrapper-disabled'], isSelectable && selectMode1 && _resourceListScssJsDefault.default['HeaderWrapper-inSelectMode'], isSticky && _resourceListScssJsDefault.default['HeaderWrapper-isSticky']);
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: headerClassName
        }, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
            event: "resize",
            handler: handleResize
        }), headerWrapperOverlay, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _resourceListScssJsDefault.default.HeaderContentWrapper
        }, headerTitleMarkup, checkableButtonMarkup, alternateToolMarkup, sortingSelectMarkup, selectButtonMarkup), bulkActionsMarkup));
    }));
    const emptySearchStateMarkup = showEmptySearchState ? emptySearchState || /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _resourceListScssJsDefault.default.EmptySearchResultWrapper
    }, /*#__PURE__*/ _reactDefault.default.createElement(_emptySearchResultJs.EmptySearchResult, Object.assign({
    }, emptySearchResultText, {
        withIllustration: true
    }))) : null;
    const emptyStateMarkup = showEmptyState ? emptyState : null;
    const defaultTopPadding = 8;
    const topPadding = loadingPosition > 0 ? loadingPosition : defaultTopPadding;
    const spinnerStyle = {
        paddingTop: `${topPadding}px`
    };
    const spinnerSize = items.length < 2 ? 'small' : 'large';
    const loadingOverlay = loading ? /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement("li", {
        className: _resourceListScssJsDefault.default.SpinnerContainer,
        style: spinnerStyle
    }, /*#__PURE__*/ _reactDefault.default.createElement(_spinnerJs.Spinner, {
        size: spinnerSize,
        accessibilityLabel: "Items are loading"
    })), /*#__PURE__*/ _reactDefault.default.createElement("li", {
        className: _resourceListScssJsDefault.default.LoadingOverlay
    })) : null;
    const className = _cssJs.classNames(_resourceListScssJsDefault.default.ItemWrapper, loading && _resourceListScssJsDefault.default['ItemWrapper-isLoading']);
    const loadingWithoutItemsMarkup = loading && !itemsExist ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className,
        tabIndex: -1
    }, loadingOverlay) : null;
    const resourceListClassName = _cssJs.classNames(_resourceListScssJsDefault.default.ResourceList, loading && _resourceListScssJsDefault.default.disabledPointerEvents, selectMode1 && _resourceListScssJsDefault.default.disableTextSelection);
    const listMarkup = itemsExist ? /*#__PURE__*/ _reactDefault.default.createElement("ul", {
        className: resourceListClassName,
        ref: listRef,
        "aria-live": "polite",
        "aria-busy": loading
    }, loadingOverlay, _react.Children.toArray(items.map(renderItemWithId))) : null;
    const context = {
        selectable: isSelectable,
        selectedItems,
        selectMode: selectMode1,
        resourceName,
        loading,
        onSelectionChange: handleSelectionChange,
        registerCheckableButtons: handleCheckableButtonRegistration
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement(_contextJs.ResourceListContext.Provider, {
        value: context
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _resourceListScssJsDefault.default.ResourceListWrapper
    }, filterControlMarkup, headerMarkup, listMarkup, emptySearchStateMarkup, emptyStateMarkup, loadingWithoutItemsMarkup)));
};
ResourceList.Item = _resourceItemJs.ResourceItem;

},{"react":"6fep5","lodash/debounce":"a9ymG","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","../../utilities/components.js":"6E8xC","../../utilities/use-lazy-ref.js":"89wYP","./ResourceList.scss.js":"in51T","../ResourceItem/ResourceItem.js":"id4lv","../../utilities/resource-list/types.js":"etInM","../../utilities/i18n/hooks.js":"hHpYD","../BulkActions/BulkActions.js":"1JynG","../Select/Select.js":"i2qP0","../Button/Button.js":"g06oC","../CheckableButton/CheckableButton.js":"djzx0","../Sticky/Sticky.js":"2AUGc","../EventListener/EventListener.js":"gpcxo","../EmptySearchResult/EmptySearchResult.js":"gLMV0","../Spinner/Spinner.js":"itKPn","../../utilities/resource-list/context.js":"65WNK","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"89wYP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useLazyRef", ()=>useLazyRef
);
var _react = require("react");
const UNIQUE_IDENTIFIER = Symbol('unique_identifier');
/**
 * useLazyRef provides a lazy initial value, similar to lazy
 * initial state the initialValue is the value used during
 * initialization and disregarded after that. Use this hook
 * for expensive initialization.
 * @param initialValue - A function that will return the initial
 * value and be disregarded after that
 * @returns MutableRefObject<T> - Returns a ref object with the
 * results from invoking initial value
 * @example
 * function ComponentExample() {
 *  const title = useLazyRef(() => someExpensiveComputation());
 *  return <h1>{title.current}</h1>;
 * }
 */ function useLazyRef(initialValue) {
    const lazyRef = _react.useRef(UNIQUE_IDENTIFIER);
    if (lazyRef.current === UNIQUE_IDENTIFIER) lazyRef.current = initialValue();
    return lazyRef;
}

},{"react":"6fep5","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"in51T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "FiltersWrapper": "Polaris-ResourceList__FiltersWrapper",
    "ResourceList": "Polaris-ResourceList",
    "HeaderOuterWrapper": "Polaris-ResourceList__HeaderOuterWrapper",
    "HeaderWrapper-disabled": "Polaris-ResourceList__HeaderWrapper--disabled",
    "HeaderWrapper-overlay": "Polaris-ResourceList__HeaderWrapper--overlay",
    "HeaderWrapper": "Polaris-ResourceList__HeaderWrapper",
    "HeaderWrapper-isSticky": "Polaris-ResourceList__HeaderWrapper--isSticky",
    "HeaderContentWrapper": "Polaris-ResourceList__HeaderContentWrapper",
    "HeaderWrapper-inSelectMode": "Polaris-ResourceList__HeaderWrapper--inSelectMode",
    "SortWrapper": "Polaris-ResourceList__SortWrapper",
    "AlternateToolWrapper": "Polaris-ResourceList__AlternateToolWrapper",
    "HeaderWrapper-hasSelect": "Polaris-ResourceList__HeaderWrapper--hasSelect",
    "HeaderWrapper-hasAlternateTool": "Polaris-ResourceList__HeaderWrapper--hasAlternateTool",
    "HeaderWrapper-hasSort": "Polaris-ResourceList__HeaderWrapper--hasSort",
    "HeaderTitleWrapper": "Polaris-ResourceList__HeaderTitleWrapper",
    "BulkActionsWrapper": "Polaris-ResourceList__BulkActionsWrapper",
    "CheckableButtonWrapper": "Polaris-ResourceList__CheckableButtonWrapper",
    "SelectButtonWrapper": "Polaris-ResourceList__SelectButtonWrapper",
    "EmptySearchResultWrapper": "Polaris-ResourceList__EmptySearchResultWrapper",
    "ResourceListWrapper": "Polaris-ResourceList__ResourceListWrapper",
    "ItemWrapper": "Polaris-ResourceList__ItemWrapper",
    "ItemWrapper-isLoading": "Polaris-ResourceList__ItemWrapper--isLoading",
    "SpinnerContainer": "Polaris-ResourceList__SpinnerContainer",
    "LoadingOverlay": "Polaris-ResourceList__LoadingOverlay",
    "DisabledPointerEvents": "Polaris-ResourceList__DisabledPointerEvents",
    "disableTextSelection": "Polaris-ResourceList--disableTextSelection"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"i2qP0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Select", ()=>Select
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _selectScssJs = require("./Select.scss.js");
var _selectScssJsDefault = parcelHelpers.interopDefault(_selectScssJs);
var _hooksJs = require("../../utilities/unique-id/hooks.js");
var _iconJs = require("../Icon/Icon.js");
var _labelledJs = require("../Labelled/Labelled.js");
const PLACEHOLDER_VALUE = '';
function Select({ options: optionsProp , label , labelAction , labelHidden: labelHiddenProp , labelInline , disabled , helpText , placeholder , id: idProp , name , value =PLACEHOLDER_VALUE , error , onChange , onFocus , onBlur , requiredIndicator  }) {
    const id = _hooksJs.useUniqueId('Select', idProp);
    const labelHidden = labelInline ? true : labelHiddenProp;
    const className = _cssJs.classNames(_selectScssJsDefault.default.Select, error && _selectScssJsDefault.default.error, disabled && _selectScssJsDefault.default.disabled);
    const handleChange = onChange ? (event)=>onChange(event.currentTarget.value, id)
     : undefined;
    const describedBy = [];
    if (helpText) describedBy.push(_labelledJs.helpTextID(id));
    if (error) describedBy.push(`${id}Error`);
    const options = optionsProp || [];
    let normalizedOptions = options.map(normalizeOption);
    if (placeholder) normalizedOptions = [
        {
            label: placeholder,
            value: PLACEHOLDER_VALUE,
            disabled: true
        },
        ...normalizedOptions
    ];
    const inlineLabelMarkup = labelInline && /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _selectScssJsDefault.default.InlineLabel
    }, label);
    const selectedOption = getSelectedOption(normalizedOptions, value);
    const prefixMarkup = selectedOption.prefix && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _selectScssJsDefault.default.Prefix
    }, selectedOption.prefix);
    const contentMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _selectScssJsDefault.default.Content,
        "aria-hidden": true,
        "aria-disabled": disabled
    }, inlineLabelMarkup, prefixMarkup, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _selectScssJsDefault.default.SelectedOption
    }, selectedOption.label), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _selectScssJsDefault.default.Icon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.SelectMinor
    })));
    const optionsMarkup = normalizedOptions.map(renderOption);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_labelledJs.Labelled, {
        id: id,
        label: label,
        error: error,
        action: labelAction,
        labelHidden: labelHidden,
        helpText: helpText,
        requiredIndicator: requiredIndicator
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }, /*#__PURE__*/ _reactDefault.default.createElement("select", {
        id: id,
        name: name,
        value: value,
        className: _selectScssJsDefault.default.Input,
        disabled: disabled,
        onFocus: onFocus,
        onBlur: onBlur,
        onChange: handleChange,
        "aria-invalid": Boolean(error),
        "aria-describedby": describedBy.length ? describedBy.join(' ') : undefined,
        "aria-required": requiredIndicator
    }, optionsMarkup), contentMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _selectScssJsDefault.default.Backdrop
    }))));
}
function isString(option) {
    return typeof option === 'string';
}
function isGroup(option) {
    return typeof option === 'object' && 'options' in option && option.options != null;
}
function normalizeStringOption(option) {
    return {
        label: option,
        value: option
    };
}
/**
 * Converts a string option (and each string option in a Group) into
 * an Option object.
 */ function normalizeOption(option1) {
    if (isString(option1)) return normalizeStringOption(option1);
    else if (isGroup(option1)) {
        const { title , options  } = option1;
        return {
            title,
            options: options.map((option)=>{
                return isString(option) ? normalizeStringOption(option) : option;
            })
        };
    }
    return option1;
}
/**
 * Gets the text to display in the UI, for the currently selected option
 */ function getSelectedOption(options, value) {
    const flatOptions = flattenOptions(options);
    let selectedOption = flatOptions.find((option)=>value === option.value
    );
    if (selectedOption === undefined) // Get the first visible option (not the hidden placeholder)
    selectedOption = flatOptions.find((option)=>!option.hidden
    );
    return selectedOption || {
        value: '',
        label: ''
    };
}
/**
 * Ungroups an options array
 */ function flattenOptions(options) {
    let flatOptions = [];
    options.forEach((optionOrGroup)=>{
        if (isGroup(optionOrGroup)) flatOptions = flatOptions.concat(optionOrGroup.options);
        else flatOptions.push(optionOrGroup);
    });
    return flatOptions;
}
function renderSingleOption(option) {
    const { value , label , prefix: _prefix , ...rest } = option;
    return(/*#__PURE__*/ _reactDefault.default.createElement("option", Object.assign({
        key: value,
        value: value
    }, rest), label));
}
function renderOption(optionOrGroup) {
    if (isGroup(optionOrGroup)) {
        const { title , options  } = optionOrGroup;
        return(/*#__PURE__*/ _reactDefault.default.createElement("optgroup", {
            label: title,
            key: title
        }, options.map(renderSingleOption)));
    }
    return renderSingleOption(optionOrGroup);
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","./Select.scss.js":"aNtVZ","../../utilities/unique-id/hooks.js":"kPfFC","../Icon/Icon.js":"flzpR","../Labelled/Labelled.js":"1YPAe","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aNtVZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Select": "Polaris-Select",
    "disabled": "Polaris-Select--disabled",
    "Content": "Polaris-Select__Content",
    "InlineLabel": "Polaris-Select__InlineLabel",
    "Icon": "Polaris-Select__Icon",
    "Backdrop": "Polaris-Select__Backdrop",
    "SelectedOption": "Polaris-Select__SelectedOption",
    "Prefix": "Polaris-Select__Prefix",
    "Input": "Polaris-Select__Input",
    "error": "Polaris-Select--error",
    "hover": "Polaris-Select--hover"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2PUT8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FilterControl", ()=>FilterControl
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _typesJs = require("./types.js");
var _filterControlScssJs = require("./FilterControl.scss.js");
var _filterControlScssJsDefault = parcelHelpers.interopDefault(_filterControlScssJs);
var _filterCreatorJs = require("./components/FilterCreator/FilterCreator.js");
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
var _contextJs = require("../../../../utilities/resource-list/context.js");
var _utilsJs = require("../../../Button/utils.js");
var _tagJs = require("../../../Tag/Tag.js");
var _formLayoutJs = require("../../../FormLayout/FormLayout.js");
var _textFieldJs = require("../../../TextField/TextField.js");
var _iconJs = require("../../../Icon/Icon.js");
/** @deprecated This is a private component, do not use it. This component might be removed in a minor version update. Use <Filters /> instead. */ function FilterControl({ searchValue , appliedFilters =[] , additionalAction , focused =false , filters =[] , placeholder , onSearchBlur , onSearchChange , onFiltersChange  }) {
    // eslint-disable-next-line no-console
    console.warn('Deprecation: <FilterControl /> is deprecated. This is a private component, do not use it. This component might be removed in a minor version update. Use <Filters /> instead.');
    const i18n = _hooksJs.useI18n();
    const { selectMode , resourceName  } = _react.useContext(_contextJs.ResourceListContext);
    const filterResourceName = resourceName || {
        singular: i18n.translate('Polaris.ResourceList.defaultItemSingular'),
        plural: i18n.translate('Polaris.ResourceList.defaultItemPlural')
    };
    const handleAddFilter = _react.useCallback((newFilter)=>{
        if (!onFiltersChange) return;
        const foundFilter = appliedFilters.find((appliedFilter)=>idFromFilter(appliedFilter) === idFromFilter(newFilter)
        );
        if (foundFilter) return;
        const newAppliedFilters = [
            ...appliedFilters,
            newFilter
        ];
        onFiltersChange(newAppliedFilters);
    }, [
        onFiltersChange,
        appliedFilters
    ]);
    const handleRemoveFilter = _react.useCallback((filterId)=>{
        if (!onFiltersChange) return;
        const foundIndex = appliedFilters.findIndex((appliedFilter)=>idFromFilter(appliedFilter) === filterId
        );
        const newAppliedFilters = foundIndex >= 0 ? [
            ...appliedFilters.slice(0, foundIndex),
            ...appliedFilters.slice(foundIndex + 1, appliedFilters.length)
        ] : [
            ...appliedFilters
        ];
        onFiltersChange(newAppliedFilters);
    }, [
        appliedFilters,
        onFiltersChange
    ]);
    const getRemoveFilterCallback = _react.useCallback((filterId)=>{
        return ()=>{
            handleRemoveFilter(filterId);
        };
    }, [
        handleRemoveFilter
    ]);
    const textFieldLabel = placeholder ? placeholder : i18n.translate('Polaris.ResourceList.FilterControl.textFieldLabel', {
        resourceNamePlural: filterResourceName.plural.toLocaleLowerCase()
    });
    if (additionalAction) additionalAction.disabled = selectMode;
    const additionalActionButton = additionalAction && _utilsJs.buttonsFrom(additionalAction) || null;
    const filterCreatorMarkup = filters.length > 0 ? /*#__PURE__*/ _reactDefault.default.createElement(_filterCreatorJs.FilterCreator, {
        resourceName: filterResourceName,
        filters: filters,
        onAddFilter: handleAddFilter,
        disabled: selectMode
    }) : null;
    const appliedFiltersMarkup = appliedFilters.map((appliedFilter)=>{
        const activeFilterLabel = getFilterLabel(appliedFilter);
        const filterId = idFromFilter(appliedFilter);
        return(/*#__PURE__*/ _reactDefault.default.createElement("li", {
            className: _filterControlScssJsDefault.default.AppliedFilter,
            key: filterId
        }, /*#__PURE__*/ _reactDefault.default.createElement(_tagJs.Tag, {
            onRemove: getRemoveFilterCallback(filterId),
            disabled: selectMode
        }, activeFilterLabel)));
    });
    const appliedFiltersWrapper = appliedFilters.length > 0 ? /*#__PURE__*/ _reactDefault.default.createElement("ul", {
        className: _filterControlScssJsDefault.default.AppliedFilters
    }, appliedFiltersMarkup) : null;
    function getFilterLabel(appliedFilter) {
        const { key , value , label  } = appliedFilter;
        if (label) {
            return label;
        }
        const filter1 = filters.find((filter)=>{
            const { minKey , maxKey , operatorText  } = filter;
            if (minKey || maxKey) {
                return filter.key === key || minKey === key || maxKey === key;
            }
            if (operatorText && typeof operatorText !== 'string') {
                return filter.key === key || operatorText.filter(({ key: operatorKey  })=>operatorKey === key
                ).length === 1;
            }
            return filter.key === key;
        });
        if (!filter1) {
            return value;
        }
        const filterOperatorLabel = findOperatorLabel(filter1, appliedFilter);
        const filterLabelByType = findFilterLabelByType(filter1, appliedFilter);
        if (!filterOperatorLabel) {
            return `${filter1.label} ${filterLabelByType}`;
        }
        return `${filter1.label} ${filterOperatorLabel} ${filterLabelByType}`;
    }
    function findFilterLabelByType(filter, appliedFilter) {
        const { value: appliedFilterValue  } = appliedFilter;
        if (filter.type === _typesJs.FilterType.Select) {
            const foundFilterOption = filter.options.find((option)=>typeof option === 'string' ? option === appliedFilterValue : option.value === appliedFilterValue
            );
            if (foundFilterOption) {
                return typeof foundFilterOption === 'string' ? foundFilterOption : foundFilterOption.label;
            }
        }
        if (filter.type === _typesJs.FilterType.DateSelector) {
            if (filter.key === appliedFilter.key) {
                const filterLabelKey = `Polaris.ResourceList.DateSelector.FilterLabelForValue.${appliedFilter.value}`;
                return i18n.translationKeyExists(filterLabelKey) ? i18n.translate(filterLabelKey) : appliedFilter.value;
            }
            if (appliedFilter.key === filter.maxKey) {
                return i18n.translate('Polaris.ResourceList.DateSelector.FilterLabelForValue.on_or_before', {
                    date: formatDateForLabelDisplay(appliedFilter.value)
                });
            }
            if (appliedFilter.key === filter.minKey) {
                return i18n.translate('Polaris.ResourceList.DateSelector.FilterLabelForValue.on_or_after', {
                    date: formatDateForLabelDisplay(appliedFilter.value)
                });
            }
        }
        return appliedFilterValue;
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement(_formLayoutJs.FormLayout, null, /*#__PURE__*/ _reactDefault.default.createElement(_textFieldJs.TextField, {
        connectedLeft: filterCreatorMarkup,
        connectedRight: additionalActionButton,
        label: textFieldLabel,
        labelHidden: true,
        placeholder: textFieldLabel,
        prefix: /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
            source: _polarisIcons.SearchMinor,
            color: "subdued"
        }),
        value: searchValue,
        onChange: onSearchChange,
        onBlur: onSearchBlur,
        focused: focused,
        disabled: selectMode,
        autoComplete: "off"
    }), appliedFiltersWrapper));
}
function idFromFilter(appliedFilter) {
    return `${appliedFilter.key}-${appliedFilter.value}`;
}
function formatDateForLabelDisplay(date) {
    if (isNaN(new Date(date).getTime())) return date;
    return new Date(date.replace(/-/g, '/')).toLocaleDateString();
}
function findOperatorLabel(filter, appliedFilter) {
    const { operatorText  } = filter;
    if (filter.type === _typesJs.FilterType.DateSelector && (appliedFilter.key === filter.minKey || appliedFilter.key === filter.maxKey)) return '';
    if (!operatorText || typeof operatorText === 'string') return operatorText;
    const appliedOperator = operatorText.find((operator)=>{
        return operator.key === appliedFilter.key;
    });
    if (appliedOperator) return appliedOperator.filterLabel || appliedOperator.optionLabel;
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","./types.js":"46dEf","./FilterControl.scss.js":"7fvRF","./components/FilterCreator/FilterCreator.js":"3jEuO","../../../../utilities/i18n/hooks.js":"hHpYD","../../../../utilities/resource-list/context.js":"65WNK","../../../Button/utils.js":"9W95c","../../../Tag/Tag.js":"b7k7E","../../../FormLayout/FormLayout.js":"9EoHh","../../../TextField/TextField.js":"bVuNq","../../../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"46dEf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FilterType", ()=>FilterType1
);
let FilterType1;
(function(FilterType) {
    FilterType[FilterType["Select"] = 0] = "Select";
    FilterType[FilterType["TextField"] = 1] = "TextField";
    FilterType[FilterType["DateSelector"] = 2] = "DateSelector";
})(FilterType1 || (FilterType1 = {
}));

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7fvRF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "AppliedFilters": "Polaris-ResourceList-FilterControl__AppliedFilters",
    "AppliedFilter": "Polaris-ResourceList-FilterControl__AppliedFilter"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3jEuO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FilterCreator", ()=>FilterCreator
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _useToggleJs = require("../../../../../../utilities/use-toggle.js");
var _formJs = require("../../../../../Form/Form.js");
var _formLayoutJs = require("../../../../../FormLayout/FormLayout.js");
var _filterValueSelectorJs = require("../FilterValueSelector/FilterValueSelector.js");
var _hooksJs = require("../../../../../../utilities/i18n/hooks.js");
var _buttonJs = require("../../../../../Button/Button.js");
var _popoverJs = require("../../../../../Popover/Popover.js");
var _selectJs = require("../../../../../Select/Select.js");
function FilterCreator({ filters , resourceName , disabled , onAddFilter  }) {
    const { value: popoverActive , toggle: togglePopoverActive , setFalse: setPopoverActiveFalse  } = _useToggleJs.useToggle(false);
    const [selectedFilter, setSelectedFilter] = _react.useState();
    const [selectedFilterKey, setSelectedFilterKey] = _react.useState();
    const [selectedFilterValue, setSelectedFilterValue] = _react.useState();
    const i18n = _hooksJs.useI18n();
    const node = _react.useRef(null);
    const canAddFilter = Boolean(selectedFilter && selectedFilterKey && selectedFilterValue);
    const handleButtonFocus = _react.useCallback((...args)=>{
        const event = args[0];
        if (!node.current && event) node.current = event.target;
    }, []);
    const handleFilterKeyChange = _react.useCallback((filterKey)=>{
        const foundFilter = filters.find((filter)=>{
            const { minKey , maxKey , operatorText  } = filter;
            if (minKey || maxKey) return filter.key === filterKey || minKey === filterKey || maxKey === filterKey;
            if (operatorText && typeof operatorText !== 'string') return filter.key === filterKey || operatorText.filter(({ key  })=>key === filterKey
            ).length === 1;
            return filter.key === filterKey;
        });
        if (!foundFilter) return;
        setSelectedFilter(foundFilter);
        setSelectedFilterKey(filterKey);
        setSelectedFilterValue(undefined);
    }, [
        filters
    ]);
    const handleFilterValueChange = _react.useCallback((value)=>{
        setSelectedFilterValue(value);
    }, []);
    const handleAddFilter = _react.useCallback(()=>{
        if (!onAddFilter || !canAddFilter || !selectedFilterKey) return;
        onAddFilter({
            key: selectedFilterKey,
            value: selectedFilterValue || ''
        });
        setPopoverActiveFalse();
        setSelectedFilter(undefined);
        setSelectedFilterValue(undefined);
        if (node.current != null) node.current.focus();
    }, [
        canAddFilter,
        onAddFilter,
        selectedFilterKey,
        selectedFilterValue,
        setPopoverActiveFalse
    ]);
    const activator = /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        onClick: togglePopoverActive,
        disclosure: true,
        disabled: disabled,
        onFocus: handleButtonFocus
    }, i18n.translate('Polaris.ResourceList.FilterCreator.filterButtonLabel'));
    const filterOptions = filters.map(({ key , label  })=>({
            value: key,
            label
        })
    );
    const filterValueSelectionMarkup = selectedFilter ? /*#__PURE__*/ _reactDefault.default.createElement(_filterValueSelectorJs.FilterValueSelector, {
        filter: selectedFilter,
        filterKey: selectedFilterKey,
        value: selectedFilterValue,
        onFilterKeyChange: handleFilterKeyChange,
        onChange: handleFilterValueChange
    }) : null;
    const addFilterButtonMarkup = selectedFilter ? /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        onClick: handleAddFilter,
        disabled: !canAddFilter
    }, i18n.translate('Polaris.ResourceList.FilterCreator.addFilterButtonLabel')) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
        active: popoverActive,
        activator: activator,
        onClose: togglePopoverActive,
        sectioned: true,
        fullHeight: true
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formJs.Form, {
        onSubmit: handleAddFilter
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formLayoutJs.FormLayout, null, /*#__PURE__*/ _reactDefault.default.createElement(_selectJs.Select, {
        label: i18n.translate('Polaris.ResourceList.FilterCreator.showAllWhere', {
            resourceNamePlural: resourceName.plural.toLocaleLowerCase()
        }),
        placeholder: i18n.translate('Polaris.ResourceList.FilterCreator.selectFilterKeyPlaceholder'),
        options: filterOptions,
        onChange: handleFilterKeyChange,
        value: selectedFilter && selectedFilter.key
    }), filterValueSelectionMarkup, addFilterButtonMarkup))));
}

},{"react":"6fep5","../../../../../../utilities/use-toggle.js":"jHDnh","../../../../../Form/Form.js":"40EEc","../../../../../FormLayout/FormLayout.js":"9EoHh","../FilterValueSelector/FilterValueSelector.js":"kvweL","../../../../../../utilities/i18n/hooks.js":"hHpYD","../../../../../Button/Button.js":"g06oC","../../../../../Popover/Popover.js":"9ztCP","../../../../../Select/Select.js":"i2qP0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kvweL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FilterValueSelector", ()=>FilterValueSelector
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _typesJs = require("../../types.js");
var _useIsMountedRefJs = require("../../../../../../utilities/use-is-mounted-ref.js");
var _dateSelectorJs = require("../DateSelector/DateSelector.js");
var _hooksJs = require("../../../../../../utilities/i18n/hooks.js");
var _selectJs = require("../../../../../Select/Select.js");
var _stackJs = require("../../../../../Stack/Stack.js");
var _textFieldJs = require("../../../../../TextField/TextField.js");
function FilterValueSelector({ filter , filterKey , value , onChange , onFilterKeyChange  }) {
    const i18n = _hooksJs.useI18n();
    const isMounted = _useIsMountedRefJs.useIsMountedRef();
    const { operatorText , type , label  } = filter;
    const showOperatorOptions = type !== _typesJs.FilterType.DateSelector && operatorText && typeof operatorText !== 'string';
    const handleOperatorOptionChange = _react.useCallback((operatorKey)=>{
        onFilterKeyChange(operatorKey);
        if (!value) return;
        onChange(value);
    }, [
        onChange,
        onFilterKeyChange,
        value
    ]);
    if (showOperatorOptions && operatorText.length !== 0 && !isMounted.current) handleOperatorOptionChange(operatorText[0].key);
    const operatorOptionsMarkup = showOperatorOptions ? /*#__PURE__*/ _reactDefault.default.createElement(_selectJs.Select, {
        label: label,
        labelHidden: true,
        options: buildOperatorOptions(operatorText),
        value: filterKey,
        onChange: handleOperatorOptionChange
    }) : null;
    const selectedFilterLabel = typeof operatorText === 'string' ? operatorText : '';
    switch(filter.type){
        case _typesJs.FilterType.Select:
            return(/*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
                vertical: true
            }, operatorOptionsMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_selectJs.Select, {
                label: selectedFilterLabel,
                options: filter.options,
                placeholder: i18n.translate('Polaris.ResourceList.FilterValueSelector.selectFilterValuePlaceholder'),
                value: value,
                onChange: onChange
            })));
        case _typesJs.FilterType.TextField:
            return(/*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
                vertical: true
            }, operatorOptionsMarkup, /*#__PURE__*/ _reactDefault.default.createElement(_textFieldJs.TextField, {
                label: selectedFilterLabel,
                value: value,
                type: filter.textFieldType,
                onChange: onChange,
                autoComplete: "off"
            })));
        case _typesJs.FilterType.DateSelector:
            return(/*#__PURE__*/ _reactDefault.default.createElement(_dateSelectorJs.DateSelector, {
                dateOptionType: filter.dateOptionType,
                filterValue: value,
                filterKey: filterKey,
                filterMinKey: filter.minKey,
                filterMaxKey: filter.maxKey,
                onFilterValueChange: onChange,
                onFilterKeyChange: onFilterKeyChange
            }));
        default:
            return null;
    }
}
function buildOperatorOptions(operatorText) {
    if (!operatorText || typeof operatorText === 'string') return [];
    return operatorText.map(({ key , optionLabel  })=>{
        return {
            value: key,
            label: optionLabel
        };
    });
}

},{"react":"6fep5","../../types.js":"46dEf","../../../../../../utilities/use-is-mounted-ref.js":"2wE7S","../DateSelector/DateSelector.js":"dD1QG","../../../../../../utilities/i18n/hooks.js":"hHpYD","../../../../../Select/Select.js":"i2qP0","../../../../../Stack/Stack.js":"g05gm","../../../../../TextField/TextField.js":"bVuNq","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dD1QG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DateFilterOption", ()=>DateFilterOption1
);
parcelHelpers.export(exports, "DateSelector", ()=>DateSelector
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _dateSelectorScssJs = require("./DateSelector.scss.js");
var _dateSelectorScssJsDefault = parcelHelpers.interopDefault(_dateSelectorScssJs);
var _datePickerJs = require("../../../../../DatePicker/DatePicker.js");
var _selectJs = require("../../../../../Select/Select.js");
var _hooksJs = require("../../../../../../utilities/i18n/hooks.js");
var _textFieldJs = require("../../../../../TextField/TextField.js");
var _iconJs = require("../../../../../Icon/Icon.js");
const VALID_DATE_REGEX = /^\d{4}-\d{1,2}-\d{1,2}$/;
let DateFilterOption1;
(function(DateFilterOption) {
    DateFilterOption["PastWeek"] = "past_week";
    DateFilterOption["PastMonth"] = "past_month";
    DateFilterOption["PastQuarter"] = "past_quarter";
    DateFilterOption["PastYear"] = "past_year";
    DateFilterOption["ComingWeek"] = "coming_week";
    DateFilterOption["ComingMonth"] = "coming_month";
    DateFilterOption["ComingQuarter"] = "coming_quarter";
    DateFilterOption["ComingYear"] = "coming_year";
    DateFilterOption["OnOrBefore"] = "on_or_before";
    DateFilterOption["OnOrAfter"] = "on_or_after";
})(DateFilterOption1 || (DateFilterOption1 = {
}));
const DateSelector = /*#__PURE__*/ _react.memo(function DateSelector({ filterValue , filterKey , filterMinKey , filterMaxKey , dateOptionType , onFilterValueChange , onFilterKeyChange  }) {
    const now = new Date();
    const i18n = _hooksJs.useI18n();
    const initialConsumerFilterKey = _react.useRef(filterKey);
    const [datePickerMonth, setDatePickerMonth] = _react.useState(now.getMonth());
    const [datePickerYear, setDatePickerYear] = _react.useState(now.getFullYear());
    const [selectedDate, setSelectedDate] = _react.useState();
    const [userInputDate, setUserInputDate] = _react.useState();
    const [userInputDateError, setUserInputDateError] = _react.useState();
    const dateTextFieldValue = getDateTextFieldValue();
    const handleDateFieldChange = _react.useCallback((value)=>{
        if (value.length === 0) {
            setSelectedDate(undefined);
            onFilterValueChange(undefined);
        }
        if (userInputDateError && isValidDate(value)) setUserInputDateError(undefined);
        setUserInputDate(value);
    }, [
        onFilterValueChange,
        userInputDateError
    ]);
    const handleDateChanged = _react.useCallback((date)=>{
        if (!date) return;
        onFilterValueChange(stripTimeFromISOString(formatDateForLocalTimezone(date)));
    }, [
        onFilterValueChange
    ]);
    const handleDateBlur = _react.useCallback(()=>{
        if (!dateTextFieldValue || !isValidDate(dateTextFieldValue)) {
            setSelectedDate(undefined);
            setUserInputDateError(i18n.translate('Polaris.ResourceList.DateSelector.dateValueError'));
            onFilterValueChange(undefined);
            return;
        }
        if (!userInputDate) return;
        const formattedDateForTimezone = new Date(formatDateForLocalTimezone(new Date(userInputDate)));
        setSelectedDate(formattedDateForTimezone);
        setDatePickerMonth(formattedDateForTimezone.getMonth());
        setDatePickerYear(formattedDateForTimezone.getFullYear());
        setUserInputDate(undefined);
        setUserInputDateError(undefined);
        handleDateChanged(formattedDateForTimezone);
    }, [
        dateTextFieldValue,
        handleDateChanged,
        i18n,
        onFilterValueChange,
        userInputDate
    ]);
    const handleDateFilterOptionsChange = _react.useCallback((newOption)=>{
        if (!initialConsumerFilterKey.current) return;
        if (newOption === DateFilterOption1.OnOrBefore) {
            onFilterKeyChange(filterMaxKey);
            onFilterValueChange(selectedDate ? stripTimeFromISOString(formatDateForLocalTimezone(selectedDate)) : undefined);
            return;
        }
        if (newOption === DateFilterOption1.OnOrAfter) {
            onFilterKeyChange(filterMinKey);
            onFilterValueChange(selectedDate ? stripTimeFromISOString(formatDateForLocalTimezone(selectedDate)) : undefined);
            return;
        }
        onFilterKeyChange(initialConsumerFilterKey.current);
        onFilterValueChange(newOption);
    }, [
        filterMaxKey,
        filterMinKey,
        initialConsumerFilterKey,
        onFilterKeyChange,
        onFilterValueChange,
        selectedDate
    ]);
    const handleDatePickerChange = _react.useCallback(({ end: nextDate  })=>{
        const date = new Date(nextDate);
        setSelectedDate(date);
        setUserInputDate(undefined);
        setUserInputDateError(undefined);
        handleDateChanged(date);
    }, [
        handleDateChanged
    ]);
    const handleDatePickerMonthChange = _react.useCallback((month, year)=>{
        setDatePickerMonth(month);
        setDatePickerYear(year);
    }, []);
    const dateFilterOption = getDateFilterOption(filterValue, filterKey, filterMinKey, filterMaxKey);
    const showDatePredicate = dateFilterOption === DateFilterOption1.OnOrBefore || dateFilterOption === DateFilterOption1.OnOrAfter;
    const datePredicateMarkup = showDatePredicate && /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _dateSelectorScssJsDefault.default.DateTextField
    }, /*#__PURE__*/ _reactDefault.default.createElement(_textFieldJs.TextField, {
        label: i18n.translate('Polaris.ResourceList.DateSelector.dateValueLabel'),
        placeholder: i18n.translate('Polaris.ResourceList.DateSelector.dateValuePlaceholder'),
        value: dateTextFieldValue,
        error: userInputDateError,
        prefix: /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
            source: _polarisIcons.CalendarMinor,
            color: "subdued"
        }),
        autoComplete: "off",
        onChange: handleDateFieldChange,
        onBlur: handleDateBlur
    })), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _dateSelectorScssJsDefault.default.DatePicker
    }, /*#__PURE__*/ _reactDefault.default.createElement(_datePickerJs.DatePicker, {
        selected: selectedDate,
        month: datePickerMonth,
        year: datePickerYear,
        onChange: handleDatePickerChange,
        onMonthChange: handleDatePickerMonthChange
    })));
    const dateOptionTypes = {
        past: [
            ...getDatePastOptions(),
            ...getDateComparatorOptions()
        ],
        future: [
            ...getDateFutureOptions(),
            ...getDateComparatorOptions()
        ],
        full: [
            ...getDatePastOptions(),
            ...getDateFutureOptions(),
            ...getDateComparatorOptions()
        ]
    };
    function getDateComparatorOptions() {
        return [
            {
                value: DateFilterOption1.OnOrBefore,
                label: i18n.translate('Polaris.ResourceList.DateSelector.SelectOptions.OnOrBefore')
            },
            {
                value: DateFilterOption1.OnOrAfter,
                label: i18n.translate('Polaris.ResourceList.DateSelector.SelectOptions.OnOrAfter')
            }
        ];
    }
    function getDatePastOptions() {
        return [
            {
                value: DateFilterOption1.PastWeek,
                label: i18n.translate('Polaris.ResourceList.DateSelector.SelectOptions.PastWeek')
            },
            {
                value: DateFilterOption1.PastMonth,
                label: i18n.translate('Polaris.ResourceList.DateSelector.SelectOptions.PastMonth')
            },
            {
                value: DateFilterOption1.PastQuarter,
                label: i18n.translate('Polaris.ResourceList.DateSelector.SelectOptions.PastQuarter')
            },
            {
                value: DateFilterOption1.PastYear,
                label: i18n.translate('Polaris.ResourceList.DateSelector.SelectOptions.PastYear')
            }
        ];
    }
    function getDateFutureOptions() {
        return [
            {
                value: DateFilterOption1.ComingWeek,
                label: i18n.translate('Polaris.ResourceList.DateSelector.SelectOptions.ComingWeek')
            },
            {
                value: DateFilterOption1.ComingMonth,
                label: i18n.translate('Polaris.ResourceList.DateSelector.SelectOptions.ComingMonth')
            },
            {
                value: DateFilterOption1.ComingQuarter,
                label: i18n.translate('Polaris.ResourceList.DateSelector.SelectOptions.ComingQuarter')
            },
            {
                value: DateFilterOption1.ComingYear,
                label: i18n.translate('Polaris.ResourceList.DateSelector.SelectOptions.ComingYear')
            }
        ];
    }
    function getDateTextFieldValue() {
        if (!userInputDate && !selectedDate) {
            return undefined;
        }
        if (userInputDate !== undefined) {
            return userInputDate;
        }
        if (selectedDate) {
            return stripTimeFromISOString(formatDateForLocalTimezone(selectedDate));
        }
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_selectJs.Select, {
        label: i18n.translate('Polaris.ResourceList.DateSelector.SelectOptions.dateFilterLabel'),
        labelHidden: true,
        options: dateOptionType ? dateOptionTypes[dateOptionType] : dateOptionTypes.full,
        placeholder: i18n.translate('Polaris.ResourceList.FilterValueSelector.selectFilterValuePlaceholder'),
        value: dateFilterOption,
        onChange: handleDateFilterOptionsChange
    }), datePredicateMarkup));
});
function isValidDate(date) {
    if (!date) return false;
    return VALID_DATE_REGEX.test(date) && !isNaN(new Date(date).getTime());
}
function getDateFilterOption(filterValue, filterKey, filterMinKey, filterMaxKey) {
    if (filterKey === filterMaxKey) return DateFilterOption1.OnOrBefore;
    if (filterKey === filterMinKey) return DateFilterOption1.OnOrAfter;
    return filterValue;
}
function stripTimeFromISOString(ISOString) {
    return ISOString.slice(0, 10);
}
function formatDateForLocalTimezone(date) {
    const timezoneOffset = date.getTimezoneOffset();
    const timezoneOffsetMs = timezoneOffset * 60000;
    const isFringeTimezone = timezoneOffset === -720 || timezoneOffset === 720;
    const formattedDate = new Date();
    if (isFringeTimezone && date.getHours() !== 0) return date.toISOString();
    const newTime = timezoneOffset > -1 ? date.getTime() + timezoneOffsetMs : date.getTime() - timezoneOffsetMs;
    formattedDate.setTime(newTime);
    return formattedDate.toISOString();
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","./DateSelector.scss.js":"lp1aU","../../../../../DatePicker/DatePicker.js":"46FyV","../../../../../Select/Select.js":"i2qP0","../../../../../../utilities/i18n/hooks.js":"hHpYD","../../../../../TextField/TextField.js":"bVuNq","../../../../../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"lp1aU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "DateTextField": "Polaris-FilterControl-DateSelector__DateTextField",
    "DatePicker": "Polaris-FilterControl-DateSelector__DatePicker"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7xKZd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SettingToggle", ()=>SettingToggle
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _utilsJs = require("../Button/utils.js");
var _cardJs = require("../Card/Card.js");
var _settingActionJs = require("../SettingAction/SettingAction.js");
function SettingToggle({ enabled , action , children  }) {
    const actionMarkup = action ? _utilsJs.buttonFrom(action, {
        primary: !enabled
    }) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement(_cardJs.Card, {
        sectioned: true
    }, /*#__PURE__*/ _reactDefault.default.createElement(_settingActionJs.SettingAction, {
        action: actionMarkup
    }, children)));
}

},{"react":"6fep5","../Button/utils.js":"9W95c","../Card/Card.js":"kiG4Y","../SettingAction/SettingAction.js":"kBX2S","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fJib9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SkeletonBodyText", ()=>SkeletonBodyText
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _skeletonBodyTextScssJs = require("./SkeletonBodyText.scss.js");
var _skeletonBodyTextScssJsDefault = parcelHelpers.interopDefault(_skeletonBodyTextScssJs);
function SkeletonBodyText({ lines =3  }) {
    const bodyTextLines = [];
    for(let i = 0; i < lines; i++)bodyTextLines.push(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _skeletonBodyTextScssJsDefault.default.SkeletonBodyText,
        key: i
    }));
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _skeletonBodyTextScssJsDefault.default.SkeletonBodyTextContainer
    }, bodyTextLines));
}

},{"react":"6fep5","./SkeletonBodyText.scss.js":"iGxPc","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iGxPc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "SkeletonBodyTextContainer": "Polaris-SkeletonBodyText__SkeletonBodyTextContainer",
    "SkeletonBodyText": "Polaris-SkeletonBodyText"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"43Cm8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SkeletonDisplayText", ()=>SkeletonDisplayText
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _skeletonDisplayTextScssJs = require("./SkeletonDisplayText.scss.js");
var _skeletonDisplayTextScssJsDefault = parcelHelpers.interopDefault(_skeletonDisplayTextScssJs);
function SkeletonDisplayText({ size ='medium'  }) {
    const className = _cssJs.classNames(_skeletonDisplayTextScssJsDefault.default.DisplayText, size && _skeletonDisplayTextScssJsDefault.default[_cssJs.variationName('size', size)]);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./SkeletonDisplayText.scss.js":"au1hs","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"au1hs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "DisplayText": "Polaris-SkeletonDisplayText__DisplayText",
    "sizeSmall": "Polaris-SkeletonDisplayText--sizeSmall",
    "sizeMedium": "Polaris-SkeletonDisplayText--sizeMedium",
    "sizeLarge": "Polaris-SkeletonDisplayText--sizeLarge",
    "sizeExtraLarge": "Polaris-SkeletonDisplayText--sizeExtraLarge"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"f7sme":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SkeletonPage", ()=>SkeletonPage
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _skeletonPageScssJs = require("./SkeletonPage.scss.js");
var _skeletonPageScssJsDefault = parcelHelpers.interopDefault(_skeletonPageScssJs);
var _skeletonDisplayTextJs = require("../SkeletonDisplayText/SkeletonDisplayText.js");
var _skeletonBodyTextJs = require("../SkeletonBodyText/SkeletonBodyText.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
function SkeletonPage({ children , fullWidth , narrowWidth , primaryAction , secondaryActions , title ='' , breadcrumbs  }) {
    const i18n = _hooksJs.useI18n();
    const className = _cssJs.classNames(_skeletonPageScssJsDefault.default.Page, fullWidth && _skeletonPageScssJsDefault.default.fullWidth, narrowWidth && _skeletonPageScssJsDefault.default.narrowWidth);
    const titleContent = title ? /*#__PURE__*/ _reactDefault.default.createElement("h1", {
        className: _skeletonPageScssJsDefault.default.Title
    }, title) : /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _skeletonPageScssJsDefault.default.SkeletonTitle
    });
    const titleMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _skeletonPageScssJsDefault.default.TitleWrapper
    }, titleContent);
    const primaryActionMarkup = primaryAction ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _skeletonPageScssJsDefault.default.PrimaryAction
    }, /*#__PURE__*/ _reactDefault.default.createElement(_skeletonDisplayTextJs.SkeletonDisplayText, {
        size: "large"
    })) : null;
    const secondaryActionsMarkup = _react.useMemo(()=>secondaryActions ? renderSecondaryActions(secondaryActions) : null
    , [
        secondaryActions
    ]);
    const breadcrumbMarkup = breadcrumbs ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _skeletonPageScssJsDefault.default.BreadcrumbAction,
        style: {
            width: 60
        }
    }, /*#__PURE__*/ _reactDefault.default.createElement(_skeletonBodyTextJs.SkeletonBodyText, {
        lines: 1
    })) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className,
        role: "status",
        "aria-label": i18n.translate('Polaris.SkeletonPage.loadingLabel')
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _skeletonPageScssJsDefault.default.Header
    }, breadcrumbMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _skeletonPageScssJsDefault.default.TitleAndPrimaryAction
    }, titleMarkup, primaryActionMarkup), secondaryActionsMarkup), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _skeletonPageScssJsDefault.default.Content
    }, children)));
}
function renderSecondaryActions(actionCount) {
    const actions = [];
    for(let i = 0; i < actionCount; i++){
        const width = Math.round(Math.random() * 40 + 60);
        actions.push(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _skeletonPageScssJsDefault.default.Action,
            style: {
                width
            },
            key: i
        }, /*#__PURE__*/ _reactDefault.default.createElement(_skeletonBodyTextJs.SkeletonBodyText, {
            lines: 1
        })));
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _skeletonPageScssJsDefault.default.Actions
    }, actions));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./SkeletonPage.scss.js":"3KYO0","../SkeletonDisplayText/SkeletonDisplayText.js":"43Cm8","../SkeletonBodyText/SkeletonBodyText.js":"fJib9","../../utilities/i18n/hooks.js":"hHpYD","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3KYO0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Page": "Polaris-SkeletonPage__Page",
    "fullWidth": "Polaris-SkeletonPage--fullWidth",
    "narrowWidth": "Polaris-SkeletonPage--narrowWidth",
    "Content": "Polaris-SkeletonPage__Content",
    "Header": "Polaris-SkeletonPage__Header",
    "BreadcrumbAction": "Polaris-SkeletonPage__BreadcrumbAction",
    "TitleAndPrimaryAction": "Polaris-SkeletonPage__TitleAndPrimaryAction",
    "TitleWrapper": "Polaris-SkeletonPage__TitleWrapper",
    "Title": "Polaris-SkeletonPage__Title",
    "SkeletonTitle": "Polaris-SkeletonPage__SkeletonTitle",
    "PrimaryAction": "Polaris-SkeletonPage__PrimaryAction",
    "Actions": "Polaris-SkeletonPage__Actions",
    "Action": "Polaris-SkeletonPage__Action"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5O1c1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SkeletonThumbnail", ()=>SkeletonThumbnail
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _skeletonThumbnailScssJs = require("./SkeletonThumbnail.scss.js");
var _skeletonThumbnailScssJsDefault = parcelHelpers.interopDefault(_skeletonThumbnailScssJs);
function SkeletonThumbnail({ size ='medium'  }) {
    const className = _cssJs.classNames(_skeletonThumbnailScssJsDefault.default.SkeletonThumbnail, size && _skeletonThumbnailScssJsDefault.default[_cssJs.variationName('size', size)]);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className
    }));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./SkeletonThumbnail.scss.js":"fHanS","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"fHanS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "SkeletonThumbnail": "Polaris-SkeletonThumbnail",
    "sizeSmall": "Polaris-SkeletonThumbnail--sizeSmall",
    "sizeMedium": "Polaris-SkeletonThumbnail--sizeMedium",
    "sizeLarge": "Polaris-SkeletonThumbnail--sizeLarge"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"ewS6k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tabs", ()=>Tabs
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _utilitiesJs = require("./utilities.js");
var _tabsScssJs = require("./Tabs.scss.js");
var _tabsScssJsDefault = parcelHelpers.interopDefault(_tabsScssJs);
var _panelJs = require("./components/Panel/Panel.js");
var _tabMeasurerJs = require("./components/TabMeasurer/TabMeasurer.js");
var _listJs = require("./components/List/List.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _tabJs = require("./components/Tab/Tab.js");
var _iconJs = require("../Icon/Icon.js");
var _popoverJs = require("../Popover/Popover.js");
class TabsInner extends _react.PureComponent {
    constructor(...args){
        super(...args);
        this.state = {
            disclosureWidth: 0,
            containerWidth: Infinity,
            tabWidths: [],
            visibleTabs: [],
            hiddenTabs: [],
            showDisclosure: false,
            tabToFocus: -1
        };
        this.handleKeyPress = (event)=>{
            const { tabToFocus , visibleTabs , hiddenTabs , showDisclosure  } = this.state;
            const key = event.key;
            const tabsArrayInOrder = showDisclosure ? visibleTabs.concat(hiddenTabs) : [
                ...visibleTabs
            ];
            let newFocus = tabsArrayInOrder.indexOf(tabToFocus);
            if (key === 'ArrowRight') {
                newFocus += 1;
                if (newFocus === tabsArrayInOrder.length) newFocus = 0;
            }
            if (key === 'ArrowLeft') {
                if (newFocus === -1 || newFocus === 0) newFocus = tabsArrayInOrder.length - 1;
                else newFocus -= 1;
            }
            this.setState({
                tabToFocus: tabsArrayInOrder[newFocus]
            });
        };
        this.renderTabMarkup = (tab, index)=>{
            const { selected , children  } = this.props;
            const { tabToFocus  } = this.state;
            const tabPanelID = tab.panelID || `${tab.id}-panel`;
            return(/*#__PURE__*/ _reactDefault.default.createElement(_tabJs.Tab, {
                key: `${index}-${tab.id}`,
                id: tab.id,
                siblingTabHasFocus: tabToFocus > -1,
                focused: index === tabToFocus,
                selected: index === selected,
                onClick: this.handleTabClick,
                panelID: children ? tabPanelID : undefined,
                accessibilityLabel: tab.accessibilityLabel,
                url: tab.url
            }, tab.content));
        };
        this.handleFocus = (event)=>{
            const { selected , tabs  } = this.props; // If we are explicitly focusing a non-selected tab, this focuses it
            const target = event.target;
            if (target.classList.contains(_tabsScssJsDefault.default.Tab) || target.classList.contains(_tabsScssJsDefault.default.Item)) {
                let tabToFocus = -1;
                tabs.every((tab, index)=>{
                    if (tab.id === target.id) {
                        tabToFocus = index;
                        return false;
                    }
                    return true;
                });
                this.setState({
                    tabToFocus
                });
                return;
            }
            if (target.classList.contains(_tabsScssJsDefault.default.DisclosureActivator)) return;
             // If we are coming in from somewhere other than another tab, focus the
            // selected tab, and the focus (click) is not on the disclosure activator,
            // focus the selected tab
            if (!event.relatedTarget) {
                this.setState({
                    tabToFocus: selected
                });
                return;
            }
            const relatedTarget = event.relatedTarget;
            if (relatedTarget instanceof HTMLElement && !relatedTarget.classList.contains(_tabsScssJsDefault.default.Tab) && !relatedTarget.classList.contains(_tabsScssJsDefault.default.Item) && !relatedTarget.classList.contains(_tabsScssJsDefault.default.DisclosureActivator)) this.setState({
                tabToFocus: selected
            });
        };
        this.handleBlur = (event)=>{
            // If we blur and the target is not another tab, forget the focus position
            if (event.relatedTarget == null) {
                this.setState({
                    tabToFocus: -1
                });
                return;
            }
            const target = event.relatedTarget; // If we are going to anywhere other than another tab, lose the last focused tab
            if (target instanceof HTMLElement && !target.classList.contains(_tabsScssJsDefault.default.Tab) && !target.classList.contains(_tabsScssJsDefault.default.Item)) this.setState({
                tabToFocus: -1
            });
        };
        this.handleDisclosureActivatorClick = ()=>{
            this.setState(({ showDisclosure  })=>({
                    showDisclosure: !showDisclosure
                })
            );
        };
        this.handleClose = ()=>{
            this.setState({
                showDisclosure: false
            });
        };
        this.handleMeasurement = (measurements)=>{
            const { tabs , selected  } = this.props;
            const { tabToFocus  } = this.state;
            const { hiddenTabWidths: tabWidths , containerWidth , disclosureWidth  } = measurements;
            const { visibleTabs , hiddenTabs  } = _utilitiesJs.getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth);
            this.setState({
                tabToFocus: tabToFocus === -1 ? -1 : selected,
                visibleTabs,
                hiddenTabs,
                disclosureWidth,
                containerWidth,
                tabWidths
            });
        };
        this.handleTabClick = (id)=>{
            const { tabs , onSelect =noop  } = this.props;
            const tab = tabs.find((aTab)=>aTab.id === id
            );
            if (tab == null) return;
            const selectedIndex = tabs.indexOf(tab);
            onSelect(selectedIndex);
        };
    }
    static getDerivedStateFromProps(nextProps, prevState) {
        const { disclosureWidth , tabWidths , containerWidth  } = prevState;
        const { visibleTabs , hiddenTabs  } = _utilitiesJs.getVisibleAndHiddenTabIndices(nextProps.tabs, nextProps.selected, disclosureWidth, tabWidths, containerWidth);
        return {
            visibleTabs,
            hiddenTabs,
            selected: nextProps.selected
        };
    }
    render() {
        const { tabs , selected , fitted , children , i18n , disclosureText  } = this.props;
        const { tabToFocus , visibleTabs , hiddenTabs , showDisclosure  } = this.state;
        const disclosureTabs = hiddenTabs.map((tabIndex)=>tabs[tabIndex]
        );
        const panelMarkup = children ? tabs.map((_tab, index)=>{
            return selected === index ? /*#__PURE__*/ _reactDefault.default.createElement(_panelJs.Panel, {
                id: tabs[index].panelID || `${tabs[index].id}-panel`,
                tabID: tabs[index].id,
                key: tabs[index].id
            }, children) : /*#__PURE__*/ _reactDefault.default.createElement(_panelJs.Panel, {
                id: tabs[index].panelID || `${tabs[index].id}-panel`,
                tabID: tabs[index].id,
                key: tabs[index].id,
                hidden: true
            });
        }) : null;
        const tabsMarkup = visibleTabs.sort((tabA, tabB)=>tabA - tabB
        ).map((tabIndex)=>this.renderTabMarkup(tabs[tabIndex], tabIndex)
        );
        const disclosureActivatorVisible = visibleTabs.length < tabs.length;
        const hasCustomDisclosure = Boolean(disclosureText);
        const classname = _cssJs.classNames(_tabsScssJsDefault.default.Tabs, fitted && _tabsScssJsDefault.default.fitted, disclosureActivatorVisible && _tabsScssJsDefault.default.fillSpace);
        const disclosureTabClassName = _cssJs.classNames(_tabsScssJsDefault.default.DisclosureTab, disclosureActivatorVisible && _tabsScssJsDefault.default['DisclosureTab-visible']);
        const disclosureButtonClassName = _cssJs.classNames(_tabsScssJsDefault.default.DisclosureActivator, hasCustomDisclosure && _tabsScssJsDefault.default.Tab);
        const disclosureButtonContentWrapperClassName = _cssJs.classNames(_tabsScssJsDefault.default.Title, hasCustomDisclosure && _tabsScssJsDefault.default.titleWithIcon);
        const disclosureButtonContent = hasCustomDisclosure ? /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, disclosureText, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
            source: _polarisIcons.CaretDownMinor,
            color: "subdued"
        })) : /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
            source: _polarisIcons.HorizontalDotsMinor,
            color: "subdued"
        });
        const disclosureButton = /*#__PURE__*/ _reactDefault.default.createElement("button", {
            type: "button",
            className: disclosureButtonClassName,
            onClick: this.handleDisclosureActivatorClick,
            "aria-label": i18n.translate('Polaris.Tabs.toggleTabsLabel')
        }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: disclosureButtonContentWrapperClassName
        }, disclosureButtonContent));
        const activator = disclosureText ? /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _tabsScssJsDefault.default.TabContainer
        }, disclosureButton) : disclosureButton;
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", null, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _tabsScssJsDefault.default.Wrapper
        }, /*#__PURE__*/ _reactDefault.default.createElement(_tabMeasurerJs.TabMeasurer, {
            tabToFocus: tabToFocus,
            activator: activator,
            selected: selected,
            tabs: tabs,
            siblingTabHasFocus: tabToFocus > -1,
            handleMeasurement: this.handleMeasurement
        }), /*#__PURE__*/ _reactDefault.default.createElement("ul", {
            role: "tablist",
            className: classname,
            onFocus: this.handleFocus,
            onBlur: this.handleBlur,
            onKeyDown: handleKeyDown,
            onKeyUp: this.handleKeyPress
        }, tabsMarkup, /*#__PURE__*/ _reactDefault.default.createElement("li", {
            className: disclosureTabClassName,
            role: "presentation"
        }, /*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
            preferredPosition: "below",
            activator: activator,
            active: disclosureActivatorVisible && showDisclosure,
            onClose: this.handleClose,
            autofocusTarget: "first-node"
        }, /*#__PURE__*/ _reactDefault.default.createElement(_listJs.List, {
            focusIndex: hiddenTabs.indexOf(tabToFocus),
            disclosureTabs: disclosureTabs,
            onClick: this.handleTabClick,
            onKeyPress: this.handleKeyPress
        }))))), panelMarkup));
    }
}
function noop() {
}
function handleKeyDown(event) {
    const { key  } = event;
    if (key === 'ArrowLeft' || key === 'ArrowRight') {
        event.preventDefault();
        event.stopPropagation();
    }
}
function Tabs(props) {
    const i18n = _hooksJs.useI18n();
    return(/*#__PURE__*/ _reactDefault.default.createElement(TabsInner, Object.assign({
    }, props, {
        i18n: i18n
    })));
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","./utilities.js":"eSUsT","./Tabs.scss.js":"5iJ43","./components/Panel/Panel.js":"b2T2u","./components/TabMeasurer/TabMeasurer.js":"2ZZ5a","./components/List/List.js":"eX4D9","../../utilities/i18n/hooks.js":"hHpYD","./components/Tab/Tab.js":"3syKp","../Icon/Icon.js":"flzpR","../Popover/Popover.js":"9ztCP","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eSUsT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getVisibleAndHiddenTabIndices", ()=>getVisibleAndHiddenTabIndices
);
function getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth) {
    const sumTabWidths = tabWidths.reduce((sum, width)=>sum + width
    , 0);
    const arrayOfTabIndices = tabs.map((_, index)=>{
        return index;
    });
    const visibleTabs = [];
    const hiddenTabs = [];
    if (containerWidth > sumTabWidths) visibleTabs.push(...arrayOfTabIndices);
    else {
        visibleTabs.push(selected);
        let tabListWidth = tabWidths[selected];
        arrayOfTabIndices.forEach((currentTabIndex)=>{
            if (currentTabIndex !== selected) {
                const currentTabWidth = tabWidths[currentTabIndex];
                if (tabListWidth + currentTabWidth >= containerWidth - disclosureWidth) {
                    hiddenTabs.push(currentTabIndex);
                    return;
                }
                visibleTabs.push(currentTabIndex);
                tabListWidth += currentTabWidth;
            }
        });
    }
    return {
        visibleTabs,
        hiddenTabs
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5iJ43":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Tabs": "Polaris-Tabs",
    "Wrapper": "Polaris-Tabs__Wrapper",
    "fitted": "Polaris-Tabs--fitted",
    "TabContainer": "Polaris-Tabs__TabContainer",
    "Title": "Polaris-Tabs__Title",
    "fillSpace": "Polaris-Tabs--fillSpace",
    "Tab": "Polaris-Tabs__Tab",
    "Tab-selected": "Polaris-Tabs__Tab--selected",
    "titleWithIcon": "Polaris-Tabs--titleWithIcon",
    "Panel": "Polaris-Tabs__Panel",
    "Panel-hidden": "Polaris-Tabs__Panel--hidden",
    "List": "Polaris-Tabs__List",
    "Item": "Polaris-Tabs__Item",
    "DisclosureTab": "Polaris-Tabs__DisclosureTab",
    "DisclosureTab-visible": "Polaris-Tabs__DisclosureTab--visible",
    "DisclosureActivator": "Polaris-Tabs__DisclosureActivator",
    "TabMeasurer": "Polaris-Tabs__TabMeasurer"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"b2T2u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Panel", ()=>Panel
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _tabsScssJs = require("../../Tabs.scss.js");
var _tabsScssJsDefault = parcelHelpers.interopDefault(_tabsScssJs);
function Panel({ hidden , id , tabID , children  }) {
    const className = _cssJs.classNames(_tabsScssJsDefault.default.Panel, hidden && _tabsScssJsDefault.default['Panel-hidden']);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className,
        id: id,
        role: "tabpanel",
        "aria-labelledby": tabID,
        tabIndex: -1
    }, children));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../Tabs.scss.js":"5iJ43","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"2ZZ5a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TabMeasurer", ()=>TabMeasurer
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _useComponentDidMountJs = require("../../../../utilities/use-component-did-mount.js");
var _tabsScssJs = require("../../Tabs.scss.js");
var _tabsScssJsDefault = parcelHelpers.interopDefault(_tabsScssJs);
var _tabJs = require("../Tab/Tab.js");
var _eventListenerJs = require("../../../EventListener/EventListener.js");
const TabMeasurer = /*#__PURE__*/ _react.memo(function TabMeasurer({ selected , tabs , activator , tabToFocus , siblingTabHasFocus , handleMeasurement: handleMeasurementProp  }) {
    const containerNode = _react.useRef(null);
    const animationFrame = _react.useRef(null);
    const handleMeasurement = _react.useCallback(()=>{
        if (animationFrame.current) cancelAnimationFrame(animationFrame.current);
        animationFrame.current = requestAnimationFrame(()=>{
            if (!containerNode.current) return;
            const containerWidth = containerNode.current.offsetWidth;
            const hiddenTabNodes = containerNode.current.children;
            const hiddenTabNodesArray = Array.from(hiddenTabNodes);
            const hiddenTabWidths = hiddenTabNodesArray.map((node)=>{
                return Math.ceil(node.getBoundingClientRect().width);
            });
            const disclosureWidth = hiddenTabWidths.pop() || 0;
            handleMeasurementProp({
                containerWidth,
                disclosureWidth,
                hiddenTabWidths
            });
        });
    }, [
        handleMeasurementProp
    ]);
    _react.useEffect(()=>{
        handleMeasurement();
    }, [
        handleMeasurement,
        tabs
    ]);
    _useComponentDidMountJs.useComponentDidMount(()=>{
        setTimeout(handleMeasurement, 0);
    });
    const tabsMarkup = tabs.map((tab, index)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement(_tabJs.Tab, {
            measuring: true,
            key: `${index}${tab.id}Hidden`,
            id: `${tab.id}Measurer`,
            siblingTabHasFocus: siblingTabHasFocus,
            focused: index === tabToFocus,
            selected: index === selected,
            onClick: noop,
            url: tab.url
        }, tab.content));
    });
    const classname = _cssJs.classNames(_tabsScssJsDefault.default.Tabs, _tabsScssJsDefault.default.TabMeasurer);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: classname,
        ref: containerNode
    }, /*#__PURE__*/ _reactDefault.default.createElement(_eventListenerJs.EventListener, {
        event: "resize",
        handler: handleMeasurement
    }), tabsMarkup, activator));
});
function noop() {
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/use-component-did-mount.js":"fbwJ3","../../Tabs.scss.js":"5iJ43","../Tab/Tab.js":"3syKp","../../../EventListener/EventListener.js":"gpcxo","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3syKp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tab", ()=>Tab
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _focusJs = require("../../../../utilities/focus.js");
var _tabsScssJs = require("../../Tabs.scss.js");
var _tabsScssJsDefault = parcelHelpers.interopDefault(_tabsScssJs);
var _unstyledLinkJs = require("../../../UnstyledLink/UnstyledLink.js");
function Tab({ id , focused , siblingTabHasFocus , children , onClick , selected , url , panelID , measuring , accessibilityLabel  }) {
    const wasSelected = _react.useRef(selected);
    const panelFocused = _react.useRef(false);
    const node = _react.useRef(null); // A tab can start selected when it is moved from the disclosure dropdown
    // into the main list, so we need to send focus from the tab to the panel
    // on mount and update
    _react.useEffect(()=>{
        if (measuring) return;
         // Because of timing issues with the render, we may still have the old,
        // in-disclosure version of the tab that has focus. Check for this
        // as a second indicator of focus
        const itemHadFocus = focused || document.activeElement && document.activeElement.id === id; // If we just check for selected, the panel for the active tab will
        // be focused on page load, which we don’t want
        if (itemHadFocus && selected && panelID != null && !panelFocused.current) {
            focusPanelID(panelID);
            panelFocused.current = true;
        }
        if (selected && !wasSelected.current && panelID != null) focusPanelID(panelID);
        else if (focused && node.current != null) _focusJs.focusFirstFocusableNode(node.current);
        wasSelected.current = selected;
    }, [
        focused,
        id,
        measuring,
        panelID,
        selected
    ]);
    const handleClick = onClick && onClick.bind(null, id);
    const className = _cssJs.classNames(_tabsScssJsDefault.default.Tab, selected && _tabsScssJsDefault.default['Tab-selected']);
    let tabIndex;
    if (selected && !siblingTabHasFocus && !measuring) tabIndex = 0;
    else if (focused && !measuring) tabIndex = 0;
    else tabIndex = -1;
    const tabContainerClassNames = _cssJs.classNames(_tabsScssJsDefault.default.TabContainer, selected && _tabsScssJsDefault.default.Underline);
    const markup = url ? /*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, {
        id: id,
        url: url,
        role: "tab",
        tabIndex: tabIndex,
        onClick: handleClick,
        className: className,
        "aria-selected": selected,
        "aria-controls": panelID,
        "aria-label": accessibilityLabel,
        onMouseUp: _focusJs.handleMouseUpByBlurring
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _tabsScssJsDefault.default.Title
    }, children)) : /*#__PURE__*/ _reactDefault.default.createElement("button", {
        id: id,
        role: "tab",
        type: "button",
        tabIndex: tabIndex,
        className: className,
        onClick: handleClick,
        "aria-selected": selected,
        "aria-controls": panelID,
        "aria-label": accessibilityLabel,
        onMouseUp: _focusJs.handleMouseUpByBlurring
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _tabsScssJsDefault.default.Title
    }, children));
    return(/*#__PURE__*/ _reactDefault.default.createElement("li", {
        className: tabContainerClassNames,
        ref: node,
        role: "presentation"
    }, markup));
}
function focusPanelID(panelID) {
    const panel = document.getElementById(panelID);
    if (panel) panel.focus({
        preventScroll: true
    });
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../../../utilities/focus.js":"gLDAi","../../Tabs.scss.js":"5iJ43","../../../UnstyledLink/UnstyledLink.js":"8AMgX","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"eX4D9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "List", ()=>List
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tabsScssJs = require("../../Tabs.scss.js");
var _tabsScssJsDefault = parcelHelpers.interopDefault(_tabsScssJs);
var _itemJs = require("../Item/Item.js");
function List({ focusIndex , disclosureTabs , onClick =noop , onKeyPress =noop  }) {
    const tabs = disclosureTabs.map(({ id , content , ...tabProps }, index)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement(_itemJs.Item, Object.assign({
        }, tabProps, {
            key: id,
            id: id,
            focused: index === focusIndex,
            onClick: onClick.bind(null, id)
        }), content));
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement("ul", {
        className: _tabsScssJsDefault.default.List,
        onKeyDown: handleKeyDown,
        onKeyUp: onKeyPress
    }, tabs));
}
function noop() {
}
function handleKeyDown(event) {
    const { key  } = event;
    if (key === 'ArrowLeft' || key === 'ArrowRight') {
        event.preventDefault();
        event.stopPropagation();
    }
}

},{"react":"6fep5","../../Tabs.scss.js":"5iJ43","../Item/Item.js":"52rKE","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"52rKE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Item", ()=>Item
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _tabsScssJs = require("../../Tabs.scss.js");
var _tabsScssJsDefault = parcelHelpers.interopDefault(_tabsScssJs);
var _unstyledLinkJs = require("../../../UnstyledLink/UnstyledLink.js");
var _contextJs = require("../../../../utilities/features/context.js");
class Item extends _react.PureComponent {
    constructor(...args){
        super(...args);
        this.context = void 0;
        this.focusedNode = null;
        this.setFocusedNode = (node)=>{
            this.focusedNode = node;
        };
    }
    componentDidMount() {
        const { focusedNode  } = this;
        const { focused  } = this.props;
        if (focusedNode && focusedNode instanceof HTMLElement && focused) focusedNode.focus();
    }
    componentDidUpdate() {
        const { focusedNode  } = this;
        const { focused  } = this.props;
        if (focusedNode && focusedNode instanceof HTMLElement && focused) focusedNode.focus();
    }
    render() {
        const { id , panelID , children , url , accessibilityLabel , onClick =noop  } = this.props;
        const classname = _cssJs.classNames(_tabsScssJsDefault.default.Item);
        const sharedProps = {
            id,
            ref: this.setFocusedNode,
            onClick,
            className: classname,
            'aria-controls': panelID,
            'aria-selected': false,
            'aria-label': accessibilityLabel
        };
        const markup = url ? /*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, Object.assign({
        }, sharedProps, {
            url: url
        }), children) : /*#__PURE__*/ _reactDefault.default.createElement("button", Object.assign({
        }, sharedProps, {
            type: "button"
        }), children);
        return(/*#__PURE__*/ _reactDefault.default.createElement("li", null, markup));
    }
}
Item.contextType = _contextJs.FeaturesContext;
function noop() {
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","../../Tabs.scss.js":"5iJ43","../../../UnstyledLink/UnstyledLink.js":"8AMgX","../../../../utilities/features/context.js":"2vGa7","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"iXbvo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Thumbnail", ()=>Thumbnail
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _thumbnailScssJs = require("./Thumbnail.scss.js");
var _thumbnailScssJsDefault = parcelHelpers.interopDefault(_thumbnailScssJs);
var _imageJs = require("../Image/Image.js");
var _iconJs = require("../Icon/Icon.js");
function Thumbnail({ source , alt , size ='medium'  }) {
    const className = _cssJs.classNames(_thumbnailScssJsDefault.default.Thumbnail, size && _thumbnailScssJsDefault.default[_cssJs.variationName('size', size)]);
    const content = typeof source === 'string' ? /*#__PURE__*/ _reactDefault.default.createElement(_imageJs.Image, {
        alt: alt,
        source: source
    }) : /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        accessibilityLabel: alt,
        source: source
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: className
    }, content));
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","./Thumbnail.scss.js":"581gg","../Image/Image.js":"jekWJ","../Icon/Icon.js":"flzpR","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"581gg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Thumbnail": "Polaris-Thumbnail",
    "sizeSmall": "Polaris-Thumbnail--sizeSmall",
    "sizeMedium": "Polaris-Thumbnail--sizeMedium",
    "sizeLarge": "Polaris-Thumbnail--sizeLarge"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"6FHAJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Toast", ()=>Toast
);
var _react = require("react");
var _useDeepEffectJs = require("../../utilities/use-deep-effect.js");
var _hooksJs = require("../../utilities/unique-id/hooks.js");
var _hooksJs1 = require("../../utilities/frame/hooks.js");
// that the interface defining the props is defined in this file, not imported
// from elsewhere. This silly workaround ensures that the Props Explorer table
// is generated correctly.
const Toast = /*#__PURE__*/ _react.memo(function Toast(props) {
    const id = _hooksJs.useUniqueId('Toast');
    const { showToast , hideToast  } = _hooksJs1.useFrame();
    _useDeepEffectJs.useDeepEffect(()=>{
        showToast({
            id,
            ...props
        });
        return ()=>{
            hideToast({
                id
            });
        };
    }, [
        props
    ]);
    return null;
});

},{"react":"6fep5","../../utilities/use-deep-effect.js":"k1lca","../../utilities/unique-id/hooks.js":"kPfFC","../../utilities/frame/hooks.js":"cCO5z","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aHbmI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TopBar", ()=>TopBar
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../utilities/css.js");
var _getWidthJs = require("../../utilities/get-width.js");
var _useToggleJs = require("../../utilities/use-toggle.js");
var _topBarScssJs = require("./TopBar.scss.js");
var _topBarScssJsDefault = parcelHelpers.interopDefault(_topBarScssJs);
var _searchJs = require("./components/Search/Search.js");
var _searchFieldJs = require("./components/SearchField/SearchField.js");
var _userMenuJs = require("./components/UserMenu/UserMenu.js");
var _hooksJs = require("../../utilities/i18n/hooks.js");
var _hooksJs1 = require("../../utilities/theme/hooks.js");
var _iconJs = require("../Icon/Icon.js");
var _unstyledLinkJs = require("../UnstyledLink/UnstyledLink.js");
var _imageJs = require("../Image/Image.js");
var _menuJs = require("./components/Menu/Menu.js");
// TypeScript can't generate types that correctly infer the typing of
// subcomponents so explicitly state the subcomponents in the type definition.
// Letting this be implicit works in this project but fails in projects that use
// generated *.d.ts files.
const TopBar = function TopBar({ showNavigationToggle , userMenu , searchResults , searchField , secondaryMenu , searchResultsVisible , searchResultsOverlayVisible =false , onNavigationToggle , onSearchResultsDismiss , contextControl  }) {
    const i18n = _hooksJs.useI18n();
    const { logo  } = _hooksJs1.useTheme();
    const { value: focused , setTrue: forceTrueFocused , setFalse: forceFalseFocused  } = _useToggleJs.useToggle(false);
    const iconClassName = _cssJs.classNames(_topBarScssJsDefault.default.NavigationIcon, focused && _topBarScssJsDefault.default.focused);
    const navigationButtonMarkup = showNavigationToggle ? /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        className: iconClassName,
        onClick: onNavigationToggle,
        onFocus: forceTrueFocused,
        onBlur: forceFalseFocused,
        "aria-label": i18n.translate('Polaris.TopBar.toggleMenuLabel')
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.MobileHamburgerMajor
    })) : null;
    const width = _getWidthJs.getWidth(logo, 104);
    let contextMarkup;
    if (contextControl) contextMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _topBarScssJsDefault.default.ContextControl
    }, contextControl);
    else if (logo) {
        const className = _cssJs.classNames(_topBarScssJsDefault.default.LogoContainer, showNavigationToggle || searchField ? _topBarScssJsDefault.default.LogoDisplayControl : _topBarScssJsDefault.default.LogoDisplayContainer);
        contextMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: className
        }, /*#__PURE__*/ _reactDefault.default.createElement(_unstyledLinkJs.UnstyledLink, {
            url: logo.url || '',
            className: _topBarScssJsDefault.default.LogoLink,
            style: {
                width
            }
        }, /*#__PURE__*/ _reactDefault.default.createElement(_imageJs.Image, {
            source: logo.topBarSource || '',
            alt: logo.accessibilityLabel || '',
            className: _topBarScssJsDefault.default.Logo,
            style: {
                width
            }
        })));
    }
    const searchMarkup = searchField ? /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, searchField, /*#__PURE__*/ _reactDefault.default.createElement(_searchJs.Search, {
        visible: searchResultsVisible,
        onDismiss: onSearchResultsDismiss,
        overlayVisible: searchResultsOverlayVisible
    }, searchResults)) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _topBarScssJsDefault.default.TopBar
    }, navigationButtonMarkup, contextMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _topBarScssJsDefault.default.Contents
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _topBarScssJsDefault.default.SearchField
    }, searchMarkup), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _topBarScssJsDefault.default.SecondaryMenu
    }, secondaryMenu), userMenu)));
};
TopBar.Menu = _menuJs.Menu;
TopBar.SearchField = _searchFieldJs.SearchField;
TopBar.UserMenu = _userMenuJs.UserMenu;

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../utilities/css.js":"kYdwV","../../utilities/get-width.js":"Q4f7T","../../utilities/use-toggle.js":"jHDnh","./TopBar.scss.js":"jxcCv","./components/Search/Search.js":"aPEjX","./components/SearchField/SearchField.js":"dsx2V","./components/UserMenu/UserMenu.js":"5dpWy","../../utilities/i18n/hooks.js":"hHpYD","../../utilities/theme/hooks.js":"242tp","../Icon/Icon.js":"flzpR","../UnstyledLink/UnstyledLink.js":"8AMgX","../Image/Image.js":"jekWJ","./components/Menu/Menu.js":"kmp94","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jxcCv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "TopBar": "Polaris-TopBar",
    "LogoDisplayControl": "Polaris-TopBar__LogoDisplayControl",
    "LogoDisplayContainer": "Polaris-TopBar__LogoDisplayContainer",
    "LogoContainer": "Polaris-TopBar__LogoContainer",
    "Logo": "Polaris-TopBar__Logo",
    "LogoLink": "Polaris-TopBar__LogoLink",
    "ContextControl": "Polaris-TopBar__ContextControl",
    "NavigationIcon": "Polaris-TopBar__NavigationIcon",
    "focused": "Polaris-TopBar--focused",
    "Contents": "Polaris-TopBar__Contents",
    "SearchField": "Polaris-TopBar__SearchField",
    "SecondaryMenu": "Polaris-TopBar__SecondaryMenu"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"aPEjX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Search", ()=>Search
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _searchScssJs = require("./Search.scss.js");
var _searchScssJsDefault = parcelHelpers.interopDefault(_searchScssJs);
var _searchDismissOverlayJs = require("../SearchDismissOverlay/SearchDismissOverlay.js");
var _themeProviderJs = require("../../../ThemeProvider/ThemeProvider.js");
function Search({ visible , children , onDismiss , overlayVisible =false  }) {
    if (children == null) return null;
    const overlayMarkup = visible ? /*#__PURE__*/ _reactDefault.default.createElement(_searchDismissOverlayJs.SearchDismissOverlay, {
        onDismiss: onDismiss,
        visible: overlayVisible
    }) : null;
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, overlayMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _cssJs.classNames(_searchScssJsDefault.default.Search, visible && _searchScssJsDefault.default.visible)
    }, /*#__PURE__*/ _reactDefault.default.createElement(_themeProviderJs.ThemeProvider, {
        theme: {
            colorScheme: 'dark'
        }
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _searchScssJsDefault.default.SearchContent
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _searchScssJsDefault.default.Results
    }, children))))));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","./Search.scss.js":"jrsbx","../SearchDismissOverlay/SearchDismissOverlay.js":"7L1MN","../../../ThemeProvider/ThemeProvider.js":"10qny","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jrsbx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Search": "Polaris-TopBar-Search",
    "SearchContent": "Polaris-TopBar-Search__SearchContent",
    "visible": "Polaris-TopBar-Search--visible",
    "Results": "Polaris-TopBar-Search__Results"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"7L1MN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SearchDismissOverlay", ()=>SearchDismissOverlay
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../../../utilities/css.js");
var _searchDismissOverlayScssJs = require("./SearchDismissOverlay.scss.js");
var _searchDismissOverlayScssJsDefault = parcelHelpers.interopDefault(_searchDismissOverlayScssJs);
var _scrollLockJs = require("../../../ScrollLock/ScrollLock.js");
function SearchDismissOverlay({ onDismiss , visible  }) {
    const node = _react.useRef(null);
    const handleDismiss = _react.useCallback(({ target  })=>{
        if (target === node.current && onDismiss != null) onDismiss();
    }, [
        onDismiss
    ]);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, visible ? /*#__PURE__*/ _reactDefault.default.createElement(_scrollLockJs.ScrollLock, null) : null, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        ref: node,
        className: _cssJs.classNames(_searchDismissOverlayScssJsDefault.default.SearchDismissOverlay, visible && _searchDismissOverlayScssJsDefault.default.visible),
        onClick: handleDismiss
    })));
}

},{"react":"6fep5","../../../../utilities/css.js":"kYdwV","./SearchDismissOverlay.scss.js":"hIYv8","../../../ScrollLock/ScrollLock.js":"6Ygxi","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hIYv8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "SearchDismissOverlay": "Polaris-TopBar-SearchDismissOverlay",
    "visible": "Polaris-TopBar-SearchDismissOverlay--visible",
    "fade-in": "Polaris-TopBar-SearchDismissOverlay__fade--in"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dsx2V":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SearchField", ()=>SearchField
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _polarisIcons = require("@shopify/polaris-icons");
var _cssJs = require("../../../../utilities/css.js");
var _searchFieldScssJs = require("./SearchField.scss.js");
var _searchFieldScssJsDefault = parcelHelpers.interopDefault(_searchFieldScssJs);
var _hooksJs = require("../../../../utilities/i18n/hooks.js");
var _hooksJs1 = require("../../../../utilities/unique-id/hooks.js");
var _iconJs = require("../../../Icon/Icon.js");
var _visuallyHiddenJs = require("../../../VisuallyHidden/VisuallyHidden.js");
function SearchField({ value , focused , active , placeholder , onChange , onFocus , onBlur , onCancel , showFocusBorder  }) {
    const i18n = _hooksJs.useI18n();
    const [forceActive, setForceActive] = _react.useState(false);
    const input = _react.useRef(null);
    const searchId = _hooksJs1.useUniqueId('SearchField');
    const handleChange = _react.useCallback(({ currentTarget  })=>{
        onChange(currentTarget.value);
    }, [
        onChange
    ]);
    const handleFocus = _react.useCallback(()=>onFocus && onFocus()
    , [
        onFocus
    ]);
    const handleBlur = _react.useCallback(()=>onBlur && onBlur()
    , [
        onBlur
    ]);
    const handleClear = _react.useCallback(()=>{
        onCancel && onCancel();
        if (!input.current) return;
        input.current.value = '';
        onChange('');
        input.current.focus();
    }, [
        onCancel,
        onChange
    ]);
    _react.useEffect(()=>{
        if (!input.current) return;
        if (focused) input.current.focus();
        else input.current.blur();
    }, [
        focused
    ]);
    const clearMarkup = value !== '' && /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        "aria-label": i18n.translate('Polaris.TopBar.SearchField.clearButtonLabel'),
        className: _searchFieldScssJsDefault.default.Clear,
        onClick: handleClear,
        onBlur: ()=>{
            setForceActive(false);
            handleClear();
        },
        onFocus: ()=>{
            handleFocus();
            setForceActive(true);
        }
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.CircleCancelMinor
    }));
    const className = _cssJs.classNames(_searchFieldScssJsDefault.default.SearchField, (focused || active || forceActive) && _searchFieldScssJsDefault.default.focused);
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: className,
        onFocus: handleFocus,
        onBlur: handleBlur
    }, /*#__PURE__*/ _reactDefault.default.createElement(_visuallyHiddenJs.VisuallyHidden, null, /*#__PURE__*/ _reactDefault.default.createElement("label", {
        htmlFor: searchId
    }, i18n.translate('Polaris.TopBar.SearchField.search'))), /*#__PURE__*/ _reactDefault.default.createElement("input", {
        id: searchId,
        className: _searchFieldScssJsDefault.default.Input,
        placeholder: placeholder,
        type: "search",
        autoCapitalize: "off",
        autoComplete: "off",
        autoCorrect: "off",
        ref: input,
        value: value,
        onChange: handleChange,
        onKeyDown: preventDefault
    }), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _searchFieldScssJsDefault.default.Icon
    }, /*#__PURE__*/ _reactDefault.default.createElement(_iconJs.Icon, {
        source: _polarisIcons.SearchMinor
    })), clearMarkup, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _cssJs.classNames(_searchFieldScssJsDefault.default.Backdrop, showFocusBorder && _searchFieldScssJsDefault.default.BackdropShowFocusBorder)
    })));
}
function preventDefault(event) {
    if (event.key === 'Enter') event.preventDefault();
}

},{"react":"6fep5","@shopify/polaris-icons":"4Apua","../../../../utilities/css.js":"kYdwV","./SearchField.scss.js":"hScbZ","../../../../utilities/i18n/hooks.js":"hHpYD","../../../../utilities/unique-id/hooks.js":"kPfFC","../../../Icon/Icon.js":"flzpR","../../../VisuallyHidden/VisuallyHidden.js":"fGCM0","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hScbZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "SearchField": "Polaris-TopBar-SearchField",
    "focused": "Polaris-TopBar-SearchField--focused",
    "Input": "Polaris-TopBar-SearchField__Input",
    "Backdrop": "Polaris-TopBar-SearchField__Backdrop",
    "BackdropShowFocusBorder": "Polaris-TopBar-SearchField__BackdropShowFocusBorder",
    "Icon": "Polaris-TopBar-SearchField__Icon",
    "Clear": "Polaris-TopBar-SearchField__Clear",
    "toLightBackground": "Polaris-TopBar-SearchField--toLightBackground"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"5dpWy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "UserMenu", ()=>UserMenu
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _userMenuScssJs = require("./UserMenu.scss.js");
var _userMenuScssJsDefault = parcelHelpers.interopDefault(_userMenuScssJs);
var _messageIndicatorJs = require("../../../MessageIndicator/MessageIndicator.js");
var _menuJs = require("../Menu/Menu.js");
var _avatarJs = require("../../../Avatar/Avatar.js");
function UserMenu({ name , detail , avatar , initials , actions , message , onToggle , open , colorScheme , accessibilityLabel  }) {
    const showIndicator = Boolean(message);
    const activatorContentMarkup = /*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_messageIndicatorJs.MessageIndicator, {
        active: showIndicator
    }, /*#__PURE__*/ _reactDefault.default.createElement(_avatarJs.Avatar, {
        size: "small",
        source: avatar,
        initials: initials && initials.replace(' ', '')
    })), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: _userMenuScssJsDefault.default.Details
    }, /*#__PURE__*/ _reactDefault.default.createElement("p", {
        className: _userMenuScssJsDefault.default.Name
    }, name), /*#__PURE__*/ _reactDefault.default.createElement("p", {
        className: _userMenuScssJsDefault.default.Detail
    }, detail)));
    return(/*#__PURE__*/ _reactDefault.default.createElement(_menuJs.Menu, {
        activatorContent: activatorContentMarkup,
        open: open,
        onOpen: onToggle,
        onClose: onToggle,
        actions: actions,
        message: message,
        colorScheme: colorScheme,
        accessibilityLabel: accessibilityLabel
    }));
}

},{"react":"6fep5","./UserMenu.scss.js":"jPxPP","../../../MessageIndicator/MessageIndicator.js":"hU4cr","../Menu/Menu.js":"kmp94","../../../Avatar/Avatar.js":"lS61i","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jPxPP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Details": "Polaris-TopBar-UserMenu__Details",
    "Name": "Polaris-TopBar-UserMenu__Name",
    "Detail": "Polaris-TopBar-UserMenu__Detail"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"hU4cr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MessageIndicator", ()=>MessageIndicator
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _messageIndicatorScssJs = require("./MessageIndicator.scss.js");
var _messageIndicatorScssJsDefault = parcelHelpers.interopDefault(_messageIndicatorScssJs);
function MessageIndicator({ children , active  }) {
    const indicatorMarkup = active && /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _messageIndicatorScssJsDefault.default.MessageIndicator
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _messageIndicatorScssJsDefault.default.MessageIndicatorWrapper
    }, indicatorMarkup, children));
}

},{"react":"6fep5","./MessageIndicator.scss.js":"90Pu9","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"90Pu9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "MessageIndicatorWrapper": "Polaris-MessageIndicator__MessageIndicatorWrapper",
    "MessageIndicator": "Polaris-MessageIndicator"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kmp94":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Menu", ()=>Menu
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _menuScssJs = require("./Menu.scss.js");
var _menuScssJsDefault = parcelHelpers.interopDefault(_menuScssJs);
var _messageJs = require("./components/Message/Message.js");
var _popoverJs = require("../../../Popover/Popover.js");
var _actionListJs = require("../../../ActionList/ActionList.js");
function Menu(props) {
    const { actions , onOpen , onClose , open , activatorContent , message , colorScheme , accessibilityLabel  } = props;
    const badgeProps = message && message.badge && {
        content: message.badge.content,
        status: message.badge.status
    };
    const messageMarkup = message && /*#__PURE__*/ _reactDefault.default.createElement(_messageJs.Message, {
        title: message.title,
        description: message.description,
        action: {
            onClick: message.action.onClick,
            content: message.action.content
        },
        link: {
            to: message.link.to,
            content: message.link.content
        },
        badge: badgeProps
    });
    const isFullHeight = Boolean(message);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover, {
        activator: /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _menuScssJsDefault.default.ActivatorWrapper
        }, /*#__PURE__*/ _reactDefault.default.createElement("button", {
            type: "button",
            className: _menuScssJsDefault.default.Activator,
            onClick: onOpen,
            "aria-label": accessibilityLabel
        }, activatorContent)),
        active: open,
        onClose: onClose,
        fixed: true,
        fullHeight: isFullHeight,
        preferredAlignment: "right",
        colorScheme: colorScheme
    }, /*#__PURE__*/ _reactDefault.default.createElement(_actionListJs.ActionList, {
        onActionAnyItem: onClose,
        sections: actions
    }), messageMarkup));
}

},{"react":"6fep5","./Menu.scss.js":"3TJZV","./components/Message/Message.js":"jHN3J","../../../Popover/Popover.js":"9ztCP","../../../ActionList/ActionList.js":"eTtta","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"3TJZV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "ActivatorWrapper": "Polaris-TopBar-Menu__ActivatorWrapper",
    "Activator": "Polaris-TopBar-Menu__Activator",
    "Section": "Polaris-TopBar-Menu__Section"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"jHN3J":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Message", ()=>Message
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _messageScssJs = require("./Message.scss.js");
var _messageScssJsDefault = parcelHelpers.interopDefault(_messageScssJs);
var _linkJs = require("../../../../../Link/Link.js");
var _badgeJs = require("../../../../../Badge/Badge.js");
var _popoverJs = require("../../../../../Popover/Popover.js");
var _stackJs = require("../../../../../Stack/Stack.js");
var _textContainerJs = require("../../../../../TextContainer/TextContainer.js");
var _headingJs = require("../../../../../Heading/Heading.js");
var _buttonJs = require("../../../../../Button/Button.js");
function Message({ title , description , action , link , badge  }) {
    const badgeMarkup = badge && /*#__PURE__*/ _reactDefault.default.createElement(_badgeJs.Badge, {
        status: badge.status
    }, badge.content);
    const { to , content: linkContent  } = link;
    const { onClick , content: actionContent  } = action;
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _messageScssJsDefault.default.Section
    }, /*#__PURE__*/ _reactDefault.default.createElement(_popoverJs.Popover.Section, null, /*#__PURE__*/ _reactDefault.default.createElement(_stackJs.Stack, {
        vertical: true,
        spacing: "tight"
    }, /*#__PURE__*/ _reactDefault.default.createElement(_textContainerJs.TextContainer, null, /*#__PURE__*/ _reactDefault.default.createElement(_headingJs.Heading, null, title, badgeMarkup), /*#__PURE__*/ _reactDefault.default.createElement("p", null, description)), /*#__PURE__*/ _reactDefault.default.createElement(_linkJs.Link, {
        url: to
    }, linkContent), /*#__PURE__*/ _reactDefault.default.createElement(_buttonJs.Button, {
        plain: true,
        onClick: onClick
    }, actionContent)))));
}

},{"react":"6fep5","./Message.scss.js":"90kEh","../../../../../Link/Link.js":"lzVa9","../../../../../Badge/Badge.js":"hM2Xf","../../../../../Popover/Popover.js":"9ztCP","../../../../../Stack/Stack.js":"g05gm","../../../../../TextContainer/TextContainer.js":"TbRw7","../../../../../Heading/Heading.js":"7PinN","../../../../../Button/Button.js":"g06oC","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"90kEh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Section": "Polaris-Menu-Message__Section"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kXJjb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VideoThumbnail", ()=>VideoThumbnail
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssJs = require("../../utilities/css.js");
var _durationJs = require("../../utilities/duration.js");
var _videoThumbnailScssJs = require("./VideoThumbnail.scss.js");
var _videoThumbnailScssJsDefault = parcelHelpers.interopDefault(_videoThumbnailScssJs);
var _playSvgJs = require("./illustrations/play.svg.js");
var _playSvgJsDefault = parcelHelpers.interopDefault(_playSvgJs);
var _hooksJs = require("../../utilities/i18n/hooks.js");
function VideoThumbnail({ thumbnailUrl , videoLength =0 , videoProgress =0 , showVideoProgress =false , accessibilityLabel , onClick , onBeforeStartPlaying  }) {
    const i18n = _hooksJs.useI18n();
    let buttonLabel;
    if (accessibilityLabel) buttonLabel = accessibilityLabel;
    else if (videoLength) {
        const { hours , minutes , seconds  } = _durationJs.secondsToTimeComponents(videoLength);
        buttonLabel = i18n.translate('Polaris.VideoThumbnail.playButtonA11yLabel.defaultWithDuration', {
            duration: i18n.translate(_durationJs.secondsToDurationTranslationKey(videoLength), {
                hourCount: hours,
                minuteCount: minutes,
                secondCount: seconds
            })
        });
    } else buttonLabel = i18n.translate('Polaris.VideoThumbnail.playButtonA11yLabel.default');
    const timeStampMarkup = videoLength ? /*#__PURE__*/ _reactDefault.default.createElement("p", {
        className: _cssJs.classNames(_videoThumbnailScssJsDefault.default.Timestamp, showVideoProgress && _videoThumbnailScssJsDefault.default.withProgress)
    }, _durationJs.secondsToTimestamp(videoLength)) : null;
    let progressMarkup = null;
    if (showVideoProgress) {
        const progressValue = calculateProgress(videoLength, videoProgress);
        const progressValuePercents = Math.round(progressValue * 100);
        progressMarkup = /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _videoThumbnailScssJsDefault.default.Progress
        }, /*#__PURE__*/ _reactDefault.default.createElement("progress", {
            className: _videoThumbnailScssJsDefault.default.ProgressBar,
            value: progressValuePercents,
            max: "100"
        }), /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: _videoThumbnailScssJsDefault.default.Indicator,
            style: {
                transform: `scaleX(${progressValue})`
            }
        }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
            className: _videoThumbnailScssJsDefault.default.Label
        }, progressValuePercents, "%")));
    }
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: _videoThumbnailScssJsDefault.default.Thumbnail,
        style: {
            backgroundImage: `url(${thumbnailUrl})`
        }
    }, /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "button",
        className: _videoThumbnailScssJsDefault.default.PlayButton,
        "aria-label": buttonLabel,
        onClick: onClick,
        onMouseEnter: onBeforeStartPlaying,
        onFocus: onBeforeStartPlaying,
        onTouchStart: onBeforeStartPlaying
    }, /*#__PURE__*/ _reactDefault.default.createElement("img", {
        className: _videoThumbnailScssJsDefault.default.PlayIcon,
        src: _playSvgJsDefault.default,
        alt: ""
    })), timeStampMarkup, progressMarkup));
}
function calculateProgress(videoLength, videoProgress) {
    if (videoProgress > videoLength && true) // eslint-disable-next-line no-console
    console.warn('Value passed to the video progress should not exceed video length. Resetting progress to 100%.');
    if (videoProgress > 0 && videoLength > 0) {
        const progress = parseFloat((videoProgress / videoLength).toFixed(2));
        return progress > 1 ? 1 : progress;
    }
    return 0;
}

},{"react":"6fep5","../../utilities/css.js":"kYdwV","../../utilities/duration.js":"a5LTe","./VideoThumbnail.scss.js":"kLs8x","./illustrations/play.svg.js":"dKwrz","../../utilities/i18n/hooks.js":"hHpYD","@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"a5LTe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ensureTwoDigits", ()=>ensureTwoDigits
);
parcelHelpers.export(exports, "secondsToDurationTranslationKey", ()=>secondsToDurationTranslationKey
);
parcelHelpers.export(exports, "secondsToTimeComponents", ()=>secondsToTimeComponents
);
parcelHelpers.export(exports, "secondsToTimestamp", ()=>secondsToTimestamp
);
const MINUTE = 60;
const HOUR = MINUTE * 60;
function ensureTwoDigits(num) {
    return num > 9 ? String(num) : `0${num}`;
}
function secondsToTimeComponents(seconds) {
    return {
        hours: Math.floor(seconds / HOUR),
        minutes: Math.floor(seconds % HOUR / MINUTE),
        seconds: seconds % MINUTE
    };
}
function secondsToTimestamp(numSeconds) {
    const { hours , minutes , seconds  } = secondsToTimeComponents(numSeconds);
    const hasHours = numSeconds > HOUR;
    const hoursText = hasHours ? `${hours}:` : '';
    const minutesText = `${hasHours ? ensureTwoDigits(minutes) : minutes}:`;
    const secondsText = `${ensureTwoDigits(seconds)}`;
    return `${hoursText}${minutesText}${secondsText}`;
}
function secondsToDurationTranslationKey(numSeconds) {
    const { hours , minutes , seconds  } = secondsToTimeComponents(numSeconds);
    let durationKey = 'Polaris.VideoThumbnail.playButtonA11yLabel.duration';
    if (hours) {
        durationKey += `.hours.${hours > 1 ? 'other' : 'one'}`;
        if (seconds) {
            if (minutes > 1) durationKey += `${seconds > 1 ? '.minutesAndSeconds' : '.minutesAndSecond'}`;
            else if (minutes === 1) durationKey += `${seconds > 1 ? '.minuteAndSeconds' : '.minuteAndSecond'}`;
            else durationKey += `${seconds > 1 ? '.andSeconds' : '.andSecond'}`;
        } else if (minutes) durationKey += `${minutes > 1 ? '.andMinutes' : '.andMinute'}`;
        else durationKey += '.only';
    } else if (minutes) {
        durationKey += `.minutes.${minutes > 1 ? 'other' : 'one'}`;
        if (seconds) durationKey += `${seconds > 1 ? '.andSeconds' : '.andSecond'}`;
        else durationKey += '.only';
    } else if (seconds) durationKey += seconds > 1 ? '.seconds.other' : '.seconds.one';
    return durationKey;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"kLs8x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>styles
);
var styles = {
    "Thumbnail": "Polaris-VideoThumbnail__Thumbnail",
    "WithPlayer": "Polaris-VideoThumbnail__WithPlayer",
    "PlayButton": "Polaris-VideoThumbnail__PlayButton",
    "PlayIcon": "Polaris-VideoThumbnail__PlayIcon",
    "Timestamp": "Polaris-VideoThumbnail__Timestamp",
    "withProgress": "Polaris-VideoThumbnail--withProgress",
    "Progress": "Polaris-VideoThumbnail__Progress",
    "Indicator": "Polaris-VideoThumbnail__Indicator",
    "ProgressBar": "Polaris-VideoThumbnail__ProgressBar",
    "Label": "Polaris-VideoThumbnail__Label"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"dKwrz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>PlayIcon
);
const img = "data:image/svg+xml,%3csvg viewBox='0 0 38 38' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd'%3e%3cpath d='M19 1C9.06 1 1 9.057 1 19c0 9.94 8.057 18 18 18 9.94 0 18-8.057 18-18 0-9.94-8.057-18-18-18z' fill='white'/%3e%3cpath d='M19 1C9.06 1 1 9.057 1 19c0 9.94 8.057 18 18 18 9.94 0 18-8.057 18-18 0-9.94-8.057-18-18-18z' fill='none' stroke='%23b5b5b5'/%3e%3cpath d='M15 11.723c0-.605.7-.942 1.173-.564l10.93 7.215a.72.72 0 010 1.128l-10.93 7.216A.723.723 0 0115 26.153v-14.43z' fill-opacity='.557'/%3e%3c/svg%3e";
var PlayIcon = img;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"8FsVl"}],"i5ZKj":[function() {},{}]},["aucuq","53L52","6QvhU"], "6QvhU", "parcelRequirec720")

